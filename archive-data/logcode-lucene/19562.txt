GitDiffStart: a1bd9277ca3203e7750d1eb9e42ff310c92f7a38 | Tue Aug 25 22:27:31 2009 +0000
diff --git a/contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizer.java b/contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizer.java
index b77f68c..a0e4b75 100644
--- a/contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizer.java
+++ b/contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizer.java
@@ -157,7 +157,7 @@ public class WikipediaTokenizer extends Tokenizer {
 
   /**
    * Createa a new instance of the {@link org.apache.lucene.wikipedia.analysis.WikipediaTokenizer}.  Attaches the
-   * <conde>input</code> to a the newly created JFlex scanner. Uses the given {@link AttributeSource.AttributeFactory}.
+   * <conde>input</code> to a the newly created JFlex scanner. Uses the given {@link org.apache.lucene.util.AttributeSource.AttributeFactory}.
    *
    * @param input The input
    * @param tokenOutput One of {@link #TOKENS_ONLY}, {@link #UNTOKENIZED_ONLY}, {@link #BOTH}
diff --git a/src/java/org/apache/lucene/analysis/LetterTokenizer.java b/src/java/org/apache/lucene/analysis/LetterTokenizer.java
index 3f7bc3a..85b201c 100644
--- a/src/java/org/apache/lucene/analysis/LetterTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/LetterTokenizer.java
@@ -20,7 +20,6 @@ package org.apache.lucene.analysis;
 import java.io.Reader;
 
 import org.apache.lucene.util.AttributeSource;
-import org.apache.lucene.util.AttributeSource.AttributeFactory;
 
 /** A LetterTokenizer is a tokenizer that divides text at non-letters.  That's
   to say, it defines tokens as maximal strings of adjacent letters, as defined
@@ -40,7 +39,7 @@ public class LetterTokenizer extends CharTokenizer {
     super(source, in);
   }
   
-  /** Construct a new LetterTokenizer using a given {@link AttributeSource.AttributeFactory}. */
+  /** Construct a new LetterTokenizer using a given {@link org.apache.lucene.util.AttributeSource.AttributeFactory}. */
   public LetterTokenizer(AttributeFactory factory, Reader in) {
     super(factory, in);
   }
diff --git a/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java b/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java
index 3fd3e40..476e0ab 100644
--- a/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java
@@ -20,7 +20,6 @@ package org.apache.lucene.analysis;
 import java.io.Reader;
 
 import org.apache.lucene.util.AttributeSource;
-import org.apache.lucene.util.AttributeSource.AttributeFactory;
 
 /**
  * LowerCaseTokenizer performs the function of LetterTokenizer
@@ -43,7 +42,7 @@ public final class LowerCaseTokenizer extends LetterTokenizer {
     super(source, in);
   }
 
-  /** Construct a new LowerCaseTokenizer using a given {@link AttributeSource.AttributeFactory}. */
+  /** Construct a new LowerCaseTokenizer using a given {@link org.apache.lucene.util.AttributeSource.AttributeFactory}. */
   public LowerCaseTokenizer(AttributeFactory factory, Reader in) {
     super(factory, in);
   }
diff --git a/src/java/org/apache/lucene/analysis/WhitespaceTokenizer.java b/src/java/org/apache/lucene/analysis/WhitespaceTokenizer.java
index fbe278b..a8aff6f 100644
--- a/src/java/org/apache/lucene/analysis/WhitespaceTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/WhitespaceTokenizer.java
@@ -20,7 +20,6 @@ package org.apache.lucene.analysis;
 import java.io.Reader;
 
 import org.apache.lucene.util.AttributeSource;
-import org.apache.lucene.util.AttributeSource.AttributeFactory;
 
 /** A WhitespaceTokenizer is a tokenizer that divides text at whitespace.
  * Adjacent sequences of non-Whitespace characters form tokens. */
@@ -36,7 +35,7 @@ public class WhitespaceTokenizer extends CharTokenizer {
     super(source, in);
   }
 
-  /** Construct a new WhitespaceTokenizer using a given {@link AttributeSource.AttributeFactory}. */
+  /** Construct a new WhitespaceTokenizer using a given {@link org.apache.lucene.util.AttributeSource.AttributeFactory}. */
   public WhitespaceTokenizer(AttributeFactory factory, Reader in) {
     super(factory, in);
   }
diff --git a/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java b/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
index 992c3ba..b5c670b 100644
--- a/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
@@ -142,7 +142,7 @@ public class StandardTokenizer extends Tokenizer {
   }
 
   /**
-   * Creates a new StandardTokenizer with a given {@link AttributeSource.AttributeFactory} 
+   * Creates a new StandardTokenizer with a given {@link org.apache.lucene.util.AttributeSource.AttributeFactory} 
    */
   public StandardTokenizer(AttributeFactory factory, Reader input, boolean replaceInvalidAcronym) {
     super(factory);
diff --git a/src/java/org/apache/lucene/search/FieldCache.java b/src/java/org/apache/lucene/search/FieldCache.java
index 9475439..e3740c1 100644
--- a/src/java/org/apache/lucene/search/FieldCache.java
+++ b/src/java/org/apache/lucene/search/FieldCache.java
@@ -619,10 +619,10 @@ public interface FieldCache {
   /**
    * If non-null, FieldCacheImpl will warn whenever
    * entries are created that are not sane according to
-   * {@link FieldCacheSanityChecker}.
+   * {@link org.apache.lucene.util.FieldCacheSanityChecker}.
    */
   public void setInfoStream(PrintStream stream);
 
-  /** @see setInfoStream */
+  /** counterpart of {@link #setInfoStream(PrintStream)} */
   public PrintStream getInfoStream();
 }
diff --git a/src/java/org/apache/lucene/search/Similarity.java b/src/java/org/apache/lucene/search/Similarity.java
index 6958657..ce8b646 100644
--- a/src/java/org/apache/lucene/search/Similarity.java
+++ b/src/java/org/apache/lucene/search/Similarity.java
@@ -543,7 +543,7 @@ public abstract class Similarity implements Serializable {
    *
    * @param terms the terms in the phrase
    * @param searcher the document collection being searched
-   * @return  
+   * @return idf score factor
    * @deprecated see {@link #idfExplain(Collection, Searcher)}
    */
   public float idf(Collection terms, Searcher searcher) throws IOException {
diff --git a/src/java/org/apache/lucene/search/Weight.java b/src/java/org/apache/lucene/search/Weight.java
index b709b87..77a56bf 100644
--- a/src/java/org/apache/lucene/search/Weight.java
+++ b/src/java/org/apache/lucene/search/Weight.java
@@ -51,11 +51,6 @@ public abstract class Weight implements Serializable {
   /**
    * An explanation of the score computation for the named document.
    * 
-   * Until 3.0, null may be passed in situations where the Searcher is not
-   * available, so impls must only use Searcher to generate optional 
-   * explain info.
-   * 
-   * @param searcher over the index or null
    * @param reader sub-reader containing the give doc
    * @param doc
    * @return an Explanation for the score

