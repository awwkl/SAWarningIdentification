GitDiffStart: c6c4dded6db935dcd467e47b4f9ce307001858fd | Fri Jan 15 13:53:15 2016 +0000
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler.java b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler.java
index a9307cf..f2ed8ac 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler.java
@@ -110,12 +110,12 @@ public class SolrHttpRequestRetryHandler implements HttpRequestRetryHandler {
       return false;
     }
     if (this.nonRetriableClasses.contains(exception.getClass())) {
-      log.debug("Do not retry, non retriable class {}" + exception.getClass());
+      log.debug("Do not retry, non retriable class {}", exception.getClass().getName());
       return false;
     } else {
       for (final Class<? extends IOException> rejectException : this.nonRetriableClasses) {
         if (rejectException.isInstance(exception)) {
-          log.debug("Do not retry, non retriable class {}" + exception.getClass());
+          log.debug("Do not retry, non retriable class {}", exception.getClass().getName());
           return false;
         }
       }
@@ -143,6 +143,7 @@ public class SolrHttpRequestRetryHandler implements HttpRequestRetryHandler {
   
   protected boolean handleAsIdempotent(final HttpClientContext context) {
     String method = context.getRequest().getRequestLine().getMethod();
+    context.getRequest().getRequestLine().getUri();
     return method.equals(GET);
   }
   

