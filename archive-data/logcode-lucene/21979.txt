GitDiffStart: ece8361ab5cafbb1aad0fffc51c431b6c8bf6ba7 | Sun Dec 30 22:47:59 2007 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 129916c..353c4fa 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -207,6 +207,9 @@ Bug fixes
   this flag to true fixes the problem.  This flag is a temporary fix and is already
   marked as being deprecated.  3.x will implement the correct approach.  (Shai Erera via Grant Ingersoll)
     
+28. LUCENE-749: ChainedFilter behavior fixed when logic of 
+    first filter is ANDNOT.  (Antonio Bruno via Doron Cohen)
+    
     
 New features
 
diff --git a/contrib/miscellaneous/src/java/org/apache/lucene/misc/ChainedFilter.java b/contrib/miscellaneous/src/java/org/apache/lucene/misc/ChainedFilter.java
index b581065..e2a7e8d 100644
--- a/contrib/miscellaneous/src/java/org/apache/lucene/misc/ChainedFilter.java
+++ b/contrib/miscellaneous/src/java/org/apache/lucene/misc/ChainedFilter.java
@@ -177,6 +177,12 @@ public class ChainedFilter extends Filter
             result = (BitSet) chain[i].bits(reader).clone();
             ++i;
         }
+        else if (logic == ANDNOT)
+        {
+            result = (BitSet) chain[i].bits(reader).clone();
+            result.flip(0,reader.maxDoc());
+            ++i;
+        }
         else
         {
             result = new BitSet(reader.maxDoc());
@@ -212,6 +218,12 @@ public class ChainedFilter extends Filter
             result = (BitSet) chain[i].bits(reader).clone();
             ++i;
         }
+        else if (logic[0] == ANDNOT)
+        {
+            result = (BitSet) chain[i].bits(reader).clone();
+            result.flip(0,reader.maxDoc());
+            ++i;
+        }
         else
         {
             result = new BitSet(reader.maxDoc());
diff --git a/contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest.java b/contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest.java
index dc1fad5..525e813 100644
--- a/contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest.java
+++ b/contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest.java
@@ -90,6 +90,16 @@ public class ChainedFilterTest extends TestCase {
     chain = new ChainedFilter(new Filter[] {bobFilter});
     hits = searcher.search(query, chain);
     assertEquals(MAX / 2, hits.length());
+    
+    chain = new ChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.AND});
+    hits = searcher.search(query, chain);
+    assertEquals(MAX / 2, hits.length());
+    assertEquals("bob", hits.doc(0).get("owner"));
+    
+    chain = new ChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.ANDNOT});
+    hits = searcher.search(query, chain);
+    assertEquals(MAX / 2, hits.length());
+    assertEquals("sue", hits.doc(0).get("owner"));
   }
 
   public void testOR() throws Exception {
@@ -127,6 +137,15 @@ public class ChainedFilterTest extends TestCase {
     assertEquals("ANDNOT matches just bob",
         MAX / 2, hits.length());
     assertEquals("bob", hits.doc(0).get("owner"));
+    
+    chain = new ChainedFilter(
+        new Filter[]{bobFilter, bobFilter},
+          new int[] {ChainedFilter.ANDNOT, ChainedFilter.ANDNOT});
+
+      hits = searcher.search(query, chain);
+      assertEquals("ANDNOT bob ANDNOT bob matches all sues",
+          MAX / 2, hits.length());
+      assertEquals("sue", hits.doc(0).get("owner"));
   }
 
   private Date parseDate(String s) throws ParseException {

