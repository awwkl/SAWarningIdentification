GitDiffStart: db9c825465fb5869ca145c9361dd77af6af8d521 | Mon Apr 30 00:31:36 2012 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 7548735..06c89f1 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -532,6 +532,9 @@ Other Changes
 * SOLR-1893: Refactored some common code from LRUCache and FastLRUCache into 
   SolrCacheBase (Tomás Fernández Löbbe via hossman)
 
+* SOLR-3403: Deprecated Analysis Factories now log their own deprecation messages.
+  No logging support is provided by Factory parent classes. (Chris Male)
+
 Documentation
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/analysis/ArabicLetterTokenizerFactory.java b/solr/core/src/java/org/apache/solr/analysis/ArabicLetterTokenizerFactory.java
index edbd6b5..aeed58e 100644
--- a/solr/core/src/java/org/apache/solr/analysis/ArabicLetterTokenizerFactory.java
+++ b/solr/core/src/java/org/apache/solr/analysis/ArabicLetterTokenizerFactory.java
@@ -17,6 +17,8 @@ package org.apache.solr.analysis;
  */
 
 import org.apache.lucene.analysis.ar.ArabicLetterTokenizer;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 import java.io.Reader;
 import java.util.Map;
@@ -29,11 +31,13 @@ import java.util.Map;
 @Deprecated
 public class ArabicLetterTokenizerFactory extends BaseTokenizerFactory{
 
+  private static final Logger log = LoggerFactory.getLogger(ArabicLetterTokenizerFactory.class);
+
   @Override
   public void init(Map<String,String> args) {
     super.init(args);
     assureMatchVersion();
-    warnDeprecated("Use StandardTokenizerFactory instead.");
+    log.warn(getClass().getSimpleName() + " is deprecated. Use StandardTokenizeFactory instead.");
   }
 
   public ArabicLetterTokenizer create(Reader input) {
diff --git a/solr/core/src/java/org/apache/solr/analysis/BaseCharFilterFactory.java b/solr/core/src/java/org/apache/solr/analysis/BaseCharFilterFactory.java
index e3ea170..3b43c6c 100644
--- a/solr/core/src/java/org/apache/solr/analysis/BaseCharFilterFactory.java
+++ b/solr/core/src/java/org/apache/solr/analysis/BaseCharFilterFactory.java
@@ -17,11 +17,9 @@
 
 package org.apache.solr.analysis;
 
-import java.util.Map;
-
 import org.apache.lucene.util.Version;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+
+import java.util.Map;
 
 /**
 *
@@ -30,8 +28,6 @@ import org.slf4j.LoggerFactory;
 */
 public abstract class BaseCharFilterFactory implements CharFilterFactory {
 
-  public static final Logger log = LoggerFactory.getLogger(BaseCharFilterFactory.class);
-
   protected Version luceneMatchVersion;
 
   /** The init args */
diff --git a/solr/core/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java b/solr/core/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java
index 0714d46..0f554bc 100644
--- a/solr/core/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java
+++ b/solr/core/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java
@@ -17,14 +17,11 @@
 
 package org.apache.solr.analysis;
 
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
 /**
  * Simple abstract implementation that handles init arg processing.
  * 
  *
  */
 public abstract class BaseTokenFilterFactory extends BaseTokenStreamFactory implements TokenFilterFactory {
-  public static final Logger log = LoggerFactory.getLogger(BaseTokenFilterFactory.class);
+
 }
diff --git a/solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java b/solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java
index 2b52f1a..b3ed149 100644
--- a/solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java
+++ b/solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java
@@ -17,10 +17,13 @@
 
 package org.apache.solr.analysis;
 
+import org.apache.lucene.analysis.core.StopFilter;
+import org.apache.lucene.analysis.util.CharArraySet;
+import org.apache.lucene.analysis.util.WordlistLoader;
+import org.apache.lucene.util.IOUtils;
+import org.apache.lucene.util.Version;
 import org.apache.solr.common.ResourceLoader;
 import org.apache.solr.common.util.StrUtils;
-import org.apache.solr.core.Config;
-import org.apache.solr.schema.IndexSchema;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -31,15 +34,6 @@ import java.nio.charset.CodingErrorAction;
 import java.util.List;
 import java.util.Map;
 
-import org.apache.lucene.analysis.core.StopFilter;
-import org.apache.lucene.analysis.util.CharArraySet;
-import org.apache.lucene.analysis.util.WordlistLoader;
-import org.apache.lucene.util.IOUtils;
-import org.apache.lucene.util.Version;
-
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
 /**
  * Simple abstract implementation that handles init arg processing, is not really
  * a factory as it implements no interface, but removes code duplication
@@ -54,8 +48,6 @@ abstract class BaseTokenStreamFactory {
   /** the luceneVersion arg */
   protected Version luceneMatchVersion = null;
 
-  public static final Logger log = LoggerFactory.getLogger(BaseTokenStreamFactory.class);
-
   public void init(Map<String,String> args) {
     this.args=args;
   }
@@ -74,10 +66,6 @@ abstract class BaseTokenStreamFactory {
     }
   }
 
-  protected final void warnDeprecated(String message) {
-    log.warn(getClass().getSimpleName() + " is deprecated. " + message);
-  }
-
   public void setLuceneMatchVersion(Version luceneMatchVersion) {
     this.luceneMatchVersion = luceneMatchVersion;
   }
diff --git a/solr/core/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java b/solr/core/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java
index 8f0b81e..d4c4c2b 100644
--- a/solr/core/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java
+++ b/solr/core/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java
@@ -17,14 +17,11 @@
 
 package org.apache.solr.analysis;
 
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
 /**
  * Simple abstract implementation that handles init arg processing.
  * 
  *
  */
 public abstract class BaseTokenizerFactory extends BaseTokenStreamFactory implements TokenizerFactory {
-  public static final Logger log = LoggerFactory.getLogger(BaseTokenizerFactory.class);
+
 }
diff --git a/solr/core/src/java/org/apache/solr/analysis/ChineseFilterFactory.java b/solr/core/src/java/org/apache/solr/analysis/ChineseFilterFactory.java
index 9d75f02..3b6d85d 100644
--- a/solr/core/src/java/org/apache/solr/analysis/ChineseFilterFactory.java
+++ b/solr/core/src/java/org/apache/solr/analysis/ChineseFilterFactory.java
@@ -22,6 +22,8 @@ import java.util.Map;
 
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.cn.ChineseFilter;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 /**
  * Factory for {@link ChineseFilter}
@@ -29,10 +31,13 @@ import org.apache.lucene.analysis.cn.ChineseFilter;
  */
 @Deprecated
 public class ChineseFilterFactory extends BaseTokenFilterFactory {
+
+  private static final Logger log = LoggerFactory.getLogger(ChineseFilterFactory.class);
+
   @Override
   public void init(Map<String,String> args) {
     super.init(args);
-    warnDeprecated("Use StopFilterFactory instead.");
+    log.warn(getClass().getSimpleName() + " is deprecated. Use StopFilterFactory instead.");
   }
   
   public ChineseFilter create(TokenStream in) {
diff --git a/solr/core/src/java/org/apache/solr/analysis/ChineseTokenizerFactory.java b/solr/core/src/java/org/apache/solr/analysis/ChineseTokenizerFactory.java
index ef4d536..2259286 100644
--- a/solr/core/src/java/org/apache/solr/analysis/ChineseTokenizerFactory.java
+++ b/solr/core/src/java/org/apache/solr/analysis/ChineseTokenizerFactory.java
@@ -23,6 +23,8 @@ import java.io.Reader;
 import java.util.Map;
 
 import org.apache.lucene.analysis.cn.ChineseTokenizer;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 /** 
  * Factory for {@link ChineseTokenizer}
@@ -30,10 +32,13 @@ import org.apache.lucene.analysis.cn.ChineseTokenizer;
  */
 @Deprecated
 public class ChineseTokenizerFactory extends BaseTokenizerFactory {
+
+  private static final Logger log = LoggerFactory.getLogger(ChineseTokenizerFactory.class);
+
   @Override
   public void init(Map<String,String> args) {
     super.init(args);
-    warnDeprecated("Use StandardTokenizerFactory instead.");
+    log.warn(getClass().getSimpleName() + " is deprecated. Use StandardTokenizeFactory instead.");
   }
   
   public ChineseTokenizer create(Reader in) {
diff --git a/solr/core/src/java/org/apache/solr/analysis/FSTSynonymFilterFactory.java b/solr/core/src/java/org/apache/solr/analysis/FSTSynonymFilterFactory.java
index f1349b8..c63f676 100644
--- a/solr/core/src/java/org/apache/solr/analysis/FSTSynonymFilterFactory.java
+++ b/solr/core/src/java/org/apache/solr/analysis/FSTSynonymFilterFactory.java
@@ -41,6 +41,8 @@ import org.apache.lucene.util.Version;
 import org.apache.solr.common.ResourceLoader;
 import org.apache.solr.common.util.StrUtils;
 import org.apache.solr.util.plugin.ResourceLoaderAware;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 /**
  * @deprecated (3.4) use {@link SynonymFilterFactory} instead. this is only a backwards compatibility
@@ -49,6 +51,9 @@ import org.apache.solr.util.plugin.ResourceLoaderAware;
 // NOTE: rename this to "SynonymFilterFactory" and nuke that delegator in Lucene 5.0!
 @Deprecated
 final class FSTSynonymFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
+
+  public static final Logger log = LoggerFactory.getLogger(FSTSynonymFilterFactory.class);
+
   private SynonymMap map;
   private boolean ignoreCase;
   
diff --git a/solr/core/src/java/org/apache/solr/analysis/RussianLetterTokenizerFactory.java b/solr/core/src/java/org/apache/solr/analysis/RussianLetterTokenizerFactory.java
index 2fba5cf..dc3dae8 100644
--- a/solr/core/src/java/org/apache/solr/analysis/RussianLetterTokenizerFactory.java
+++ b/solr/core/src/java/org/apache/solr/analysis/RussianLetterTokenizerFactory.java
@@ -21,6 +21,8 @@ import java.io.Reader;
 import java.util.Map;
 
 import org.apache.lucene.analysis.ru.RussianLetterTokenizer;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 /** @deprecated Use {@link StandardTokenizerFactory} instead.
  *  This tokenizer has no Russian-specific functionality.
@@ -28,6 +30,8 @@ import org.apache.lucene.analysis.ru.RussianLetterTokenizer;
 @Deprecated
 public class RussianLetterTokenizerFactory extends BaseTokenizerFactory {
 
+  private static final Logger log = LoggerFactory.getLogger(RussianLetterTokenizerFactory.class);
+
   @Override
   public void init(Map<String, String> args) {
     super.init(args);
@@ -36,7 +40,7 @@ public class RussianLetterTokenizerFactory extends BaseTokenizerFactory {
           "The charset parameter is no longer supported.  "
           + "Please process your documents as Unicode instead.");
     assureMatchVersion();
-    warnDeprecated("Use StandardTokenizerFactory instead.");
+    log.warn(getClass().getSimpleName() + " is deprecated. Use StandardTokenizerFactory instead.");
   }
 
   public RussianLetterTokenizer create(Reader in) {

