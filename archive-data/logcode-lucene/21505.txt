GitDiffStart: 4f7ead811262d66f184e6bcd66c87c8cf1bc9f42 | Sat Jun 28 18:52:12 2008 +0000
diff --git a/contrib/instantiated/CHANGES.txt b/contrib/instantiated/CHANGES.txt
index 3d777fe..9e59179 100644
--- a/contrib/instantiated/CHANGES.txt
+++ b/contrib/instantiated/CHANGES.txt
@@ -16,6 +16,9 @@ Bug fixes
     and tests that assert that deleted documents behaves as they should (they did).
     (Jason Rutherglen, Karl Wettin)
 
+ 2. LUCENE-1318: InstantiatedIndexReader.norms(String, b[], int) didn't treat
+    the array offset right. (Jason Rutherglen via Karl Wettin)
+
 New features
 
  (None)
diff --git a/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java b/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java
index ddeb9f4..0054b90 100644
--- a/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java
+++ b/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java
@@ -294,7 +294,7 @@ public class InstantiatedIndexReader extends IndexReader {
 
   public void norms(String field, byte[] bytes, int offset) throws IOException {
     byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(field);
-    System.arraycopy(norms, offset, bytes, 0, norms.length);
+    System.arraycopy(norms, 0, bytes, offset, norms.length);
   }
 
   protected void doSetNorm(int doc, String field, byte value) throws IOException {
diff --git a/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java b/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java
index a0ec248..6e05aea 100644
--- a/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java
+++ b/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java
@@ -252,6 +252,20 @@ public class TestIndicesEquals extends TestCase {
       }
 
 
+      // test norms as used by multireader
+
+      aprioriNorms = new byte[aprioriReader.maxDoc() + 10];
+      aprioriReader.norms((String) field, aprioriNorms, 10);
+
+      testNorms = new byte[testReader.maxDoc() + 10];
+      testReader.norms((String) field, testNorms, 10);
+
+      assertEquals(aprioriNorms.length, testNorms.length);
+
+      for (int i = 0; i < aprioriNorms.length; i++) {
+        assertEquals("norms does not equals for field " + field + " in document " + i, aprioriNorms[i], testNorms[i]);
+      }
+
     }
 
     for (int docIndex = 0; docIndex < aprioriReader.numDocs(); docIndex++) {

