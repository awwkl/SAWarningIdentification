GitDiffStart: 3eb1e1ac5485fd86956ad925636bf0c5d5e38486 | Wed Sep 18 15:29:11 2013 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index ef389b3..c40f3f0 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -193,6 +193,10 @@ Bug Fixes
 * LUCENE-5201: Fixed compression bug in LZ4.compressHC when the input is highly
   compressible and the start offset of the array to compress is > 0.
   (Adrien Grand)
+
+* LUCENE-5221: SimilarityBase did not write norms the same way as DefaultSimilarity
+  if discountOverlaps == false and index-time boosts are present for the field.
+  (Yubin Kim via Robert Muir)
   
 API Changes
 
diff --git a/lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.java b/lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.java
index c1ccff4..72806df 100644
--- a/lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.java
+++ b/lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.java
@@ -233,7 +233,7 @@ public abstract class SimilarityBase extends Similarity {
     if (discountOverlaps)
       numTerms = state.getLength() - state.getNumOverlap();
     else
-      numTerms = state.getLength() / state.getBoost();
+      numTerms = state.getLength();
     return encodeNormValue(state.getBoost(), numTerms);
   }
   
diff --git a/lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase.java b/lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase.java
index dc3017e..f526c6b 100644
--- a/lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase.java
+++ b/lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase.java
@@ -25,6 +25,7 @@ import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.FieldType;
 import org.apache.lucene.document.TextField;
+import org.apache.lucene.index.FieldInvertState;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.RandomIndexWriter;
 import org.apache.lucene.index.Term;
@@ -572,4 +573,20 @@ public class TestSimilarityBase extends LuceneTestCase {
     dir.close();
     super.tearDown();
   }
+  
+  // LUCENE-5221
+  public void testDiscountOverlapsBoost() throws IOException {
+    DefaultSimilarity expected = new DefaultSimilarity();
+    SimilarityBase actual = new DFRSimilarity(new BasicModelIne(), new AfterEffectB(), new NormalizationH2());
+    expected.setDiscountOverlaps(false);
+    actual.setDiscountOverlaps(false);
+    FieldInvertState state = new FieldInvertState("foo");
+    state.setLength(5);
+    state.setNumOverlap(2);
+    state.setBoost(3);
+    assertEquals(expected.computeNorm(state), actual.computeNorm(state));
+    expected.setDiscountOverlaps(true);
+    actual.setDiscountOverlaps(true);
+    assertEquals(expected.computeNorm(state), actual.computeNorm(state));
+  }
 }

