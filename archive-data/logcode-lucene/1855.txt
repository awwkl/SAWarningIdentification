GitDiffStart: 2184a7baf6e47f99b7a637836a736c3439b69125 | Tue Feb 9 15:08:41 2016 -0800
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index d37ce33..f1f3022 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -319,6 +319,8 @@ Upgrading from Solr 5.4
 * Clearing up stored async collection api responses via REQUESTSTATUS call is now deprecated and would be
   removed in 6.0. See SOLR-8648 for more details.
 
+* SOLR-6594: Deprecated the old schema API which will be removed in a later major release
+
 Detailed Change List
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/rest/BaseSolrResource.java b/solr/core/src/java/org/apache/solr/rest/BaseSolrResource.java
index 381978b..5a9310d 100644
--- a/solr/core/src/java/org/apache/solr/rest/BaseSolrResource.java
+++ b/solr/core/src/java/org/apache/solr/rest/BaseSolrResource.java
@@ -175,12 +175,18 @@ public abstract class BaseSolrResource extends ServerResource {
     
     // TODO: should status=0 (success?) be left as-is in the response header?
     SolrCore.postDecorateResponse(null, solrRequest, solrResponse);
+    addDeprecatedWarning();
 
     if (log.isInfoEnabled() && solrResponse.getToLog().size() > 0) {
       log.info(solrResponse.getToLogAsString(solrCore.getLogId()));
     }
   }
 
+  protected void addDeprecatedWarning(){
+    solrResponse.add("warn","This API is deprecated");
+
+  }
+
   /**
    * If there is an exception on the SolrResponse:
    * <ul>
diff --git a/solr/core/src/java/org/apache/solr/rest/RestManager.java b/solr/core/src/java/org/apache/solr/rest/RestManager.java
index b6dd9c9..1c095cb 100644
--- a/solr/core/src/java/org/apache/solr/rest/RestManager.java
+++ b/solr/core/src/java/org/apache/solr/rest/RestManager.java
@@ -431,7 +431,12 @@ public class RestManager {
         throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST, errMsg, ioExc);
       }
       return parsedJson;
-    }        
+    }
+
+    @Override
+    protected void addDeprecatedWarning() {
+      //this is not deprecated
+    }
   } // end ManagedEndpoint class
   
   /**
@@ -788,5 +793,5 @@ public class RestManager {
     if (ManagedResource.ChildResourceSupport.class.isAssignableFrom(res.getClass())) {
       router.attach(path+"/{child}", res.getServerResourceClass());
     }    
-  }  
+  }
 }

