GitDiffStart: c52930873497009e3a623d00b5bd543bb9e6d12b | Thu Sep 20 00:17:50 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/document/Field.java b/lucene/core/src/java/org/apache/lucene/document/Field.java
index 6858a2d..712a0d5 100644
--- a/lucene/core/src/java/org/apache/lucene/document/Field.java
+++ b/lucene/core/src/java/org/apache/lucene/document/Field.java
@@ -608,7 +608,7 @@ public class Field implements IndexableField, StorableField {
     
     /** Creates a new TokenStream that returns a String as single token.
      * <p>Warning: Does not initialize the value, you must call
-     * {@link #setValue()} afterwards!
+     * {@link #setValue(String)} afterwards!
      */
     StringTokenStream() {
     }
diff --git a/lucene/core/src/java/org/apache/lucene/document/FieldType.java b/lucene/core/src/java/org/apache/lucene/document/FieldType.java
index 1b27d9e..7686bd9 100644
--- a/lucene/core/src/java/org/apache/lucene/document/FieldType.java
+++ b/lucene/core/src/java/org/apache/lucene/document/FieldType.java
@@ -281,7 +281,7 @@ public class FieldType implements IndexableFieldType  {
    * {@inheritDoc}
    * <p>
    * The default is {@link IndexOptions#DOCS_AND_FREQS_AND_POSITIONS}.
-   * @see #setIndexOptions(FieldInfo.IndexOptions)
+   * @see #setIndexOptions(org.apache.lucene.index.FieldInfo.IndexOptions)
    */
   public IndexOptions indexOptions() {
     return this.indexOptions;
diff --git a/lucene/core/src/java/org/apache/lucene/index/DocsAndPositionsEnum.java b/lucene/core/src/java/org/apache/lucene/index/DocsAndPositionsEnum.java
index 0d2e84e..b96d132 100644
--- a/lucene/core/src/java/org/apache/lucene/index/DocsAndPositionsEnum.java
+++ b/lucene/core/src/java/org/apache/lucene/index/DocsAndPositionsEnum.java
@@ -19,6 +19,7 @@ package org.apache.lucene.index;
 
 import java.io.IOException;
 
+import org.apache.lucene.util.Bits; // javadocs
 import org.apache.lucene.util.BytesRef;
 
 /** Also iterates through positions. */
diff --git a/lucene/core/src/java/org/apache/lucene/index/DocsEnum.java b/lucene/core/src/java/org/apache/lucene/index/DocsEnum.java
index 07d0373..d323e55 100644
--- a/lucene/core/src/java/org/apache/lucene/index/DocsEnum.java
+++ b/lucene/core/src/java/org/apache/lucene/index/DocsEnum.java
@@ -21,6 +21,7 @@ import java.io.IOException;
 
 import org.apache.lucene.search.DocIdSetIterator;
 import org.apache.lucene.util.AttributeSource;
+import org.apache.lucene.util.Bits; // javadocs
 
 /** Iterates through the documents and term freqs.
  *  NOTE: you must first call {@link #nextDoc} before using
diff --git a/lucene/core/src/java/org/apache/lucene/index/SingleTermsEnum.java b/lucene/core/src/java/org/apache/lucene/index/SingleTermsEnum.java
index e33c10d..2048641 100644
--- a/lucene/core/src/java/org/apache/lucene/index/SingleTermsEnum.java
+++ b/lucene/core/src/java/org/apache/lucene/index/SingleTermsEnum.java
@@ -26,7 +26,7 @@ import org.apache.lucene.util.BytesRef;
  * For example, this can be used by {@link MultiTermQuery}s
  * that need only visit one term, but want to preserve
  * MultiTermQuery semantics such as {@link
- * MultiTermQuery#rewriteMethod}.
+ * MultiTermQuery#getRewriteMethod}.
  */
 public final class SingleTermsEnum extends FilteredTermsEnum {
   private final BytesRef singleRef;
diff --git a/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java b/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
index 7fb2378..b17e0c3 100644
--- a/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
+++ b/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
@@ -780,7 +780,6 @@ public class PackedInts {
    * @param bitsPerValue the number of bits per value
    * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)
    * @return             a ReaderIterator
-   * @throws IOException
    * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)
    * @lucene.internal
    */
@@ -822,7 +821,6 @@ public class PackedInts {
    * @param valueCount   how many values the stream holds
    * @param bitsPerValue the number of bits per value
    * @return a direct Reader
-   * @throws IOException
    * @lucene.internal
    */
   public static Reader getDirectReaderNoHeader(IndexInput in, Format format,
@@ -953,7 +951,6 @@ public class PackedInts {
    * @param bitsPerValue the number of bits per value
    * @param mem          how much memory (in bytes) can be used to speed up serialization
    * @return             a Writer
-   * @throws IOException
    * @see PackedInts#getReaderIteratorNoHeader(DataInput, Format, int, int, int, int)
    * @see PackedInts#getReaderNoHeader(DataInput, Format, int, int, int)
    * @lucene.internal
diff --git a/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java b/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
index ad0d3a2..5b3e718 100644
--- a/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
+++ b/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
@@ -191,7 +191,6 @@ public  class LeaderElector {
   /**
    * Returns int list given list of form n_0000000001, n_0000000003, etc.
    * 
-   * @param string seqs
    * @return int seqs
    */
   private List<Integer> getSeqs(List<String> seqs) {
diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/solr/core/src/java/org/apache/solr/cloud/ZkController.java
index 1a8cc56..b1b0c17 100644
--- a/solr/core/src/java/org/apache/solr/cloud/ZkController.java
+++ b/solr/core/src/java/org/apache/solr/cloud/ZkController.java
@@ -728,7 +728,6 @@ public final class ZkController {
    * @param collection
    * @param slice
    * @return leader props
-   * @throws KeeperException
    * @throws InterruptedException
    */
   public ZkCoreNodeProps getLeaderProps(final String collection,
diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java b/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java
index 4c3fcf3..edb4721 100644
--- a/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java
+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java
@@ -79,9 +79,6 @@ public class SolrZkClient {
   /**
    * @param zkServerAddress
    * @param zkClientTimeout
-   * @throws InterruptedException
-   * @throws TimeoutException
-   * @throws IOException
    */
   public SolrZkClient(String zkServerAddress, int zkClientTimeout) {
     this(zkServerAddress, zkClientTimeout, new DefaultConnectionStrategy(), null);
@@ -96,9 +93,6 @@ public class SolrZkClient {
    * @param zkClientTimeout
    * @param strat
    * @param onReconnect
-   * @throws InterruptedException
-   * @throws TimeoutException
-   * @throws IOException
    */
   public SolrZkClient(String zkServerAddress, int zkClientTimeout,
       ZkClientConnectionStrategy strat, final OnReconnect onReconnect) {
@@ -111,9 +105,6 @@ public class SolrZkClient {
    * @param strat
    * @param onReconnect
    * @param clientConnectTimeout
-   * @throws InterruptedException
-   * @throws TimeoutException
-   * @throws IOException
    */
   public SolrZkClient(String zkServerAddress, int zkClientTimeout,
       ZkClientConnectionStrategy strat, final OnReconnect onReconnect, int clientConnectTimeout) {
@@ -660,9 +651,6 @@ public class SolrZkClient {
     return prettyPrint(input, 2);
   }
 
-  /**
-   * @throws InterruptedException
-   */
   public void close() {
     if (isClosed) return; // it's okay if we over close - same as solrcore
     isClosed = true;

