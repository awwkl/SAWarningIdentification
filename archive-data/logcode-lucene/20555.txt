GitDiffStart: 59cbcf51a783db1e6cccb8f1a971e02c0d44024e | Thu Feb 26 12:41:08 2009 +0000
diff --git a/contrib/dataimporthandler/CHANGES.txt b/contrib/dataimporthandler/CHANGES.txt
index a2b78af..2ad98c6 100644
--- a/contrib/dataimporthandler/CHANGES.txt
+++ b/contrib/dataimporthandler/CHANGES.txt
@@ -155,6 +155,9 @@ Bug Fixes
 19.SOLR-1037: DIH should not add null values in a row returned by EntityProcessor to documents.
               (shalin)
 
+20.SOLR-1040: XPathEntityProcessor fails with an xpath like /feed/entry/link[@type='text/html']/@href
+              (Noble Paul via shalin)
+
 Documentation
 ----------------------
 
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.java
index c679406..026c700 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.java
@@ -67,7 +67,7 @@ public class XPathRecordReader {
 
   private void addField0(String xpath, String name, boolean multiValued,
                          boolean isRecord, int flags) {
-    List<String> paths = new LinkedList<String>(Arrays.asList(xpath.split("/")));
+    List<String> paths = splitEscapeQuote(xpath);
     if ("".equals(paths.get(0).trim()))
       paths.remove(0);
     rootNode.build(paths, name, multiValued, isRecord, flags);
@@ -367,6 +367,30 @@ public class XPathRecordReader {
     return result;
   }
 
+  /**
+   * Used for handling cases where there is a slash '/' character
+   * inside the attribute value e.g. x@html='text/html'. We need to split
+   * by '/' excluding the '/' which is a part of the attribute's value.
+   */
+  private static List<String> splitEscapeQuote(String str) {
+    List<String> result = new LinkedList<String>();
+    String[] ss = str.split("/");
+    for (int i = 0; i < ss.length; i++) {
+      if (ss[i].length() == 0 && result.size() == 0) continue;
+      StringBuilder sb = new StringBuilder();
+      int quoteCount = 0;
+      while (true) {
+        sb.append(ss[i]);
+        for (int j = 0; j < ss[i].length(); j++) if (ss[i].charAt(j) == '\'') quoteCount++;
+        if ((quoteCount % 2) == 0) break;
+        i++;
+        sb.append("/");
+      }
+      result.add(sb.toString());
+    }
+    return result;
+  }
+
   static XMLInputFactory factory = XMLInputFactory.newInstance();
   static{
     factory.setProperty(XMLInputFactory.IS_VALIDATING , Boolean.FALSE); 
diff --git a/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader.java b/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader.java
index 5f3c74a..84ba12b 100644
--- a/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader.java
+++ b/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader.java
@@ -227,6 +227,19 @@ public class TestXPathRecordReader {
   }
 
   @Test
+  public void  attribValWithSlash() {
+    String xml = "<root><b>\n" +
+            "  <a x=\"a/b\" h=\"hello-A\"/>  \n" +
+            "</b></root>";
+    XPathRecordReader rr = new XPathRecordReader("/root/b");
+    rr.addField("x", "/root/b/a[@x='a/b']/@h", false);
+    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));
+    Assert.assertEquals(1, l.size());
+    Map<String, Object> m = l.get(0);
+    Assert.assertEquals("hello-A", m.get("x"));    
+  }
+
+  @Test
   public void another() {
     String xml = "<root>\n"
             + "       <contenido id=\"10097\" idioma=\"cat\">\n"

