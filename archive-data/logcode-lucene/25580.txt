GitDiffStart: 474d9de9858f7c20bcdc2334c4e0b7788b54f385 | Fri Sep 20 02:21:31 2002 +0000
diff --git a/src/java/org/apache/lucene/index/FieldsReader.java b/src/java/org/apache/lucene/index/FieldsReader.java
index 0377a8a..ff4cfac 100644
--- a/src/java/org/apache/lucene/index/FieldsReader.java
+++ b/src/java/org/apache/lucene/index/FieldsReader.java
@@ -63,66 +63,51 @@ import org.apache.lucene.store.InputStream;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 
-/**
- * FIXME: Describe class <code>FieldsReader</code> here.
- *
- * @version $Id$
- */
-final class FieldsReader
-{
-    private FieldInfos fieldInfos;
-    private InputStream fieldsStream;
-    private InputStream indexStream;
-    private int size;
+final class FieldsReader {
+  private FieldInfos fieldInfos;
+  private InputStream fieldsStream;
+  private InputStream indexStream;
+  private int size;
 
-    FieldsReader(Directory d, String segment, FieldInfos fn)
-        throws IOException
-    {
-        fieldInfos = fn;
+  FieldsReader(Directory d, String segment, FieldInfos fn)
+       throws IOException {
+    fieldInfos = fn;
 
-        fieldsStream = d.openFile(segment + ".fdt");
-        indexStream = d.openFile(segment + ".fdx");
-
-        // TODO: document the magic number 8
-        size = (int)indexStream.length() / 8;
-    }
+    fieldsStream = d.openFile(segment + ".fdt");
+    indexStream = d.openFile(segment + ".fdx");
 
-    final void close()
-        throws IOException
-    {
-        fieldsStream.close();
-        indexStream.close();
-    }
+    size = (int)indexStream.length() / 8;
+  }
 
-    final int size()
-    {
-        return size;
-    }
+  final void close() throws IOException {
+    fieldsStream.close();
+    indexStream.close();
+  }
 
-    final Document doc(int n)
-        throws IOException
-    {
-        // TODO: document the magic number 8L
-        indexStream.seek(n * 8L);
-        long position = indexStream.readLong();
-        fieldsStream.seek(position);
+  final int size() {
+    return size;
+  }
 
-        Document doc = new Document();
-        int numFields = fieldsStream.readVInt();
-        for (int i = 0; i < numFields; i++)
-        {
-            int fieldNumber = fieldsStream.readVInt();
-            FieldInfo fi = fieldInfos.fieldInfo(fieldNumber);
+  final Document doc(int n) throws IOException {
+    indexStream.seek(n * 8L);
+    long position = indexStream.readLong();
+    fieldsStream.seek(position);
+    
+    Document doc = new Document();
+    int numFields = fieldsStream.readVInt();
+    for (int i = 0; i < numFields; i++) {
+      int fieldNumber = fieldsStream.readVInt();
+      FieldInfo fi = fieldInfos.fieldInfo(fieldNumber);
 
-            byte bits = fieldsStream.readByte();
+      byte bits = fieldsStream.readByte();
 
-            doc.add(new Field(fi.name, 		   // name
+      doc.add(new Field(fi.name,		  // name
 			fieldsStream.readString(), // read value
-			true,			   // stored
-			fi.isIndexed,		   // indexed
-			(bits & 1) != 0));	   // tokenized
-        }
-
-        return doc;
+			true,			  // stored
+			fi.isIndexed,		  // indexed
+			(bits & 1) != 0));	  // tokenized
     }
+
+    return doc;
+  }
 }

