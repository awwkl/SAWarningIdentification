GitDiffStart: 2007a4b4e05db9fab2198394b5dd2219a3811a48 | Thu Jun 9 11:43:35 2011 +0000
diff --git a/lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java b/lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java
index 65a18b7..136d840 100644
--- a/lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java
+++ b/lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java
@@ -40,7 +40,6 @@ import org.apache.lucene.util.Version;
  * become <code>h?user</code> when using this parser and thus no match would be found (i.e.
  * using this parser will be no improvement over QueryParser in such cases). 
  *
- * @version $Revision$, $Date$
  */
 public class AnalyzingQueryParser extends org.apache.lucene.queryParser.QueryParser {
 
diff --git a/lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser.java b/lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser.java
index a8817fe..8613f8e 100644
--- a/lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser.java
+++ b/lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser.java
@@ -29,7 +29,6 @@ import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.util.LuceneTestCase;
 
 /**
- * @version $Revision$, $Date$
  */
 public class TestAnalyzingQueryParser extends LuceneTestCase {
 
diff --git a/lucene/src/java/org/apache/lucene/queryParser/MultiFieldQueryParser.java b/lucene/src/java/org/apache/lucene/queryParser/MultiFieldQueryParser.java
index b2f865e..4e0dd68 100644
--- a/lucene/src/java/org/apache/lucene/queryParser/MultiFieldQueryParser.java
+++ b/lucene/src/java/org/apache/lucene/queryParser/MultiFieldQueryParser.java
@@ -32,7 +32,6 @@ import org.apache.lucene.util.Version;
 /**
  * A QueryParser which constructs queries to search multiple fields.
  *
- * @version $Revision$
  */
 public class MultiFieldQueryParser extends QueryParser
 {
diff --git a/lucene/src/java/org/apache/lucene/search/MultiPhraseQuery.java b/lucene/src/java/org/apache/lucene/search/MultiPhraseQuery.java
index fc95980..e427094 100644
--- a/lucene/src/java/org/apache/lucene/search/MultiPhraseQuery.java
+++ b/lucene/src/java/org/apache/lucene/search/MultiPhraseQuery.java
@@ -40,7 +40,6 @@ import org.apache.lucene.util.Bits;
  * prefix using IndexReader.terms(Term), and use MultiPhraseQuery.add(Term[]
  * terms) to add them to the query.
  *
- * @version 1.0
  */
 public class MultiPhraseQuery extends Query {
   private String field;
diff --git a/lucene/src/test/org/apache/lucene/search/TestDateFilter.java b/lucene/src/test/org/apache/lucene/search/TestDateFilter.java
index f92b60b..966f0da 100644
--- a/lucene/src/test/org/apache/lucene/search/TestDateFilter.java
+++ b/lucene/src/test/org/apache/lucene/search/TestDateFilter.java
@@ -32,7 +32,6 @@ import java.io.IOException;
  * DateFilter JUnit tests.
  * 
  * 
- * @version $Revision$
  */
 public class TestDateFilter extends LuceneTestCase {
  
diff --git a/lucene/src/test/org/apache/lucene/search/TestDocBoost.java b/lucene/src/test/org/apache/lucene/search/TestDocBoost.java
index 11d1505..885b30d 100644
--- a/lucene/src/test/org/apache/lucene/search/TestDocBoost.java
+++ b/lucene/src/test/org/apache/lucene/search/TestDocBoost.java
@@ -31,7 +31,6 @@ import org.apache.lucene.util.LuceneTestCase;
 /** Document boost unit test.
  *
  *
- * @version $Revision$
  */
 public class TestDocBoost extends LuceneTestCase {
 
diff --git a/lucene/src/test/org/apache/lucene/search/TestNot.java b/lucene/src/test/org/apache/lucene/search/TestNot.java
index 2e9e445..7aa971a 100644
--- a/lucene/src/test/org/apache/lucene/search/TestNot.java
+++ b/lucene/src/test/org/apache/lucene/search/TestNot.java
@@ -30,7 +30,6 @@ import org.apache.lucene.document.Field;
 /** Similarity unit test.
  *
  *
- * @version $Revision$
  */
 public class TestNot extends LuceneTestCase {
 
diff --git a/lucene/src/test/org/apache/lucene/search/TestPositionIncrement.java b/lucene/src/test/org/apache/lucene/search/TestPositionIncrement.java
index eecf803..3da4852 100644
--- a/lucene/src/test/org/apache/lucene/search/TestPositionIncrement.java
+++ b/lucene/src/test/org/apache/lucene/search/TestPositionIncrement.java
@@ -54,7 +54,6 @@ import org.apache.lucene.util.BytesRef;
  * Term position unit test.
  *
  *
- * @version $Revision$
  */
 public class TestPositionIncrement extends LuceneTestCase {
 
diff --git a/lucene/src/test/org/apache/lucene/search/TestSetNorm.java b/lucene/src/test/org/apache/lucene/search/TestSetNorm.java
index 92bf2cc..906aeb0 100644
--- a/lucene/src/test/org/apache/lucene/search/TestSetNorm.java
+++ b/lucene/src/test/org/apache/lucene/search/TestSetNorm.java
@@ -31,7 +31,6 @@ import org.apache.lucene.store.Directory;
 /** Document boost unit test.
  *
  *
- * @version $Revision$
  */
 public class TestSetNorm extends LuceneTestCase {
 
diff --git a/lucene/src/test/org/apache/lucene/search/TestSimilarity.java b/lucene/src/test/org/apache/lucene/search/TestSimilarity.java
index 9324969..3afeb25 100644
--- a/lucene/src/test/org/apache/lucene/search/TestSimilarity.java
+++ b/lucene/src/test/org/apache/lucene/search/TestSimilarity.java
@@ -35,7 +35,6 @@ import org.apache.lucene.search.Explanation.IDFExplanation;
 /** Similarity unit test.
  *
  *
- * @version $Revision$
  */
 public class TestSimilarity extends LuceneTestCase {
   
diff --git a/modules/analysis/common/src/java/org/apache/lucene/analysis/cn/ChineseFilter.java b/modules/analysis/common/src/java/org/apache/lucene/analysis/cn/ChineseFilter.java
index 60503da..aa9743b 100644
--- a/modules/analysis/common/src/java/org/apache/lucene/analysis/cn/ChineseFilter.java
+++ b/modules/analysis/common/src/java/org/apache/lucene/analysis/cn/ChineseFilter.java
@@ -41,7 +41,6 @@ import org.apache.lucene.util.Version;
  * <li>Intelligent Chinese word extraction
  * </ol>
  * 
- * @version 1.0
  * @deprecated (3.1) Use {@link StopFilter} instead, which has the same functionality.
  * This filter will be removed in Lucene 5.0
  */
diff --git a/modules/analysis/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java b/modules/analysis/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java
index 1389003..ddbbf18 100644
--- a/modules/analysis/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java
+++ b/modules/analysis/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java
@@ -52,7 +52,6 @@ import org.apache.lucene.util.AttributeSource;
  * C4C2, C1C2C3 ... the ChineseTokenizer works, but the
  * CJKTokenizer will not work.
  * </p>
- * @version 1.0
  * @deprecated (3.1) Use {@link StandardTokenizer} instead, which has the same functionality.
  * This filter will be removed in Lucene 5.0
  */
diff --git a/modules/analysis/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java b/modules/analysis/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java
index 8383816..587e2f3 100644
--- a/modules/analysis/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java
+++ b/modules/analysis/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java
@@ -32,7 +32,6 @@ import org.apache.lucene.util.Version;
 
 /**
  * {@link Analyzer} for Thai language. It uses {@link java.text.BreakIterator} to break words.
- * @version 0.2
  *
  * <p><b>NOTE</b>: This class uses the same {@link Version}
  * dependent settings as {@link StandardAnalyzer}.</p>
diff --git a/modules/analysis/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java b/modules/analysis/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java
index 2cfb6bf..07fc7ad 100644
--- a/modules/analysis/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java
+++ b/modules/analysis/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java
@@ -26,7 +26,6 @@ import org.apache.lucene.util.Version;
 /**
  * Test case for FrenchAnalyzer.
  *
- * @version   $version$
  */
 
 public class TestFrenchAnalyzer extends BaseTokenStreamTestCase {
diff --git a/modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter.java b/modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter.java
index 256cbac..4daa39c 100644
--- a/modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter.java
+++ b/modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter.java
@@ -26,7 +26,6 @@ import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.tokenattributes.*;
 
 /**
- * @version $Id:$
  */
 public class TestTrimFilter extends BaseTokenStreamTestCase {
 
diff --git a/modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceFilter.java b/modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceFilter.java
index 12e0982..dd0e10c 100644
--- a/modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceFilter.java
+++ b/modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceFilter.java
@@ -25,7 +25,6 @@ import java.io.StringReader;
 import java.util.regex.Pattern;
 
 /**
- * @version $Id:$
  */
 public class TestPatternReplaceFilter extends BaseTokenStreamTestCase {
 
diff --git a/modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter.java b/modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter.java
index 7af49ad..82c2e1c 100644
--- a/modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter.java
+++ b/modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter.java
@@ -33,7 +33,6 @@ import org.apache.lucene.analysis.core.WhitespaceTokenizer;
 import org.apache.lucene.analysis.tokenattributes.*;
 
 /**
- * @version $Id$
  */
 public class TestSynonymFilter extends BaseTokenStreamTestCase {
 
diff --git a/modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer.java b/modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer.java
index 6247bbf..81f2e27 100644
--- a/modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer.java
+++ b/modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer.java
@@ -27,7 +27,6 @@ import org.apache.lucene.util.Version;
 /**
  * Test case for ThaiAnalyzer, modified from TestFrenchAnalyzer
  *
- * @version   0.1
  */
 
 public class TestThaiAnalyzer extends BaseTokenStreamTestCase {
diff --git a/modules/suggest/src/java/org/apache/lucene/search/spell/Dictionary.java b/modules/suggest/src/java/org/apache/lucene/search/spell/Dictionary.java
index b54b312..4dee714 100755
--- a/modules/suggest/src/java/org/apache/lucene/search/spell/Dictionary.java
+++ b/modules/suggest/src/java/org/apache/lucene/search/spell/Dictionary.java
@@ -23,7 +23,6 @@ import java.util.Iterator;
  * here is just a list of words.
  * 
  *
- * @version 1.0
  */
 public interface Dictionary {
 
diff --git a/modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker.java b/modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker.java
index bfeae31..a57e552 100755
--- a/modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker.java
+++ b/modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker.java
@@ -64,7 +64,6 @@ import org.apache.lucene.util.Version;
  * </pre>
  * 
  *
- * @version 1.0
  */
 public class SpellChecker implements java.io.Closeable {
 
diff --git a/solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.java b/solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.java
index 0231d1e..1db9327 100644
--- a/solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.java
@@ -42,7 +42,6 @@ import java.util.*;
  * <a href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a> for more
  * details. <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.4
  */
 public class MailEntityProcessor extends EntityProcessorBase {
diff --git a/solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor.java b/solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor.java
index 9913c15..b76c038 100644
--- a/solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor.java
@@ -52,7 +52,6 @@ import static org.apache.solr.handler.dataimport.XPathEntityProcessor.URL;
  * <p>An implementation of {@link EntityProcessor} which reads data from rich docs
  * using <a href="http://tika.apache.org/">Apache Tika</a>
  *
- * @version $Id$
  * @since solr 3.1
  */
 public class TikaEntityProcessor extends EntityProcessorBase {
diff --git a/solr/contrib/dataimporthandler/src/extras/test/java/org/apache/solr/handler/dataimport/TestMailEntityProcessor.java b/solr/contrib/dataimporthandler/src/extras/test/java/org/apache/solr/handler/dataimport/TestMailEntityProcessor.java
index 2ac19b3..d12496a 100644
--- a/solr/contrib/dataimporthandler/src/extras/test/java/org/apache/solr/handler/dataimport/TestMailEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/extras/test/java/org/apache/solr/handler/dataimport/TestMailEntityProcessor.java
@@ -40,7 +40,6 @@ import java.util.Map;
  *
  * TODO: Find a way to make the tests actually test code
  *
- * @version $Id$
  * @see org.apache.solr.handler.dataimport.MailEntityProcessor
  * @since solr 1.4
  */
diff --git a/solr/contrib/dataimporthandler/src/extras/test/java/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java b/solr/contrib/dataimporthandler/src/extras/test/java/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java
index 019fa85..934430d 100644
--- a/solr/contrib/dataimporthandler/src/extras/test/java/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/extras/test/java/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java
@@ -20,7 +20,6 @@ import org.junit.BeforeClass;
 import org.junit.Test;
 
 /**Testcase for TikaEntityProcessor
- * @version $Id$
  * @since solr 1.5 
  */
 public class TestTikaEntityProcessor extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinContentStreamDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinContentStreamDataSource.java
index 1187f65..cb6ffe9 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinContentStreamDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinContentStreamDataSource.java
@@ -29,7 +29,6 @@ import java.util.Properties;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.5
  */
 
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinFileDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinFileDataSource.java
index e473ab8..986404c 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinFileDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinFileDataSource.java
@@ -37,7 +37,6 @@ import java.util.Properties;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.5
  */
 
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinURLDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinURLDataSource.java
index 045d6fa..fb8a47e 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinURLDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/BinURLDataSource.java
@@ -32,7 +32,6 @@ import java.util.Properties;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.5
  */
 public class BinURLDataSource extends DataSource<InputStream>{
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor.java
index 864e772..a2ef3b9 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/CachedSqlEntityProcessor.java
@@ -32,7 +32,6 @@ import java.util.Map;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class CachedSqlEntityProcessor extends SqlEntityProcessor {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer.java
index ae970d2..45aff14 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer.java
@@ -33,7 +33,6 @@ import java.util.Map;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.4
  */
 public class ClobTransformer extends Transformer {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContentStreamDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContentStreamDataSource.java
index 58ed19e..a2de287 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContentStreamDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContentStreamDataSource.java
@@ -31,7 +31,6 @@ import java.util.Properties;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.4
  */
 public class ContentStreamDataSource extends DataSource<Reader> {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Context.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Context.java
index 290b202..d629d8f 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Context.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Context.java
@@ -35,7 +35,6 @@ import java.util.Map;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public abstract class Context {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContextImpl.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContextImpl.java
index bd72683..87b1ae2 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContextImpl.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContextImpl.java
@@ -30,7 +30,6 @@ import java.util.concurrent.ConcurrentHashMap;
  * </p>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class ContextImpl extends Context {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataConfig.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataConfig.java
index f0a9e41..ab95886 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataConfig.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataConfig.java
@@ -40,7 +40,6 @@ import java.util.*;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class DataConfig {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler.java
index 83e546d..5da8b13 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler.java
@@ -63,7 +63,6 @@ import org.xml.sax.InputSource;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class DataImportHandler extends RequestHandlerBase implements
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
index b0fb60d..7c7bc3b 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
@@ -51,7 +51,6 @@ import java.util.concurrent.ConcurrentHashMap;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class DataImporter {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataSource.java
index 0226f50..e76e4ee 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataSource.java
@@ -36,7 +36,6 @@ import java.util.Properties;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public abstract class DataSource<T> {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DateFormatTransformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DateFormatTransformer.java
index 95c601e..f093f97 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DateFormatTransformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DateFormatTransformer.java
@@ -37,7 +37,6 @@ import org.slf4j.LoggerFactory;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class DateFormatTransformer extends Transformer {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger.java
index 8ee0126..4b2ebaf 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger.java
@@ -39,7 +39,6 @@ import java.util.Stack;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 class DebugLogger {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
index 974fe21..a109149 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
@@ -37,7 +37,6 @@ import java.util.concurrent.*;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class DocBuilder {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor.java
index be3fe49..f285be3 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor.java
@@ -36,7 +36,6 @@ import java.util.Map;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public abstract class EntityProcessor {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java
index 10d8c14..9aaa537 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java
@@ -29,7 +29,6 @@ import java.util.*;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class EntityProcessorBase extends EntityProcessor {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper.java
index 92fc9d4..c85dec1 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper.java
@@ -32,7 +32,6 @@ import java.util.Map;
 /**
  * A Wrapper over {@link EntityProcessor} instance which performs transforms and handles multi-row outputs correctly.
  *
- * @version $Id$
  * @since solr 1.4
  */
 public class EntityProcessorWrapper extends EntityProcessor {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Evaluator.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Evaluator.java
index 46ed2a3..3393ad4 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Evaluator.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Evaluator.java
@@ -30,7 +30,6 @@ package org.apache.solr.handler.dataimport;
  * </p>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public abstract class Evaluator {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag.java
index 24e728d..076734e 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag.java
@@ -41,7 +41,6 @@ import java.util.regex.Pattern;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class EvaluatorBag {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EventListener.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EventListener.java
index 5ac603c..b3cbee2 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EventListener.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EventListener.java
@@ -21,7 +21,6 @@ package org.apache.solr.handler.dataimport;
  *
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
  * @since solr 1.4
  */
 public interface EventListener {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FieldReaderDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FieldReaderDataSource.java
index b9d9ec7..0fa0ddb 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FieldReaderDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FieldReaderDataSource.java
@@ -42,7 +42,6 @@ import java.util.Properties;
  * <p/>
  * Supports String, BLOB, CLOB data types and there is an extra field (in the entity) 'encoding' for BLOB types
  *
- * @version $Id$
  * @since 1.4
  */
 public class FieldReaderDataSource extends DataSource<Reader> {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FieldStreamDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FieldStreamDataSource.java
index 132367c..252e8f0 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FieldStreamDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FieldStreamDataSource.java
@@ -43,7 +43,6 @@ import static org.apache.solr.handler.dataimport.DataImportHandlerException.SEVE
  * This may be used with any {@link EntityProcessor} which uses a {@link DataSource}&lt;{@link InputStream}&gt; eg: {@link TikaEntityProcessor}
  * <p/>
  *
- * @version $Id$
  * @since 3.1
  */
 public class FieldStreamDataSource extends DataSource<InputStream> {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileDataSource.java
index 2f5a5aa..ca37c73 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileDataSource.java
@@ -41,7 +41,6 @@ import static org.apache.solr.handler.dataimport.DataImportHandlerException.SEVE
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class FileDataSource extends DataSource<Reader> {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java
index 7549af7..520943f 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java
@@ -50,7 +50,6 @@ import java.util.regex.Pattern;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  * @see Pattern
  */
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer.java
index b8bc420..526976c 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer.java
@@ -30,7 +30,6 @@ import java.util.Map;
  * A {@link Transformer} implementation which strip off HTML tags using {@link HTMLStripCharFilter} This is useful
  * in case you don't need this HTML anyway.
  *
- * @version $Id$
  * @see HTMLStripCharFilter
  * @since solr 1.4
  */
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HttpDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HttpDataSource.java
index 8264653..a658310 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HttpDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HttpDataSource.java
@@ -30,7 +30,6 @@ package org.apache.solr.handler.dataimport;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  * @deprecated use {@link org.apache.solr.handler.dataimport.URLDataSource} instead
  */
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/JdbcDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/JdbcDataSource.java
index f48ca2c..df4b33f 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/JdbcDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/JdbcDataSource.java
@@ -33,7 +33,6 @@ import java.util.concurrent.Callable;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class JdbcDataSource extends
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LineEntityProcessor.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LineEntityProcessor.java
index 30e3663..e526e83 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LineEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LineEntityProcessor.java
@@ -52,7 +52,6 @@ import org.apache.commons.io.IOUtils;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.4
  * @see Pattern
  */
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LogTransformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LogTransformer.java
index 5a603a7..704a03c 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LogTransformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LogTransformer.java
@@ -29,7 +29,6 @@ import java.util.Map;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.4
  */
 public class LogTransformer extends Transformer {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MockDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MockDataSource.java
index 6fd7213..32048ea 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MockDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MockDataSource.java
@@ -28,7 +28,6 @@ import java.util.Properties;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class MockDataSource extends
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/NumberFormatTransformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/NumberFormatTransformer.java
index 36efecf..754e39b 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/NumberFormatTransformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/NumberFormatTransformer.java
@@ -42,7 +42,6 @@ import java.util.regex.Pattern;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class NumberFormatTransformer extends Transformer {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor.java
index 2d32eee..b88c85f 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/PlainTextEntityProcessor.java
@@ -33,7 +33,6 @@ import java.util.Map;
  * <p>An implementation of {@link EntityProcessor} which reads data from a url/file and give out a row which contains one String
  * value. The name of the field is 'plainText'.
  *
- * @version $Id$
  * @since solr 1.4
  */
 public class PlainTextEntityProcessor extends EntityProcessorBase {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer.java
index 429bb0c..d680c9d 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer.java
@@ -36,7 +36,6 @@ import java.util.regex.Pattern;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  * @see Pattern
  */
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ScriptTransformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ScriptTransformer.java
index 547fc66..a4ea3af 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ScriptTransformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ScriptTransformer.java
@@ -37,7 +37,6 @@ import java.util.Map;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class ScriptTransformer extends Transformer {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java
index c342427..f548316 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java
@@ -34,7 +34,6 @@ import java.util.Properties;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
  * @since solr 1.3
  */
 public class SolrWriter {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
index 1748998..5f77063 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
@@ -38,7 +38,7 @@ import java.util.regex.Pattern;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SqlEntityProcessor extends EntityProcessorBase {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateString.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateString.java
index d39bbec..7724de8 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateString.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateString.java
@@ -30,7 +30,7 @@ import java.util.regex.Pattern;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TemplateString {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateTransformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateTransformer.java
index 6fd0665..97a4b11 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateTransformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateTransformer.java
@@ -43,7 +43,7 @@ import org.slf4j.LoggerFactory;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TemplateTransformer extends Transformer {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Transformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Transformer.java
index 9953028..758b243 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Transformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/Transformer.java
@@ -35,7 +35,7 @@ import java.util.Map;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class Transformer {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/URLDataSource.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/URLDataSource.java
index 234fb56..626040b 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/URLDataSource.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/URLDataSource.java
@@ -35,7 +35,7 @@ import java.util.regex.Pattern;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class URLDataSource extends DataSource<Reader> {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolver.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolver.java
index 2ce6955..8a91f0f 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolver.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolver.java
@@ -30,7 +30,7 @@ package org.apache.solr.handler.dataimport;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class VariableResolver {
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolverImpl.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolverImpl.java
index 8d39dd1..10ed0ac 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolverImpl.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolverImpl.java
@@ -28,7 +28,7 @@ import java.util.regex.Pattern;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
+ *
  * @see VariableResolver
  * @since solr 1.3
  */
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java
index 86be8d7..b6500b8 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java
@@ -49,7 +49,7 @@ import java.util.concurrent.atomic.AtomicReference;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  *
- * @version $Id$
+ *
  * @see XPathRecordReader
  * @since solr 1.3
  */
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.java
index a3c4b16..0007278 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.java
@@ -53,7 +53,7 @@ import org.slf4j.LoggerFactory;
  * <p/>
  * <b>This API is experimental and may change in the future.</b>
  * <p>
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class XPathRecordReader {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase.java
index 5df5f3d..f4ebad9 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase.java
@@ -46,7 +46,7 @@ import java.util.Map;
  * <p/>
  * <b>This API is experimental and subject to change</b>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class AbstractDataImportHandlerTestCase extends
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.java
index 0037d67..89c79a6 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestCachedSqlEntityProcessor.java
@@ -28,7 +28,7 @@ import java.util.Map;
  * Test for CachedSqlEntityProcessor
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestCachedSqlEntityProcessor extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestClobTransformer.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestClobTransformer.java
index 055a707..b1eb394 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestClobTransformer.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestClobTransformer.java
@@ -28,7 +28,7 @@ import java.util.*;
 /**
  * Test for ClobTransformer
  *
- * @version $Id$
+ *
  * @see org.apache.solr.handler.dataimport.ClobTransformer
  * @since solr 1.4
  */
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestContentStreamDataSource.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestContentStreamDataSource.java
index 692272d..0ea8b1d 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestContentStreamDataSource.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestContentStreamDataSource.java
@@ -35,7 +35,7 @@ import java.util.List;
 /**
  * Test for ContentStreamDataSource
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class TestContentStreamDataSource extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig.java
index 39b01dd..3efcc1e 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDataConfig.java
@@ -31,7 +31,7 @@ import java.util.List;
  * Test for DataConfig
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestDataConfig extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer.java
index bd37053..606d573 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer.java
@@ -26,7 +26,7 @@ import java.util.*;
  * Test for DateFormatTransformer
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestDateFormatTransformer extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java
index a16b701..27ba8b3 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java
@@ -28,7 +28,7 @@ import java.util.*;
  * Test for DocBuilder
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestDocBuilder extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2.java
index 4632318..daa32ca 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2.java
@@ -32,7 +32,7 @@ import java.io.File;
  * Test for DocBuilder using the test harness
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestDocBuilder2 extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEntityProcessorBase.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEntityProcessorBase.java
index 42b2961..a3cff08 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEntityProcessorBase.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEntityProcessorBase.java
@@ -28,7 +28,7 @@ import java.util.Map;
  * Test for EntityProcessorBase
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestEntityProcessorBase extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestErrorHandling.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestErrorHandling.java
index 64f58df..d46635c 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestErrorHandling.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestErrorHandling.java
@@ -29,7 +29,7 @@ import org.junit.BeforeClass;
 /**
  * Tests exception handling during imports in DataImportHandler
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class TestErrorHandling extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag.java
index 41ac1dc..502182f 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag.java
@@ -27,7 +27,7 @@ import java.util.*;
 /**
  * <p> Test for EvaluatorBag </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestEvaluatorBag extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader.java
index 46f2ab5..4bf1e97 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader.java
@@ -25,7 +25,7 @@ import java.util.Map;
 /**
  * Test for FieldReaderDataSource
  *
- * @version $Id$
+ *
  * @see org.apache.solr.handler.dataimport.FieldReaderDataSource
  * @since 1.4
  */
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFileListEntityProcessor.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFileListEntityProcessor.java
index e28ccbd..cb2bc8a 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFileListEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFileListEntityProcessor.java
@@ -28,7 +28,7 @@ import java.util.*;
  * Test for FileListEntityProcessor
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestFileListEntityProcessor extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestJdbcDataSource.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestJdbcDataSource.java
index ac66264..ba0642f 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestJdbcDataSource.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestJdbcDataSource.java
@@ -39,7 +39,7 @@ import org.junit.Test;
  * Note: The tests are ignored for the lack of DB support for testing
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestJdbcDataSource extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor.java
index 91f8d03..5548924 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor.java
@@ -27,7 +27,7 @@ import java.util.*;
 /**
  * <p> Test for TestLineEntityProcessor </p>
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class TestLineEntityProcessor extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestNumberFormatTransformer.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestNumberFormatTransformer.java
index 67ba544..b799717 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestNumberFormatTransformer.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestNumberFormatTransformer.java
@@ -29,7 +29,7 @@ import java.util.Map;
  * Test for NumberFormatTransformer
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestNumberFormatTransformer extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor.java
index e0a5b8b..a67c1fe 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor.java
@@ -24,7 +24,7 @@ import java.util.Properties;
 /**
  * Test for PlainTextEntityProcessor
  *
- * @version $Id$
+ *
  * @see org.apache.solr.handler.dataimport.PlainTextEntityProcessor
  * @since solr 1.4
  */
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer.java
index ca3143b..50835d7 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer.java
@@ -31,7 +31,7 @@ import java.util.Map;
 /**
  * <p> Test for RegexTransformer </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestRegexTransformer extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer.java
index 7c10765..25477ef 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer.java
@@ -37,7 +37,7 @@ import java.util.Map;
  * All tests in this have been ignored because script support is only available
  * in Java 1.6+
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestScriptTransformer extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor.java
index 0fbfb84..b9e5588 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor.java
@@ -25,7 +25,7 @@ import java.util.*;
  * Test for SqlEntityProcessor
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestSqlEntityProcessor extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2.java
index 6c0627e..4429887 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2.java
@@ -32,7 +32,7 @@ import java.text.ParseException;
  * test harness
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestSqlEntityProcessor2 extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta.java
index ade265f..60f1ae5 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta.java
@@ -30,7 +30,7 @@ import java.util.List;
  * </p>
  * 
  *
- * @version $Id: TestSqlEntityProcessor2.java 723824 2008-12-05 19:14:11Z shalin $
+ *
  * @since solr 1.3
  */
 public class TestSqlEntityProcessorDelta extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta2.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta2.java
index bab6607..c3ce382 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta2.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDelta2.java
@@ -30,7 +30,7 @@ import java.util.List;
  * </p>
  * 
  *
- * @version $Id: TestSqlEntityProcessor2.java 723824 2008-12-05 19:14:11Z shalin $
+ *
  * @since solr 1.3
  */
 public class TestSqlEntityProcessorDelta2 extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDeltaPrefixedPk.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDeltaPrefixedPk.java
index 51fc50b..2cc40a4 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDeltaPrefixedPk.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessorDeltaPrefixedPk.java
@@ -31,7 +31,7 @@ import java.util.logging.*;
  * </p>
  * 
  *
- * @version $Id$
+ *
  * @since solr 3.1
  */
 public class TestSqlEntityProcessorDeltaPrefixedPk extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateString.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateString.java
index 5eea4d7..5334ec1 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateString.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateString.java
@@ -28,7 +28,7 @@ import java.util.regex.Pattern;
  * Test for TemplateString
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestTemplateString extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateTransformer.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateTransformer.java
index e279ab3..846aa9b 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateTransformer.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestTemplateTransformer.java
@@ -28,7 +28,7 @@ import java.util.Arrays;
  * Test for TemplateTransformer
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestTemplateTransformer extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver.java
index 55c4b91..15eff57 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver.java
@@ -27,7 +27,7 @@ import java.util.*;
  * Test for VariableResolver
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestVariableResolver extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java
index 596fa33..f673869 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java
@@ -32,7 +32,7 @@ import java.util.concurrent.TimeUnit;
  * Test for XPathEntityProcessor
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestXPathEntityProcessor extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader.java b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader.java
index dad5510..619e45b 100644
--- a/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader.java
+++ b/solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader.java
@@ -26,7 +26,7 @@ import java.util.Map;
 /**
  * <p> Test for XPathRecordReader </p>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestXPathRecordReader extends AbstractDataImportHandlerTestCase {
diff --git a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfiguration.java b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfiguration.java
index 054857a..8cbab1b 100644
--- a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfiguration.java
+++ b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfiguration.java
@@ -22,7 +22,7 @@ import java.util.Map;
 /**
  * Configuration holding all the configurable parameters for calling UIMA inside Solr
  *
- * @version $Id$
+ *
  */
 public class SolrUIMAConfiguration {
 
diff --git a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader.java b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader.java
index 1792fd7..98e6c88 100644
--- a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader.java
+++ b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader.java
@@ -27,7 +27,7 @@ import org.apache.solr.uima.processor.SolrUIMAConfiguration.MapField;
 /**
  * Read configuration for Solr-UIMA integration
  * 
- * @version $Id$
+ *
  * 
  */
 public class SolrUIMAConfigurationReader {
diff --git a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAToSolrMapper.java b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAToSolrMapper.java
index 6d8cdc5..dfc531a 100644
--- a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAToSolrMapper.java
+++ b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAToSolrMapper.java
@@ -32,7 +32,7 @@ import org.slf4j.LoggerFactory;
 /**
  * Map UIMA types and features over fields of a Solr document
  * 
- * @version $Id$
+ *
  */
 public class UIMAToSolrMapper {
 
diff --git a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessor.java b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessor.java
index 33154fe..69d8d93 100644
--- a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessor.java
+++ b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessor.java
@@ -38,7 +38,7 @@ import org.apache.uima.resource.ResourceInitializationException;
 /**
  * Update document(s) to be indexed with UIMA extracted information
  *
- * @version $Id$
+ *
  */
 public class UIMAUpdateRequestProcessor extends UpdateRequestProcessor {
 
diff --git a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorFactory.java b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorFactory.java
index 9cb4601..8fab664 100644
--- a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorFactory.java
+++ b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorFactory.java
@@ -26,7 +26,7 @@ import org.apache.solr.update.processor.UpdateRequestProcessorFactory;
 /**
  * Factory for {@link UIMAUpdateRequestProcessor}
  * 
- * @version $Id$
+ *
  */
 public class UIMAUpdateRequestProcessorFactory extends UpdateRequestProcessorFactory {
 
diff --git a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/AEProvider.java b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/AEProvider.java
index 89c981a..2f6ac47 100644
--- a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/AEProvider.java
+++ b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/AEProvider.java
@@ -23,7 +23,7 @@ import org.apache.uima.resource.ResourceInitializationException;
 /**
  * provide an Apache UIMA {@link AnalysisEngine}
  * 
- * @version $Id$
+ *
  */
 public interface AEProvider {
 
diff --git a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/AEProviderFactory.java b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/AEProviderFactory.java
index bc5ad81..2bd2417 100644
--- a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/AEProviderFactory.java
+++ b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/AEProviderFactory.java
@@ -23,7 +23,7 @@ import java.util.Map;
 /**
  * Singleton factory class responsible of {@link AEProvider}s' creation
  * 
- * @version $Id$
+ *
  */
 public class AEProviderFactory {
 
diff --git a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider.java b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider.java
index 586c0cd..f3af7c4 100644
--- a/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider.java
+++ b/solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider.java
@@ -33,7 +33,7 @@ import org.slf4j.LoggerFactory;
  * injecting runtime parameters defined in the solrconfig.xml Solr configuration file and assigning
  * them as overriding parameters in the aggregate AE
  * 
- * @version $Id$
+ *
  */
 public class OverridingParamsAEProvider implements AEProvider {
 
diff --git a/solr/contrib/uima/src/test/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest.java b/solr/contrib/uima/src/test/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest.java
index 2c8a21b..b921d15 100644
--- a/solr/contrib/uima/src/test/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest.java
+++ b/solr/contrib/uima/src/test/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest.java
@@ -43,7 +43,7 @@ import org.junit.Test;
 /**
  * TestCase for {@link UIMAUpdateRequestProcessor}
  * 
- * @version $Id$
+ *
  */
 public class UIMAUpdateRequestProcessorTest extends SolrTestCaseJ4 {
 
diff --git a/solr/src/common/org/apache/solr/common/SolrDocument.java b/solr/src/common/org/apache/solr/common/SolrDocument.java
index 1864e09..54624d1 100644
--- a/solr/src/common/org/apache/solr/common/SolrDocument.java
+++ b/solr/src/common/org/apache/solr/common/SolrDocument.java
@@ -37,7 +37,7 @@ import org.apache.solr.common.util.NamedList;
  * For indexing documents, use the SolrInputDocument that contains extra information
  * for document and field boosting.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrDocument implements Map<String,Object>, Iterable<Map.Entry<String, Object>>, Serializable
diff --git a/solr/src/common/org/apache/solr/common/SolrDocumentList.java b/solr/src/common/org/apache/solr/common/SolrDocumentList.java
index a7f3d4b..b7a4629 100644
--- a/solr/src/common/org/apache/solr/common/SolrDocumentList.java
+++ b/solr/src/common/org/apache/solr/common/SolrDocumentList.java
@@ -24,7 +24,7 @@ import java.util.ArrayList;
  * Represent a list of SolrDocuments returned from a search.  This includes
  * position and offset information.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrDocumentList extends ArrayList<SolrDocument>
diff --git a/solr/src/common/org/apache/solr/common/SolrException.java b/solr/src/common/org/apache/solr/common/SolrException.java
index 8df79c4..135e5f3 100644
--- a/solr/src/common/org/apache/solr/common/SolrException.java
+++ b/solr/src/common/org/apache/solr/common/SolrException.java
@@ -26,7 +26,7 @@ import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
 /**
- * @version $Id$
+ *
  */
 public class SolrException extends RuntimeException {
 
diff --git a/solr/src/common/org/apache/solr/common/SolrInputDocument.java b/solr/src/common/org/apache/solr/common/SolrInputDocument.java
index 089f0e9..9002de2 100644
--- a/solr/src/common/org/apache/solr/common/SolrInputDocument.java
+++ b/solr/src/common/org/apache/solr/common/SolrInputDocument.java
@@ -29,7 +29,7 @@ import java.util.Set;
  * a Lucene Document.  Like the SolrDocument, the field values should
  * match those specified in schema.xml 
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrInputDocument implements Map<String,SolrInputField>, Iterable<SolrInputField>, Serializable
diff --git a/solr/src/common/org/apache/solr/common/SolrInputField.java b/solr/src/common/org/apache/solr/common/SolrInputField.java
index 5e9102c..02c87f9 100644
--- a/solr/src/common/org/apache/solr/common/SolrInputField.java
+++ b/solr/src/common/org/apache/solr/common/SolrInputField.java
@@ -23,7 +23,7 @@ import java.util.Collection;
 import java.util.Iterator;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrInputField implements Iterable<Object>, Serializable
diff --git a/solr/src/common/org/apache/solr/common/luke/FieldFlag.java b/solr/src/common/org/apache/solr/common/luke/FieldFlag.java
index 6755e13..f3d1eea 100644
--- a/solr/src/common/org/apache/solr/common/luke/FieldFlag.java
+++ b/solr/src/common/org/apache/solr/common/luke/FieldFlag.java
@@ -18,7 +18,7 @@ package org.apache.solr.common.luke;
 
 
 /**
- * @version $Id: AdminHandlers.java 608150 2008-01-02 17:15:30Z ryan $
+ *
  * @since solr 1.3
  */
 public enum FieldFlag {
diff --git a/solr/src/common/org/apache/solr/common/params/AnalysisParams.java b/solr/src/common/org/apache/solr/common/params/AnalysisParams.java
index 6e066f2..c3372b8 100644
--- a/solr/src/common/org/apache/solr/common/params/AnalysisParams.java
+++ b/solr/src/common/org/apache/solr/common/params/AnalysisParams.java
@@ -20,7 +20,7 @@ package org.apache.solr.common.params;
 /**
  * Defines the request parameters used by all analysis request handlers.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public interface AnalysisParams {
diff --git a/solr/src/common/org/apache/solr/common/params/DefaultSolrParams.java b/solr/src/common/org/apache/solr/common/params/DefaultSolrParams.java
index b71d9ca..edfad64 100644
--- a/solr/src/common/org/apache/solr/common/params/DefaultSolrParams.java
+++ b/solr/src/common/org/apache/solr/common/params/DefaultSolrParams.java
@@ -22,7 +22,7 @@ import java.util.Iterator;
 import org.apache.solr.common.util.IteratorChain;
 
 /**
- * @version $Id$
+ *
  */
 public class DefaultSolrParams extends SolrParams {
   protected final SolrParams params;
diff --git a/solr/src/common/org/apache/solr/common/params/HighlightParams.java b/solr/src/common/org/apache/solr/common/params/HighlightParams.java
index d874a2e..b8af3ad 100644
--- a/solr/src/common/org/apache/solr/common/params/HighlightParams.java
+++ b/solr/src/common/org/apache/solr/common/params/HighlightParams.java
@@ -18,7 +18,7 @@
 package org.apache.solr.common.params;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public interface HighlightParams {
diff --git a/solr/src/common/org/apache/solr/common/params/MapSolrParams.java b/solr/src/common/org/apache/solr/common/params/MapSolrParams.java
index 95c71d2..a248158 100644
--- a/solr/src/common/org/apache/solr/common/params/MapSolrParams.java
+++ b/solr/src/common/org/apache/solr/common/params/MapSolrParams.java
@@ -24,7 +24,7 @@ import java.util.Map;
 import java.io.IOException;
 
 /**
- * @version $Id$
+ *
  */
 public class MapSolrParams extends SolrParams {
   protected final Map<String,String> map;
diff --git a/solr/src/common/org/apache/solr/common/params/MultiMapSolrParams.java b/solr/src/common/org/apache/solr/common/params/MultiMapSolrParams.java
index 781c1da..68202d5 100644
--- a/solr/src/common/org/apache/solr/common/params/MultiMapSolrParams.java
+++ b/solr/src/common/org/apache/solr/common/params/MultiMapSolrParams.java
@@ -24,7 +24,7 @@ import java.util.Map;
 import java.io.IOException;
 
 /**
- * @version $Id$
+ *
  */
 public class MultiMapSolrParams extends SolrParams {
   protected final Map<String,String[]> map;
diff --git a/solr/src/common/org/apache/solr/common/params/RequiredSolrParams.java b/solr/src/common/org/apache/solr/common/params/RequiredSolrParams.java
index 7abf75b..16817c2 100755
--- a/solr/src/common/org/apache/solr/common/params/RequiredSolrParams.java
+++ b/solr/src/common/org/apache/solr/common/params/RequiredSolrParams.java
@@ -31,7 +31,7 @@ import java.util.Iterator;
  * (If you pass in <code>null</code> as the default value, you can 
  * get a null return value)
  * 
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public class RequiredSolrParams extends SolrParams {
diff --git a/solr/src/common/org/apache/solr/common/params/SolrParams.java b/solr/src/common/org/apache/solr/common/params/SolrParams.java
index b031525..ae7b291 100644
--- a/solr/src/common/org/apache/solr/common/params/SolrParams.java
+++ b/solr/src/common/org/apache/solr/common/params/SolrParams.java
@@ -29,7 +29,7 @@ import org.apache.solr.common.util.StrUtils;
 
 /**  SolrParams hold request parameters.
  *
- * @version $Id$
+ *
  */
 public abstract class SolrParams implements Serializable {
   
diff --git a/solr/src/common/org/apache/solr/common/params/UpdateParams.java b/solr/src/common/org/apache/solr/common/params/UpdateParams.java
index 915ed75..ab9d42c 100644
--- a/solr/src/common/org/apache/solr/common/params/UpdateParams.java
+++ b/solr/src/common/org/apache/solr/common/params/UpdateParams.java
@@ -20,7 +20,7 @@ package org.apache.solr.common.params;
 /**
  * A collection of standard params used by Update handlers
  *
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public interface UpdateParams 
diff --git a/solr/src/common/org/apache/solr/common/util/ConcurrentLRUCache.java b/solr/src/common/org/apache/solr/common/util/ConcurrentLRUCache.java
index e3de94f..eb9e882 100644
--- a/solr/src/common/org/apache/solr/common/util/ConcurrentLRUCache.java
+++ b/solr/src/common/org/apache/solr/common/util/ConcurrentLRUCache.java
@@ -40,7 +40,7 @@ import java.lang.ref.WeakReference;
  * cleanup does not remove enough items to reach the 'acceptableWaterMark' limit, it can
  * remove more items forcefully regardless of access order.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class ConcurrentLRUCache<K,V> {
diff --git a/solr/src/common/org/apache/solr/common/util/ContentStream.java b/solr/src/common/org/apache/solr/common/util/ContentStream.java
index 7249419..de8d48b 100755
--- a/solr/src/common/org/apache/solr/common/util/ContentStream.java
+++ b/solr/src/common/org/apache/solr/common/util/ContentStream.java
@@ -22,7 +22,7 @@ import java.io.InputStream;
 import java.io.Reader;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public interface ContentStream {
diff --git a/solr/src/common/org/apache/solr/common/util/ContentStreamBase.java b/solr/src/common/org/apache/solr/common/util/ContentStreamBase.java
index 5ba7f44..9d4861d 100755
--- a/solr/src/common/org/apache/solr/common/util/ContentStreamBase.java
+++ b/solr/src/common/org/apache/solr/common/util/ContentStreamBase.java
@@ -34,7 +34,7 @@ import java.util.Locale;
 /**
  * Three concrete implementations for ContentStream - one for File/URL/String
  * 
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public abstract class ContentStreamBase implements ContentStream
diff --git a/solr/src/common/org/apache/solr/common/util/DOMUtil.java b/solr/src/common/org/apache/solr/common/util/DOMUtil.java
index d02be75..2d937aa 100644
--- a/solr/src/common/org/apache/solr/common/util/DOMUtil.java
+++ b/solr/src/common/org/apache/solr/common/util/DOMUtil.java
@@ -25,7 +25,7 @@ import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
 
 /**
- * @version $Id$
+ *
  */
 public class DOMUtil {
 
diff --git a/solr/src/common/org/apache/solr/common/util/FileUtils.java b/solr/src/common/org/apache/solr/common/util/FileUtils.java
index 3c9e6fc..94ef65e 100644
--- a/solr/src/common/org/apache/solr/common/util/FileUtils.java
+++ b/solr/src/common/org/apache/solr/common/util/FileUtils.java
@@ -21,7 +21,7 @@ import java.io.*;
 import java.nio.channels.FileChannel;
 
 /**
- * @version $Id$
+ *
  */
 public class FileUtils {
 
diff --git a/solr/src/common/org/apache/solr/common/util/NamedList.java b/solr/src/common/org/apache/solr/common/util/NamedList.java
index 10b1996..45fa7ac 100644
--- a/solr/src/common/org/apache/solr/common/util/NamedList.java
+++ b/solr/src/common/org/apache/solr/common/util/NamedList.java
@@ -47,7 +47,7 @@ import java.io.Serializable;
  * or simply use a regular {@link Map}
  * </p>
  *
- * @version $Id$
+ *
  */
 public class NamedList<T> implements Cloneable, Serializable, Iterable<Map.Entry<String,T>> {
   protected final List<Object> nvPairs;
diff --git a/solr/src/common/org/apache/solr/common/util/RTimer.java b/solr/src/common/org/apache/solr/common/util/RTimer.java
index cd10d23..db561d9 100644
--- a/solr/src/common/org/apache/solr/common/util/RTimer.java
+++ b/solr/src/common/org/apache/solr/common/util/RTimer.java
@@ -27,7 +27,7 @@ import java.util.*;
  * started automatically when created.
  *
  * @since solr 1.3
- * @version $Id$
+ *
  */
 public class RTimer {
 
diff --git a/solr/src/common/org/apache/solr/common/util/RegexFileFilter.java b/solr/src/common/org/apache/solr/common/util/RegexFileFilter.java
index af3af18..6bba26e 100644
--- a/solr/src/common/org/apache/solr/common/util/RegexFileFilter.java
+++ b/solr/src/common/org/apache/solr/common/util/RegexFileFilter.java
@@ -23,7 +23,7 @@ import java.util.regex.*;
 
 /**
  * Accepts any file whose name matches the pattern
- * @version $Id$
+ *
  */
 public final class RegexFileFilter implements FileFilter {
 
diff --git a/solr/src/common/org/apache/solr/common/util/StrUtils.java b/solr/src/common/org/apache/solr/common/util/StrUtils.java
index fc2187a..931ef5f 100644
--- a/solr/src/common/org/apache/solr/common/util/StrUtils.java
+++ b/solr/src/common/org/apache/solr/common/util/StrUtils.java
@@ -26,7 +26,7 @@ import java.io.IOException;
 import org.apache.solr.common.SolrException;
 
 /**
- * @version $Id$
+ *
  */
 public class StrUtils {
   public static final char[] HEX_DIGITS = { '0', '1', '2', '3', '4', '5', '6',
diff --git a/solr/src/common/org/apache/solr/common/util/XML.java b/solr/src/common/org/apache/solr/common/util/XML.java
index 2183311..b8df2a6 100644
--- a/solr/src/common/org/apache/solr/common/util/XML.java
+++ b/solr/src/common/org/apache/solr/common/util/XML.java
@@ -22,7 +22,7 @@ import java.io.IOException;
 import java.util.Map;
 
 /**
- * @version $Id$
+ *
  */
 public class XML {
 
diff --git a/solr/src/java/org/apache/solr/analysis/ASCIIFoldingFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ASCIIFoldingFilterFactory.java
index 5926713..7f336cb 100644
--- a/solr/src/java/org/apache/solr/analysis/ASCIIFoldingFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ASCIIFoldingFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.TokenStream;
  *     &lt;filter class="solr.ASCIIFoldingFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class ASCIIFoldingFilterFactory extends BaseTokenFilterFactory {
   public ASCIIFoldingFilter create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/ArabicNormalizationFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ArabicNormalizationFilterFactory.java
index f777959..d731942 100644
--- a/solr/src/java/org/apache/solr/analysis/ArabicNormalizationFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ArabicNormalizationFilterFactory.java
@@ -29,7 +29,7 @@ import org.apache.lucene.analysis.ar.ArabicNormalizationFilter;
  *     &lt;filter class="solr.ArabicNormalizationFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class ArabicNormalizationFilterFactory extends BaseTokenFilterFactory{
 
diff --git a/solr/src/java/org/apache/solr/analysis/ArabicStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ArabicStemFilterFactory.java
index 0cbb097..0766f74 100644
--- a/solr/src/java/org/apache/solr/analysis/ArabicStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ArabicStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.ar.ArabicStemFilter;
  *     &lt;filter class="solr.ArabicStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class ArabicStemFilterFactory extends BaseTokenFilterFactory{
 
diff --git a/solr/src/java/org/apache/solr/analysis/BaseCharFilterFactory.java b/solr/src/java/org/apache/solr/analysis/BaseCharFilterFactory.java
index 62ff65d..a7cef83 100644
--- a/solr/src/java/org/apache/solr/analysis/BaseCharFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/BaseCharFilterFactory.java
@@ -24,7 +24,6 @@ import org.slf4j.LoggerFactory;
 
 /**
 *
-* @version $Id$
 * @since Solr 1.4
 *
 */
diff --git a/solr/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java b/solr/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java
index 90ad366..0714d46 100644
--- a/solr/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java
@@ -23,7 +23,7 @@ import org.slf4j.LoggerFactory;
 /**
  * Simple abstract implementation that handles init arg processing.
  * 
- * @version $Id$
+ *
  */
 public abstract class BaseTokenFilterFactory extends BaseTokenStreamFactory implements TokenFilterFactory {
   public static final Logger log = LoggerFactory.getLogger(BaseTokenFilterFactory.class);
diff --git a/solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java b/solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java
index 632b5dd..bc5addd 100644
--- a/solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java
@@ -38,7 +38,7 @@ import org.slf4j.LoggerFactory;
  * a factory as it implements no interface, but removes code duplication
  * in its subclasses.
  * 
- * @version $Id$
+ *
  */
 abstract class BaseTokenStreamFactory {
   /** The init args */
diff --git a/solr/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java
index 5e46663..8f0b81e 100644
--- a/solr/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java
@@ -23,7 +23,7 @@ import org.slf4j.LoggerFactory;
 /**
  * Simple abstract implementation that handles init arg processing.
  * 
- * @version $Id$
+ *
  */
 public abstract class BaseTokenizerFactory extends BaseTokenStreamFactory implements TokenizerFactory {
   public static final Logger log = LoggerFactory.getLogger(BaseTokenizerFactory.class);
diff --git a/solr/src/java/org/apache/solr/analysis/BrazilianStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/BrazilianStemFilterFactory.java
index a6af3db..e2e8e97 100644
--- a/solr/src/java/org/apache/solr/analysis/BrazilianStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/BrazilianStemFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.br.BrazilianStemFilter;
  *     &lt;filter class="solr.BrazilianStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class BrazilianStemFilterFactory extends BaseTokenFilterFactory {
   public BrazilianStemFilter create(TokenStream in) {
diff --git a/solr/src/java/org/apache/solr/analysis/BulgarianStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/BulgarianStemFilterFactory.java
index 13d3230..0386351 100644
--- a/solr/src/java/org/apache/solr/analysis/BulgarianStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/BulgarianStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.bg.BulgarianStemFilter;
  *     &lt;filter class="solr.BulgarianStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class BulgarianStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/CJKTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/CJKTokenizerFactory.java
index c3ba41b..d48bc92 100644
--- a/solr/src/java/org/apache/solr/analysis/CJKTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/CJKTokenizerFactory.java
@@ -30,7 +30,7 @@ import java.io.Reader;
  *     &lt;tokenizer class="solr.CJKTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class CJKTokenizerFactory extends BaseTokenizerFactory {
   public CJKTokenizer create(Reader in) {
diff --git a/solr/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java b/solr/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java
index 8174784..080b134 100644
--- a/solr/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java
@@ -53,7 +53,7 @@ import java.util.StringTokenizer;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class CapitalizationFilterFactory extends BaseTokenFilterFactory {
diff --git a/solr/src/java/org/apache/solr/analysis/CharFilterFactory.java b/solr/src/java/org/apache/solr/analysis/CharFilterFactory.java
index 9f6158e..29e99aa 100644
--- a/solr/src/java/org/apache/solr/analysis/CharFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/CharFilterFactory.java
@@ -23,7 +23,6 @@ import org.apache.lucene.analysis.CharStream;
 
 /**
 *
-* @version $Id$
 * @since Solr 1.4
 *
 */
diff --git a/solr/src/java/org/apache/solr/analysis/ClassicFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ClassicFilterFactory.java
index 1d8f02c..eba8e05 100644
--- a/solr/src/java/org/apache/solr/analysis/ClassicFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ClassicFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.standard.ClassicFilter;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
  *
- * @version $Id$
+ *
  */
 public class ClassicFilterFactory extends BaseTokenFilterFactory {
   public TokenFilter create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/ClassicTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/ClassicTokenizerFactory.java
index edaf6e2..3b8a54b 100644
--- a/solr/src/java/org/apache/solr/analysis/ClassicTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ClassicTokenizerFactory.java
@@ -32,7 +32,7 @@ import java.util.Map;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
  *
- * @version $Id$
+ *
  */
 
 public class ClassicTokenizerFactory extends BaseTokenizerFactory {
diff --git a/solr/src/java/org/apache/solr/analysis/CommonGramsFilterFactory.java b/solr/src/java/org/apache/solr/analysis/CommonGramsFilterFactory.java
index dede00a..5eef2dd 100644
--- a/solr/src/java/org/apache/solr/analysis/CommonGramsFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/CommonGramsFilterFactory.java
@@ -35,7 +35,7 @@ import org.apache.solr.util.plugin.ResourceLoaderAware;
  *     &lt;filter class="solr.CommonGramsFilterFactory" words="commongramsstopwords.txt" ignoreCase="false"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 
 /*
diff --git a/solr/src/java/org/apache/solr/analysis/CommonGramsQueryFilterFactory.java b/solr/src/java/org/apache/solr/analysis/CommonGramsQueryFilterFactory.java
index 8a27adc..e1bb85c 100644
--- a/solr/src/java/org/apache/solr/analysis/CommonGramsQueryFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/CommonGramsQueryFilterFactory.java
@@ -40,7 +40,7 @@ import org.apache.solr.util.plugin.ResourceLoaderAware;
  *     &lt;filter class="solr.CommonGramsQueryFilterFactory" words="commongramsquerystopwords.txt" ignoreCase="false"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class CommonGramsQueryFilterFactory extends BaseTokenFilterFactory
     implements ResourceLoaderAware {
diff --git a/solr/src/java/org/apache/solr/analysis/DelimitedPayloadTokenFilterFactory.java b/solr/src/java/org/apache/solr/analysis/DelimitedPayloadTokenFilterFactory.java
index de1ab11..c970e94 100644
--- a/solr/src/java/org/apache/solr/analysis/DelimitedPayloadTokenFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/DelimitedPayloadTokenFilterFactory.java
@@ -39,7 +39,7 @@ import java.util.Map;
  *     &lt;filter class="solr.DelimitedPayloadTokenFilterFactory" encoder="float" delimiter="|"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  * 
  */
 public class DelimitedPayloadTokenFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
diff --git a/solr/src/java/org/apache/solr/analysis/DictionaryCompoundWordTokenFilterFactory.java b/solr/src/java/org/apache/solr/analysis/DictionaryCompoundWordTokenFilterFactory.java
index e3010ea..5e79216 100644
--- a/solr/src/java/org/apache/solr/analysis/DictionaryCompoundWordTokenFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/DictionaryCompoundWordTokenFilterFactory.java
@@ -38,7 +38,7 @@ import java.io.IOException;
  *     	     minWordSize="5" minSubwordSize="2" maxSubwordSize="15" onlyLongestMatch="true"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class DictionaryCompoundWordTokenFilterFactory extends BaseTokenFilterFactory  implements ResourceLoaderAware {
   private CharArraySet dictionary;
diff --git a/solr/src/java/org/apache/solr/analysis/DoubleMetaphoneFilterFactory.java b/solr/src/java/org/apache/solr/analysis/DoubleMetaphoneFilterFactory.java
index 2089f48..5d87531 100644
--- a/solr/src/java/org/apache/solr/analysis/DoubleMetaphoneFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/DoubleMetaphoneFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.phonetic.DoubleMetaphoneFilter;
  *     &lt;filter class="solr.DoubleMetaphoneFilterFactory" inject="true" maxCodeLength="4"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class DoubleMetaphoneFilterFactory extends BaseTokenFilterFactory 
 {
diff --git a/solr/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java b/solr/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java
index c7f0779..623f66a 100644
--- a/solr/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter;
  *     &lt;filter class="solr.EdgeNGramFilterFactory" side="front" minGramSize="1" maxGramSize="1"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class EdgeNGramFilterFactory extends BaseTokenFilterFactory {
   private int maxGramSize = 0;
diff --git a/solr/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java
index 9945d5f..f246443 100755
--- a/solr/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java
@@ -30,7 +30,7 @@ import java.util.Map;
  *     &lt;tokenizer class="solr.EdgeNGramTokenizerFactory" side="front" minGramSize="1" maxGramSize="1"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class EdgeNGramTokenizerFactory extends BaseTokenizerFactory {
     private int maxGramSize = 0;
diff --git a/solr/src/java/org/apache/solr/analysis/ElisionFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ElisionFilterFactory.java
index 0277668..e1a536c 100644
--- a/solr/src/java/org/apache/solr/analysis/ElisionFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ElisionFilterFactory.java
@@ -37,7 +37,7 @@ import org.apache.lucene.analysis.TokenStream;
  *     &lt;filter class="solr.ElisionFilterFactory" articles="stopwordarticles.txt"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class ElisionFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
 
diff --git a/solr/src/java/org/apache/solr/analysis/EnglishMinimalStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/EnglishMinimalStemFilterFactory.java
index 5d2292e..98cdede 100644
--- a/solr/src/java/org/apache/solr/analysis/EnglishMinimalStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/EnglishMinimalStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.en.EnglishMinimalStemFilter;
  *     &lt;filter class="solr.EnglishMinimalStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class EnglishMinimalStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/EnglishPossessiveFilterFactory.java b/solr/src/java/org/apache/solr/analysis/EnglishPossessiveFilterFactory.java
index 30b9ea5..110dd6e 100644
--- a/solr/src/java/org/apache/solr/analysis/EnglishPossessiveFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/EnglishPossessiveFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.en.EnglishPossessiveFilter;
  *     &lt;filter class="solr.EnglishPossessiveFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class EnglishPossessiveFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/FinnishLightStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/FinnishLightStemFilterFactory.java
index 6d4bf82..308fe12 100644
--- a/solr/src/java/org/apache/solr/analysis/FinnishLightStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/FinnishLightStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.fi.FinnishLightStemFilter;
  *     &lt;filter class="solr.FinnishLightStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class FinnishLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/FrenchLightStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/FrenchLightStemFilterFactory.java
index e032546..ef74a66 100644
--- a/solr/src/java/org/apache/solr/analysis/FrenchLightStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/FrenchLightStemFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.fr.FrenchLightStemFilter;
  *     &lt;filter class="solr.FrenchLightStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class FrenchLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/FrenchMinimalStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/FrenchMinimalStemFilterFactory.java
index 753984f..98bce9a 100644
--- a/solr/src/java/org/apache/solr/analysis/FrenchMinimalStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/FrenchMinimalStemFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.fr.FrenchMinimalStemFilter;
  *     &lt;filter class="solr.FrenchMinimalStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class FrenchMinimalStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/GalicianStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/GalicianStemFilterFactory.java
index bb32d50..e6cf771 100644
--- a/solr/src/java/org/apache/solr/analysis/GalicianStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/GalicianStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.gl.GalicianStemFilter;
  *     &lt;filter class="solr.GalicianStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class GalicianStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/GermanLightStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/GermanLightStemFilterFactory.java
index 601d12e..111fff4 100644
--- a/solr/src/java/org/apache/solr/analysis/GermanLightStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/GermanLightStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.de.GermanLightStemFilter;
  *     &lt;filter class="solr.GermanLightStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class GermanLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/GermanMinimalStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/GermanMinimalStemFilterFactory.java
index ac14587..2ccba34 100644
--- a/solr/src/java/org/apache/solr/analysis/GermanMinimalStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/GermanMinimalStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.de.GermanMinimalStemFilter;
  *     &lt;filter class="solr.GermanMinimalStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class GermanMinimalStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/GermanStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/GermanStemFilterFactory.java
index c2f3d03..5e9088c 100644
--- a/solr/src/java/org/apache/solr/analysis/GermanStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/GermanStemFilterFactory.java
@@ -32,7 +32,7 @@ import org.apache.lucene.analysis.TokenStream;
  *     &lt;filter class="solr.GermanStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class GermanStemFilterFactory extends BaseTokenFilterFactory {
   public GermanStemFilter create(TokenStream in) {
diff --git a/solr/src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory.java b/solr/src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory.java
index ecd02e2..2742260 100644
--- a/solr/src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory.java
@@ -35,7 +35,7 @@ import org.apache.solr.common.SolrException.ErrorCode;
  *     &lt;filter class="solr.GreekLowerCaseFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class GreekLowerCaseFilterFactory extends BaseTokenFilterFactory 
 {
diff --git a/solr/src/java/org/apache/solr/analysis/GreekStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/GreekStemFilterFactory.java
index 0a12b04..90720da 100644
--- a/solr/src/java/org/apache/solr/analysis/GreekStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/GreekStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.el.GreekStemFilter;
  *     &lt;filter class="solr.GreekStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$  
+ *
  */
 public class GreekStemFilterFactory extends BaseTokenFilterFactory {
 
diff --git a/solr/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java b/solr/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java
index 096a07b..c318a78 100644
--- a/solr/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.charfilter.HTMLStripCharFilter;
  *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre
- * @version $Id$  
+ *
  */
  public class HTMLStripCharFilterFactory extends BaseCharFilterFactory {
 
diff --git a/solr/src/java/org/apache/solr/analysis/HindiNormalizationFilterFactory.java b/solr/src/java/org/apache/solr/analysis/HindiNormalizationFilterFactory.java
index e4137b8..64fffcb 100644
--- a/solr/src/java/org/apache/solr/analysis/HindiNormalizationFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/HindiNormalizationFilterFactory.java
@@ -29,7 +29,7 @@ import org.apache.lucene.analysis.hi.HindiNormalizationFilter;
  *     &lt;filter class="solr.HindiNormalizationFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$  
+ *
  */
 public class HindiNormalizationFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/HindiStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/HindiStemFilterFactory.java
index 7dd3544..657f04d 100644
--- a/solr/src/java/org/apache/solr/analysis/HindiStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/HindiStemFilterFactory.java
@@ -29,7 +29,7 @@ import org.apache.lucene.analysis.hi.HindiStemFilter;
  *     &lt;filter class="solr.HindiStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$   
+ *
  */
 public class HindiStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/HungarianLightStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/HungarianLightStemFilterFactory.java
index 0b06fa9..c635f42 100644
--- a/solr/src/java/org/apache/solr/analysis/HungarianLightStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/HungarianLightStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.hu.HungarianLightStemFilter;
  *     &lt;filter class="solr.HungarianLightStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class HungarianLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java b/solr/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java
index 7e68d4e..17a4ad5 100755
--- a/solr/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.solr.analysis.BaseTokenFilterFactory;
  *     &lt;filter class="solr.HyphenatedWordsFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class HyphenatedWordsFilterFactory extends BaseTokenFilterFactory {
 	public HyphenatedWordsFilter create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory.java b/solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory.java
index 7fca6f2..274ac3b 100644
--- a/solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory.java
@@ -56,7 +56,7 @@ import org.xml.sax.InputSource;
  *     	     dictionary="dictionary.txt" minWordSize="5" minSubwordSize="2" maxSubwordSize="15" onlyLongestMatch="false"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  * @see HyphenationCompoundWordTokenFilter
  */
 public class HyphenationCompoundWordTokenFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
diff --git a/solr/src/java/org/apache/solr/analysis/IndicNormalizationFilterFactory.java b/solr/src/java/org/apache/solr/analysis/IndicNormalizationFilterFactory.java
index 588946c..ac0d1db 100644
--- a/solr/src/java/org/apache/solr/analysis/IndicNormalizationFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/IndicNormalizationFilterFactory.java
@@ -29,7 +29,7 @@ import org.apache.lucene.analysis.in.IndicNormalizationFilter;
  *     &lt;filter class="solr.IndicNormalizationFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$   
+ *
  */
 public class IndicNormalizationFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/IndonesianStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/IndonesianStemFilterFactory.java
index bf3497a..c2e2bc9 100644
--- a/solr/src/java/org/apache/solr/analysis/IndonesianStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/IndonesianStemFilterFactory.java
@@ -32,7 +32,7 @@ import org.apache.lucene.analysis.id.IndonesianStemFilter;
  *     &lt;filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$  
+ *
  */
 public class IndonesianStemFilterFactory extends BaseTokenFilterFactory {
   private boolean stemDerivational = true;
diff --git a/solr/src/java/org/apache/solr/analysis/ItalianLightStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ItalianLightStemFilterFactory.java
index 1ca00e3..c0d9ede 100644
--- a/solr/src/java/org/apache/solr/analysis/ItalianLightStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ItalianLightStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.it.ItalianLightStemFilter;
  *     &lt;filter class="solr.ItalianLightStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class ItalianLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java b/solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java
index ca38a76..e394dcf 100644
--- a/solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java
@@ -36,7 +36,7 @@ import java.io.IOException;
  *     &lt;filter class="solr.KeepWordFilterFactory" words="keepwords.txt" ignoreCase="false" enablePositionIncrements="false"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class KeepWordFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
 
diff --git a/solr/src/java/org/apache/solr/analysis/KeywordMarkerFilterFactory.java b/solr/src/java/org/apache/solr/analysis/KeywordMarkerFilterFactory.java
index 0c47b63..bd96d6c 100644
--- a/solr/src/java/org/apache/solr/analysis/KeywordMarkerFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/KeywordMarkerFilterFactory.java
@@ -34,7 +34,7 @@ import org.apache.solr.util.plugin.ResourceLoaderAware;
  *     &lt;filter class="solr.KeywordMarkerFilterFactory" protected="protectedkeyword.txt" ignoreCase="false"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class KeywordMarkerFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
   public static final String PROTECTED_TOKENS = "protected";
diff --git a/solr/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java
index 7a6d324..8f70f9e 100644
--- a/solr/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java
@@ -29,7 +29,7 @@ import java.io.Reader;
  *     &lt;tokenizer class="solr.KeywordTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class KeywordTokenizerFactory extends BaseTokenizerFactory {
   public KeywordTokenizer create(Reader input) {
diff --git a/solr/src/java/org/apache/solr/analysis/LengthFilterFactory.java b/solr/src/java/org/apache/solr/analysis/LengthFilterFactory.java
index 97d7703..dc28d67 100644
--- a/solr/src/java/org/apache/solr/analysis/LengthFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/LengthFilterFactory.java
@@ -31,7 +31,7 @@ import java.util.Map;
  *     &lt;filter class="solr.LengthFilterFactory" min="0" max="1" enablePositionIncrements="false"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class LengthFilterFactory extends BaseTokenFilterFactory {
   int min,max;
diff --git a/solr/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java
index 0c04c05..e067d53 100644
--- a/solr/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java
@@ -30,7 +30,7 @@ import java.util.Map;
  *     &lt;tokenizer class="solr.LetterTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class LetterTokenizerFactory extends BaseTokenizerFactory {
 
diff --git a/solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java b/solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java
index 12da7f3..b4c0bce 100644
--- a/solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilter;
  *     &lt;filter class="solr.LimitTokenCountFilterFactory" maxTokenCount="10"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class LimitTokenCountFilterFactory extends BaseTokenFilterFactory {
 
diff --git a/solr/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java b/solr/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java
index b094ecc..422ba68 100644
--- a/solr/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.core.LowerCaseFilter;
  *     &lt;filter class="solr.LowerCaseFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class LowerCaseFilterFactory extends BaseTokenFilterFactory {
   @Override
diff --git a/solr/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java
index 5bd59db..e2980e7 100644
--- a/solr/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java
@@ -30,7 +30,7 @@ import java.util.Map;
  *     &lt;tokenizer class="solr.LowerCaseTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class LowerCaseTokenizerFactory extends BaseTokenizerFactory {
   @Override
diff --git a/solr/src/java/org/apache/solr/analysis/MappingCharFilterFactory.java b/solr/src/java/org/apache/solr/analysis/MappingCharFilterFactory.java
index a401c31..aaba043 100644
--- a/solr/src/java/org/apache/solr/analysis/MappingCharFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/MappingCharFilterFactory.java
@@ -41,7 +41,7 @@ import org.apache.solr.util.plugin.ResourceLoaderAware;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
  *
- * @version $Id$
+ *
  * @since Solr 1.4
  *
  */
diff --git a/solr/src/java/org/apache/solr/analysis/NGramFilterFactory.java b/solr/src/java/org/apache/solr/analysis/NGramFilterFactory.java
index 20849c9..6dc5eae 100644
--- a/solr/src/java/org/apache/solr/analysis/NGramFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/NGramFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.ngram.NGramTokenFilter;
  *     &lt;filter class="solr.NGramFilterFactory" minGramSize="1" maxGramSize="2"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class NGramFilterFactory extends BaseTokenFilterFactory {
   private int maxGramSize = 0;
diff --git a/solr/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java
index a9525b2..1b77523 100755
--- a/solr/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java
@@ -31,7 +31,7 @@ import java.util.Map;
  *     &lt;tokenizer class="solr.NGramTokenizerFactory" minGramSize="1" maxGramSize="2"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class NGramTokenizerFactory extends BaseTokenizerFactory {
     private int maxGramSize = 0;
diff --git a/solr/src/java/org/apache/solr/analysis/NumericPayloadTokenFilterFactory.java b/solr/src/java/org/apache/solr/analysis/NumericPayloadTokenFilterFactory.java
index 2406da5..21922e1 100644
--- a/solr/src/java/org/apache/solr/analysis/NumericPayloadTokenFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/NumericPayloadTokenFilterFactory.java
@@ -32,7 +32,7 @@ import java.util.Map;
  *     &lt;filter class="solr.NumericPayloadTokenFilterFactory" payload="24" typeMatch="word"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$  
+ *
  */
 public class NumericPayloadTokenFilterFactory extends BaseTokenFilterFactory {
   private float payload;
diff --git a/solr/src/java/org/apache/solr/analysis/PathHierarchyTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/PathHierarchyTokenizerFactory.java
index 35ad58d..2a4b524 100644
--- a/solr/src/java/org/apache/solr/analysis/PathHierarchyTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PathHierarchyTokenizerFactory.java
@@ -32,7 +32,7 @@ import org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer;
  *     &lt;tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="\" replace="/"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class PathHierarchyTokenizerFactory extends BaseTokenizerFactory {
   
diff --git a/solr/src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory.java
index aff0b98..81c77a6 100644
--- a/solr/src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory.java
@@ -35,7 +35,7 @@ import org.apache.lucene.analysis.pattern.PatternReplaceCharFilter;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
  * 
- * @version $Id$
+ *
  * @since Solr 3.1
  */
 public class PatternReplaceCharFilterFactory extends BaseCharFilterFactory {
diff --git a/solr/src/java/org/apache/solr/analysis/PatternReplaceFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PatternReplaceFilterFactory.java
index 039408e..55d08f7 100644
--- a/solr/src/java/org/apache/solr/analysis/PatternReplaceFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PatternReplaceFilterFactory.java
@@ -33,7 +33,7 @@ import java.util.regex.PatternSyntaxException;
  *             replace="all"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  * @see PatternReplaceFilter
  */
 public class PatternReplaceFilterFactory extends BaseTokenFilterFactory {
diff --git a/solr/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java
index 2e748f5..8996bb4 100644
--- a/solr/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java
@@ -62,7 +62,7 @@ import org.apache.solr.common.SolrException;
  * 
  * @see PatternTokenizer
  * @since solr1.2
- * @version $Id$
+ *
  */
 public class PatternTokenizerFactory extends BaseTokenizerFactory 
 {
diff --git a/solr/src/java/org/apache/solr/analysis/PersianCharFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PersianCharFilterFactory.java
index 8afd32c..f860c1d 100644
--- a/solr/src/java/org/apache/solr/analysis/PersianCharFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PersianCharFilterFactory.java
@@ -29,7 +29,7 @@ import org.apache.lucene.analysis.fa.PersianCharFilter;
  *     &lt;tokenizer class="solr.StandardTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class PersianCharFilterFactory extends BaseCharFilterFactory {
 
diff --git a/solr/src/java/org/apache/solr/analysis/PersianNormalizationFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PersianNormalizationFilterFactory.java
index d6e9733..970d903 100644
--- a/solr/src/java/org/apache/solr/analysis/PersianNormalizationFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PersianNormalizationFilterFactory.java
@@ -32,7 +32,7 @@ import org.apache.lucene.analysis.TokenStream;
  *     &lt;filter class="solr.PersianNormalizationFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class PersianNormalizationFilterFactory extends BaseTokenFilterFactory {
   public PersianNormalizationFilter create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/PhoneticFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PhoneticFilterFactory.java
index 6653ee4..624fbbf 100644
--- a/solr/src/java/org/apache/solr/analysis/PhoneticFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PhoneticFilterFactory.java
@@ -52,7 +52,7 @@ import org.apache.solr.common.SolrException;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
  * 
- * @version $Id$
+ *
  * @see PhoneticFilter
  */
 public class PhoneticFilterFactory extends BaseTokenFilterFactory 
diff --git a/solr/src/java/org/apache/solr/analysis/PorterStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PorterStemFilterFactory.java
index 17e9d6c..64f0afb 100644
--- a/solr/src/java/org/apache/solr/analysis/PorterStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PorterStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.en.PorterStemFilter;
  *     &lt;filter class="solr.PorterStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class PorterStemFilterFactory extends BaseTokenFilterFactory {
   public PorterStemFilter create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/PortugueseLightStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PortugueseLightStemFilterFactory.java
index 1e91e88..3da115a 100644
--- a/solr/src/java/org/apache/solr/analysis/PortugueseLightStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PortugueseLightStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.pt.PortugueseLightStemFilter;
  *     &lt;filter class="solr.PortugueseLightStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class PortugueseLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/PortugueseMinimalStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PortugueseMinimalStemFilterFactory.java
index 32d67fa..21aad29 100644
--- a/solr/src/java/org/apache/solr/analysis/PortugueseMinimalStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PortugueseMinimalStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.pt.PortugueseMinimalStemFilter;
  *     &lt;filter class="solr.PortugueseMinimalStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class PortugueseMinimalStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/PortugueseStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PortugueseStemFilterFactory.java
index 2c264a1..df0477b 100644
--- a/solr/src/java/org/apache/solr/analysis/PortugueseStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PortugueseStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.pt.PortugueseStemFilter;
  *     &lt;filter class="solr.PortugueseStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class PortugueseStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/PositionFilterFactory.java b/solr/src/java/org/apache/solr/analysis/PositionFilterFactory.java
index 7f6a01f..f304809 100644
--- a/solr/src/java/org/apache/solr/analysis/PositionFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/PositionFilterFactory.java
@@ -34,7 +34,7 @@ import java.util.Map;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
  *
- * @version $Id$
+ *
  * @see org.apache.lucene.analysis.position.PositionFilter
  * @since solr 1.4
  */
diff --git a/solr/src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilterFactory.java b/solr/src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilterFactory.java
index 4b14f33..e26ae5f 100644
--- a/solr/src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilterFactory.java
@@ -29,7 +29,7 @@ import org.apache.lucene.analysis.miscellaneous.RemoveDuplicatesTokenFilter;
  *     &lt;filter class="solr.RemoveDuplicatesTokenFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class RemoveDuplicatesTokenFilterFactory extends BaseTokenFilterFactory {
   public RemoveDuplicatesTokenFilter create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/ReverseStringFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ReverseStringFilterFactory.java
index 103a694..65d8f54 100644
--- a/solr/src/java/org/apache/solr/analysis/ReverseStringFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ReverseStringFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.reverse.ReverseStringFilter;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class ReverseStringFilterFactory extends BaseTokenFilterFactory {
diff --git a/solr/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory.java
index b4c1b7b..22cba33 100644
--- a/solr/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ReversedWildcardFilterFactory.java
@@ -59,7 +59,7 @@ import org.apache.lucene.analysis.reverse.ReverseStringFilter;
  *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class ReversedWildcardFilterFactory extends BaseTokenFilterFactory {
   
diff --git a/solr/src/java/org/apache/solr/analysis/RussianLightStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/RussianLightStemFilterFactory.java
index e330759..6a11a3c 100644
--- a/solr/src/java/org/apache/solr/analysis/RussianLightStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/RussianLightStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.ru.RussianLightStemFilter;
  *     &lt;filter class="solr.RussianLightStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class RussianLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/ShingleFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ShingleFilterFactory.java
index 913a488..de82dfd 100644
--- a/solr/src/java/org/apache/solr/analysis/ShingleFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ShingleFilterFactory.java
@@ -36,7 +36,7 @@ import java.util.Map;
  *             outputUnigrams="true" outputUnigramsIfNoShingles="false" tokenSeparator=" "/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class ShingleFilterFactory extends BaseTokenFilterFactory {
   private int minShingleSize;
diff --git a/solr/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory.java b/solr/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory.java
index 2c1f8fb..d9dd65b 100644
--- a/solr/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory.java
@@ -41,7 +41,7 @@ import org.tartarus.snowball.SnowballProgram;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
  * 
- * @version $Id$
+ *
  */
 public class SnowballPorterFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
   public static final String PROTECTED_TOKENS = "protected";
diff --git a/solr/src/java/org/apache/solr/analysis/SolrAnalyzer.java b/solr/src/java/org/apache/solr/analysis/SolrAnalyzer.java
index b0b03cc..aad0807 100644
--- a/solr/src/java/org/apache/solr/analysis/SolrAnalyzer.java
+++ b/solr/src/java/org/apache/solr/analysis/SolrAnalyzer.java
@@ -23,7 +23,7 @@ import java.io.Reader;
 import java.io.IOException;
 
 /**
- * @version $Id$
+ *
  */
 public abstract class SolrAnalyzer extends Analyzer {
   int posIncGap=0;
diff --git a/solr/src/java/org/apache/solr/analysis/SpanishLightStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/SpanishLightStemFilterFactory.java
index 107679f..9e706cd 100644
--- a/solr/src/java/org/apache/solr/analysis/SpanishLightStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/SpanishLightStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.es.SpanishLightStemFilter;
  *     &lt;filter class="solr.SpanishLightStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class SpanishLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/StandardFilterFactory.java b/solr/src/java/org/apache/solr/analysis/StandardFilterFactory.java
index 91daca1..9c52108 100644
--- a/solr/src/java/org/apache/solr/analysis/StandardFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/StandardFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.standard.StandardFilter;
  *     &lt;filter class="solr.StandardFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class StandardFilterFactory extends BaseTokenFilterFactory {
   @Override
diff --git a/solr/src/java/org/apache/solr/analysis/StandardTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/StandardTokenizerFactory.java
index 32087df..14a0900 100644
--- a/solr/src/java/org/apache/solr/analysis/StandardTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/StandardTokenizerFactory.java
@@ -31,7 +31,7 @@ import java.util.Map;
  *     &lt;tokenizer class="solr.StandardTokenizerFactory" maxTokenLength="255"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 
 public class StandardTokenizerFactory extends BaseTokenizerFactory {
diff --git a/solr/src/java/org/apache/solr/analysis/StemmerOverrideFilterFactory.java b/solr/src/java/org/apache/solr/analysis/StemmerOverrideFilterFactory.java
index 0ac0db2..976113f 100644
--- a/solr/src/java/org/apache/solr/analysis/StemmerOverrideFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/StemmerOverrideFilterFactory.java
@@ -36,7 +36,7 @@ import org.apache.solr.util.plugin.ResourceLoaderAware;
  *     &lt;filter class="solr.StemmerOverrideFilterFactory" dictionary="dictionary.txt" ignoreCase="false"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id
+ *
  */
 public class StemmerOverrideFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
   private CharArrayMap<String> dictionary = null;
diff --git a/solr/src/java/org/apache/solr/analysis/StopFilterFactory.java b/solr/src/java/org/apache/solr/analysis/StopFilterFactory.java
index 67fa11c..42256d6 100644
--- a/solr/src/java/org/apache/solr/analysis/StopFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/StopFilterFactory.java
@@ -38,7 +38,7 @@ import java.io.IOException;
  *             words="stopwords.txt" enablePositionIncrements="true"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class StopFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
 
diff --git a/solr/src/java/org/apache/solr/analysis/SwedishLightStemFilterFactory.java b/solr/src/java/org/apache/solr/analysis/SwedishLightStemFilterFactory.java
index 429f7ac..2e208a4 100644
--- a/solr/src/java/org/apache/solr/analysis/SwedishLightStemFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/SwedishLightStemFilterFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.sv.SwedishLightStemFilter;
  *     &lt;filter class="solr.SwedishLightStemFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$ 
+ *
  */
 public class SwedishLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java b/solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
index 162913e..3b8e480 100644
--- a/solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
@@ -44,7 +44,7 @@ import java.util.Map;
  *             expand="true" tokenizerFactory="solr.WhitespaceTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  */
 public class SynonymFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
 
diff --git a/solr/src/java/org/apache/solr/analysis/ThaiWordFilterFactory.java b/solr/src/java/org/apache/solr/analysis/ThaiWordFilterFactory.java
index 8ed23ff..3f4c366 100644
--- a/solr/src/java/org/apache/solr/analysis/ThaiWordFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/ThaiWordFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.TokenStream;
  *     &lt;filter class="solr.ThaiWordFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$ 
+ *
  */
 public class ThaiWordFilterFactory extends BaseTokenFilterFactory {
   public ThaiWordFilter create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/TokenFilterFactory.java b/solr/src/java/org/apache/solr/analysis/TokenFilterFactory.java
index 937e19f..1ae90e8 100644
--- a/solr/src/java/org/apache/solr/analysis/TokenFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/TokenFilterFactory.java
@@ -44,7 +44,7 @@ import java.util.Map;
  * A single instance of any registered TokenFilterFactory is created
  * via the default constructor and is reused for each FieldType.
  * </p>
- * @version $Id$
+ *
  */
 
 public interface TokenFilterFactory {
diff --git a/solr/src/java/org/apache/solr/analysis/TokenOffsetPayloadTokenFilterFactory.java b/solr/src/java/org/apache/solr/analysis/TokenOffsetPayloadTokenFilterFactory.java
index 981aab4..f13dcde 100644
--- a/solr/src/java/org/apache/solr/analysis/TokenOffsetPayloadTokenFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/TokenOffsetPayloadTokenFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.TokenStream;
  *     &lt;filter class="solr.TokenOffsetPayloadTokenFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$ 
+ *
  */
 public class TokenOffsetPayloadTokenFilterFactory extends BaseTokenFilterFactory {
   public TokenOffsetPayloadTokenFilter create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/TokenizerChain.java b/solr/src/java/org/apache/solr/analysis/TokenizerChain.java
index 3fd4884..cf04a82 100644
--- a/solr/src/java/org/apache/solr/analysis/TokenizerChain.java
+++ b/solr/src/java/org/apache/solr/analysis/TokenizerChain.java
@@ -25,7 +25,7 @@ import org.apache.lucene.analysis.Tokenizer;
 import java.io.Reader;
 
 /**
- * @version $Id$
+ *
  */
 
 //
diff --git a/solr/src/java/org/apache/solr/analysis/TokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/TokenizerFactory.java
index fe24856..a46a802 100644
--- a/solr/src/java/org/apache/solr/analysis/TokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/TokenizerFactory.java
@@ -44,7 +44,7 @@ import org.apache.lucene.analysis.*;
  * A single instance of any registered TokenizerFactory is created
  * via the default constructor and is reused for each FieldType.
  * </p>
- * @version $Id$
+ *
  */
 public interface TokenizerFactory {
   /** <code>init</code> will be called just once, immediately after creation.
diff --git a/solr/src/java/org/apache/solr/analysis/TrieTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/TrieTokenizerFactory.java
index 24b8de7..bf2a3ed 100644
--- a/solr/src/java/org/apache/solr/analysis/TrieTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/TrieTokenizerFactory.java
@@ -33,7 +33,7 @@ import java.io.Reader;
  * <p/>
  * Refer to {@link org.apache.lucene.search.NumericRangeQuery} for more details.
  *
- * @version $Id$
+ *
  * @see org.apache.lucene.search.NumericRangeQuery
  * @see org.apache.solr.schema.TrieField
  * @since solr 1.4
diff --git a/solr/src/java/org/apache/solr/analysis/TrimFilterFactory.java b/solr/src/java/org/apache/solr/analysis/TrimFilterFactory.java
index 31f85c3..2188785 100644
--- a/solr/src/java/org/apache/solr/analysis/TrimFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/TrimFilterFactory.java
@@ -32,7 +32,7 @@ import org.apache.solr.common.SolrException;
  *     &lt;filter class="solr.TrimFilterFactory" updateOffsets="false"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre>
- * @version $Id$
+ *
  * @see TrimFilter
  */
 public class TrimFilterFactory extends BaseTokenFilterFactory {
diff --git a/solr/src/java/org/apache/solr/analysis/TurkishLowerCaseFilterFactory.java b/solr/src/java/org/apache/solr/analysis/TurkishLowerCaseFilterFactory.java
index 660a278..153ad02 100644
--- a/solr/src/java/org/apache/solr/analysis/TurkishLowerCaseFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/TurkishLowerCaseFilterFactory.java
@@ -29,7 +29,7 @@ import org.apache.lucene.analysis.tr.TurkishLowerCaseFilter;
  *     &lt;filter class="solr.TurkishLowerCaseFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class TurkishLowerCaseFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/TypeAsPayloadTokenFilterFactory.java b/solr/src/java/org/apache/solr/analysis/TypeAsPayloadTokenFilterFactory.java
index c34c40f..b06a9a1 100644
--- a/solr/src/java/org/apache/solr/analysis/TypeAsPayloadTokenFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/TypeAsPayloadTokenFilterFactory.java
@@ -31,7 +31,7 @@ import org.apache.lucene.analysis.TokenStream;
  *     &lt;filter class="solr.TypeAsPayloadTokenFilterFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class TypeAsPayloadTokenFilterFactory extends BaseTokenFilterFactory {
   public TypeAsPayloadTokenFilter create(TokenStream input) {
diff --git a/solr/src/java/org/apache/solr/analysis/UAX29URLEmailTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/UAX29URLEmailTokenizerFactory.java
index 3b071c7..e3dd931 100644
--- a/solr/src/java/org/apache/solr/analysis/UAX29URLEmailTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/UAX29URLEmailTokenizerFactory.java
@@ -34,7 +34,7 @@ import java.util.Map;
  *     &lt;tokenizer class="solr.UAX29URLEmailTokenizerFactory" maxTokenLength="255"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  * 
  */
 
diff --git a/solr/src/java/org/apache/solr/analysis/WhitespaceTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/WhitespaceTokenizerFactory.java
index c94b12a..0946e2a 100644
--- a/solr/src/java/org/apache/solr/analysis/WhitespaceTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/WhitespaceTokenizerFactory.java
@@ -30,7 +30,7 @@ import java.util.Map;
  *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class WhitespaceTokenizerFactory extends BaseTokenizerFactory {
   @Override
diff --git a/solr/src/java/org/apache/solr/analysis/WikipediaTokenizerFactory.java b/solr/src/java/org/apache/solr/analysis/WikipediaTokenizerFactory.java
index 54a944f..49df72a 100644
--- a/solr/src/java/org/apache/solr/analysis/WikipediaTokenizerFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/WikipediaTokenizerFactory.java
@@ -30,7 +30,7 @@ import org.apache.lucene.analysis.wikipedia.WikipediaTokenizer;
  *     &lt;tokenizer class="solr.WikipediaTokenizerFactory"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class WikipediaTokenizerFactory extends BaseTokenizerFactory {
   // TODO: add support for WikipediaTokenizer's advanced options.
diff --git a/solr/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory.java b/solr/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory.java
index 093a5df..f9737af 100644
--- a/solr/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory.java
@@ -48,7 +48,7 @@ import java.io.IOException;
  *             generateWordParts="1" generateNumberParts="1" stemEnglishPossessive="1"/&gt;
  *   &lt;/analyzer&gt;
  * &lt;/fieldType&gt;</pre> 
- * @version $Id$
+ *
  */
 public class WordDelimiterFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
   public static final String PROTECTED_TOKENS = "protected";
diff --git a/solr/src/java/org/apache/solr/core/Config.java b/solr/src/java/org/apache/solr/core/Config.java
index f939a0a..60440e3 100644
--- a/solr/src/java/org/apache/solr/core/Config.java
+++ b/solr/src/java/org/apache/solr/core/Config.java
@@ -46,7 +46,7 @@ import java.util.Locale;
 import java.util.concurrent.atomic.AtomicBoolean;
 
 /**
- * @version $Id$
+ *
  */
 public class Config {
   public static final Logger log = LoggerFactory.getLogger(Config.class);
diff --git a/solr/src/java/org/apache/solr/core/CoreContainer.java b/solr/src/java/org/apache/solr/core/CoreContainer.java
index ef8dc62..513ae8e 100644
--- a/solr/src/java/org/apache/solr/core/CoreContainer.java
+++ b/solr/src/java/org/apache/solr/core/CoreContainer.java
@@ -54,7 +54,7 @@ import org.xml.sax.InputSource;
 
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class CoreContainer 
diff --git a/solr/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java b/solr/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java
index f85c37f..f6f26c3 100644
--- a/solr/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java
+++ b/solr/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java
@@ -32,7 +32,7 @@ import java.util.concurrent.atomic.AtomicInteger;
  * commit points for certain amounts of time to support features such as index replication
  * or snapshooting directly out of a live index directory.
  *
- * @version $Id$
+ *
  * @see org.apache.lucene.index.IndexDeletionPolicy
  */
 public class IndexDeletionPolicyWrapper implements IndexDeletionPolicy {
diff --git a/solr/src/java/org/apache/solr/core/JmxMonitoredMap.java b/solr/src/java/org/apache/solr/core/JmxMonitoredMap.java
index 15c956f..823dd9c 100644
--- a/solr/src/java/org/apache/solr/core/JmxMonitoredMap.java
+++ b/solr/src/java/org/apache/solr/core/JmxMonitoredMap.java
@@ -40,7 +40,7 @@ import org.slf4j.LoggerFactory;
  * Please see http://wiki.apache.org/solr/SolrJmx for instructions on usage and configuration
  * </p>
  *
- * @version $Id$
+ *
  * @see org.apache.solr.core.SolrConfig.JmxConfiguration
  * @since solr 1.3
  */
diff --git a/solr/src/java/org/apache/solr/core/PluginInfo.java b/solr/src/java/org/apache/solr/core/PluginInfo.java
index be97adf..35611b2 100644
--- a/solr/src/java/org/apache/solr/core/PluginInfo.java
+++ b/solr/src/java/org/apache/solr/core/PluginInfo.java
@@ -27,7 +27,7 @@ import static java.util.Collections.unmodifiableMap;
 
 /**
  * An Object which represents a Plugin of any type 
- * @version $Id$
+ *
  */
 public class PluginInfo {
   public final String name, className, type;
diff --git a/solr/src/java/org/apache/solr/core/QuerySenderListener.java b/solr/src/java/org/apache/solr/core/QuerySenderListener.java
index d5485ce..12b388d 100644
--- a/solr/src/java/org/apache/solr/core/QuerySenderListener.java
+++ b/solr/src/java/org/apache/solr/core/QuerySenderListener.java
@@ -30,7 +30,7 @@ import org.apache.solr.response.SolrQueryResponse;
 import java.util.List;
 
 /**
- * @version $Id$
+ *
  */
 public class QuerySenderListener extends AbstractSolrEventListener {
   public QuerySenderListener(SolrCore core) {
diff --git a/solr/src/java/org/apache/solr/core/RequestHandlers.java b/solr/src/java/org/apache/solr/core/RequestHandlers.java
index 9541dc3..80c7c04 100644
--- a/solr/src/java/org/apache/solr/core/RequestHandlers.java
+++ b/solr/src/java/org/apache/solr/core/RequestHandlers.java
@@ -209,7 +209,6 @@ final class RequestHandlers {
    * This is a private class - if there is a real need for it to be public, it could
    * move
    * 
-   * @version $Id$
    * @since solr 1.2
    */
   private static final class LazyRequestHandlerWrapper implements SolrRequestHandler, SolrInfoMBean
diff --git a/solr/src/java/org/apache/solr/core/SolrConfig.java b/solr/src/java/org/apache/solr/core/SolrConfig.java
index 3bdd551..7e96557 100644
--- a/solr/src/java/org/apache/solr/core/SolrConfig.java
+++ b/solr/src/java/org/apache/solr/core/SolrConfig.java
@@ -66,7 +66,7 @@ import java.io.IOException;
  * configuration data for a a Solr instance -- typically found in
  * "solrconfig.xml".
  *
- * @version $Id$
+ *
  */
 public class SolrConfig extends Config {
 
diff --git a/solr/src/java/org/apache/solr/core/SolrCore.java b/solr/src/java/org/apache/solr/core/SolrCore.java
index 4bf9288..1afc3be 100644
--- a/solr/src/java/org/apache/solr/core/SolrCore.java
+++ b/solr/src/java/org/apache/solr/core/SolrCore.java
@@ -71,7 +71,7 @@ import java.lang.reflect.Constructor;
 
 
 /**
- * @version $Id$
+ *
  */
 public final class SolrCore implements SolrInfoMBean {
   public static final String version="1.0";  
diff --git a/solr/src/java/org/apache/solr/core/SolrDeletionPolicy.java b/solr/src/java/org/apache/solr/core/SolrDeletionPolicy.java
index e165484..c5e5278 100644
--- a/solr/src/java/org/apache/solr/core/SolrDeletionPolicy.java
+++ b/solr/src/java/org/apache/solr/core/SolrDeletionPolicy.java
@@ -38,7 +38,7 @@ import java.util.Locale;
  * for certain amounts of time to support features such as index replication
  * or snapshooting directly out of a live index directory.
  *
- * @version $Id$
+ *
  * @see org.apache.lucene.index.IndexDeletionPolicy
  */
 public class SolrDeletionPolicy implements IndexDeletionPolicy, NamedListInitializedPlugin {
diff --git a/solr/src/java/org/apache/solr/core/SolrEventListener.java b/solr/src/java/org/apache/solr/core/SolrEventListener.java
index f499e85..62c97ea 100644
--- a/solr/src/java/org/apache/solr/core/SolrEventListener.java
+++ b/solr/src/java/org/apache/solr/core/SolrEventListener.java
@@ -24,7 +24,7 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 /**
- * @version $Id$
+ *
  */
 public interface SolrEventListener extends NamedListInitializedPlugin{
   static final Logger log = LoggerFactory.getLogger(SolrCore.class);
diff --git a/solr/src/java/org/apache/solr/core/SolrInfoMBean.java b/solr/src/java/org/apache/solr/core/SolrInfoMBean.java
index 3e70e16..4858559 100644
--- a/solr/src/java/org/apache/solr/core/SolrInfoMBean.java
+++ b/solr/src/java/org/apache/solr/core/SolrInfoMBean.java
@@ -26,7 +26,7 @@ import org.apache.solr.common.util.NamedList;
  * for use by objects which are 'pluggable' to make server administration
  * easier.
  *
- * @version $Id$
+ *
  */
 public interface SolrInfoMBean {
 
diff --git a/solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java b/solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java
index bb0e73d..dd83506 100644
--- a/solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java
+++ b/solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java
@@ -47,7 +47,7 @@ import java.util.*;
 /**
  * A base class for all analysis request handlers.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public abstract class AnalysisRequestHandlerBase extends RequestHandlerBase {
diff --git a/solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler.java b/solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler.java
index c9f9285..05c0067 100644
--- a/solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler.java
+++ b/solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler.java
@@ -38,7 +38,7 @@ import java.util.List;
 /**
  * Update handler which uses the JavaBin format
  *
- * @version $Id$
+ *
  * @see org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec
  * @see org.apache.solr.common.util.JavaBinCodec
  * @since solr 1.4
diff --git a/solr/src/java/org/apache/solr/handler/CSVRequestHandler.java b/solr/src/java/org/apache/solr/handler/CSVRequestHandler.java
index 6ba5ead..f1bfb11 100755
--- a/solr/src/java/org/apache/solr/handler/CSVRequestHandler.java
+++ b/solr/src/java/org/apache/solr/handler/CSVRequestHandler.java
@@ -37,7 +37,7 @@ import java.util.List;
 import java.io.*;
 
 /**
- * @version $Id$
+ *
  */
 
 public class CSVRequestHandler extends ContentStreamHandlerBase {
diff --git a/solr/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java b/solr/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java
index 0f18012..610a043 100644
--- a/solr/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java
+++ b/solr/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java
@@ -73,7 +73,7 @@ import java.util.*;
  * supports the "analysis.showmatch" parameter which when set to {@code true}, all field tokens that match the query
  * tokens will be marked as a "match".
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class DocumentAnalysisRequestHandler extends AnalysisRequestHandlerBase {
diff --git a/solr/src/java/org/apache/solr/handler/FieldAnalysisRequestHandler.java b/solr/src/java/org/apache/solr/handler/FieldAnalysisRequestHandler.java
index b30ae61..d084827 100644
--- a/solr/src/java/org/apache/solr/handler/FieldAnalysisRequestHandler.java
+++ b/solr/src/java/org/apache/solr/handler/FieldAnalysisRequestHandler.java
@@ -86,7 +86,7 @@ import java.io.IOException;
  * <p>Note that if neither analysis.fieldname and analysis.fieldtype is specified, then the default search field's
  * analyzer is used.</p>
  *
- * @version $Id$
+ *
  * @since solr 1.4 
  */
 public class FieldAnalysisRequestHandler extends AnalysisRequestHandlerBase {
diff --git a/solr/src/java/org/apache/solr/handler/ReplicationHandler.java b/solr/src/java/org/apache/solr/handler/ReplicationHandler.java
index 7178056..8fcc7e5 100644
--- a/solr/src/java/org/apache/solr/handler/ReplicationHandler.java
+++ b/solr/src/java/org/apache/solr/handler/ReplicationHandler.java
@@ -61,7 +61,7 @@ import java.util.zip.DeflaterOutputStream;
  * <li>Abort a snap pull (command=abort)</li> <li>Enable/Disable polling the master for new versions (command=enablepoll
  * or command=disablepoll)</li> </ol> </p>
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class ReplicationHandler extends RequestHandlerBase implements SolrCoreAware {
diff --git a/solr/src/java/org/apache/solr/handler/RequestHandlerUtils.java b/solr/src/java/org/apache/solr/handler/RequestHandlerUtils.java
index d7d8576..3d23322 100755
--- a/solr/src/java/org/apache/solr/handler/RequestHandlerUtils.java
+++ b/solr/src/java/org/apache/solr/handler/RequestHandlerUtils.java
@@ -32,7 +32,7 @@ import org.apache.solr.update.processor.UpdateRequestProcessor;
 /**
  * Common helper functions for RequestHandlers
  * 
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public class RequestHandlerUtils
diff --git a/solr/src/java/org/apache/solr/handler/SnapPuller.java b/solr/src/java/org/apache/solr/handler/SnapPuller.java
index 20ce25e..70d33ab 100644
--- a/solr/src/java/org/apache/solr/handler/SnapPuller.java
+++ b/solr/src/java/org/apache/solr/handler/SnapPuller.java
@@ -57,7 +57,7 @@ import java.util.zip.InflaterInputStream;
  * <p/> Provides functionality of downloading changed index files as well as config files and a timer for scheduling fetches from the
  * master. </p>
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class SnapPuller {
diff --git a/solr/src/java/org/apache/solr/handler/SnapShooter.java b/solr/src/java/org/apache/solr/handler/SnapShooter.java
index b534d04..d0afaa2 100644
--- a/solr/src/java/org/apache/solr/handler/SnapShooter.java
+++ b/solr/src/java/org/apache/solr/handler/SnapShooter.java
@@ -39,7 +39,7 @@ import org.slf4j.LoggerFactory;
 /**
  * <p/> Provides functionality equivalent to the snapshooter script </p>
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class SnapShooter {
diff --git a/solr/src/java/org/apache/solr/handler/StandardRequestHandler.java b/solr/src/java/org/apache/solr/handler/StandardRequestHandler.java
index 09dcf64..2489e5d 100644
--- a/solr/src/java/org/apache/solr/handler/StandardRequestHandler.java
+++ b/solr/src/java/org/apache/solr/handler/StandardRequestHandler.java
@@ -23,7 +23,7 @@ import java.net.MalformedURLException;
 import java.net.URL;
 
 /**
- * @version $Id$
+ *
  *
  * All of the following options may be configured for this handler
  * in the solrconfig as defaults, and may be overriden as request parameters.
diff --git a/solr/src/java/org/apache/solr/handler/admin/AdminHandlers.java b/solr/src/java/org/apache/solr/handler/admin/AdminHandlers.java
index e030fb6..0f4a0a9 100644
--- a/solr/src/java/org/apache/solr/handler/admin/AdminHandlers.java
+++ b/solr/src/java/org/apache/solr/handler/admin/AdminHandlers.java
@@ -31,7 +31,7 @@ import org.apache.solr.util.plugin.SolrCoreAware;
 /**
  * A special Handler that registers all standard admin handlers
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class AdminHandlers implements SolrCoreAware, SolrRequestHandler
diff --git a/solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java b/solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
index 63f72c3..39b9a04 100644
--- a/solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
+++ b/solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
@@ -45,7 +45,7 @@ import java.io.IOException;
 import java.util.Date;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class CoreAdminHandler extends RequestHandlerBase {
diff --git a/solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java b/solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
index 17ff773..0127915 100644
--- a/solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
+++ b/solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
@@ -81,7 +81,7 @@ import org.apache.solr.search.SolrIndexSearcher;
  * For more documentation see:
  *  http://wiki.apache.org/solr/LukeRequestHandler
  * 
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public class LukeRequestHandler extends RequestHandlerBase 
diff --git a/solr/src/java/org/apache/solr/handler/admin/PluginInfoHandler.java b/solr/src/java/org/apache/solr/handler/admin/PluginInfoHandler.java
index 86f98c6..c0707df 100644
--- a/solr/src/java/org/apache/solr/handler/admin/PluginInfoHandler.java
+++ b/solr/src/java/org/apache/solr/handler/admin/PluginInfoHandler.java
@@ -36,7 +36,7 @@ import org.apache.solr.response.SolrQueryResponse;
  * that it works nicely with an XSLT transformation.  Until we have a nice
  * XSLT front end for /admin, the format is still open to change.
  * 
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public class PluginInfoHandler extends RequestHandlerBase
diff --git a/solr/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler.java b/solr/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler.java
index 12ee354..f24ac8d 100644
--- a/solr/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler.java
+++ b/solr/src/java/org/apache/solr/handler/admin/PropertiesRequestHandler.java
@@ -25,7 +25,7 @@ import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.response.SolrQueryResponse;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public class PropertiesRequestHandler extends RequestHandlerBase
diff --git a/solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java b/solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
index cda4b94..2c30558 100644
--- a/solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
+++ b/solr/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
@@ -72,7 +72,7 @@ import org.apache.solr.response.SolrQueryResponse;
  *   http://localhost:8983/solr/admin/file?file=schema.xml&contentType=text/plain
  * </pre>
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class ShowFileRequestHandler extends RequestHandlerBase
diff --git a/solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java b/solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java
index 4a12394..8dc7824 100644
--- a/solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java
+++ b/solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java
@@ -50,7 +50,7 @@ import org.slf4j.LoggerFactory;
  * that it works nicely with an XSLT transformation.  Until we have a nice
  * XSLT front end for /admin, the format is still open to change.
  * 
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public class SystemInfoHandler extends RequestHandlerBase 
diff --git a/solr/src/java/org/apache/solr/handler/admin/ThreadDumpHandler.java b/solr/src/java/org/apache/solr/handler/admin/ThreadDumpHandler.java
index f885016..a39d63c 100644
--- a/solr/src/java/org/apache/solr/handler/admin/ThreadDumpHandler.java
+++ b/solr/src/java/org/apache/solr/handler/admin/ThreadDumpHandler.java
@@ -35,7 +35,7 @@ import org.apache.solr.response.SolrQueryResponse;
  * that it works nicely with an XSLT transformation.  Until we have a nice
  * XSLT front end for /admin, the format is still open to change.
  * 
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public class ThreadDumpHandler extends RequestHandlerBase
diff --git a/solr/src/java/org/apache/solr/handler/component/DebugComponent.java b/solr/src/java/org/apache/solr/handler/component/DebugComponent.java
index a671798..6d133bb 100644
--- a/solr/src/java/org/apache/solr/handler/component/DebugComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/DebugComponent.java
@@ -34,7 +34,7 @@ import org.apache.solr.util.SolrPluginUtils;
 /**
  * Adds debugging information to a request.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class DebugComponent extends SearchComponent
diff --git a/solr/src/java/org/apache/solr/handler/component/FacetComponent.java b/solr/src/java/org/apache/solr/handler/component/FacetComponent.java
index 3a5ee61..a398967 100644
--- a/solr/src/java/org/apache/solr/handler/component/FacetComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/FacetComponent.java
@@ -38,7 +38,7 @@ import java.util.*;
 /**
  * TODO!
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class FacetComponent extends SearchComponent
diff --git a/solr/src/java/org/apache/solr/handler/component/HighlightComponent.java b/solr/src/java/org/apache/solr/handler/component/HighlightComponent.java
index 137f30b..f055e29 100644
--- a/solr/src/java/org/apache/solr/handler/component/HighlightComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/HighlightComponent.java
@@ -41,7 +41,7 @@ import java.util.List;
 /**
  * TODO!
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class HighlightComponent extends SearchComponent implements PluginInfoInitialized, SolrCoreAware
diff --git a/solr/src/java/org/apache/solr/handler/component/MoreLikeThisComponent.java b/solr/src/java/org/apache/solr/handler/component/MoreLikeThisComponent.java
index 8851ff7..33251f0 100644
--- a/solr/src/java/org/apache/solr/handler/component/MoreLikeThisComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/MoreLikeThisComponent.java
@@ -34,7 +34,7 @@ import org.apache.solr.search.SolrIndexSearcher;
 /**
  * TODO!
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class MoreLikeThisComponent extends SearchComponent
diff --git a/solr/src/java/org/apache/solr/handler/component/QueryComponent.java b/solr/src/java/org/apache/solr/handler/component/QueryComponent.java
index 1d26b37..98602d2 100644
--- a/solr/src/java/org/apache/solr/handler/component/QueryComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/QueryComponent.java
@@ -56,7 +56,7 @@ import java.util.*;
 /**
  * TODO!
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class QueryComponent extends SearchComponent
diff --git a/solr/src/java/org/apache/solr/handler/component/QueryElevationComponent.java b/solr/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
index 743cca3..008bc91 100644
--- a/solr/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
@@ -72,7 +72,7 @@ import org.xml.sax.InputSource;
 /**
  * A component to elevate some documents to the top of the result set.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class QueryElevationComponent extends SearchComponent implements SolrCoreAware
diff --git a/solr/src/java/org/apache/solr/handler/component/ResponseBuilder.java b/solr/src/java/org/apache/solr/handler/component/ResponseBuilder.java
index 5bcb5a9..47ef191 100644
--- a/solr/src/java/org/apache/solr/handler/component/ResponseBuilder.java
+++ b/solr/src/java/org/apache/solr/handler/component/ResponseBuilder.java
@@ -36,7 +36,7 @@ import java.util.Map;
 /**
  * This class is experimental and will be changing in the future.
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class ResponseBuilder
diff --git a/solr/src/java/org/apache/solr/handler/component/SearchComponent.java b/solr/src/java/org/apache/solr/handler/component/SearchComponent.java
index 2908fbc..425b7d8 100644
--- a/solr/src/java/org/apache/solr/handler/component/SearchComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/SearchComponent.java
@@ -28,7 +28,7 @@ import org.apache.solr.util.plugin.NamedListInitializedPlugin;
 /**
  * TODO!
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class SearchComponent implements SolrInfoMBean, NamedListInitializedPlugin
diff --git a/solr/src/java/org/apache/solr/handler/component/StatsComponent.java b/solr/src/java/org/apache/solr/handler/component/StatsComponent.java
index a8b0c4a..805ad10 100644
--- a/solr/src/java/org/apache/solr/handler/component/StatsComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/StatsComponent.java
@@ -42,7 +42,7 @@ import org.apache.solr.request.UnInvertedField;
 /**
  * Stats component calculates simple statistics on numeric field values
  * 
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class StatsComponent extends SearchComponent {
diff --git a/solr/src/java/org/apache/solr/handler/component/TermVectorComponent.java b/solr/src/java/org/apache/solr/handler/component/TermVectorComponent.java
index 24c5256..7b78735 100644
--- a/solr/src/java/org/apache/solr/handler/component/TermVectorComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/TermVectorComponent.java
@@ -74,7 +74,7 @@ import java.util.Map;
  *   &lt;/arr&gt;
  * &lt;/requestHandler&gt;</pre>
  *
- * @version $Id$
+ *
  */
 public class TermVectorComponent extends SearchComponent implements SolrCoreAware {
 
diff --git a/solr/src/java/org/apache/solr/handler/component/TermsComponent.java b/solr/src/java/org/apache/solr/handler/component/TermsComponent.java
index 4ce9f9f..7158b73 100644
--- a/solr/src/java/org/apache/solr/handler/component/TermsComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/TermsComponent.java
@@ -56,7 +56,7 @@ import java.util.regex.Pattern;
  *
  * @see org.apache.solr.common.params.TermsParams
  *      See Lucene's TermEnum class
- * @version $Id$
+ *
  */
 public class TermsComponent extends SearchComponent {
   public static final int UNLIMITED_MAX_COUNT = -1;
diff --git a/solr/src/java/org/apache/solr/request/LocalSolrQueryRequest.java b/solr/src/java/org/apache/solr/request/LocalSolrQueryRequest.java
index 427cf0d..900cb86 100644
--- a/solr/src/java/org/apache/solr/request/LocalSolrQueryRequest.java
+++ b/solr/src/java/org/apache/solr/request/LocalSolrQueryRequest.java
@@ -31,7 +31,7 @@ import java.util.Iterator;
 // retained more for backward compatibility.
 
 /**
- * @version $Id$
+ *
  */
 public class LocalSolrQueryRequest extends SolrQueryRequestBase {
   public final static Map emptyArgs = new HashMap(0,1);
diff --git a/solr/src/java/org/apache/solr/request/ServletSolrParams.java b/solr/src/java/org/apache/solr/request/ServletSolrParams.java
index 49922c8..18dc755 100644
--- a/solr/src/java/org/apache/solr/request/ServletSolrParams.java
+++ b/solr/src/java/org/apache/solr/request/ServletSolrParams.java
@@ -22,7 +22,7 @@ import javax.servlet.ServletRequest;
 import org.apache.solr.common.params.MultiMapSolrParams;
 
 /**
- * @version $Id$
+ *
  */
 public class ServletSolrParams extends MultiMapSolrParams {
   public ServletSolrParams(ServletRequest req) {
diff --git a/solr/src/java/org/apache/solr/request/SolrQueryRequest.java b/solr/src/java/org/apache/solr/request/SolrQueryRequest.java
index eeb3c60..931acbc 100644
--- a/solr/src/java/org/apache/solr/request/SolrQueryRequest.java
+++ b/solr/src/java/org/apache/solr/request/SolrQueryRequest.java
@@ -29,7 +29,7 @@ import java.util.Map;
  * <p>Container for a request to execute a query.</p>
  * <p><code>SolrQueryRequest</code> is not thread safe.</p>
  * 
- * @version $Id$
+ *
  */
 public interface SolrQueryRequest {
 
diff --git a/solr/src/java/org/apache/solr/request/SolrQueryRequestBase.java b/solr/src/java/org/apache/solr/request/SolrQueryRequestBase.java
index 699cbe7..82d2872 100644
--- a/solr/src/java/org/apache/solr/request/SolrQueryRequestBase.java
+++ b/solr/src/java/org/apache/solr/request/SolrQueryRequestBase.java
@@ -38,7 +38,7 @@ import java.util.HashMap;
  * </p>
  *
  *
- * @version $Id$
+ *
  */
 public abstract class SolrQueryRequestBase implements SolrQueryRequest {
   protected final SolrCore core;
diff --git a/solr/src/java/org/apache/solr/request/SolrRequestHandler.java b/solr/src/java/org/apache/solr/request/SolrRequestHandler.java
index 45a80fd..50adac0 100644
--- a/solr/src/java/org/apache/solr/request/SolrRequestHandler.java
+++ b/solr/src/java/org/apache/solr/request/SolrRequestHandler.java
@@ -37,7 +37,7 @@ import org.apache.solr.response.SolrQueryResponse;
  * A single instance of any registered SolrRequestHandler is created
  * via the default constructor and is reused for all relevant queries.
  *
- * @version $Id$
+ *
  */
 public interface SolrRequestHandler extends SolrInfoMBean {
 
diff --git a/solr/src/java/org/apache/solr/response/CSVResponseWriter.java b/solr/src/java/org/apache/solr/response/CSVResponseWriter.java
index 3116467..d35ad3c 100755
--- a/solr/src/java/org/apache/solr/response/CSVResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/CSVResponseWriter.java
@@ -43,7 +43,7 @@ import java.io.Writer;
 import java.util.*;
 
 /**
- * @version $Id$
+ *
  */
 
 public class CSVResponseWriter implements QueryResponseWriter {
diff --git a/solr/src/java/org/apache/solr/response/JSONResponseWriter.java b/solr/src/java/org/apache/solr/response/JSONResponseWriter.java
index 7a51578..0e328fc 100644
--- a/solr/src/java/org/apache/solr/response/JSONResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/JSONResponseWriter.java
@@ -37,7 +37,7 @@ import org.apache.solr.schema.SchemaField;
 import org.apache.solr.search.ReturnFields;
 
 /**
- * @version $Id$
+ *
  */
 
 public class JSONResponseWriter implements QueryResponseWriter {
diff --git a/solr/src/java/org/apache/solr/response/QueryResponseWriter.java b/solr/src/java/org/apache/solr/response/QueryResponseWriter.java
index eeae6c7..81e19b7 100644
--- a/solr/src/java/org/apache/solr/response/QueryResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/QueryResponseWriter.java
@@ -40,7 +40,7 @@ import org.apache.solr.util.plugin.NamedListInitializedPlugin;
  * A single instance of any registered QueryResponseWriter is created
  * via the default constructor and is reused for all relevant queries.
  *
- * @version $Id$
+ *
  */
 public interface QueryResponseWriter extends NamedListInitializedPlugin {
   public static String CONTENT_TYPE_XML_UTF8="application/xml; charset=UTF-8";
diff --git a/solr/src/java/org/apache/solr/response/RawResponseWriter.java b/solr/src/java/org/apache/solr/response/RawResponseWriter.java
index e34691c..dba1eac 100644
--- a/solr/src/java/org/apache/solr/response/RawResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/RawResponseWriter.java
@@ -42,7 +42,7 @@ import org.apache.solr.request.SolrQueryRequest;
  * defaults to the "standard" writer.
  * </p>
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class RawResponseWriter implements BinaryQueryResponseWriter 
diff --git a/solr/src/java/org/apache/solr/response/ResultContext.java b/solr/src/java/org/apache/solr/response/ResultContext.java
index f1da1d6..e218df5 100644
--- a/solr/src/java/org/apache/solr/response/ResultContext.java
+++ b/solr/src/java/org/apache/solr/response/ResultContext.java
@@ -23,7 +23,7 @@ import org.apache.solr.search.DocList;
 /**
  * A class to hold the QueryResult and the Query
  * 
- * @version $Id$
+ *
  */
 public class ResultContext {
   public Query query;
diff --git a/solr/src/java/org/apache/solr/response/SolrQueryResponse.java b/solr/src/java/org/apache/solr/response/SolrQueryResponse.java
index a0ca1c4..0afec1e 100644
--- a/solr/src/java/org/apache/solr/response/SolrQueryResponse.java
+++ b/solr/src/java/org/apache/solr/response/SolrQueryResponse.java
@@ -55,7 +55,7 @@ import java.util.*;
  * that QueryResponseWriters will be able to deal with unexpected types.
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 0.9
  */
 public class SolrQueryResponse {
diff --git a/solr/src/java/org/apache/solr/response/TextResponseWriter.java b/solr/src/java/org/apache/solr/response/TextResponseWriter.java
index fae3e6b..9a7d9cf 100644
--- a/solr/src/java/org/apache/solr/response/TextResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/TextResponseWriter.java
@@ -37,7 +37,7 @@ import org.apache.solr.search.ReturnFields;
 
 /** Base class for text-oriented response writers.
  *
- * @version $Id$
+ *
  */
 public abstract class TextResponseWriter {
 
diff --git a/solr/src/java/org/apache/solr/response/XMLResponseWriter.java b/solr/src/java/org/apache/solr/response/XMLResponseWriter.java
index a883e9d..95d4654 100644
--- a/solr/src/java/org/apache/solr/response/XMLResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/XMLResponseWriter.java
@@ -24,7 +24,7 @@ import org.apache.solr.common.util.NamedList;
 import org.apache.solr.request.SolrQueryRequest;
 
 /**
- * @version $Id$
+ *
  */
 public class XMLResponseWriter implements QueryResponseWriter {
   public void init(NamedList n) {
diff --git a/solr/src/java/org/apache/solr/response/transform/DocIdAugmenterFactory.java b/solr/src/java/org/apache/solr/response/transform/DocIdAugmenterFactory.java
index c4e19a1..8c23d31 100644
--- a/solr/src/java/org/apache/solr/response/transform/DocIdAugmenterFactory.java
+++ b/solr/src/java/org/apache/solr/response/transform/DocIdAugmenterFactory.java
@@ -21,7 +21,7 @@ import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.request.SolrQueryRequest;
 
 /**
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public class DocIdAugmenterFactory extends TransformerFactory
diff --git a/solr/src/java/org/apache/solr/response/transform/DocTransformer.java b/solr/src/java/org/apache/solr/response/transform/DocTransformer.java
index a882238..bcc827f 100644
--- a/solr/src/java/org/apache/solr/response/transform/DocTransformer.java
+++ b/solr/src/java/org/apache/solr/response/transform/DocTransformer.java
@@ -24,7 +24,7 @@ import org.apache.solr.common.SolrDocument;
 /**
  * New instance for each request
  *
- * @version $Id$
+ *
  */
 public abstract class DocTransformer
 {
diff --git a/solr/src/java/org/apache/solr/response/transform/DocTransformers.java b/solr/src/java/org/apache/solr/response/transform/DocTransformers.java
index 3aef76e..6906f2f 100644
--- a/solr/src/java/org/apache/solr/response/transform/DocTransformers.java
+++ b/solr/src/java/org/apache/solr/response/transform/DocTransformers.java
@@ -27,7 +27,7 @@ import org.apache.solr.common.SolrDocument;
 /**
  * Transform a document before it gets sent out
  *
- * @version $Id$
+ *
  */
 public class DocTransformers extends DocTransformer
 {
diff --git a/solr/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.java b/solr/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.java
index a65b0da..3b0d429 100644
--- a/solr/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.java
+++ b/solr/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.java
@@ -28,7 +28,7 @@ import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.util.SolrPluginUtils;
 
 /**
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public class ExplainAugmenterFactory extends TransformerFactory
diff --git a/solr/src/java/org/apache/solr/response/transform/RenameFieldsTransformer.java b/solr/src/java/org/apache/solr/response/transform/RenameFieldsTransformer.java
index 76a40f4..1c09b65 100644
--- a/solr/src/java/org/apache/solr/response/transform/RenameFieldsTransformer.java
+++ b/solr/src/java/org/apache/solr/response/transform/RenameFieldsTransformer.java
@@ -22,7 +22,7 @@ import org.apache.solr.common.util.NamedList;
 /**
  * Return a field with a name that is different that what is indexed
  *
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public class RenameFieldsTransformer extends DocTransformer
diff --git a/solr/src/java/org/apache/solr/response/transform/ScoreAugmenter.java b/solr/src/java/org/apache/solr/response/transform/ScoreAugmenter.java
index f4a1eff..69cae82 100644
--- a/solr/src/java/org/apache/solr/response/transform/ScoreAugmenter.java
+++ b/solr/src/java/org/apache/solr/response/transform/ScoreAugmenter.java
@@ -21,7 +21,7 @@ import org.apache.solr.common.SolrDocument;
 /**
  * Simple Augmenter that adds the docId
  *
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public class ScoreAugmenter extends TransformerWithContext
diff --git a/solr/src/java/org/apache/solr/response/transform/ShardAugmenterFactory.java b/solr/src/java/org/apache/solr/response/transform/ShardAugmenterFactory.java
index 670bbbe..42979b6 100644
--- a/solr/src/java/org/apache/solr/response/transform/ShardAugmenterFactory.java
+++ b/solr/src/java/org/apache/solr/response/transform/ShardAugmenterFactory.java
@@ -22,7 +22,7 @@ import org.apache.solr.request.SolrQueryRequest;
 
 
 /**
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public class ShardAugmenterFactory extends TransformerFactory
diff --git a/solr/src/java/org/apache/solr/response/transform/TransformContext.java b/solr/src/java/org/apache/solr/response/transform/TransformContext.java
index 3bd8ad3..dc71e58 100644
--- a/solr/src/java/org/apache/solr/response/transform/TransformContext.java
+++ b/solr/src/java/org/apache/solr/response/transform/TransformContext.java
@@ -23,7 +23,7 @@ import org.apache.solr.search.SolrIndexSearcher;
 /**
  * Environment variables for the transformed documents
  *
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public class TransformContext
diff --git a/solr/src/java/org/apache/solr/response/transform/TransformerFactory.java b/solr/src/java/org/apache/solr/response/transform/TransformerFactory.java
index 832d009..9b316d6 100644
--- a/solr/src/java/org/apache/solr/response/transform/TransformerFactory.java
+++ b/solr/src/java/org/apache/solr/response/transform/TransformerFactory.java
@@ -28,7 +28,7 @@ import org.apache.solr.util.plugin.NamedListInitializedPlugin;
 /**
  * New instance for each request
  *
- * @version $Id$
+ *
  */
 public abstract class TransformerFactory implements NamedListInitializedPlugin
 {
diff --git a/solr/src/java/org/apache/solr/response/transform/TransformerWithContext.java b/solr/src/java/org/apache/solr/response/transform/TransformerWithContext.java
index 3b1ad18..060bfd5 100644
--- a/solr/src/java/org/apache/solr/response/transform/TransformerWithContext.java
+++ b/solr/src/java/org/apache/solr/response/transform/TransformerWithContext.java
@@ -18,7 +18,7 @@ package org.apache.solr.response.transform;
 
 
 /**
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public abstract class TransformerWithContext extends DocTransformer
diff --git a/solr/src/java/org/apache/solr/response/transform/ValueAugmenterFactory.java b/solr/src/java/org/apache/solr/response/transform/ValueAugmenterFactory.java
index f319f71..a62e709 100644
--- a/solr/src/java/org/apache/solr/response/transform/ValueAugmenterFactory.java
+++ b/solr/src/java/org/apache/solr/response/transform/ValueAugmenterFactory.java
@@ -25,7 +25,7 @@ import org.apache.solr.common.util.NamedList;
 import org.apache.solr.request.SolrQueryRequest;
 
 /**
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public class ValueAugmenterFactory extends TransformerFactory
diff --git a/solr/src/java/org/apache/solr/response/transform/ValueSourceAugmenter.java b/solr/src/java/org/apache/solr/response/transform/ValueSourceAugmenter.java
index 51d40db..89d9b97 100644
--- a/solr/src/java/org/apache/solr/response/transform/ValueSourceAugmenter.java
+++ b/solr/src/java/org/apache/solr/response/transform/ValueSourceAugmenter.java
@@ -33,7 +33,7 @@ import org.apache.solr.search.function.ValueSource;
  *
  * NOT really sure how or if this could work...
  *
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public class ValueSourceAugmenter extends DocTransformer
diff --git a/solr/src/java/org/apache/solr/schema/BCDIntField.java b/solr/src/java/org/apache/solr/schema/BCDIntField.java
index 534a7dc..2568db9 100644
--- a/solr/src/java/org/apache/solr/schema/BCDIntField.java
+++ b/solr/src/java/org/apache/solr/schema/BCDIntField.java
@@ -27,7 +27,7 @@ import org.apache.solr.response.TextResponseWriter;
 import java.util.Map;
 import java.io.IOException;
 /**
- * @version $Id$
+ *
  */
 public class BCDIntField extends FieldType {
   @Override
diff --git a/solr/src/java/org/apache/solr/schema/BCDLongField.java b/solr/src/java/org/apache/solr/schema/BCDLongField.java
index 5a4c4f0..fa78ba2 100644
--- a/solr/src/java/org/apache/solr/schema/BCDLongField.java
+++ b/solr/src/java/org/apache/solr/schema/BCDLongField.java
@@ -19,7 +19,7 @@ package org.apache.solr.schema;
 
 import org.apache.lucene.document.Fieldable;
 /**
- * @version $Id$
+ *
  */
 public class BCDLongField extends BCDIntField {
   @Override
diff --git a/solr/src/java/org/apache/solr/schema/BCDStrField.java b/solr/src/java/org/apache/solr/schema/BCDStrField.java
index ab27f81..a7bf082 100644
--- a/solr/src/java/org/apache/solr/schema/BCDStrField.java
+++ b/solr/src/java/org/apache/solr/schema/BCDStrField.java
@@ -19,7 +19,7 @@ package org.apache.solr.schema;
 
 import org.apache.lucene.document.Fieldable;
 /**
- * @version $Id$
+ *
  */
 public class BCDStrField extends BCDIntField {
   /**
diff --git a/solr/src/java/org/apache/solr/schema/BoolField.java b/solr/src/java/org/apache/solr/schema/BoolField.java
index 3cd5024..10e1c86 100644
--- a/solr/src/java/org/apache/solr/schema/BoolField.java
+++ b/solr/src/java/org/apache/solr/schema/BoolField.java
@@ -38,7 +38,7 @@ import java.util.Map;
 import java.io.Reader;
 import java.io.IOException;
 /**
- * @version $Id$
+ *
  */
 public class BoolField extends FieldType {
   @Override
diff --git a/solr/src/java/org/apache/solr/schema/ByteField.java b/solr/src/java/org/apache/solr/schema/ByteField.java
index 091f1e9..ce59010 100644
--- a/solr/src/java/org/apache/solr/schema/ByteField.java
+++ b/solr/src/java/org/apache/solr/schema/ByteField.java
@@ -30,7 +30,7 @@ import java.io.IOException;
 import java.util.Map;
 
 /**
- * @version $Id$
+ *
  */
 public class ByteField extends FieldType {
   @Override
diff --git a/solr/src/java/org/apache/solr/schema/DateField.java b/solr/src/java/org/apache/solr/schema/DateField.java
index d7bcef0..f7e16bd 100644
--- a/solr/src/java/org/apache/solr/schema/DateField.java
+++ b/solr/src/java/org/apache/solr/schema/DateField.java
@@ -93,7 +93,7 @@ import java.util.*;
  * acronym UTC was chosen as a compromise."
  * </blockquote>
  *
- * @version $Id$
+ *
  * @see <a href="http://www.w3.org/TR/xmlschema-2/#dateTime">XML schema part 2</a>
  *
  */
diff --git a/solr/src/java/org/apache/solr/schema/DoubleField.java b/solr/src/java/org/apache/solr/schema/DoubleField.java
index 80f5e98..c07f43d 100644
--- a/solr/src/java/org/apache/solr/schema/DoubleField.java
+++ b/solr/src/java/org/apache/solr/schema/DoubleField.java
@@ -30,7 +30,7 @@ import java.io.IOException;
 import java.util.Map;
 
 /**
- * @version $Id$
+ *
  */
 public class DoubleField extends FieldType {
   @Override
diff --git a/solr/src/java/org/apache/solr/schema/ExternalFileField.java b/solr/src/java/org/apache/solr/schema/ExternalFileField.java
index 2eb5394..90ce98d 100755
--- a/solr/src/java/org/apache/solr/schema/ExternalFileField.java
+++ b/solr/src/java/org/apache/solr/schema/ExternalFileField.java
@@ -51,7 +51,7 @@ import java.io.IOException;
  * <p/>The external file may be sorted or unsorted by the key field, but it will be substantially slower (untested) if it isn't sorted.
  * <p/>Fields of this type may currently only be used as a ValueSource in a FunctionQuery.
  *
- * @version $Id$
+ *
  */
 public class ExternalFileField extends FieldType {
   private FieldType ftype;
diff --git a/solr/src/java/org/apache/solr/schema/FieldProperties.java b/solr/src/java/org/apache/solr/schema/FieldProperties.java
index c1cc519..07cbd14 100644
--- a/solr/src/java/org/apache/solr/schema/FieldProperties.java
+++ b/solr/src/java/org/apache/solr/schema/FieldProperties.java
@@ -21,7 +21,7 @@ import java.util.Map;
 import java.util.HashMap;
 
 /**
- * @version $Id$
+ *
  * 
  * @lucene.internal
  */
diff --git a/solr/src/java/org/apache/solr/schema/FieldType.java b/solr/src/java/org/apache/solr/schema/FieldType.java
index 325064b..43daec3 100644
--- a/solr/src/java/org/apache/solr/schema/FieldType.java
+++ b/solr/src/java/org/apache/solr/schema/FieldType.java
@@ -50,7 +50,7 @@ import java.util.Map;
 /**
  * Base class for all field types used by an index schema.
  *
- * @version $Id$
+ *
  */
 public abstract class FieldType extends FieldProperties {
   public static final Logger log = LoggerFactory.getLogger(FieldType.class);
diff --git a/solr/src/java/org/apache/solr/schema/FloatField.java b/solr/src/java/org/apache/solr/schema/FloatField.java
index b7c7fbf..4c9c46a 100644
--- a/solr/src/java/org/apache/solr/schema/FloatField.java
+++ b/solr/src/java/org/apache/solr/schema/FloatField.java
@@ -29,7 +29,7 @@ import org.apache.solr.response.TextResponseWriter;
 import java.util.Map;
 import java.io.IOException;
 /**
- * @version $Id$
+ *
  */
 public class FloatField extends FieldType {
   @Override
diff --git a/solr/src/java/org/apache/solr/schema/IndexSchema.java b/solr/src/java/org/apache/solr/schema/IndexSchema.java
index 818f8d8..4fd106d 100644
--- a/solr/src/java/org/apache/solr/schema/IndexSchema.java
+++ b/solr/src/java/org/apache/solr/schema/IndexSchema.java
@@ -62,7 +62,7 @@ import org.slf4j.LoggerFactory;
  * <code>IndexSchema</code> contains information about the valid fields in an index
  * and the types of those fields.
  *
- * @version $Id$
+ *
  */
 public final class IndexSchema {
   public static final String DEFAULT_SCHEMA_FILE = "schema.xml";
diff --git a/solr/src/java/org/apache/solr/schema/IntField.java b/solr/src/java/org/apache/solr/schema/IntField.java
index 7b681e5..3199ff8 100644
--- a/solr/src/java/org/apache/solr/schema/IntField.java
+++ b/solr/src/java/org/apache/solr/schema/IntField.java
@@ -29,7 +29,7 @@ import org.apache.solr.response.TextResponseWriter;
 import java.util.Map;
 import java.io.IOException;
 /**
- * @version $Id$
+ *
  */
 public class IntField extends FieldType {
   @Override
diff --git a/solr/src/java/org/apache/solr/schema/LongField.java b/solr/src/java/org/apache/solr/schema/LongField.java
index 239dc1f..7c0d2ac 100644
--- a/solr/src/java/org/apache/solr/schema/LongField.java
+++ b/solr/src/java/org/apache/solr/schema/LongField.java
@@ -29,7 +29,7 @@ import org.apache.solr.search.function.LongFieldSource;
 import java.io.IOException;
 import java.util.Map;
 /**
- * @version $Id$
+ *
  */
 public class LongField extends FieldType {
   @Override
diff --git a/solr/src/java/org/apache/solr/schema/RandomSortField.java b/solr/src/java/org/apache/solr/schema/RandomSortField.java
index f5b1ee0..80353fd 100644
--- a/solr/src/java/org/apache/solr/schema/RandomSortField.java
+++ b/solr/src/java/org/apache/solr/schema/RandomSortField.java
@@ -59,7 +59,7 @@ import org.apache.solr.search.function.ValueSource;
  * </ul>
  * Note that multiple calls to the same URL will return the same sorting order.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class RandomSortField extends FieldType {
diff --git a/solr/src/java/org/apache/solr/schema/SchemaField.java b/solr/src/java/org/apache/solr/schema/SchemaField.java
index bb2d3e7..4425753 100644
--- a/solr/src/java/org/apache/solr/schema/SchemaField.java
+++ b/solr/src/java/org/apache/solr/schema/SchemaField.java
@@ -31,7 +31,7 @@ import java.io.IOException;
 /**
  * Encapsulates all information about a Field in a Solr Schema
  *
- * @version $Id$
+ *
  */
 public final class SchemaField extends FieldProperties {
   final String name;
diff --git a/solr/src/java/org/apache/solr/schema/SortableDoubleField.java b/solr/src/java/org/apache/solr/schema/SortableDoubleField.java
index 0a0d53a..e31a671 100644
--- a/solr/src/java/org/apache/solr/schema/SortableDoubleField.java
+++ b/solr/src/java/org/apache/solr/schema/SortableDoubleField.java
@@ -35,7 +35,7 @@ import org.apache.solr.response.TextResponseWriter;
 import java.util.Map;
 import java.io.IOException;
 /**
- * @version $Id$
+ *
  * 
  * @deprecated use {@link DoubleField} or {@link TrieDoubleField} - will be removed in 5.x
  */
diff --git a/solr/src/java/org/apache/solr/schema/SortableFloatField.java b/solr/src/java/org/apache/solr/schema/SortableFloatField.java
index 876a5f9..d5a5315 100644
--- a/solr/src/java/org/apache/solr/schema/SortableFloatField.java
+++ b/solr/src/java/org/apache/solr/schema/SortableFloatField.java
@@ -35,7 +35,7 @@ import org.apache.solr.response.TextResponseWriter;
 import java.util.Map;
 import java.io.IOException;
 /**
- * @version $Id$
+ *
  * 
  * @deprecated use {@link FloatField} or {@link TrieFloatField} - will be removed in 5.x
  */
diff --git a/solr/src/java/org/apache/solr/schema/SortableIntField.java b/solr/src/java/org/apache/solr/schema/SortableIntField.java
index 74f52f8..e13c2c3 100644
--- a/solr/src/java/org/apache/solr/schema/SortableIntField.java
+++ b/solr/src/java/org/apache/solr/schema/SortableIntField.java
@@ -35,7 +35,7 @@ import org.apache.solr.response.TextResponseWriter;
 import java.util.Map;
 import java.io.IOException;
 /**
- * @version $Id$
+ *
  * 
  * @deprecated use {@link IntField} or {@link TrieIntField} - will be removed in 5.x
  */
diff --git a/solr/src/java/org/apache/solr/schema/SortableLongField.java b/solr/src/java/org/apache/solr/schema/SortableLongField.java
index 6a6e8b4..7834431 100644
--- a/solr/src/java/org/apache/solr/schema/SortableLongField.java
+++ b/solr/src/java/org/apache/solr/schema/SortableLongField.java
@@ -35,7 +35,7 @@ import org.apache.solr.response.TextResponseWriter;
 import java.util.Map;
 import java.io.IOException;
 /**
- * @version $Id$
+ *
  * 
  * @deprecated use {@link LongField} or {@link TrieLongField} - will be removed in 5.x
  */
diff --git a/solr/src/java/org/apache/solr/schema/StrField.java b/solr/src/java/org/apache/solr/schema/StrField.java
index ae07be1..c8d15aa 100644
--- a/solr/src/java/org/apache/solr/schema/StrField.java
+++ b/solr/src/java/org/apache/solr/schema/StrField.java
@@ -27,7 +27,7 @@ import org.apache.solr.search.QParser;
 import java.util.Map;
 import java.io.IOException;
 /**
- * @version $Id$
+ *
  */
 public class StrField extends FieldType {
   @Override
diff --git a/solr/src/java/org/apache/solr/schema/TextField.java b/solr/src/java/org/apache/solr/schema/TextField.java
index 7278225..4fab946 100644
--- a/solr/src/java/org/apache/solr/schema/TextField.java
+++ b/solr/src/java/org/apache/solr/schema/TextField.java
@@ -43,7 +43,7 @@ import java.io.StringReader;
 
 /** <code>TextField</code> is the basic type for configurable text analysis.
  * Analyzers for field types using this implementation should be defined in the schema.
- * @version $Id$
+ *
  */
 public class TextField extends FieldType {
   protected boolean autoGeneratePhraseQueries;
diff --git a/solr/src/java/org/apache/solr/schema/TrieField.java b/solr/src/java/org/apache/solr/schema/TrieField.java
index 608596a..8fbde52 100644
--- a/solr/src/java/org/apache/solr/schema/TrieField.java
+++ b/solr/src/java/org/apache/solr/schema/TrieField.java
@@ -55,7 +55,7 @@ import java.util.Date;
  * Note that if you use a precisionStep of 32 for int/float and 64 for long/double/date, then multiple terms will not be
  * generated, range search will be no faster than any other number field, but sorting will still be possible.
  *
- * @version $Id$
+ *
  * @see org.apache.lucene.search.NumericRangeQuery
  * @since solr 1.4
  */
diff --git a/solr/src/java/org/apache/solr/schema/UUIDField.java b/solr/src/java/org/apache/solr/schema/UUIDField.java
index f1bfa42..71da561 100644
--- a/solr/src/java/org/apache/solr/schema/UUIDField.java
+++ b/solr/src/java/org/apache/solr/schema/UUIDField.java
@@ -33,7 +33,7 @@ import org.apache.solr.response.TextResponseWriter;
  *
  * @see UUID#toString
  * @see UUID#randomUUID
- * @version $Id$
+ *
  */
 public class UUIDField extends StrField {
   private static final String NEW = "NEW";
diff --git a/solr/src/java/org/apache/solr/search/BitDocSet.java b/solr/src/java/org/apache/solr/search/BitDocSet.java
index d5cd85d..2ffe6f0 100644
--- a/solr/src/java/org/apache/solr/search/BitDocSet.java
+++ b/solr/src/java/org/apache/solr/search/BitDocSet.java
@@ -25,7 +25,7 @@ import org.apache.lucene.search.DocIdSetIterator;
  * <code>BitDocSet</code> represents an unordered set of Lucene Document Ids
  * using a BitSet.  A set bit represents inclusion in the set for that document.
  *
- * @version $Id$
+ *
  * @since solr 0.9
  */
 public class BitDocSet extends DocSetBase {
diff --git a/solr/src/java/org/apache/solr/search/CacheConfig.java b/solr/src/java/org/apache/solr/search/CacheConfig.java
index 736b2d9..f4dc054 100644
--- a/solr/src/java/org/apache/solr/search/CacheConfig.java
+++ b/solr/src/java/org/apache/solr/search/CacheConfig.java
@@ -34,7 +34,7 @@ import javax.xml.xpath.XPathConstants;
  * stored in the solrconfig.xml file, and implements a
  * factory to create caches.
  *
- * @version $Id$
+ *
  */
 public class CacheConfig {
   private String nodeName;
diff --git a/solr/src/java/org/apache/solr/search/CacheRegenerator.java b/solr/src/java/org/apache/solr/search/CacheRegenerator.java
index a72cab1..9c96c57 100644
--- a/solr/src/java/org/apache/solr/search/CacheRegenerator.java
+++ b/solr/src/java/org/apache/solr/search/CacheRegenerator.java
@@ -26,7 +26,7 @@ import java.io.IOException;
  * Implementations should have a noarg constructor and be thread safe (a single instance will be
  * used for all cache autowarmings).
  *
- * @version $Id$
+ *
  */
 public interface CacheRegenerator {
   /**
diff --git a/solr/src/java/org/apache/solr/search/DisMaxQParser.java b/solr/src/java/org/apache/solr/search/DisMaxQParser.java
index f8398a1..4833405 100644
--- a/solr/src/java/org/apache/solr/search/DisMaxQParser.java
+++ b/solr/src/java/org/apache/solr/search/DisMaxQParser.java
@@ -39,7 +39,7 @@ import java.util.Map;
  * <p/>
  * <b>Note: This API is experimental and may change in non backward-compatible ways in the future</b>
  *
- * @version $Id$
+ *
  */
 public class DisMaxQParser extends QParser {
 
diff --git a/solr/src/java/org/apache/solr/search/DocIterator.java b/solr/src/java/org/apache/solr/search/DocIterator.java
index 0481562..299a626 100644
--- a/solr/src/java/org/apache/solr/search/DocIterator.java
+++ b/solr/src/java/org/apache/solr/search/DocIterator.java
@@ -27,7 +27,7 @@ import java.util.Iterator;
  * DocIterator instance was retrieved.
  * </p>
  *
- * @version $Id$
+ *
  */
 public interface DocIterator extends Iterator<Integer> {
   // already declared in superclass, redeclaring prevents javadoc inheritance
diff --git a/solr/src/java/org/apache/solr/search/DocList.java b/solr/src/java/org/apache/solr/search/DocList.java
index eb70a3f..b344e5f 100644
--- a/solr/src/java/org/apache/solr/search/DocList.java
+++ b/solr/src/java/org/apache/solr/search/DocList.java
@@ -23,7 +23,7 @@ package org.apache.solr.search;
  * This list contains a subset of the complete list of documents actually matched: <code>size()</code>
  * document ids starting at <code>offset()</code>.
  *
- * @version $Id$
+ *
  * @since solr 0.9
  */
 public interface DocList extends DocSet {
diff --git a/solr/src/java/org/apache/solr/search/DocListAndSet.java b/solr/src/java/org/apache/solr/search/DocListAndSet.java
index 7549a32..c304c77 100644
--- a/solr/src/java/org/apache/solr/search/DocListAndSet.java
+++ b/solr/src/java/org/apache/solr/search/DocListAndSet.java
@@ -28,7 +28,7 @@ package org.apache.solr.search;
  * Oh, if only java had "out" parameters or multiple return args...
  * <p>
  *
- * @version $Id$
+ *
  * @since solr 0.9
  */
 public final class DocListAndSet {
diff --git a/solr/src/java/org/apache/solr/search/DocSet.java b/solr/src/java/org/apache/solr/search/DocSet.java
index fcf8785..dd69c97 100644
--- a/solr/src/java/org/apache/solr/search/DocSet.java
+++ b/solr/src/java/org/apache/solr/search/DocSet.java
@@ -35,7 +35,7 @@ import java.io.IOException;
  * a cache and could be shared.
  * </p>
  *
- * @version $Id$
+ *
  * @since solr 0.9
  */
 public interface DocSet /* extends Collection<Integer> */ {
diff --git a/solr/src/java/org/apache/solr/search/DocSetHitCollector.java b/solr/src/java/org/apache/solr/search/DocSetHitCollector.java
index 3caafa9..3557eff 100644
--- a/solr/src/java/org/apache/solr/search/DocSetHitCollector.java
+++ b/solr/src/java/org/apache/solr/search/DocSetHitCollector.java
@@ -25,7 +25,7 @@ import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import java.io.IOException;
 
 /**
- * @version $Id$
+ *
  */
 
 class DocSetCollector extends Collector {
diff --git a/solr/src/java/org/apache/solr/search/DocSlice.java b/solr/src/java/org/apache/solr/search/DocSlice.java
index 51fc6f1..148ea6a 100644
--- a/solr/src/java/org/apache/solr/search/DocSlice.java
+++ b/solr/src/java/org/apache/solr/search/DocSlice.java
@@ -22,7 +22,7 @@ import java.util.Arrays;
 /**
  * <code>DocSlice</code> implements DocList as an array of docids and optional scores.
  *
- * @version $Id$
+ *
  * @since solr 0.9
  */
 public class DocSlice extends DocSetBase implements DocList {
diff --git a/solr/src/java/org/apache/solr/search/FastLRUCache.java b/solr/src/java/org/apache/solr/search/FastLRUCache.java
index 594f37f..fabf07f 100644
--- a/solr/src/java/org/apache/solr/search/FastLRUCache.java
+++ b/solr/src/java/org/apache/solr/search/FastLRUCache.java
@@ -38,7 +38,7 @@ import java.util.concurrent.CopyOnWriteArrayList;
  * <p/>
  * Also see <a href="http://wiki.apache.org/solr/SolrCaching">SolrCaching</a>
  *
- * @version $Id$
+ *
  * @see org.apache.solr.common.util.ConcurrentLRUCache
  * @see org.apache.solr.search.SolrCache
  * @since solr 1.4
diff --git a/solr/src/java/org/apache/solr/search/HashDocSet.java b/solr/src/java/org/apache/solr/search/HashDocSet.java
index d5dd502..691211c 100644
--- a/solr/src/java/org/apache/solr/search/HashDocSet.java
+++ b/solr/src/java/org/apache/solr/search/HashDocSet.java
@@ -26,7 +26,7 @@ import org.apache.lucene.util.BitUtil;
  * in the set because it takes up less memory and is faster to iterate and take
  * set intersections.
  *
- * @version $Id$
+ *
  * @since solr 0.9
  */
 public final class HashDocSet extends DocSetBase {
diff --git a/solr/src/java/org/apache/solr/search/LRUCache.java b/solr/src/java/org/apache/solr/search/LRUCache.java
index 00f8379..ca28444 100644
--- a/solr/src/java/org/apache/solr/search/LRUCache.java
+++ b/solr/src/java/org/apache/solr/search/LRUCache.java
@@ -29,7 +29,7 @@ import java.net.URL;
 
 
 /**
- * @version $Id$
+ *
  */
 public class LRUCache<K,V> extends SolrCacheBase implements SolrCache<K,V> {
 
diff --git a/solr/src/java/org/apache/solr/search/QParser.java b/solr/src/java/org/apache/solr/search/QParser.java
index 9b845e6..9ae8f4d 100755
--- a/solr/src/java/org/apache/solr/search/QParser.java
+++ b/solr/src/java/org/apache/solr/search/QParser.java
@@ -31,7 +31,7 @@ import java.util.*;
 /**
  * <b>Note: This API is experimental and may change in non backward-compatible ways in the future</b>
  * 
- * @version $Id$
+ *
  */
 public abstract class QParser {
   protected String qstr;
diff --git a/solr/src/java/org/apache/solr/search/QueryParsing.java b/solr/src/java/org/apache/solr/search/QueryParsing.java
index 4ee880c..66c5da7 100644
--- a/solr/src/java/org/apache/solr/search/QueryParsing.java
+++ b/solr/src/java/org/apache/solr/search/QueryParsing.java
@@ -54,7 +54,7 @@ import java.util.Map;
 /**
  * Collection of static utilities useful for query parsing.
  *
- * @version $Id$
+ *
  */
 public class QueryParsing {
   public static final String OP = "q.op";  // the SolrParam used to override the QueryParser "default operator"
diff --git a/solr/src/java/org/apache/solr/search/QueryResultKey.java b/solr/src/java/org/apache/solr/search/QueryResultKey.java
index 7c1e080..679d390 100644
--- a/solr/src/java/org/apache/solr/search/QueryResultKey.java
+++ b/solr/src/java/org/apache/solr/search/QueryResultKey.java
@@ -24,7 +24,7 @@ import java.io.IOException;
 import java.util.List;
 
 /** A hash key encapsulating a query, a list of filters, and a sort
- * @version $Id$
+ *
  */
 public final class QueryResultKey {
   final Query query;
diff --git a/solr/src/java/org/apache/solr/search/QueryUtils.java b/solr/src/java/org/apache/solr/search/QueryUtils.java
index 931776c..f8cd6e9 100755
--- a/solr/src/java/org/apache/solr/search/QueryUtils.java
+++ b/solr/src/java/org/apache/solr/search/QueryUtils.java
@@ -25,7 +25,7 @@ import org.apache.lucene.search.MatchAllDocsQuery;
 import java.util.List;
 
 /**
- * @version $Id$
+ *
  */
 public class QueryUtils {
 
diff --git a/solr/src/java/org/apache/solr/search/ReturnFields.java b/solr/src/java/org/apache/solr/search/ReturnFields.java
index 741c8d8..3b66b12 100644
--- a/solr/src/java/org/apache/solr/search/ReturnFields.java
+++ b/solr/src/java/org/apache/solr/search/ReturnFields.java
@@ -42,7 +42,7 @@ import org.slf4j.LoggerFactory;
 /**
  * A class representing the return fields
  *
- * @version $Id$
+ *
  * @since solr 4.0
  */
 public class ReturnFields
diff --git a/solr/src/java/org/apache/solr/search/SolrCache.java b/solr/src/java/org/apache/solr/search/SolrCache.java
index a915436..2a87043 100644
--- a/solr/src/java/org/apache/solr/search/SolrCache.java
+++ b/solr/src/java/org/apache/solr/search/SolrCache.java
@@ -28,7 +28,7 @@ import java.io.IOException;
 /**
  * Primary API for dealing with Solr's internal caches.
  * 
- * @version $Id$
+ *
  */
 public interface SolrCache<K,V> extends SolrInfoMBean {
   public final static Logger log = LoggerFactory.getLogger(SolrCache.class);
diff --git a/solr/src/java/org/apache/solr/search/SolrFieldCacheMBean.java b/solr/src/java/org/apache/solr/search/SolrFieldCacheMBean.java
index aa81b7b..82ef1f0 100644
--- a/solr/src/java/org/apache/solr/search/SolrFieldCacheMBean.java
+++ b/solr/src/java/org/apache/solr/search/SolrFieldCacheMBean.java
@@ -33,7 +33,7 @@ import org.apache.lucene.util.FieldCacheSanityChecker.Insanity;
 /**
  * A SolrInfoMBean that provides introspection of the Lucene FiledCache, this is <b>NOT</b> a cache that is manged by Solr.
  *
- * @version $Id$
+ *
  */
 public class SolrFieldCacheMBean implements SolrInfoMBean {
 
diff --git a/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java b/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
index ce9f31a..f9f355b 100644
--- a/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
+++ b/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
@@ -54,7 +54,7 @@ import java.util.concurrent.atomic.AtomicLong;
  * SolrIndexSearcher adds schema awareness and caching functionality
  * over the lucene IndexSearcher.
  *
- * @version $Id$
+ *
  * @since solr 0.9
  */
 public class SolrIndexSearcher extends IndexSearcher implements SolrInfoMBean {
diff --git a/solr/src/java/org/apache/solr/search/Sorting.java b/solr/src/java/org/apache/solr/search/Sorting.java
index e116b81..325871c 100644
--- a/solr/src/java/org/apache/solr/search/Sorting.java
+++ b/solr/src/java/org/apache/solr/search/Sorting.java
@@ -22,7 +22,7 @@ import org.apache.lucene.search.*;
 /**
  * Extra lucene sorting utilities & convenience methods
  *
- * @version $Id$
+ *
  *
  */
 
diff --git a/solr/src/java/org/apache/solr/search/function/ByteFieldSource.java b/solr/src/java/org/apache/solr/search/function/ByteFieldSource.java
index 08ec212..6362463 100644
--- a/solr/src/java/org/apache/solr/search/function/ByteFieldSource.java
+++ b/solr/src/java/org/apache/solr/search/function/ByteFieldSource.java
@@ -28,7 +28,7 @@ import java.util.Map;
  * using <code>getInts()</code>
  * and makes those values available as other numeric types, casting as needed. *
  *
- * @version $Id$
+ *
  */
 
 public class ByteFieldSource extends NumericFieldCacheSource<ByteValues> {
diff --git a/solr/src/java/org/apache/solr/search/function/DocValues.java b/solr/src/java/org/apache/solr/search/function/DocValues.java
index fec0219..af71b15 100644
--- a/solr/src/java/org/apache/solr/search/function/DocValues.java
+++ b/solr/src/java/org/apache/solr/search/function/DocValues.java
@@ -27,7 +27,7 @@ import org.apache.solr.search.MutableValueFloat;
  * Represents field values as different types.
  * Normally created via a {@link ValueSource} for a particular field and reader.
  *
- * @version $Id$
+ *
  */
 
 // DocValues is distinct from ValueSource because
diff --git a/solr/src/java/org/apache/solr/search/function/DoubleFieldSource.java b/solr/src/java/org/apache/solr/search/function/DoubleFieldSource.java
index 789af74..0d20617 100644
--- a/solr/src/java/org/apache/solr/search/function/DoubleFieldSource.java
+++ b/solr/src/java/org/apache/solr/search/function/DoubleFieldSource.java
@@ -33,7 +33,7 @@ import java.util.Map;
  * using <code>getFloats()</code>
  * and makes those values available as other numeric types, casting as needed.
  *
- * @version $Id$
+ *
  */
 
 public class DoubleFieldSource extends NumericFieldCacheSource<DoubleValues> {
diff --git a/solr/src/java/org/apache/solr/search/function/FieldCacheSource.java b/solr/src/java/org/apache/solr/search/function/FieldCacheSource.java
index df80cec..2dd1d87 100644
--- a/solr/src/java/org/apache/solr/search/function/FieldCacheSource.java
+++ b/solr/src/java/org/apache/solr/search/function/FieldCacheSource.java
@@ -23,7 +23,7 @@ import org.apache.lucene.search.FieldCache;
  * A base class for ValueSource implementations that retrieve values for
  * a single field from the {@link org.apache.lucene.search.FieldCache}.
  *
- * @version $Id$
+ *
  */
 public abstract class FieldCacheSource extends ValueSource {
   protected String field;
diff --git a/solr/src/java/org/apache/solr/search/function/FileFloatSource.java b/solr/src/java/org/apache/solr/search/function/FileFloatSource.java
index 3e25cd3..0a12d77 100755
--- a/solr/src/java/org/apache/solr/search/function/FileFloatSource.java
+++ b/solr/src/java/org/apache/solr/search/function/FileFloatSource.java
@@ -51,7 +51,7 @@ import org.slf4j.LoggerFactory;
 
 /**
  * Obtains float field values from an external file.
- * @version $Id$
+ *
  */
 
 public class FileFloatSource extends ValueSource {
diff --git a/solr/src/java/org/apache/solr/search/function/FloatFieldSource.java b/solr/src/java/org/apache/solr/search/function/FloatFieldSource.java
index 6158420..abcd634 100644
--- a/solr/src/java/org/apache/solr/search/function/FloatFieldSource.java
+++ b/solr/src/java/org/apache/solr/search/function/FloatFieldSource.java
@@ -32,7 +32,7 @@ import org.apache.solr.search.MutableValueFloat;
  * using <code>getFloats()</code>
  * and makes those values available as other numeric types, casting as needed.
  *
- * @version $Id$
+ *
  */
 
 public class FloatFieldSource extends NumericFieldCacheSource<FloatValues> {
diff --git a/solr/src/java/org/apache/solr/search/function/FunctionQuery.java b/solr/src/java/org/apache/solr/search/function/FunctionQuery.java
index beb43bc..e7d4be0 100644
--- a/solr/src/java/org/apache/solr/search/function/FunctionQuery.java
+++ b/solr/src/java/org/apache/solr/search/function/FunctionQuery.java
@@ -34,7 +34,7 @@ import java.util.Map;
  *
  * <b>Note: This API is experimental and may change in non backward-compatible ways in the future</b>
  *
- * @version $Id$
+ *
  */
 public class FunctionQuery extends Query {
   ValueSource func;
diff --git a/solr/src/java/org/apache/solr/search/function/IntFieldSource.java b/solr/src/java/org/apache/solr/search/function/IntFieldSource.java
index e2c94f9..8f7a580 100644
--- a/solr/src/java/org/apache/solr/search/function/IntFieldSource.java
+++ b/solr/src/java/org/apache/solr/search/function/IntFieldSource.java
@@ -32,7 +32,7 @@ import java.util.Map;
  * Obtains int field values from the {@link org.apache.lucene.search.FieldCache}
  * using <code>getInts()</code>
  * and makes those values available as other numeric types, casting as needed. *
- * @version $Id$
+ *
  */
 
 public class IntFieldSource extends NumericFieldCacheSource<IntValues> {
diff --git a/solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java b/solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java
index 58204c0..cbfafbd 100644
--- a/solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java
+++ b/solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java
@@ -29,7 +29,7 @@ import java.util.Map;
  * <br>
  * Normally Used as an argument to a {@link FunctionQuery}
  *
- * @version $Id$
+ *
  */
 public class LinearFloatFunction extends ValueSource {
   protected final ValueSource source;
diff --git a/solr/src/java/org/apache/solr/search/function/LongFieldSource.java b/solr/src/java/org/apache/solr/search/function/LongFieldSource.java
index 8e75f92..03ff11e 100644
--- a/solr/src/java/org/apache/solr/search/function/LongFieldSource.java
+++ b/solr/src/java/org/apache/solr/search/function/LongFieldSource.java
@@ -34,7 +34,7 @@ import java.util.Map;
  * using <code>getFloats()</code>
  * and makes those values available as other numeric types, casting as needed.
  *
- * @version $Id$
+ *
  */
 
 public class LongFieldSource extends NumericFieldCacheSource<LongValues> {
diff --git a/solr/src/java/org/apache/solr/search/function/NumericFieldCacheSource.java b/solr/src/java/org/apache/solr/search/function/NumericFieldCacheSource.java
index 710a009..f7fde5c 100644
--- a/solr/src/java/org/apache/solr/search/function/NumericFieldCacheSource.java
+++ b/solr/src/java/org/apache/solr/search/function/NumericFieldCacheSource.java
@@ -22,7 +22,7 @@ import org.apache.lucene.search.cache.CachedArrayCreator;
 
 /**
  * 
- * @version $Id$
+ *
  */
 public abstract class NumericFieldCacheSource<T extends CachedArray> extends FieldCacheSource {
   protected final CachedArrayCreator<T> creator;
diff --git a/solr/src/java/org/apache/solr/search/function/OrdFieldSource.java b/solr/src/java/org/apache/solr/search/function/OrdFieldSource.java
index 8e18898..f4ac613 100644
--- a/solr/src/java/org/apache/solr/search/function/OrdFieldSource.java
+++ b/solr/src/java/org/apache/solr/search/function/OrdFieldSource.java
@@ -42,7 +42,7 @@ import java.util.Map;
  * <br>WARNING: as of Solr 1.4, ord() and rord() can cause excess memory use since they must use a FieldCache entry
  * at the top level reader, while sorting and function queries now use entries at the segment level.  Hence sorting
  * or using a different function query, in addition to ord()/rord() will double memory use.
- * @version $Id$
+ *
  */
 
 public class OrdFieldSource extends ValueSource {
diff --git a/solr/src/java/org/apache/solr/search/function/RangeMapFloatFunction.java b/solr/src/java/org/apache/solr/search/function/RangeMapFloatFunction.java
index 1703c2f..403f1b3 100755
--- a/solr/src/java/org/apache/solr/search/function/RangeMapFloatFunction.java
+++ b/solr/src/java/org/apache/solr/search/function/RangeMapFloatFunction.java
@@ -29,7 +29,7 @@ import java.util.Map;
  * <br>
  * Normally Used as an argument to a {@link org.apache.solr.search.function.FunctionQuery}
  *
- * @version $Id$
+ *
  */
 public class RangeMapFloatFunction extends ValueSource {
   protected final ValueSource source;
diff --git a/solr/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java b/solr/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java
index 430549c..b28ed88 100644
--- a/solr/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java
+++ b/solr/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java
@@ -39,7 +39,7 @@ import java.util.Map;
  *
  * @see FunctionQuery
  *
- * @version $Id$
+ *
  */
 public class ReciprocalFloatFunction extends ValueSource {
   protected final ValueSource source;
diff --git a/solr/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java b/solr/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java
index a7508ce..3eba69a 100644
--- a/solr/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java
+++ b/solr/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java
@@ -43,7 +43,7 @@ import java.util.Map;
  * at the top level reader, while sorting and function queries now use entries at the segment level.  Hence sorting
  * or using a different function query, in addition to ord()/rord() will double memory use.
  * 
- * @version $Id$
+ *
  */
 
 public class ReverseOrdFieldSource extends ValueSource {
diff --git a/solr/src/java/org/apache/solr/search/function/ValueSource.java b/solr/src/java/org/apache/solr/search/function/ValueSource.java
index 5b4bd29..52189c0 100644
--- a/solr/src/java/org/apache/solr/search/function/ValueSource.java
+++ b/solr/src/java/org/apache/solr/search/function/ValueSource.java
@@ -39,7 +39,7 @@ import java.util.Map;
  * <br>
  * Often used when creating a {@link FunctionQuery}.
  *
- * @version $Id$
+ *
  */
 public abstract class ValueSource implements Serializable {
 
diff --git a/solr/src/java/org/apache/solr/update/AddUpdateCommand.java b/solr/src/java/org/apache/solr/update/AddUpdateCommand.java
index 6a02010..a8599b4 100644
--- a/solr/src/java/org/apache/solr/update/AddUpdateCommand.java
+++ b/solr/src/java/org/apache/solr/update/AddUpdateCommand.java
@@ -27,7 +27,7 @@ import org.apache.solr.schema.IndexSchema;
 import org.apache.solr.schema.SchemaField;
 
 /**
- * @version $Id$
+ *
  */
 public class AddUpdateCommand extends UpdateCommand {
    // optional id in "internal" indexed form... if it is needed and not supplied,
diff --git a/solr/src/java/org/apache/solr/update/CommitUpdateCommand.java b/solr/src/java/org/apache/solr/update/CommitUpdateCommand.java
index a6bdb39..439bddb 100644
--- a/solr/src/java/org/apache/solr/update/CommitUpdateCommand.java
+++ b/solr/src/java/org/apache/solr/update/CommitUpdateCommand.java
@@ -20,7 +20,7 @@ package org.apache.solr.update;
 import org.apache.solr.request.SolrQueryRequest;
 
 /**
- * @version $Id$
+ *
  */
 public class CommitUpdateCommand extends UpdateCommand {
   public boolean optimize;
diff --git a/solr/src/java/org/apache/solr/update/DeleteUpdateCommand.java b/solr/src/java/org/apache/solr/update/DeleteUpdateCommand.java
index 79b865a..adfd5ca 100644
--- a/solr/src/java/org/apache/solr/update/DeleteUpdateCommand.java
+++ b/solr/src/java/org/apache/solr/update/DeleteUpdateCommand.java
@@ -20,7 +20,7 @@ package org.apache.solr.update;
 import org.apache.solr.request.SolrQueryRequest;
 
 /**
- * @version $Id$
+ *
  */
 public class DeleteUpdateCommand extends UpdateCommand {
   public String id;    // external (printable) id, for delete-by-id
diff --git a/solr/src/java/org/apache/solr/update/DocumentBuilder.java b/solr/src/java/org/apache/solr/update/DocumentBuilder.java
index a7b80e0..3194dd7 100644
--- a/solr/src/java/org/apache/solr/update/DocumentBuilder.java
+++ b/solr/src/java/org/apache/solr/update/DocumentBuilder.java
@@ -30,7 +30,7 @@ import org.apache.solr.common.SolrInputField;
 import org.apache.solr.schema.*;
 
 /**
- * @version $Id$
+ *
  */
 
 
diff --git a/solr/src/java/org/apache/solr/update/MergeIndexesCommand.java b/solr/src/java/org/apache/solr/update/MergeIndexesCommand.java
index 0eba124..412d288 100644
--- a/solr/src/java/org/apache/solr/update/MergeIndexesCommand.java
+++ b/solr/src/java/org/apache/solr/update/MergeIndexesCommand.java
@@ -24,7 +24,7 @@ import org.apache.solr.request.SolrQueryRequest;
  * A merge indexes command encapsulated in an object.
  *
  * @since solr 1.4
- * @version $Id$
+ *
  */
 public class MergeIndexesCommand extends UpdateCommand {
   public Directory[] dirs;
diff --git a/solr/src/java/org/apache/solr/update/RollbackUpdateCommand.java b/solr/src/java/org/apache/solr/update/RollbackUpdateCommand.java
index 1dd12ae..1308c53 100644
--- a/solr/src/java/org/apache/solr/update/RollbackUpdateCommand.java
+++ b/solr/src/java/org/apache/solr/update/RollbackUpdateCommand.java
@@ -20,7 +20,7 @@ package org.apache.solr.update;
 import org.apache.solr.request.SolrQueryRequest;
 
 /**
- * @version $Id$
+ *
  * @since Solr 1.4
  */
 public class RollbackUpdateCommand extends UpdateCommand {
diff --git a/solr/src/java/org/apache/solr/update/SolrIndexConfig.java b/solr/src/java/org/apache/solr/update/SolrIndexConfig.java
index b65c500..d51e705 100644
--- a/solr/src/java/org/apache/solr/update/SolrIndexConfig.java
+++ b/solr/src/java/org/apache/solr/update/SolrIndexConfig.java
@@ -36,7 +36,7 @@ import java.util.HashMap;
 // This config object encapsulates IndexWriter config params.
 //
 /**
- * @version $Id$
+ *
  */
 public class SolrIndexConfig {
   public static final Logger log = LoggerFactory.getLogger(SolrIndexConfig.class);
diff --git a/solr/src/java/org/apache/solr/update/SolrIndexWriter.java b/solr/src/java/org/apache/solr/update/SolrIndexWriter.java
index 5ecb499..64ef167 100644
--- a/solr/src/java/org/apache/solr/update/SolrIndexWriter.java
+++ b/solr/src/java/org/apache/solr/update/SolrIndexWriter.java
@@ -18,10 +18,8 @@
 package org.apache.solr.update;
 
 import org.apache.lucene.index.*;
-import org.apache.lucene.index.IndexWriterConfig.OpenMode;
 import org.apache.lucene.index.codecs.CodecProvider;
 import org.apache.lucene.store.*;
-import org.apache.lucene.util.Version;
 import org.apache.solr.common.SolrException;
 import org.apache.solr.core.DirectoryFactory;
 import org.apache.solr.schema.IndexSchema;
@@ -30,7 +28,6 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import java.io.File;
-import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
@@ -42,9 +39,8 @@ import java.util.Locale;
 /**
  * An IndexWriter that is configured via Solr config mechanisms.
  *
-* @version $Id$
-* @since solr 0.9
-*/
+ * @since solr 0.9
+ */
 
 public class SolrIndexWriter extends IndexWriter {
   private static Logger log = LoggerFactory.getLogger(SolrIndexWriter.class);
diff --git a/solr/src/java/org/apache/solr/update/UpdateCommand.java b/solr/src/java/org/apache/solr/update/UpdateCommand.java
index 0e8f8bc..215f0e2 100644
--- a/solr/src/java/org/apache/solr/update/UpdateCommand.java
+++ b/solr/src/java/org/apache/solr/update/UpdateCommand.java
@@ -22,7 +22,7 @@ import org.apache.solr.request.SolrQueryRequest;
 
 /** An index update command encapsulated in an object (Command pattern)
  *
- * @version $Id$
+ *
  */
   public class UpdateCommand {
     protected final SolrQueryRequest req;
diff --git a/solr/src/java/org/apache/solr/update/UpdateHandler.java b/solr/src/java/org/apache/solr/update/UpdateHandler.java
index b90b80e..a4f7eb0 100644
--- a/solr/src/java/org/apache/solr/update/UpdateHandler.java
+++ b/solr/src/java/org/apache/solr/update/UpdateHandler.java
@@ -42,7 +42,7 @@ import org.apache.solr.core.*;
  * <code>UpdateHandler</code> handles requests to change the index
  * (adds, deletes, commits, optimizes, etc).
  *
- * @version $Id$
+ *
  * @since solr 0.9
  */
 
diff --git a/solr/src/java/org/apache/solr/util/BCDUtils.java b/solr/src/java/org/apache/solr/util/BCDUtils.java
index 2cd20cf..66c52d3 100644
--- a/solr/src/java/org/apache/solr/util/BCDUtils.java
+++ b/solr/src/java/org/apache/solr/util/BCDUtils.java
@@ -19,7 +19,7 @@ package org.apache.solr.util;
 
 
 /**
- * @version $Id$
+ *
  */
 public class BCDUtils {
   // idiv is expensive...
diff --git a/solr/src/java/org/apache/solr/util/DateMathParser.java b/solr/src/java/org/apache/solr/util/DateMathParser.java
index bb62e58..8115213 100644
--- a/solr/src/java/org/apache/solr/util/DateMathParser.java
+++ b/solr/src/java/org/apache/solr/util/DateMathParser.java
@@ -75,7 +75,7 @@ import java.util.regex.Pattern;
  * inspecting the keySet of <code>CALENDAR_UNITS</code>.
  * </p>
  *
- * @version $Id$
+ *
  */
 public class DateMathParser  {
 
diff --git a/solr/src/java/org/apache/solr/util/NumberUtils.java b/solr/src/java/org/apache/solr/util/NumberUtils.java
index 2954a36..79c83b8 100644
--- a/solr/src/java/org/apache/solr/util/NumberUtils.java
+++ b/solr/src/java/org/apache/solr/util/NumberUtils.java
@@ -20,7 +20,7 @@ package org.apache.solr.util;
 import org.apache.lucene.util.BytesRef;
 
 /**
- * @version $Id$
+ *
  */
 public class NumberUtils {
 
diff --git a/solr/src/java/org/apache/solr/util/RefCounted.java b/solr/src/java/org/apache/solr/util/RefCounted.java
index 508fb01..6cd5abc 100644
--- a/solr/src/java/org/apache/solr/util/RefCounted.java
+++ b/solr/src/java/org/apache/solr/util/RefCounted.java
@@ -28,7 +28,7 @@ import java.util.concurrent.atomic.AtomicInteger;
  * is safe since the count can only hit zero if it's unregistered (and
  * hence incref() will not be called again on it).
  *
- * @version $Id$
+ *
  */
 
 public abstract class RefCounted<Type> {
diff --git a/solr/src/java/org/apache/solr/util/SuggestMissingFactories.java b/solr/src/java/org/apache/solr/util/SuggestMissingFactories.java
index b8d0625..013f6bc 100644
--- a/solr/src/java/org/apache/solr/util/SuggestMissingFactories.java
+++ b/solr/src/java/org/apache/solr/util/SuggestMissingFactories.java
@@ -35,7 +35,7 @@ import java.util.jar.*;
 /**
  * Given a list of Jar files, suggest missing analysis factories.
  *
- * @version $Id$
+ *
  */
 public class SuggestMissingFactories {
 
diff --git a/solr/src/java/org/apache/solr/util/plugin/AbstractPluginLoader.java b/solr/src/java/org/apache/solr/util/plugin/AbstractPluginLoader.java
index f3488b4..635960c 100644
--- a/solr/src/java/org/apache/solr/util/plugin/AbstractPluginLoader.java
+++ b/solr/src/java/org/apache/solr/util/plugin/AbstractPluginLoader.java
@@ -33,7 +33,7 @@ import org.w3c.dom.NodeList;
 /**
  * An abstract super class that manages standard solr-style plugin configuration.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class AbstractPluginLoader<T>
diff --git a/solr/src/java/org/apache/solr/util/plugin/MapInitializedPlugin.java b/solr/src/java/org/apache/solr/util/plugin/MapInitializedPlugin.java
index 933db38..c499f70 100644
--- a/solr/src/java/org/apache/solr/util/plugin/MapInitializedPlugin.java
+++ b/solr/src/java/org/apache/solr/util/plugin/MapInitializedPlugin.java
@@ -22,7 +22,7 @@ import java.util.Map;
 /**
  * A plugin that can be initialized with a Map<String,String>
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public interface MapInitializedPlugin {
diff --git a/solr/src/java/org/apache/solr/util/plugin/MapPluginLoader.java b/solr/src/java/org/apache/solr/util/plugin/MapPluginLoader.java
index 6a7f55b..3f28494 100644
--- a/solr/src/java/org/apache/solr/util/plugin/MapPluginLoader.java
+++ b/solr/src/java/org/apache/solr/util/plugin/MapPluginLoader.java
@@ -24,7 +24,7 @@ import org.w3c.dom.Node;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class MapPluginLoader<T extends MapInitializedPlugin> extends AbstractPluginLoader<T> 
diff --git a/solr/src/java/org/apache/solr/util/plugin/NamedListInitializedPlugin.java b/solr/src/java/org/apache/solr/util/plugin/NamedListInitializedPlugin.java
index a3c6d3c..ad8a533 100644
--- a/solr/src/java/org/apache/solr/util/plugin/NamedListInitializedPlugin.java
+++ b/solr/src/java/org/apache/solr/util/plugin/NamedListInitializedPlugin.java
@@ -22,7 +22,7 @@ import org.apache.solr.common.util.NamedList;
 /**
  * A plugin that can be initialized with a NamedList
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public interface NamedListInitializedPlugin {
diff --git a/solr/src/java/org/apache/solr/util/plugin/NamedListPluginLoader.java b/solr/src/java/org/apache/solr/util/plugin/NamedListPluginLoader.java
index 2e064ca..13ad5fe 100644
--- a/solr/src/java/org/apache/solr/util/plugin/NamedListPluginLoader.java
+++ b/solr/src/java/org/apache/solr/util/plugin/NamedListPluginLoader.java
@@ -23,7 +23,7 @@ import org.apache.solr.common.util.DOMUtil;
 import org.w3c.dom.Node;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class NamedListPluginLoader<T extends NamedListInitializedPlugin> extends AbstractPluginLoader<T> 
diff --git a/solr/src/java/org/apache/solr/util/plugin/PluginInfoInitialized.java b/solr/src/java/org/apache/solr/util/plugin/PluginInfoInitialized.java
index 36e6e75..2b2b020 100644
--- a/solr/src/java/org/apache/solr/util/plugin/PluginInfoInitialized.java
+++ b/solr/src/java/org/apache/solr/util/plugin/PluginInfoInitialized.java
@@ -21,7 +21,7 @@ import org.apache.solr.core.PluginInfo;
 /**
  * A plugin that can be initialized with a PluginInfo
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public interface PluginInfoInitialized {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/ResponseParser.java b/solr/src/solrj/org/apache/solr/client/solrj/ResponseParser.java
index 5c028be..90cd47d 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/ResponseParser.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/ResponseParser.java
@@ -23,7 +23,7 @@ import org.apache.solr.common.util.NamedList;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class ResponseParser
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/SolrQuery.java b/solr/src/solrj/org/apache/solr/client/solrj/SolrQuery.java
index 20739fe..a7228f0 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/SolrQuery.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/SolrQuery.java
@@ -31,7 +31,7 @@ import java.util.regex.Pattern;
  * This is an augmented SolrParams with get/set/add fields for common fields used
  * in the Standard and Dismax request handlers
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrQuery extends ModifiableSolrParams 
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/SolrRequest.java b/solr/src/solrj/org/apache/solr/client/solrj/SolrRequest.java
index e60df31..8a6942c 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/SolrRequest.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/SolrRequest.java
@@ -26,7 +26,7 @@ import org.apache.solr.common.util.ContentStream;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class SolrRequest implements Serializable
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/SolrResponse.java b/solr/src/solrj/org/apache/solr/client/solrj/SolrResponse.java
index aa89c74..c6cb357 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/SolrResponse.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/SolrResponse.java
@@ -24,7 +24,7 @@ import org.apache.solr.common.util.NamedList;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class SolrResponse implements Serializable
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/SolrServer.java b/solr/src/solrj/org/apache/solr/client/solrj/SolrServer.java
index 72c6160..4f5f86f 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/SolrServer.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/SolrServer.java
@@ -37,7 +37,7 @@ import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class SolrServer implements Serializable
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/SolrServerException.java b/solr/src/solrj/org/apache/solr/client/solrj/SolrServerException.java
index 67c46d9..b881509 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/SolrServerException.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/SolrServerException.java
@@ -19,7 +19,7 @@ package org.apache.solr.client.solrj;
 
 /** Exception to catch all types of communication / parsing issues associated with talking to SOLR
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrServerException extends Exception {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.java b/solr/src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.java
index f01cb9d..10096b5 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.java
@@ -29,7 +29,7 @@ import java.nio.ByteBuffer;
 /**
  * A class to map objects to and from solr documents.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class DocumentObjectBinder {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/beans/Field.java b/solr/src/solrj/org/apache/solr/client/solrj/beans/Field.java
index 156fcef..b4beb68 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/beans/Field.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/beans/Field.java
@@ -24,7 +24,7 @@ import java.lang.annotation.Retention;
 
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 @Target({FIELD, METHOD})
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/impl/BinaryRequestWriter.java b/solr/src/solrj/org/apache/solr/client/solrj/impl/BinaryRequestWriter.java
index 37bf449..0a5a012 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/impl/BinaryRequestWriter.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/impl/BinaryRequestWriter.java
@@ -30,7 +30,7 @@ import java.util.List;
 /**
  * A RequestWriter which writes requests in the javabin format
  *
- * @version $Id$
+ *
  * @see org.apache.solr.client.solrj.request.RequestWriter
  * @since solr 1.4
  */
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/impl/BinaryResponseParser.java b/solr/src/solrj/org/apache/solr/client/solrj/impl/BinaryResponseParser.java
index 1379460..7ac9294 100755
--- a/solr/src/solrj/org/apache/solr/client/solrj/impl/BinaryResponseParser.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/impl/BinaryResponseParser.java
@@ -26,7 +26,7 @@ import java.io.InputStream;
 import java.io.Reader;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class BinaryResponseParser extends ResponseParser {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer.java b/solr/src/solrj/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer.java
index e9f795b..2f1c19a 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer.java
@@ -57,7 +57,7 @@ import org.slf4j.LoggerFactory;
  * The {@link CommonsHttpSolrServer} uses the Apache Commons HTTP Client to connect to solr. 
  * <pre class="prettyprint" >SolrServer server = new CommonsHttpSolrServer( url );</pre>
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class CommonsHttpSolrServer extends SolrServer 
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingBinaryResponseParser.java b/solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingBinaryResponseParser.java
index b0b9086..89708d7 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingBinaryResponseParser.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingBinaryResponseParser.java
@@ -32,7 +32,7 @@ import java.util.List;
  * A BinaryResponseParser that sends callback events rather then build
  * a large response 
  * 
- * @version $Id: StreamingBinaryResponseParser.java 990180 2010-08-27 15:40:17Z rmuir $
+ *
  * @since solr 4.0
  */
 public class StreamingBinaryResponseParser extends BinaryResponseParser {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer.java b/solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer.java
index 607480e..206dd50 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer.java
@@ -49,7 +49,7 @@ import org.slf4j.LoggerFactory;
  * it is only recommended to use the {@link StreamingUpdateSolrServer} with
  * /update requests.  The query interface is better suited for 
  * 
- * @version $Id: CommonsHttpSolrServer.java 724175 2008-12-07 19:07:11Z ryan $
+ *
  * @since solr 1.4
  */
 public class StreamingUpdateSolrServer extends CommonsHttpSolrServer
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/impl/XMLResponseParser.java b/solr/src/solrj/org/apache/solr/client/solrj/impl/XMLResponseParser.java
index f75681f..d17b3e6 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/impl/XMLResponseParser.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/impl/XMLResponseParser.java
@@ -44,7 +44,7 @@ import org.apache.solr.common.util.XMLErrorLogger;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class XMLResponseParser extends ResponseParser
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.java b/solr/src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.java
index d1fe433..2e8bfaf 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.java
@@ -34,7 +34,7 @@ import org.apache.solr.common.util.ContentStream;
 
 /**
  * This class is experimental and subject to change.
- * @version $Id: CoreAdminRequest.java 606335 2007-12-21 22:23:39Z ryan $
+ *
  * @since solr 1.3
  */
 public class CoreAdminRequest extends SolrRequest
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/DirectXmlRequest.java b/solr/src/solrj/org/apache/solr/client/solrj/request/DirectXmlRequest.java
index 23964b6..8d0fdba 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/DirectXmlRequest.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/DirectXmlRequest.java
@@ -31,7 +31,7 @@ import org.apache.solr.common.util.ContentStream;
 /**
  * Send arbitrary XML to a request handler
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class DirectXmlRequest extends SolrRequest
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/DocumentAnalysisRequest.java b/solr/src/solrj/org/apache/solr/client/solrj/request/DocumentAnalysisRequest.java
index 50f937c..56ba946 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/DocumentAnalysisRequest.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/DocumentAnalysisRequest.java
@@ -36,7 +36,7 @@ import java.util.List;
 /**
  * A request for the org.apache.solr.handler.DocumentAnalysisRequestHandler.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class DocumentAnalysisRequest extends SolrRequest {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/FieldAnalysisRequest.java b/solr/src/solrj/org/apache/solr/client/solrj/request/FieldAnalysisRequest.java
index edffe7e..f17efa5 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/FieldAnalysisRequest.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/FieldAnalysisRequest.java
@@ -34,7 +34,7 @@ import java.util.List;
 /**
  * A request for the org.apache.solr.handler.DocumentAnalysisRequestHandler.
  *
- * @version $Id$
+ *
  * @since solr.14
  */
 public class FieldAnalysisRequest extends SolrRequest {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/JavaBinUpdateRequestCodec.java b/solr/src/solrj/org/apache/solr/client/solrj/request/JavaBinUpdateRequestCodec.java
index 0f5842e..cbb8b81 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/JavaBinUpdateRequestCodec.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/JavaBinUpdateRequestCodec.java
@@ -33,7 +33,7 @@ import java.util.*;
  * Provides methods for marshalling an UpdateRequest to a NamedList which can be serialized in the javabin format and
  * vice versa.
  *
- * @version $Id$
+ *
  * @see org.apache.solr.common.util.JavaBinCodec
  * @since solr 1.4
  */
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/LukeRequest.java b/solr/src/solrj/org/apache/solr/client/solrj/request/LukeRequest.java
index 3109203..1b575a0 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/LukeRequest.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/LukeRequest.java
@@ -33,7 +33,7 @@ import org.apache.solr.common.util.ContentStream;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class LukeRequest extends SolrRequest
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/QueryRequest.java b/solr/src/solrj/org/apache/solr/client/solrj/request/QueryRequest.java
index 48ce71a..ed58c9f 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/QueryRequest.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/QueryRequest.java
@@ -29,7 +29,7 @@ import org.apache.solr.common.util.ContentStream;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class QueryRequest extends SolrRequest
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/RequestWriter.java b/solr/src/solrj/org/apache/solr/client/solrj/request/RequestWriter.java
index 63cd0c0..70d10d0 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/RequestWriter.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/RequestWriter.java
@@ -33,7 +33,7 @@ import java.nio.charset.Charset;
  * <p/>
  * A subclass can override the methods in this class to supply a custom format in which a request can be sent.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class RequestWriter {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/SolrPing.java b/solr/src/solrj/org/apache/solr/client/solrj/request/SolrPing.java
index 16c7e17..41062dc 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/SolrPing.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/SolrPing.java
@@ -29,7 +29,7 @@ import org.apache.solr.common.util.ContentStream;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrPing extends SolrRequest
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest.java b/solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest.java
index 8038dcc..8edef78 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest.java
@@ -34,7 +34,7 @@ import org.apache.solr.common.util.XML;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class UpdateRequest extends AbstractUpdateRequest {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/AnalysisResponseBase.java b/solr/src/solrj/org/apache/solr/client/solrj/response/AnalysisResponseBase.java
index 55d87d4..097b0de 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/AnalysisResponseBase.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/AnalysisResponseBase.java
@@ -26,7 +26,7 @@ import java.util.Map;
 /**
  * A base class for all analysis responses.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class AnalysisResponseBase extends SolrResponseBase {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/CoreAdminResponse.java b/solr/src/solrj/org/apache/solr/client/solrj/response/CoreAdminResponse.java
index 7034402..639aa82 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/CoreAdminResponse.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/CoreAdminResponse.java
@@ -22,7 +22,7 @@ import org.apache.solr.common.util.NamedList;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class CoreAdminResponse extends SolrResponseBase
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/DocumentAnalysisResponse.java b/solr/src/solrj/org/apache/solr/client/solrj/response/DocumentAnalysisResponse.java
index f0d5dff..7f4bb4d 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/DocumentAnalysisResponse.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/DocumentAnalysisResponse.java
@@ -28,7 +28,7 @@ import java.util.Map;
  * A response that is returned by processing the {@link org.apache.solr.client.solrj.request.DocumentAnalysisRequest}.
  * Holds a map of {@link DocumentAnalysis} objects by a document id (unique key).
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class DocumentAnalysisResponse extends AnalysisResponseBase implements Iterable<Map.Entry<String, DocumentAnalysisResponse.DocumentAnalysis>> {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/FacetField.java b/solr/src/solrj/org/apache/solr/client/solrj/response/FacetField.java
index bbfaa47..6b65348 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/FacetField.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/FacetField.java
@@ -28,7 +28,6 @@ import org.apache.solr.client.solrj.util.ClientUtils;
   * A utility class to hold the facet response.  It could use the NamedList container,
   * but for JSTL, it is nice to have something that implements List so it can be iterated
   * 
-  * @version $Id$
   * @since solr 1.3
   */
  public class FacetField implements Serializable
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/FieldAnalysisResponse.java b/solr/src/solrj/org/apache/solr/client/solrj/response/FieldAnalysisResponse.java
index e734364..81259d7 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/FieldAnalysisResponse.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/FieldAnalysisResponse.java
@@ -27,7 +27,7 @@ import java.util.Map;
  * A response that is returned by processing the {@link org.apache.solr.client.solrj.request.FieldAnalysisRequest}.
  * Holds a map of {@link Analysis} objects per field name as well as a map of {@link Analysis} objects per field type.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class FieldAnalysisResponse extends AnalysisResponseBase {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/FieldStatsInfo.java b/solr/src/solrj/org/apache/solr/client/solrj/response/FieldStatsInfo.java
index d0154c2..c32cd1c 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/FieldStatsInfo.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/FieldStatsInfo.java
@@ -27,7 +27,7 @@ import java.util.Map;
 /**
  * Holds stats info
  *
- * @version $Id: SpellCheckResponse.java 693622 2008-09-09 21:21:06Z gsingers $
+ *
  * @since solr 1.4
  */
 public class FieldStatsInfo implements Serializable {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/LukeResponse.java b/solr/src/solrj/org/apache/solr/client/solrj/response/LukeResponse.java
index 4e4877c..68f3be6 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/LukeResponse.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/LukeResponse.java
@@ -27,7 +27,7 @@ import java.util.*;
 /**
  * This is an incomplete representation of the data returned from Luke
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class LukeResponse extends SolrResponseBase {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse.java b/solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse.java
index f1259d1..7888328 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/QueryResponse.java
@@ -31,7 +31,7 @@ import org.apache.solr.client.solrj.beans.DocumentObjectBinder;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 @SuppressWarnings("unchecked")
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/SolrPingResponse.java b/solr/src/solrj/org/apache/solr/client/solrj/response/SolrPingResponse.java
index ad58878..4cdfc8d 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/SolrPingResponse.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/SolrPingResponse.java
@@ -19,7 +19,7 @@ package org.apache.solr.client.solrj.response;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrPingResponse extends SolrResponseBase
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/SolrResponseBase.java b/solr/src/solrj/org/apache/solr/client/solrj/response/SolrResponseBase.java
index ed0908f..16f2cdc 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/SolrResponseBase.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/SolrResponseBase.java
@@ -22,7 +22,7 @@ import org.apache.solr.common.util.NamedList;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrResponseBase extends SolrResponse
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java b/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java
index c5bb419..238e3a7 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java
@@ -26,7 +26,7 @@ import java.util.Map;
 /**
  * Encapsulates responses from SpellCheckComponent
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SpellCheckResponse {
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/response/UpdateResponse.java b/solr/src/solrj/org/apache/solr/client/solrj/response/UpdateResponse.java
index 028b313..3f56a7d 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/response/UpdateResponse.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/response/UpdateResponse.java
@@ -21,7 +21,7 @@ package org.apache.solr.client.solrj.response;
 /**
  * TODO -- mostly a stub until we have a defined output format
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class UpdateResponse extends SolrResponseBase
diff --git a/solr/src/solrj/org/apache/solr/client/solrj/util/ClientUtils.java b/solr/src/solrj/org/apache/solr/client/solrj/util/ClientUtils.java
index 5022534..038d8a7 100644
--- a/solr/src/solrj/org/apache/solr/client/solrj/util/ClientUtils.java
+++ b/solr/src/solrj/org/apache/solr/client/solrj/util/ClientUtils.java
@@ -42,7 +42,7 @@ import org.apache.solr.common.util.*;
 /**
  * TODO? should this go in common?
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class ClientUtils 
diff --git a/solr/src/test-framework/org/apache/solr/util/TestHarness.java b/solr/src/test-framework/org/apache/solr/util/TestHarness.java
index 4eee02b..59f0f40 100644
--- a/solr/src/test-framework/org/apache/solr/util/TestHarness.java
+++ b/solr/src/test-framework/org/apache/solr/util/TestHarness.java
@@ -66,7 +66,7 @@ import java.util.Map;
  * distribution, in order to encourage plugin writers to create unit 
  * tests for their plugins.
  *
- * @version $Id$
+ *
  */
 public class TestHarness {
   protected CoreContainer container;
diff --git a/solr/src/test/org/apache/solr/TestDistributedSearch.java b/solr/src/test/org/apache/solr/TestDistributedSearch.java
index 9b31d39..5ec3f35 100755
--- a/solr/src/test/org/apache/solr/TestDistributedSearch.java
+++ b/solr/src/test/org/apache/solr/TestDistributedSearch.java
@@ -24,7 +24,7 @@ import org.apache.solr.common.params.CommonParams;
  *  http://docs.codehaus.org/display/JETTY/ServletTester
  * rather then open a real connection?
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestDistributedSearch extends BaseDistributedSearchTestCase {
diff --git a/solr/src/test/org/apache/solr/TestPluginEnable.java b/solr/src/test/org/apache/solr/TestPluginEnable.java
index b390ddf..454302f 100644
--- a/solr/src/test/org/apache/solr/TestPluginEnable.java
+++ b/solr/src/test/org/apache/solr/TestPluginEnable.java
@@ -23,7 +23,7 @@ import org.junit.Test;
 /**
  * <p> Test disabling components</p>
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class TestPluginEnable extends SolrTestCaseJ4 {
diff --git a/solr/src/test/org/apache/solr/TestSolrCoreProperties.java b/solr/src/test/org/apache/solr/TestSolrCoreProperties.java
index 28f6198..d85add2 100644
--- a/solr/src/test/org/apache/solr/TestSolrCoreProperties.java
+++ b/solr/src/test/org/apache/solr/TestSolrCoreProperties.java
@@ -33,7 +33,7 @@ import java.util.Properties;
 /**
  * <p> Test for Loading core properties from a properties file </p>
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class TestSolrCoreProperties extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/TestTrie.java b/solr/src/test/org/apache/solr/TestTrie.java
index 861c349..4637e03 100644
--- a/solr/src/test/org/apache/solr/TestTrie.java
+++ b/solr/src/test/org/apache/solr/TestTrie.java
@@ -32,7 +32,7 @@ import java.util.TimeZone;
 /**
  * Tests for TrieField functionality
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class TestTrie extends SolrTestCaseJ4 {
diff --git a/solr/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory.java b/solr/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory.java
index f9f8cca..409ab0a 100644
--- a/solr/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory.java
+++ b/solr/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory.java
@@ -28,7 +28,7 @@ import org.apache.lucene.analysis.core.WhitespaceTokenizer;
 
 
 /**
- * @version $Id$
+ *
  */
 public class TestPhoneticFilterFactory extends BaseTokenTestCase {
   
diff --git a/solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.java b/solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.java
index 955ed59..8e4f96f 100644
--- a/solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.java
+++ b/solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.java
@@ -27,7 +27,7 @@ import org.apache.solr.common.SolrInputDocument;
 import org.junit.Test;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class LargeVolumeTestBase extends SolrJettyTestBase 
diff --git a/solr/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java b/solr/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java
index 3c6b2d1..b336103 100644
--- a/solr/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java
+++ b/solr/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java
@@ -30,7 +30,7 @@ import org.apache.solr.util.ExternalPaths;
  * Abstract base class for testing merge indexes command
  *
  * @since solr 1.4
- * @version $Id$
+ *
  */
 public abstract class MergeIndexesExampleTestBase extends SolrExampleTestBase {
   // protected static final CoreContainer cores = new CoreContainer();
diff --git a/solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase.java b/solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase.java
index 5a435d7..a25676a 100644
--- a/solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase.java
+++ b/solr/src/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase.java
@@ -30,7 +30,7 @@ import org.junit.Test;
 
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public abstract class MultiCoreExampleTestBase extends SolrExampleTestBase 
diff --git a/solr/src/test/org/apache/solr/client/solrj/SolrExampleTestBase.java b/solr/src/test/org/apache/solr/client/solrj/SolrExampleTestBase.java
index 60fc201..bba195f 100644
--- a/solr/src/test/org/apache/solr/client/solrj/SolrExampleTestBase.java
+++ b/solr/src/test/org/apache/solr/client/solrj/SolrExampleTestBase.java
@@ -25,7 +25,7 @@ import org.apache.solr.util.AbstractSolrTestCase;
  * 
  * This lets us try various SolrServer implementations with the same tests.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 abstract public class SolrExampleTestBase extends AbstractSolrTestCase 
diff --git a/solr/src/test/org/apache/solr/client/solrj/SolrExampleTests.java b/solr/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
index fe39873..fc295b1 100644
--- a/solr/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
+++ b/solr/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
@@ -58,7 +58,7 @@ import org.junit.Test;
  * 
  * This lets us try various SolrServer implementations with the same tests.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 abstract public class SolrExampleTests extends SolrJettyTestBase
diff --git a/solr/src/test/org/apache/solr/client/solrj/SolrExceptionTest.java b/solr/src/test/org/apache/solr/client/solrj/SolrExceptionTest.java
index 2519781..f7dc940 100644
--- a/solr/src/test/org/apache/solr/client/solrj/SolrExceptionTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/SolrExceptionTest.java
@@ -25,7 +25,7 @@ import org.apache.solr.client.solrj.impl.CommonsHttpSolrServer;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrExceptionTest extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/client/solrj/SolrQueryTest.java b/solr/src/test/org/apache/solr/client/solrj/SolrQueryTest.java
index 69d7d37..9c24c4d 100644
--- a/solr/src/test/org/apache/solr/client/solrj/SolrQueryTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/SolrQueryTest.java
@@ -24,7 +24,7 @@ import junit.framework.Assert;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrQueryTest extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java b/solr/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java
index 69fb792..c4212df 100644
--- a/solr/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java
+++ b/solr/src/test/org/apache/solr/client/solrj/TestBatchUpdate.java
@@ -33,7 +33,7 @@ import java.util.Iterator;
  * Test for SOLR-1038
  *
  * @since solr 1.4
- * @version $Id$
+ *
  */
 public class TestBatchUpdate extends SolrJettyTestBase {
 
diff --git a/solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer.java b/solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer.java
index 75f4e34..fed8e9d 100644
--- a/solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer.java
+++ b/solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer.java
@@ -41,7 +41,7 @@ import java.util.Set;
 /**
  * Test for LBHttpSolrServer
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class TestLBHttpSolrServer extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest.java b/solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest.java
index 161da30..dd8c473 100644
--- a/solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest.java
@@ -34,7 +34,7 @@ import org.mortbay.jetty.servlet.HashSessionIdManager;
 import org.mortbay.jetty.webapp.WebAppContext;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class JettyWebappTest extends LuceneTestCase 
diff --git a/solr/src/test/org/apache/solr/client/solrj/embedded/MergeIndexesEmbeddedTest.java b/solr/src/test/org/apache/solr/client/solrj/embedded/MergeIndexesEmbeddedTest.java
index 59bf574..e0732fb 100644
--- a/solr/src/test/org/apache/solr/client/solrj/embedded/MergeIndexesEmbeddedTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/embedded/MergeIndexesEmbeddedTest.java
@@ -27,7 +27,7 @@ import org.apache.solr.core.SolrCore;
  * Test for merge indexes command
  *
  * @since solr 1.4
- * @version $Id$
+ *
  */
 public class MergeIndexesEmbeddedTest extends MergeIndexesExampleTestBase {
 
diff --git a/solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreEmbeddedTest.java b/solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreEmbeddedTest.java
index ede29c5..5c79528 100644
--- a/solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreEmbeddedTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreEmbeddedTest.java
@@ -25,7 +25,7 @@ import org.apache.solr.client.solrj.SolrServer;
 /**
  * This runs SolrServer test using 
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class MultiCoreEmbeddedTest extends MultiCoreExampleTestBase {
diff --git a/solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest.java b/solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest.java
index c15226c..1075767 100644
--- a/solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest.java
@@ -37,7 +37,7 @@ import org.junit.Test;
  *  http://docs.codehaus.org/display/JETTY/ServletTester
  * rather then open a real connection?
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class MultiCoreExampleJettyTest extends MultiCoreExampleTestBase {
diff --git a/solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleEmbeddedTest.java b/solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleEmbeddedTest.java
index 6a569bc..ab7d798 100644
--- a/solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleEmbeddedTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleEmbeddedTest.java
@@ -24,7 +24,7 @@ import org.junit.BeforeClass;
 /**
  * This runs SolrServer test using 
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SolrExampleEmbeddedTest extends SolrExampleTests {
diff --git a/solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest.java b/solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest.java
index a7747d0..511db09 100644
--- a/solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest.java
@@ -27,7 +27,7 @@ import org.junit.BeforeClass;
 
 /**
  * 
- * @version $Id: SolrExampleJettyTest.java 724175 2008-12-07 19:07:11Z ryan $
+ *
  * @since solr 1.3
  */
 public class SolrExampleStreamingTest extends SolrExampleTests {
diff --git a/solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java b/solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java
index 2f08b1d..4df93f2 100644
--- a/solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java
+++ b/solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java
@@ -49,7 +49,7 @@ import org.w3c.dom.Document;
 import org.w3c.dom.Node;
 
 /**
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestSolrProperties extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/client/solrj/request/TestUpdateRequestCodec.java b/solr/src/test/org/apache/solr/client/solrj/request/TestUpdateRequestCodec.java
index 8059f5f..5c8a2df 100644
--- a/solr/src/test/org/apache/solr/client/solrj/request/TestUpdateRequestCodec.java
+++ b/solr/src/test/org/apache/solr/client/solrj/request/TestUpdateRequestCodec.java
@@ -37,7 +37,7 @@ import java.util.ArrayList;
  * Test for UpdateRequestCodec
  *
  * @since solr 1.4
- * @version $Id$
+ *
  * @see org.apache.solr.client.solrj.request.UpdateRequest
  */
 public class TestUpdateRequestCodec extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/client/solrj/response/AnlysisResponseBaseTest.java b/solr/src/test/org/apache/solr/client/solrj/response/AnlysisResponseBaseTest.java
index e185650..b42adee 100644
--- a/solr/src/test/org/apache/solr/client/solrj/response/AnlysisResponseBaseTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/response/AnlysisResponseBaseTest.java
@@ -27,7 +27,7 @@ import java.util.List;
 /**
  * A Test case for the {@link AnalysisResponseBase} class.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 @SuppressWarnings("unchecked")
diff --git a/solr/src/test/org/apache/solr/client/solrj/response/DocumentAnalysisResponseTest.java b/solr/src/test/org/apache/solr/client/solrj/response/DocumentAnalysisResponseTest.java
index 5cbf67f..1c5d47e 100644
--- a/solr/src/test/org/apache/solr/client/solrj/response/DocumentAnalysisResponseTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/response/DocumentAnalysisResponseTest.java
@@ -27,7 +27,7 @@ import java.util.List;
 /**
  * A test for the {@link DocumentAnalysisResponse} class.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class DocumentAnalysisResponseTest extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/client/solrj/response/FieldAnalysisResponseTest.java b/solr/src/test/org/apache/solr/client/solrj/response/FieldAnalysisResponseTest.java
index f6f62aa..12f6100 100644
--- a/solr/src/test/org/apache/solr/client/solrj/response/FieldAnalysisResponseTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/response/FieldAnalysisResponseTest.java
@@ -28,7 +28,7 @@ import java.util.List;
 /**
  * A test case for the {@link FieldAnalysisResponse} class.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 @SuppressWarnings("unchecked")
diff --git a/solr/src/test/org/apache/solr/client/solrj/response/TestSpellCheckResponse.java b/solr/src/test/org/apache/solr/client/solrj/response/TestSpellCheckResponse.java
index 7b11bf0..64e35ff 100644
--- a/solr/src/test/org/apache/solr/client/solrj/response/TestSpellCheckResponse.java
+++ b/solr/src/test/org/apache/solr/client/solrj/response/TestSpellCheckResponse.java
@@ -34,7 +34,7 @@ import java.util.List;
 /**
  * Test for SpellCheckComponent's response in Solrj
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestSpellCheckResponse extends SolrJettyTestBase {
diff --git a/solr/src/test/org/apache/solr/client/solrj/util/ClientUtilsTest.java b/solr/src/test/org/apache/solr/client/solrj/util/ClientUtilsTest.java
index 7d2c297..6b9c5e6 100644
--- a/solr/src/test/org/apache/solr/client/solrj/util/ClientUtilsTest.java
+++ b/solr/src/test/org/apache/solr/client/solrj/util/ClientUtilsTest.java
@@ -21,7 +21,7 @@ import org.apache.lucene.util.LuceneTestCase;
 
 /**
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class ClientUtilsTest extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/common/util/TestFastInputStream.java b/solr/src/test/org/apache/solr/common/util/TestFastInputStream.java
index 68744e8..74c43b1 100644
--- a/solr/src/test/org/apache/solr/common/util/TestFastInputStream.java
+++ b/solr/src/test/org/apache/solr/common/util/TestFastInputStream.java
@@ -26,7 +26,7 @@ import java.util.zip.GZIPOutputStream;
 /**
  * Test for FastInputStream.
  *
- * @version $Id$
+ *
  * @see org.apache.solr.common.util.FastInputStream
  */
 public class TestFastInputStream extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/core/FakeDeletionPolicy.java b/solr/src/test/org/apache/solr/core/FakeDeletionPolicy.java
index 54a76ca..721b55f 100644
--- a/solr/src/test/org/apache/solr/core/FakeDeletionPolicy.java
+++ b/solr/src/test/org/apache/solr/core/FakeDeletionPolicy.java
@@ -24,7 +24,7 @@ import java.io.IOException;
 import java.util.List;
 
 /**
- * @version $Id$
+ *
  */
 public class FakeDeletionPolicy implements IndexDeletionPolicy, NamedListInitializedPlugin {
 
diff --git a/solr/src/test/org/apache/solr/core/TestArbitraryIndexDir.java b/solr/src/test/org/apache/solr/core/TestArbitraryIndexDir.java
index fe55573..104c5ed 100644
--- a/solr/src/test/org/apache/solr/core/TestArbitraryIndexDir.java
+++ b/solr/src/test/org/apache/solr/core/TestArbitraryIndexDir.java
@@ -39,7 +39,7 @@ import org.junit.Test;
 import org.xml.sax.SAXException;
 
 /**
- * @version $Id$
+ *
  */
 public class TestArbitraryIndexDir extends AbstractSolrTestCase{
 
diff --git a/solr/src/test/org/apache/solr/core/TestJmxIntegration.java b/solr/src/test/org/apache/solr/core/TestJmxIntegration.java
index 3977c4a..9e27ddc 100644
--- a/solr/src/test/org/apache/solr/core/TestJmxIntegration.java
+++ b/solr/src/test/org/apache/solr/core/TestJmxIntegration.java
@@ -31,7 +31,7 @@ import java.util.Hashtable;
 /**
  * Test for JMX Integration
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestJmxIntegration extends AbstractSolrTestCase {
diff --git a/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java b/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java
index ff91ade..e69e074 100644
--- a/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java
+++ b/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java
@@ -38,7 +38,7 @@ import java.util.Set;
 /**
  * Test for JmxMonitoredMap
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class TestJmxMonitoredMap extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/core/TestSolrDeletionPolicy1.java b/solr/src/test/org/apache/solr/core/TestSolrDeletionPolicy1.java
index 29f2f5d..cd02ca2 100644
--- a/solr/src/test/org/apache/solr/core/TestSolrDeletionPolicy1.java
+++ b/solr/src/test/org/apache/solr/core/TestSolrDeletionPolicy1.java
@@ -25,7 +25,7 @@ import org.junit.Test;
 import java.util.Map;
 
 /**
- * @version $Id$
+ *
  */
 public class TestSolrDeletionPolicy1 extends SolrTestCaseJ4 {
 
diff --git a/solr/src/test/org/apache/solr/core/TestSolrDeletionPolicy2.java b/solr/src/test/org/apache/solr/core/TestSolrDeletionPolicy2.java
index 61ac85a..cadf084 100644
--- a/solr/src/test/org/apache/solr/core/TestSolrDeletionPolicy2.java
+++ b/solr/src/test/org/apache/solr/core/TestSolrDeletionPolicy2.java
@@ -21,7 +21,7 @@ import org.junit.BeforeClass;
 import org.junit.Test;
 
 /**
- * @version $Id$
+ *
  */
 public class TestSolrDeletionPolicy2 extends SolrTestCaseJ4 {
   @BeforeClass
diff --git a/solr/src/test/org/apache/solr/handler/AnalysisRequestHandlerTestBase.java b/solr/src/test/org/apache/solr/handler/AnalysisRequestHandlerTestBase.java
index c46c275..feb827e 100644
--- a/solr/src/test/org/apache/solr/handler/AnalysisRequestHandlerTestBase.java
+++ b/solr/src/test/org/apache/solr/handler/AnalysisRequestHandlerTestBase.java
@@ -23,7 +23,7 @@ import org.apache.solr.common.util.NamedList;
 /**
  * A base class for all analysis request handler tests.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public abstract class AnalysisRequestHandlerTestBase extends SolrTestCaseJ4 {
diff --git a/solr/src/test/org/apache/solr/handler/DocumentAnalysisRequestHandlerTest.java b/solr/src/test/org/apache/solr/handler/DocumentAnalysisRequestHandlerTest.java
index 1753d77..cddf494 100644
--- a/solr/src/test/org/apache/solr/handler/DocumentAnalysisRequestHandlerTest.java
+++ b/solr/src/test/org/apache/solr/handler/DocumentAnalysisRequestHandlerTest.java
@@ -40,7 +40,7 @@ import java.io.Reader;
 /**
  * A test for {@link DocumentAnalysisRequestHandler}.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class DocumentAnalysisRequestHandlerTest extends AnalysisRequestHandlerTestBase {
diff --git a/solr/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java b/solr/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java
index 2443a9b..da11b5f 100644
--- a/solr/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java
+++ b/solr/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java
@@ -35,7 +35,7 @@ import java.util.List;
 /**
  * A test for {@link FieldAnalysisRequestHandler}.
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class FieldAnalysisRequestHandlerTest extends AnalysisRequestHandlerTestBase {
diff --git a/solr/src/test/org/apache/solr/handler/TestReplicationHandler.java b/solr/src/test/org/apache/solr/handler/TestReplicationHandler.java
index ca75ff9..c0df70e 100644
--- a/solr/src/test/org/apache/solr/handler/TestReplicationHandler.java
+++ b/solr/src/test/org/apache/solr/handler/TestReplicationHandler.java
@@ -50,7 +50,7 @@ import java.util.HashMap;
 /**
  * Test for ReplicationHandler
  *
- * @version $Id$
+ *
  * @since 1.4
  */
 public class TestReplicationHandler extends SolrTestCaseJ4 {
diff --git a/solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest.java b/solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest.java
index ed0edbb..73efb4b 100644
--- a/solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest.java
+++ b/solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest.java
@@ -25,7 +25,7 @@ import org.apache.solr.common.params.ModifiableSolrParams;
  * Test for SpellCheckComponent's distributed querying
  *
  * @since solr 1.5
- * @version $Id$
+ *
  * @see org.apache.solr.handler.component.SpellCheckComponent
  */
 public class DistributedSpellCheckComponentTest extends BaseDistributedSearchTestCase {
diff --git a/solr/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest.java b/solr/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest.java
index bcf91c2..89f3b66 100644
--- a/solr/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest.java
+++ b/solr/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest.java
@@ -22,7 +22,7 @@ import org.apache.solr.BaseDistributedSearchTestCase;
 /**
  * Test for TermsComponent distributed querying
  *
- * @version $Id$
+ *
  * @since solr 1.5
  */
 public class DistributedTermsComponentTest extends BaseDistributedSearchTestCase {
diff --git a/solr/src/test/org/apache/solr/request/TestBinaryResponseWriter.java b/solr/src/test/org/apache/solr/request/TestBinaryResponseWriter.java
index 703a7e1..2215501 100644
--- a/solr/src/test/org/apache/solr/request/TestBinaryResponseWriter.java
+++ b/solr/src/test/org/apache/solr/request/TestBinaryResponseWriter.java
@@ -33,7 +33,7 @@ import java.util.UUID;
 /**
  * Test for BinaryResponseWriter
  *
- * @version $Id$
+ *
  * @since solr 1.4
  */
 public class TestBinaryResponseWriter extends AbstractSolrTestCase {
diff --git a/solr/src/test/org/apache/solr/request/TestFaceting.java b/solr/src/test/org/apache/solr/request/TestFaceting.java
index 140de82..89acdaf 100755
--- a/solr/src/test/org/apache/solr/request/TestFaceting.java
+++ b/solr/src/test/org/apache/solr/request/TestFaceting.java
@@ -30,7 +30,7 @@ import org.junit.BeforeClass;
 import org.junit.Test;
 
 /**
- * @version $Id$
+ *
  */
 public class TestFaceting extends SolrTestCaseJ4 {
   @BeforeClass
diff --git a/solr/src/test/org/apache/solr/search/TestDocSet.java b/solr/src/test/org/apache/solr/search/TestDocSet.java
index 1e8d137..e643b8b 100644
--- a/solr/src/test/org/apache/solr/search/TestDocSet.java
+++ b/solr/src/test/org/apache/solr/search/TestDocSet.java
@@ -35,7 +35,7 @@ import org.apache.lucene.search.DocIdSet;
 import org.apache.lucene.search.DocIdSetIterator;
 
 /**
- * @version $Id$
+ *
  */
 public class TestDocSet extends LuceneTestCase {
   Random rand = random;
diff --git a/solr/src/test/org/apache/solr/search/TestFastLRUCache.java b/solr/src/test/org/apache/solr/search/TestFastLRUCache.java
index 2d226fb..0637c29 100644
--- a/solr/src/test/org/apache/solr/search/TestFastLRUCache.java
+++ b/solr/src/test/org/apache/solr/search/TestFastLRUCache.java
@@ -31,7 +31,7 @@ import java.util.concurrent.atomic.AtomicInteger;
 /**
  * Test for FastLRUCache
  *
- * @version $Id$
+ *
  * @see org.apache.solr.search.FastLRUCache
  * @since solr 1.4
  */
diff --git a/solr/src/test/org/apache/solr/search/TestQueryUtils.java b/solr/src/test/org/apache/solr/search/TestQueryUtils.java
index 3143431..4904d9b 100755
--- a/solr/src/test/org/apache/solr/search/TestQueryUtils.java
+++ b/solr/src/test/org/apache/solr/search/TestQueryUtils.java
@@ -27,7 +27,7 @@ import org.apache.solr.util.AbstractSolrTestCase;
 import java.util.List;
 
 /**
- * @version $Id$
+ *
  */
 public class TestQueryUtils extends AbstractSolrTestCase {
 
diff --git a/solr/src/test/org/apache/solr/search/TestSearchPerf.java b/solr/src/test/org/apache/solr/search/TestSearchPerf.java
index 57e0d86..36afad0 100755
--- a/solr/src/test/org/apache/solr/search/TestSearchPerf.java
+++ b/solr/src/test/org/apache/solr/search/TestSearchPerf.java
@@ -31,7 +31,7 @@ import java.util.*;
 import java.io.IOException;
 
 /**
- * @version $Id$
+ *
  */
 public class TestSearchPerf extends AbstractSolrTestCase {
 
diff --git a/solr/src/test/org/apache/solr/spelling/SpellingQueryConverterTest.java b/solr/src/test/org/apache/solr/spelling/SpellingQueryConverterTest.java
index b6efa9f..4cbebf9 100644
--- a/solr/src/test/org/apache/solr/spelling/SpellingQueryConverterTest.java
+++ b/solr/src/test/org/apache/solr/spelling/SpellingQueryConverterTest.java
@@ -29,7 +29,7 @@ import java.util.Collection;
 /**
  * Test for SpellingQueryConverter
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class SpellingQueryConverterTest extends LuceneTestCase {
diff --git a/solr/src/test/org/apache/solr/util/BitSetPerf.java b/solr/src/test/org/apache/solr/util/BitSetPerf.java
index 2836ccc..f7324f4 100644
--- a/solr/src/test/org/apache/solr/util/BitSetPerf.java
+++ b/solr/src/test/org/apache/solr/util/BitSetPerf.java
@@ -28,7 +28,7 @@ import org.apache.lucene.util.OpenBitSetIterator;
  * is at least 10 seconds for better accuracy.  Close browsers on your system (javascript
  * or flash may be running and cause more erratic results).
  *
- * @version $Id$
+ *
  */
 public class BitSetPerf {
   static Random rand = new Random(0);
diff --git a/solr/src/test/org/apache/solr/util/TestUtils.java b/solr/src/test/org/apache/solr/util/TestUtils.java
index e1279e5..cf33955 100755
--- a/solr/src/test/org/apache/solr/util/TestUtils.java
+++ b/solr/src/test/org/apache/solr/util/TestUtils.java
@@ -28,7 +28,7 @@ import org.apache.solr.common.util.StrUtils;
 import org.junit.Assert;
 
 /**
- * @version $Id$
+ *
  */
 public class TestUtils extends LuceneTestCase {
   public void testSplitEscaping() {
diff --git a/solr/src/webapp/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer.java b/solr/src/webapp/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer.java
index 95ce0fc..dbae78c 100644
--- a/solr/src/webapp/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer.java
+++ b/solr/src/webapp/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer.java
@@ -56,7 +56,7 @@ import org.apache.solr.servlet.SolrRequestParsers;
  * TODO -- this implementation sends the response to XML and then parses it.  
  * It *should* be able to convert the response directly into a named list.
  * 
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public class EmbeddedSolrServer extends SolrServer
diff --git a/solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection.java b/solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection.java
index 28943a9..0ec4a90 100644
--- a/solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection.java
+++ b/solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection.java
@@ -48,7 +48,7 @@ import org.apache.solr.schema.IndexSchema;
  * This class is designed to be as simple as possible and allow for more flexibility
  * in how you interface to Solr.
  * 
- * @version $Id$
+ *
  * @since solr 1.2
  */
 public class DirectSolrConnection 
diff --git a/solr/src/webapp/src/org/apache/solr/servlet/LogLevelSelection.java b/solr/src/webapp/src/org/apache/solr/servlet/LogLevelSelection.java
index e8996e2..01e58eb 100644
--- a/solr/src/webapp/src/org/apache/solr/servlet/LogLevelSelection.java
+++ b/solr/src/webapp/src/org/apache/solr/servlet/LogLevelSelection.java
@@ -32,7 +32,7 @@ import java.util.logging.Logger;
 /**
  * Admin JDK Logger level report and selection servlet.
  *
- * @version $Id$
+ *
  * @since solr 1.3
  */
 public final class LogLevelSelection extends HttpServlet {

