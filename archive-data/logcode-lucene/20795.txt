GitDiffStart: 663f27bd80c8739518b87990f43a6a96f72e3921 | Wed Dec 17 22:50:22 2008 +0000
diff --git a/src/java/org/apache/solr/core/RequestHandlers.java b/src/java/org/apache/solr/core/RequestHandlers.java
index a974b6a..9022b6e 100644
--- a/src/java/org/apache/solr/core/RequestHandlers.java
+++ b/src/java/org/apache/solr/core/RequestHandlers.java
@@ -229,29 +229,34 @@ final class RequestHandlers {
      * Wait for the first request before initializing the wrapped handler 
      */
     public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp)  {
-      getWrappedHandler().handleRequest( req, rsp );
+      SolrRequestHandler handler = _handler;
+      if (handler == null) {
+        handler = getWrappedHandler();
+      }
+      handler.handleRequest( req, rsp );
     }
 
-    public synchronized SolrRequestHandler getWrappedHandler() 
+    public synchronized SolrRequestHandler getWrappedHandler()
     {
       if( _handler == null ) {
         try {
-          _handler = core.createRequestHandler(_className);
-          _handler.init( _args );
-          
-          if( _handler instanceof ResourceLoaderAware ) {
+          SolrRequestHandler handler = core.createRequestHandler(_className);
+          handler.init( _args );
+
+          if( handler instanceof ResourceLoaderAware ) {
             ((ResourceLoaderAware)_handler).inform( core.getSolrConfig().getResourceLoader() );
           }
-          
-          if( _handler instanceof SolrCoreAware ) {
-            ((SolrCoreAware)_handler).inform( core );
+
+          if( handler instanceof SolrCoreAware ) {
+            ((SolrCoreAware)handler).inform( core );
           }
+          _handler = handler;
         }
         catch( Exception ex ) {
           throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, "lazy loading error", ex );
         }
       }
-      return _handler; 
+      return _handler;
     }
 
     public String getHandlerClass()

