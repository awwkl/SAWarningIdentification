GitDiffStart: 90d792dd1d13b306fa68182381cc88f78e500834 | Wed Jul 10 21:19:26 2013 +0000
diff --git a/solr/core/src/test/org/apache/solr/search/TestSolr4Spatial.java b/solr/core/src/test/org/apache/solr/search/TestSolr4Spatial.java
index 28667b5..4dbacc6 100644
--- a/solr/core/src/test/org/apache/solr/search/TestSolr4Spatial.java
+++ b/solr/core/src/test/org/apache/solr/search/TestSolr4Spatial.java
@@ -73,12 +73,14 @@ public class TestSolr4Spatial extends SolrTestCaseJ4 {
         "fl", "id," + fieldName, "q", "*:*", "rows", "1000",
         "fq", "{!field f="+fieldName+"}Intersectssss"), 400);
 
+    ignoreException("NonexistentShape");
     try {
       assertU(adoc("id", "-1", fieldName, "NonexistentShape"));
       fail();
     } catch (SolrException e) {
       assertEquals(400, e.code());
     }
+    unIgnoreException("NonexistentShape");
   }
 
   private void setupDocs() {
diff --git a/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java b/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java
index d5b558b..2284e89 100755
--- a/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java
+++ b/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java
@@ -713,23 +713,29 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {
   /** Makes sure a query throws a SolrException with the listed response code */
   public static void assertQEx(String message, SolrQueryRequest req, int code ) {
     try {
+      ignoreException(".");
       h.query(req);
       fail( message );
     } catch (SolrException sex) {
       assertEquals( code, sex.code() );
     } catch (Exception e2) {
       throw new RuntimeException("Exception during query", e2);
+    } finally {
+      unIgnoreException(".");
     }
   }
 
   public static void assertQEx(String message, SolrQueryRequest req, SolrException.ErrorCode code ) {
     try {
+      ignoreException(".");
       h.query(req);
       fail( message );
     } catch (SolrException e) {
       assertEquals( code.code, e.code() );
     } catch (Exception e2) {
       throw new RuntimeException("Exception during query", e2);
+    } finally {
+      unIgnoreException(".");
     }
   }
 

