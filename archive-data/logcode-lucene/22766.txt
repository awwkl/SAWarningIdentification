GitDiffStart: 2970a6c19668787345e48557e11ccf7eb5f4782a | Mon Apr 16 00:08:59 2007 +0000
diff --git a/src/java/org/apache/solr/search/SolrQueryParser.java b/src/java/org/apache/solr/search/SolrQueryParser.java
index f3e2f79..79e7729 100644
--- a/src/java/org/apache/solr/search/SolrQueryParser.java
+++ b/src/java/org/apache/solr/search/SolrQueryParser.java
@@ -59,7 +59,7 @@ public class SolrQueryParser extends QueryParser {
    * 
    * @param schema Used for default search field name if defaultField is null and field information is used for analysis
    * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used
-   * @see IndexSchema.getSolrQueryParser
+   * @see IndexSchema#getSolrQueryParser(String defaultField)
    */
   public SolrQueryParser(IndexSchema schema, String defaultField) {
     super(defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());
@@ -93,14 +93,14 @@ public class SolrQueryParser extends QueryParser {
     }
 
     // TODO: toInternal() won't necessarily work on partial
-    // values, so it looks like i need a getPrefix() function
+    // values, so it looks like we need a getPrefix() function
     // on fieldtype?  Or at the minimum, a method on fieldType
     // that can tell me if I should lowercase or not...
     // Schema could tell if lowercase filter is in the chain,
     // but a more sure way would be to run something through
     // the first time and check if it got lowercased.
 
-    // TODO: throw exception of field type doesn't support prefixes?
+    // TODO: throw exception if field type doesn't support prefixes?
     // (sortable numeric types don't do prefixes, but can do range queries)
     Term t = new Term(field, termStr);
     return new ConstantScorePrefixQuery(t);
diff --git a/src/java/org/apache/solr/update/DirectUpdateHandler2.java b/src/java/org/apache/solr/update/DirectUpdateHandler2.java
index 276dfe6..acb0066 100644
--- a/src/java/org/apache/solr/update/DirectUpdateHandler2.java
+++ b/src/java/org/apache/solr/update/DirectUpdateHandler2.java
@@ -225,7 +225,7 @@ public class DirectUpdateHandler2 extends UpdateHandler {
     iwAccess.lock();
     try {
 
-      // We can't using iwCommit to protect internal data here, since it would
+      // We can't use iwCommit to protect internal data here, since it would
       // block other addDoc calls.  Hence, we synchronize to protect internal
       // state.  This is safe as all other state-changing operations are
       // protected with iwCommit (which iwAccess excludes from this block).

