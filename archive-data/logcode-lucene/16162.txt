GitDiffStart: 22ec0cc7df60e9d0ab11364d1a4bb77d79990b19 | Thu Mar 17 17:32:39 2011 +0000
diff --git a/solr/site/features.html b/solr/site/features.html
index b195d27..6874449 100755
--- a/solr/site/features.html
+++ b/solr/site/features.html
@@ -253,7 +253,7 @@ document.write("Last Published: " + document.lastModified);
 <h2 class="boxed">Solr in a Nutshell</h2>
 <div class="section">
 <p>
-  Solr is a standalone enterprise search server with a web-services like API. You put documents in it (called "indexing") via XML over HTTP. You query it via HTTP GET and receive XML results.
+  Solr is a standalone enterprise search server with a REST-like API. You put documents in it (called "indexing") via XML, JSON or binary over HTTP. You query it via HTTP GET and receive XML, JSON, or binary results.
   </p>
 <ul>
     
@@ -288,6 +288,8 @@ document.write("Last Published: " + document.lastModified);
     
 <li> Faceted Search and Filtering </li>
     
+<li> Geospatial Search </li>
+    
 <li> Advanced, Configurable Text Analysis </li>
     
 <li> Highly Configurable and User Extensible Caching </li>
@@ -304,22 +306,24 @@ document.write("Last Published: " + document.lastModified);
     
 <li> Highly Scalable Distributed search with sharded index across multiple hosts </li>
     
-<li> XML, CSV/delimited-text, and binary update formats </li>
+<li> JSON, XML, CSV/delimited-text, and binary update formats </li>
     
 <li> Easy ways to pull in data from databases and XML files from local disk and HTTP sources </li>
     
 <li> Rich Document Parsing and Indexing (PDF, Word, HTML, etc) using Apache Tika </li>
     
+<li> Apache UIMA integration for configurable metadata extraction </li>
+    
 <li> Multiple search indices </li>
   
 </ul>
 </div>
 
 
-<a name="N10069"></a><a name="Detailed+Features"></a>
+<a name="N1006F"></a><a name="Detailed+Features"></a>
 <h2 class="boxed">Detailed Features</h2>
 <div class="section">
-<a name="N1006F"></a><a name="Schema"></a>
+<a name="N10075"></a><a name="Schema"></a>
 <h3 class="boxed">Schema</h3>
 <ul>
       
@@ -340,19 +344,19 @@ document.write("Last Published: " + document.lastModified);
 <li>Many additional text analysis components including word splitting, regex and sounds-like filters</li>
     
 </ul>
-<a name="N10090"></a><a name="Query"></a>
+<a name="N10096"></a><a name="Query"></a>
 <h3 class="boxed">Query</h3>
 <ul>
       
 <li>HTTP interface with configurable response formats (XML/XSLT, JSON, Python, Ruby, PHP, Velocity, binary)</li>
       
-<li>Sort by any number of fields</li>
+<li>Sort by any number of fields, and by complex functions of numeric fields</li>
       
 <li>Advanced DisMax query parser for high relevancy results from user-entered queries</li> 
       
 <li>Highlighted context snippets</li>
       
-<li>Faceted Searching based on unique field values, explicit queries, or date ranges</li>
+<li>Faceted Searching based on unique field values, explicit queries, date ranges, and numeric ranges</li>
       
 <li>Multi-Select Faceting by tagging and selectively excluding filters</li>
       
@@ -373,14 +377,14 @@ document.write("Last Published: " + document.lastModified);
       
 <li>Combine queries derived from different syntaxes</li>
       
-<li>Auto-suggest functionality</li>
+<li>Auto-suggest functionality for completing user queries</li>
       
 <li>Allow configuration of top results for a query, overriding normal scoring and sorting</li>
       
 <li>Performance Optimizations</li>
     
 </ul>
-<a name="N100CC"></a><a name="Core"></a>
+<a name="N100D2"></a><a name="Core"></a>
 <h3 class="boxed">Core</h3>
 <ul>
       
@@ -405,7 +409,7 @@ document.write("Last Published: " + document.lastModified);
 <li>"Luke" request handler for corpus information</li>
     
 </ul>
-<a name="N100F3"></a><a name="Caching"></a>
+<a name="N100F9"></a><a name="Caching"></a>
 <h3 class="boxed">Caching</h3>
 <ul>
       
@@ -439,7 +443,7 @@ document.write("Last Published: " + document.lastModified);
 <li>User level caching with autowarming support</li>
     
 </ul>
-<a name="N10118"></a><a name="Replication"></a>
+<a name="N1011E"></a><a name="Replication"></a>
 <h3 class="boxed">Replication</h3>
 <ul>
       
@@ -452,7 +456,7 @@ document.write("Last Published: " + document.lastModified);
 <li>Replication and automatic reloading of configuration files</li>
     
 </ul>
-<a name="N1012D"></a><a name="Admin+Interface"></a>
+<a name="N10133"></a><a name="Admin+Interface"></a>
 <h3 class="boxed">Admin Interface</h3>
 <ul>
       
diff --git a/solr/site/features.pdf b/solr/site/features.pdf
index b547ee4..b836935 100755
--- a/solr/site/features.pdf
+++ b/solr/site/features.pdf
@@ -18,9 +18,9 @@ Table of contents
 
 1. Solr in a Nutshell
 
-Solr is a standalone enterprise search server with a web-services like API. You put
-documents in it (called "indexing") via XML over HTTP. You query it via HTTP GET and
-receive XML results.
+Solr is a standalone enterprise search server with a REST-like API. You put documents in it
+(called "indexing") via XML, JSON or binary over HTTP. You query it via HTTP GET and
+receive XML, JSON, or binary results.
 
 ?? Advanced Full-Text Search Capabilities
 ?? Optimized for High Volume Web Traffic
@@ -36,6 +36,7 @@ receive XML results.
 ?? A Real Data Schema, with Numeric Types, Dynamic Fields, Unique Keys
 ?? Powerful Extensions to the Lucene Query Language
 ?? Faceted Search and Filtering
+?? Geospatial Search
 ?? Advanced, Configurable Text Analysis
 ?? Highly Configurable and User Extensible Caching
 ?? Performance Optimizations
@@ -44,25 +45,25 @@ receive XML results.
 ?? Monitorable Logging
 ?? Fast Incremental Updates and Index Replication
 ?? Highly Scalable Distributed search with sharded index across multiple hosts
-?? XML, CSV/delimited-text, and binary update formats
+?? JSON, XML, CSV/delimited-text, and binary update formats
 ?? Easy ways to pull in data from databases and XML files from local disk and HTTP
 
     sources
 ?? Rich Document Parsing and Indexing (PDF, Word, HTML, etc) using Apache Tika
+?? Apache UIMA integration for configurable metadata extraction
 ?? Multiple search indices
 
 3. Detailed Features
 
 3.1. Schema
 
-?? Defines the field types and fields of documents
-?? Can drive more intelligent processing
-
                                                                        Page 2
 
 Copyright © 2007 The Apache Software Foundation. All rights reserved.
 Introduction to The Solr Enterprise Search Server
 
+?? Defines the field types and fields of documents
+?? Can drive more intelligent processing
 ?? Declarative Lucene Analyzer specification
 ?? Dynamic Fields enables on-the-fly addition of new fields
 ?? CopyField functionality allows indexing a single field multiple ways, or combining
@@ -81,10 +82,12 @@ Copyright © 2007 The Apache Software Foundation. All rights reserved.
 ?? HTTP interface with configurable response formats (XML/XSLT, JSON, Python, Ruby,
     PHP, Velocity, binary)
 
-?? Sort by any number of fields
+?? Sort by any number of fields, and by complex functions of numeric fields
 ?? Advanced DisMax query parser for high relevancy results from user-entered queries
 ?? Highlighted context snippets
-?? Faceted Searching based on unique field values, explicit queries, or date ranges
+?? Faceted Searching based on unique field values, explicit queries, date ranges, and
+
+    numeric ranges
 ?? Multi-Select Faceting by tagging and selectively excluding filters
 ?? Spelling suggestions for user queries
 ?? More Like This suggestions for given document
@@ -96,7 +99,7 @@ Copyright © 2007 The Apache Software Foundation. All rights reserved.
 ?? Dynamic search results clustering using Carrot2
 ?? Numeric field statistics such as min, max, average, standard deviation
 ?? Combine queries derived from different syntaxes
-?? Auto-suggest functionality
+?? Auto-suggest functionality for completing user queries
 ?? Allow configuration of top results for a query, overriding normal scoring and sorting
 ?? Performance Optimizations
 
@@ -106,15 +109,15 @@ Copyright © 2007 The Apache Software Foundation. All rights reserved.
 ?? Pluggable query handlers and extensible XML data format
 ?? Pluggable user functions for Function Query
 ?? Customizable component based request handler with distributed search support
-?? Document uniqueness enforcement based on unique key field
-?? Duplicate document detection, including fuzzy near duplicates
-?? Custom index processing chains, allowing document manipulation before indexing
 
 Page 3
 
         Copyright © 2007 The Apache Software Foundation. All rights reserved.
 Introduction to The Solr Enterprise Search Server
 
+?? Document uniqueness enforcement based on unique key field
+?? Duplicate document detection, including fuzzy near duplicates
+?? Custom index processing chains, allowing document manipulation before indexing
 ?? User configurable commands triggered on index changes
 ?? Ability to control where docs with the sort field missing will be placed
 ?? "Luke" request handler for corpus information
@@ -158,16 +161,17 @@ Page 3
 ?? Web Query Interface w/ debugging output
 
     ?? parsed query output
-    ?? Lucene explain() document score detailing
-    ?? explain score for documents outside of the requested range to debug why a given
-
-         document wasn't ranked higher.
 
                                                                        Page 4
 
 Copyright © 2007 The Apache Software Foundation. All rights reserved.
 Introduction to The Solr Enterprise Search Server
 
+    ?? Lucene explain() document score detailing
+    ?? explain score for documents outside of the requested range to debug why a given
+
+         document wasn't ranked higher.
+
 Page 5
 
         Copyright © 2007 The Apache Software Foundation. All rights reserved.
diff --git a/solr/site/index.html b/solr/site/index.html
index a76069d..3f871a5 100755
--- a/solr/site/index.html
+++ b/solr/site/index.html
@@ -294,8 +294,8 @@ document.write("Last Published: " + document.lastModified);
 Solr is the popular, blazing fast open source enterprise search
 platform from the Apache Lucene project.  Its major features include
 powerful full-text search, hit highlighting, faceted search, dynamic
-clustering, database integration, and rich document (e.g., Word, PDF)
-handling.  Solr is highly scalable, providing distributed search and
+clustering, database integration, rich document (e.g., Word, PDF)
+handling, and geospatial search.  Solr is highly scalable, providing distributed search and
 index replication, and it powers the search and navigation features of
 many of the world's largest internet sites.
 </p>
diff --git a/solr/site/index.pdf b/solr/site/index.pdf
index b35f3c6..c4d9c19 100755
--- a/solr/site/index.pdf
+++ b/solr/site/index.pdf
@@ -31,9 +31,10 @@ Table of contents
 
 Solr is the popular, blazing fast open source enterprise search platform from the Apache
 Lucene project. Its major features include powerful full-text search, hit highlighting, faceted
-search, dynamic clustering, database integration, and rich document (e.g., Word, PDF)
-handling. Solr is highly scalable, providing distributed search and index replication, and it
-powers the search and navigation features of many of the world's largest internet sites.
+search, dynamic clustering, database integration, rich document (e.g., Word, PDF) handling,
+and geospatial search. Solr is highly scalable, providing distributed search and index
+replication, and it powers the search and navigation features of many of the world's largest
+internet sites.
 
 Solr is written in Java and runs as a standalone full-text search server within a servlet
 container such as Tomcat. Solr uses the Lucene Java search library at its core for full-text
@@ -67,13 +68,13 @@ See the release notes for more details.
 3.2. 7 May 2010 - Apache Lucene Eurocon 2010 Coming to Prague May 18-21
 
 On May 18th to the 21st Prague will play host to the first ever dedicated Lucene and Solr
-User Conference in Europe: Apache Lucene Eurocon 2010. This is a a not-for-profit
 
                                                                        Page 2
 
 Copyright © 2007 The Apache Software Foundation. All rights reserved.
 Welcome to Solr
 
+User Conference in Europe: Apache Lucene Eurocon 2010. This is a a not-for-profit
 conference presented by Lucid Imagination, with net proceeds being donated to The Apache
 Software Foundation. Registration is now open. Schedule highlights include:
 
@@ -120,13 +121,12 @@ See the release notes for more details.
 David Smiley and Eric Pugh are proud to introduce the first book on Solr, "Solr 1.4
 Enterprise Search Server" from Packt Publishing.
 
-This book is a comprehensive reference guide for nearly every feature Solr has to offer. It
-
 Page 3
 
                  Copyright © 2007 The Apache Software Foundation. All rights reserved.
                                                                        Welcome to Solr
 
+This book is a comprehensive reference guide for nearly every feature Solr has to offer. It
 serves the reader right from initiation to development to deployment. It also comes with
 complete running examples to demonstrate its use and show how to integrate it with other
 languages and frameworks.
@@ -170,13 +170,13 @@ Thursday, Nov. 5th
 Friday, Nov. 6th
 
 ?? Implementing an Information Retrieval Framework for an Organizational Repository -
-    Sithu D Sudarsan @ 9:00
 
                                                                        Page 4
 
 Copyright © 2007 The Apache Software Foundation. All rights reserved.
 Welcome to Solr
 
+    Sithu D Sudarsan @ 9:00
 ?? Apache Mahout - Going from raw data to Information - Isabel Drost @ 10:00
 ?? MIME Magic with Apache Tika - Jukka Zitting @ 11:30
 ?? Building Intelligent Search Applications with the Lucene Ecosystem - Ted Dunning @
@@ -209,19 +209,21 @@ the creator of the winning logo that is proudly displayed at the top of this pag
 3.8. 03 October 2008 - Solr Logo Contest
 
 By popular demand, Solr is holding a contest to pick a new Solr logo. Details about how to
-submit an entry can be found on the wiki. The Deadline for submissions is November 20th,
 
 Page 5
 
         Copyright © 2007 The Apache Software Foundation. All rights reserved.
                                                                                                                                             Welcome to Solr
 
+submit an entry can be found on the wiki. The Deadline for submissions is November 20th,
 2008 @ 11:59PM GMT.
+
 3.9. 15 September 2008 - Solr 1.3.0 Available
 Solr 1.3.0 is available for public download. This version contains many enhancements and
 bug fixes, including distributed search capabilities, Lucene 2.3.x performance improvements
 and many others.
 See the release notes for more details. Download is available from a Apache Mirror.
+
 3.10. 28 August 2008 - Lucene/Solr at ApacheCon New Orleans
 
 Lucene will be extremely well represented at ApacheCon US 2008 in New Orleans this
@@ -247,16 +249,15 @@ The following talks and trainings are scheduled for this year's conference:
 ?? November 16, 10:00 am: Building a Vertical Search Site using Apache Software by Ken
     Krugler. Will cover many Lucene-based projects.
 
-?? November 16, 3:00 pm: Apache Lucene Performance by Grant Ingersoll. Tips and
-
                                                                        Page 6
 
 Copyright © 2007 The Apache Software Foundation. All rights reserved.
 Welcome to Solr
 
+?? November 16, 3:00 pm: Apache Lucene Performance by Grant Ingersoll. Tips and
     techniques for improving Lucene performance.
-?? November 16, 4:00 pm: Advanced Indexing Techniques with Apache Lucene by Michael
 
+?? November 16, 4:00 pm: Advanced Indexing Techniques with Apache Lucene by Michael
     Busch. Information on payloads and advanced indexing techniques.
 
 3.12. 06 June 2007: Release 1.2 available
@@ -288,13 +289,12 @@ Solr now has nightly builds. This automatically creates a downloadable version o
 night. All unit tests must pass, or a message is sent to the developers mailing list and no new
 version is created. This also updates the javadoc.
 
-3.18. 17 January 2006: Solr Joins Apache Incubator
-
 Page 7
 
-                 Copyright © 2007 The Apache Software Foundation. All rights reserved.
+        Copyright © 2007 The Apache Software Foundation. All rights reserved.
                                                                                                                                             Welcome to Solr
 
+3.18. 17 January 2006: Solr Joins Apache Incubator
 Solr, a search server based on Lucene, has been accepted into the Apache Incubator. Solr was
 originally developed by CNET Networks, and is widely used within CNET to provide high
 relevancy search and faceted browsing capabilities.
diff --git a/solr/site/tutorial.html b/solr/site/tutorial.html
index cbdbf6d..17aa946 100755
--- a/solr/site/tutorial.html
+++ b/solr/site/tutorial.html
@@ -5,7 +5,7 @@
 <meta content="Apache Forrest" name="Generator">
 <meta name="Forrest-version" content="0.8">
 <meta name="Forrest-skin-name" content="lucene">
-<title>Solr tutorial (version 4.0.0.2011.01.04.00.08.44)</title>
+<title>Solr tutorial (version 4.0.0.2011.03.12.13.42.00)</title>
 <link type="text/css" href="skin/basic.css" rel="stylesheet">
 <link media="screen" type="text/css" href="skin/screen.css" rel="stylesheet">
 <link media="print" type="text/css" href="skin/print.css" rel="stylesheet">
@@ -194,7 +194,7 @@ document.write("Last Published: " + document.lastModified);
             </script>
 <div id="credit">
 <hr>
-      This document is for Apache Solr version 4.0.0.2011.01.04.00.08.44.  If you are using a different version of Solr, please consult the documentation that was distributed with the version you are using.
+      This document is for Apache Solr version 4.0.0.2011.03.12.13.42.00.  If you are using a different version of Solr, please consult the documentation that was distributed with the version you are using.
         </div>
 <div id="roundbottom">
 <img style="display: none" class="corner" height="15" width="15" alt="" src="skin/images/rc-b-l-15-1body-2menu-3menu.png"></div>
@@ -218,7 +218,7 @@ document.write("Last Published: " + document.lastModified);
 </div>
 <h1>Solr tutorial</h1>
 <div id="motd-area">
-      This document is for Apache Solr version 4.0.0.2011.01.04.00.08.44.  If you are using a different version of Solr, please consult the documentation that was distributed with the version you are using.
+      This document is for Apache Solr version 4.0.0.2011.03.12.13.42.00.  If you are using a different version of Solr, please consult the documentation that was distributed with the version you are using.
         </div>
 <div id="minitoc-area">
 <ul class="minitoc">
@@ -257,6 +257,9 @@ document.write("Last Published: " + document.lastModified);
 <a href="#Faceted+Search">Faceted Search</a>
 </li>
 <li>
+<a href="#Search+UI">Search UI</a>
+</li>
+<li>
 <a href="#Text+Analysis">Text Analysis</a>
 <ul class="minitoc">
 <li>
@@ -290,10 +293,9 @@ To follow along with this tutorial, you will need...
 <ol>
   
 <li>Java 1.6 or greater.  Some places you can get it are from
-  <a href="http://java.sun.com/j2se/downloads.html">OpenJDK</a>,
-  <a href="http://java.sun.com/j2se/downloads.html">Sun</a>,
+  <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Oracle</a>,
+  <a href="http://openjdk.java.net/">Open JDK</a>,
   <a href="http://www.ibm.com/developerworks/java/jdk/">IBM</a>, or
-  <a href="http://www.oracle.com/technology/products/jrockit/index.html">Oracle</a>.
   <br>
   Running <span class="codefrag">java -version</span> at the command line should indicate a version
   number starting with 1.6.  Gnu's GCJ is not supported and does not work with Solr.
@@ -306,7 +308,7 @@ To follow along with this tutorial, you will need...
 </div>
 
 
-<a name="N10043"></a><a name="Getting+Started"></a>
+<a name="N1003F"></a><a name="Getting+Started"></a>
 <h2 class="boxed">Getting Started</h2>
 <div class="section">
 <p>
@@ -335,7 +337,7 @@ To launch Jetty with the Solr WAR, and the example configs, just run the <span c
 <pre class="code">
 user:~/solr/example$ <strong>java -jar start.jar</strong>
 2009-10-23 16:42:53.816::INFO:  Logging to STDERR via org.mortbay.log.StdErrLog
-2009-10-23 16:42:53.907::INFO:  jetty-6.1.3
+2009-10-23 16:42:53.907::INFO:  jetty-6.1.26
 
 ...
 
@@ -354,7 +356,7 @@ You can see that the Solr is running by loading <a href="http://localhost:8983/s
 
 
 
-<a name="N1007B"></a><a name="Indexing+Data"></a>
+<a name="N10077"></a><a name="Indexing+Data"></a>
 <h2 class="boxed">Indexing Data</h2>
 <div class="section">
 <p>
@@ -389,11 +391,11 @@ Clicking the "Search" button should take you to the following URL...
 </p>
 <p>
 
-<a href="http://localhost:8983/solr/select/?q=solr&version=2.2&start=0&rows=10&indent=on">http://localhost:8983/solr/select/?q=solr&amp;version=2.2&amp;start=0&amp;rows=10&amp;indent=on</a>
+<a href="http://localhost:8983/solr/select/?q=solr&start=0&rows=10&indent=on">http://localhost:8983/solr/select/?q=solr&amp;start=0&amp;rows=10&amp;indent=on</a>
 
 </p>
 <p>
-You can index all of the sample data, using the following command (assuming your shell supports the *.xml notation):
+You can index all of the sample data, using the following command (assuming your command line shell supports the *.xml notation):
 </p>
 <pre class="code">
   user:~/solr/example/exampledocs$ <strong>java -jar post.jar *.xml</strong>
@@ -448,6 +450,11 @@ SimplePostTool: COMMITting Solr index changes..
    including those exported by Excel or MySQL.
   </li> 
   
+<li>
+<a href="http://wiki.apache.org/solr/UpdateJSON">POST JSON documents</a>
+  
+</li> 
+  
 <li>Index binary documents such as Word and PDF with 
     <a href="http://wiki.apache.org/solr/ExtractingRequestHandler">Solr Cell</a> (ExtractingRequestHandler).
   </li>
@@ -464,7 +471,7 @@ SimplePostTool: COMMITting Solr index changes..
 
 
 
-<a name="N100EB"></a><a name="Updating+Data"></a>
+<a name="N100ED"></a><a name="Updating+Data"></a>
 <h2 class="boxed">Updating Data</h2>
 <div class="section">
 <p>
@@ -496,7 +503,7 @@ Go ahead and edit the existing XML files to change some of the data, and re-run
 the <span class="codefrag">java -jar post.jar</span> command, you'll see your changes reflected
 in subsequent searches.
 </p>
-<a name="N10119"></a><a name="Deleting+Data"></a>
+<a name="N1011B"></a><a name="Deleting+Data"></a>
 <h3 class="boxed">Deleting Data</h3>
 <p>You can delete data by POSTing a delete command to the update URL and specifying the value
       of the document's unique key field, or a query that matches multiple documents (be careful with that one!).  Since these commands
@@ -525,7 +532,7 @@ in subsequent searches.
 </div>
 
 
-<a name="N1015F"></a><a name="Querying+Data"></a>
+<a name="N10161"></a><a name="Querying+Data"></a>
 <h2 class="boxed">Querying Data</h2>
 <div class="section">
 <p>
@@ -556,7 +563,7 @@ in subsequent searches.
     Solr provides a <a href="http://localhost:8983/solr/admin/form.jsp">query form</a> within the web admin interface
     that allows setting the various request parameters and is useful when trying out or debugging queries.
   </p>
-<a name="N10194"></a><a name="Sorting"></a>
+<a name="N10196"></a><a name="Sorting"></a>
 <h3 class="boxed">Sorting</h3>
 <p>
       Solr provides a simple method to sort on one or more indexed fields.
@@ -592,13 +599,23 @@ in subsequent searches.
     
 </ul>
 <p>
+      Complex functions may also be used to sort results...
+    </p>
+<ul>
+      
+<li>
+<a href="http://localhost:8983/solr/select/?indent=on&q=*:*&sort=div(popularity,add(price,1))+desc">q=video&amp;sort=div(popularity,add(price,1)) desc</a>
+</li>
+    
+</ul>
+<p>
       If no sort is specified, the default is <span class="codefrag">score desc</span> to return the matches having the highest relevancy.
     </p>
 </div>
 
 
 
-<a name="N101C7"></a><a name="Highlighting"></a>
+<a name="N101D4"></a><a name="Highlighting"></a>
 <h2 class="boxed">Highlighting</h2>
 <div class="section">
 <p>
@@ -625,7 +642,7 @@ in subsequent searches.
 
 
 
-<a name="N101F0"></a><a name="Faceted+Search"></a>
+<a name="N101FD"></a><a name="Faceted+Search"></a>
 <h2 class="boxed">Faceted Search</h2>
 <div class="section">
 <p>
@@ -684,7 +701,25 @@ in subsequent searches.
 
 
 
-<a name="N10241"></a><a name="Text+Analysis"></a>
+<a name="N1024E"></a><a name="Search+UI"></a>
+<h2 class="boxed">Search UI</h2>
+<div class="section">
+<p>
+    Solr includes an example search interface built with velocity templating
+    that demonstrates many features, including searching, faceting, highlighting,
+    autocomplete, and geospatial searching. 
+  </p>
+<p>
+    Try it out at
+    <a href="http://localhost:8983/solr/browse">http://localhost:8983/solr/browse</a>
+  
+</p>
+</div> <!-- Search UI -->
+
+
+
+
+<a name="N10261"></a><a name="Text+Analysis"></a>
 <h2 class="boxed">Text Analysis</h2>
 <div class="section">
 <p>
@@ -726,7 +761,7 @@ in subsequent searches.
 <p>A full description of the analysis components, Analyzers, Tokenizers, and TokenFilters
     available for use is <a href="http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters">here</a>.
   </p>
-<a name="N10291"></a><a name="Analysis+Debugging"></a>
+<a name="N102B1"></a><a name="Analysis+Debugging"></a>
 <h3 class="boxed">Analysis Debugging</h3>
 <p>There is a handy <a href="http://localhost:8983/solr/admin/analysis.jsp">analysis</a>
       debugging page where you can see how a text value is broken down into words,
@@ -755,7 +790,7 @@ in subsequent searches.
 </div>
 
 
-<a name="N102D0"></a><a name="Conclusion"></a>
+<a name="N102F0"></a><a name="Conclusion"></a>
 <h2 class="boxed">Conclusion</h2>
 <div class="section">
 <p>
diff --git a/solr/site/tutorial.pdf b/solr/site/tutorial.pdf
index f0b9d1b..114443a 100755
--- a/solr/site/tutorial.pdf
+++ b/solr/site/tutorial.pdf
@@ -11,10 +11,11 @@ Table of contents
    6 Querying Data.................................................................................................................... 5
     6.1 Sorting........................................................................................................................... 6
    7 Highlighting....................................................................................................................... 6
-   8 Faceted Search................................................................................................................... 6
-   9 Text Analysis..................................................................................................................... 7
-    9.1 Analysis Debugging...................................................................................................... 8
-   10 Conclusion........................................................................................................................8
+   8 Faceted Search................................................................................................................... 7
+   9 Search UI............................................................................................................................7
+   10 Text Analysis....................................................................................................................7
+    10.1 Analysis Debugging.....................................................................................................8
+   11 Conclusion........................................................................................................................8
 
                    Copyright © 2007 The Apache Software Foundation. All rights reserved.
                                                                        Solr tutorial
@@ -27,7 +28,7 @@ data.
 2. Requirements
 
 To follow along with this tutorial, you will need...
-1. Java 1.6 or greater. Some places you can get it are from OpenJDK, Sun, IBM, or Oracle.
+1. Java 1.6 or greater. Some places you can get it are from Oracle, Open JDK, IBM, or
 
     Running java -version at the command line should indicate a version number
     starting with 1.6. Gnu's GCJ is not supported and does not work with Solr.
@@ -55,7 +56,7 @@ To launch Jetty with the Solr WAR, and the example configs, just run the start.j
 user:~/solr/example$ java -jar start.jar
 2009-10-23 16:42:53.816::INFO: Logging to STDERR via
 org.mortbay.log.StdErrLog
-2009-10-23 16:42:53.907::INFO: jetty-6.1.3
+2009-10-23 16:42:53.907::INFO: jetty-6.1.26
 
 ...
 
@@ -100,10 +101,10 @@ You have now indexed two documents in Solr, and committed these changes. You can
 search for "solr" using the "Make a Query" interface on the Admin screen, and you should
 get one result. Clicking the "Search" button should take you to the following URL...
 
-http://localhost:8983/solr/select/?q=solr&version=2.2&start=0&rows=10&indent=on
+http://localhost:8983/solr/select/?q=solr&start=0&rows=10&indent=on
 
-You can index all of the sample data, using the following command (assuming your shell
-supports the *.xml notation):
+You can index all of the sample data, using the following command (assuming your
+command line shell supports the *.xml notation):
 
    user:~/solr/example/exampledocs$ java -jar post.jar *.xml
 SimplePostTool: version 1.2
@@ -143,6 +144,7 @@ There are many other different ways to import your data into Solr... one can
 ?? Load a CSV file (comma separated values), including those exported by Excel or
 
     MySQL.
+?? POST JSON documents
 ?? Index binary documents such as Word and PDF with Solr Cell
 
     (ExtractingRequestHandler).
@@ -170,13 +172,14 @@ much as you want and numDocs will never increase,because the new documents will
 constantly be replacing the old.
 
 Go ahead and edit the existing XML files to change some of the data, and re-run the java
--jar post.jar command, you'll see your changes reflected in subsequent searches.
 
                                                                        Page 4
 
 Copyright © 2007 The Apache Software Foundation. All rights reserved.
 Solr tutorial
 
+-jar post.jar command, you'll see your changes reflected in subsequent searches.
+
 5.1. Deleting Data
 
 You can delete data by POSTing a delete command to the update URL and specifying the
@@ -224,13 +227,12 @@ You can pass a number of optional request parameters to the request handler to c
 information is returned. For example, you can use the "fl" parameter to control what stored
 fields are returned, and if the relevancy score is returned...
 
-?? q=video&fl=name,id (return only name and id fields)
-
 Page 5
 
                Copyright © 2007 The Apache Software Foundation. All rights reserved.
-                                                                       Solr tutorial
+                                                                                                                                                   Solr tutorial
 
+?? q=video&fl=name,id (return only name and id fields)
 ?? q=video&fl=name,id,score (return relevancy score as well)
 ?? q=video&fl=*,score (return all stored fields, as well as relevancy score)
 ?? q=video&sort=price desc&fl=name,id,price (add sort specification: sort by price
@@ -253,6 +255,9 @@ to specify "field direction" pairs...
 ?? q=video&sort=score desc
 ?? q=video&sort=inStock asc, score desc
 
+Complex functions may also be used to sort results...
+?? q=video&sort=div(popularity,add(price,1)) desc
+
 If no sort is specified, the default is score desc to return the matches having the highest
 relevancy.
 
@@ -269,17 +274,17 @@ the words to highlight surrounded with <em> (for emphasis) tags.
 
 More request parameters related to controlling highlighting may be found here.
 
+                                                                       Page 6
+
+Copyright © 2007 The Apache Software Foundation. All rights reserved.
+Solr tutorial
+
 8. Faceted Search
 
 Faceted search takes the documents matched by a query and generates counts for various
 properties or categories. Links are usually provided that allows users to "drill down" or refine
 their search results based on the returned categories.
 
-                                                                       Page 6
-
-Copyright © 2007 The Apache Software Foundation. All rights reserved.
-Solr tutorial
-
 The following example searches for all documents (*:*) and requests counts by the category
 field cat.
 
@@ -306,10 +311,24 @@ One can even facet by date ranges. This example requests counts for the manufact
 More information on faceted search may be found on the faceting overview and faceting
 parameters pages.
 
-9. Text Analysis
+9. Search UI
+
+Solr includes an example search interface built with velocity templating that demonstrates
+many features, including searching, faceting, highlighting, autocomplete, and geospatial
+searching.
+
+Try it out at http://localhost:8983/solr/browse
+
+10. Text Analysis
 
 Text fields are typically indexed by breaking the field into words and applying various
 transformations such as lowercasing, removing plurals, or stemming to increase relevancy.
+
+Page 7
+
+               Copyright © 2007 The Apache Software Foundation. All rights reserved.
+                                                                       Solr tutorial
+
 The same text transformations are normally applied to any queries in order to match what is
 indexed.
 
@@ -328,15 +347,10 @@ The schema defines the fields in the index and what type of analysis is applied
 current schema your server is using may be accessed via the [SCHEMA] link on the admin
 page.
 
-Page 7
-
-               Copyright © 2007 The Apache Software Foundation. All rights reserved.
-                                                                                                                                                   Solr tutorial
-
 A full description of the analysis components, Analyzers, Tokenizers, and TokenFilters
 available for use is here.
 
-9.1. Analysis Debugging
+10.1. Analysis Debugging
 
 There is a handy analysis debugging page where you can see how a text value is broken
 down into words, and shows the resulting tokens after they pass through each filter in the
@@ -357,9 +371,15 @@ resulting terms from the query value and highlight all matches in the index valu
 
 Here is an example of stemming and stop-words at work.
 
-10. Conclusion
+11. Conclusion
 
 Congratulations! You successfully ran a small Solr instance, added some documents, and
+
+                                                                       Page 8
+
+Copyright © 2007 The Apache Software Foundation. All rights reserved.
+Solr tutorial
+
 made changes to the index. You learned about queries, text analysis, and the Solr admin
 interface. You're ready to start using Solr on your own project! Continue on with the
 following steps:
@@ -370,10 +390,9 @@ following steps:
 Solr as a ton of other features that we haven't touched on here, including distributed search to
 handle huge document collections, function queries, numeric field statistics, and search
 results clustering. Explore the Solr Wiki to find out more details about Solr's many features.
-
 Have Fun, and we'll see you on the Solr mailing lists!
 
-                                                                       Page 8
+Page 9
 
-Copyright © 2007 The Apache Software Foundation. All rights reserved.
+        Copyright © 2007 The Apache Software Foundation. All rights reserved.
 
\ No newline at end of file
diff --git a/solr/src/site/src/documentation/content/xdocs/features.xml b/solr/src/site/src/documentation/content/xdocs/features.xml
index 8509b93..cda7150 100755
--- a/solr/src/site/src/documentation/content/xdocs/features.xml
+++ b/solr/src/site/src/documentation/content/xdocs/features.xml
@@ -28,7 +28,7 @@
 <section>
 <title>Solr in a Nutshell</title>
   <p>
-  Solr is a standalone enterprise search server with a web-services like API. You put documents in it (called "indexing") via XML over HTTP. You query it via HTTP GET and receive XML results.
+  Solr is a standalone enterprise search server with a REST-like API. You put documents in it (called "indexing") via XML, JSON or binary over HTTP. You query it via HTTP GET and receive XML, JSON, or binary results.
   </p>
   <ul>
     <li> Advanced Full-Text Search Capabilities </li>
@@ -48,6 +48,7 @@
     <li> A Real Data Schema, with Numeric Types, Dynamic Fields, Unique Keys </li>
     <li> Powerful Extensions to the Lucene Query Language </li>
     <li> Faceted Search and Filtering </li>
+    <li> Geospatial Search </li>
     <li> Advanced, Configurable Text Analysis </li>
     <li> Highly Configurable and User Extensible Caching </li>
     <li> Performance Optimizations </li>
@@ -56,9 +57,10 @@
     <li> Monitorable Logging </li>
     <li> Fast Incremental Updates and Index Replication </li>
     <li> Highly Scalable Distributed search with sharded index across multiple hosts </li>
-    <li> XML, CSV/delimited-text, and binary update formats </li>
+    <li> JSON, XML, CSV/delimited-text, and binary update formats </li>
     <li> Easy ways to pull in data from databases and XML files from local disk and HTTP sources </li>
     <li> Rich Document Parsing and Indexing (PDF, Word, HTML, etc) using Apache Tika </li>
+    <li> Apache UIMA integration for configurable metadata extraction </li>
     <li> Multiple search indices </li>
   </ul>
 </section>
@@ -82,10 +84,10 @@
   <section><title>Query</title>
     <ul>
       <li>HTTP interface with configurable response formats (XML/XSLT, JSON, Python, Ruby, PHP, Velocity, binary)</li>
-      <li>Sort by any number of fields</li>
+      <li>Sort by any number of fields, and by complex functions of numeric fields</li>
       <li>Advanced DisMax query parser for high relevancy results from user-entered queries</li> 
       <li>Highlighted context snippets</li>
-      <li>Faceted Searching based on unique field values, explicit queries, or date ranges</li>
+      <li>Faceted Searching based on unique field values, explicit queries, date ranges, and numeric ranges</li>
       <li>Multi-Select Faceting by tagging and selectively excluding filters</li>
       <li>Spelling suggestions for user queries</li>
       <li>More Like This suggestions for given document</li>
@@ -96,7 +98,7 @@
       <li>Dynamic search results clustering using Carrot2</li>
       <li>Numeric field statistics such as min, max, average, standard deviation </li>
       <li>Combine queries derived from different syntaxes</li>
-      <li>Auto-suggest functionality</li>
+      <li>Auto-suggest functionality for completing user queries</li>
       <li>Allow configuration of top results for a query, overriding normal scoring and sorting</li>
       <li>Performance Optimizations</li>
     </ul>
diff --git a/solr/src/site/src/documentation/content/xdocs/index.xml b/solr/src/site/src/documentation/content/xdocs/index.xml
index 0d2d753..05ffe03 100755
--- a/solr/src/site/src/documentation/content/xdocs/index.xml
+++ b/solr/src/site/src/documentation/content/xdocs/index.xml
@@ -28,8 +28,8 @@
 Solr is the popular, blazing fast open source enterprise search
 platform from the Apache Lucene project.  Its major features include
 powerful full-text search, hit highlighting, faceted search, dynamic
-clustering, database integration, and rich document (e.g., Word, PDF)
-handling.  Solr is highly scalable, providing distributed search and
+clustering, database integration, rich document (e.g., Word, PDF)
+handling, and geospatial search.  Solr is highly scalable, providing distributed search and
 index replication, and it powers the search and navigation features of
 many of the world's largest internet sites.
 </p>
diff --git a/solr/src/site/src/documentation/content/xdocs/tutorial.xml b/solr/src/site/src/documentation/content/xdocs/tutorial.xml
index a6063c1..10d5b52 100755
--- a/solr/src/site/src/documentation/content/xdocs/tutorial.xml
+++ b/solr/src/site/src/documentation/content/xdocs/tutorial.xml
@@ -46,10 +46,9 @@ To follow along with this tutorial, you will need...
 
 <ol>
   <li>Java 1.6 or greater.  Some places you can get it are from
-  <a href="http://java.sun.com/j2se/downloads.html">OpenJDK</a>,
-  <a href="http://java.sun.com/j2se/downloads.html">Sun</a>,
+  <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Oracle</a>,
+  <a href="http://openjdk.java.net/">Open JDK</a>,
   <a href="http://www.ibm.com/developerworks/java/jdk/">IBM</a>, or
-  <a href="http://www.oracle.com/technology/products/jrockit/index.html">Oracle</a>.
   <br/>
   Running <code>java -version</code> at the command line should indicate a version
   number starting with 1.6.  Gnu's GCJ is not supported and does not work with Solr.
@@ -86,7 +85,7 @@ To launch Jetty with the Solr WAR, and the example configs, just run the <code>s
 <source>
 user:~/solr/example$ <strong>java -jar start.jar</strong>
 2009-10-23 16:42:53.816::INFO:  Logging to STDERR via org.mortbay.log.StdErrLog
-2009-10-23 16:42:53.907::INFO:  jetty-6.1.3
+2009-10-23 16:42:53.907::INFO:  jetty-6.1.26
 
 ...
 
@@ -141,11 +140,11 @@ You can now search for "solr" using the "Make a Query" interface on the Admin sc
 Clicking the "Search" button should take you to the following URL...
 </p>
 <p>
-<a href="http://localhost:8983/solr/select/?q=solr&amp;version=2.2&amp;start=0&amp;rows=10&amp;indent=on">http://localhost:8983/solr/select/?q=solr&amp;version=2.2&amp;start=0&amp;rows=10&amp;indent=on</a>
+<a href="http://localhost:8983/solr/select/?q=solr&amp;start=0&amp;rows=10&amp;indent=on">http://localhost:8983/solr/select/?q=solr&amp;start=0&amp;rows=10&amp;indent=on</a>
 </p>
 
 <p>
-You can index all of the sample data, using the following command (assuming your shell supports the *.xml notation):
+You can index all of the sample data, using the following command (assuming your command line shell supports the *.xml notation):
 </p>
 
 <source>
@@ -189,6 +188,8 @@ SimplePostTool: COMMITting Solr index changes..
   <li><a href="http://wiki.apache.org/solr/UpdateCSV">Load a CSV file</a> (comma separated values),
    including those exported by Excel or MySQL.
   </li> 
+  <li><a href="http://wiki.apache.org/solr/UpdateJSON">POST JSON documents</a>
+  </li> 
   <li>Index binary documents such as Word and PDF with 
     <a href="http://wiki.apache.org/solr/ExtractingRequestHandler">Solr Cell</a> (ExtractingRequestHandler).
   </li>
@@ -313,6 +314,14 @@ in subsequent searches.
     </ul>
 
     <p>
+      Complex functions may also be used to sort results...
+    </p>
+    <ul>
+      <li><a href="http://localhost:8983/solr/select/?indent=on&amp;q=*:*&amp;sort=div(popularity,add(price,1))+desc">q=video&amp;sort=div(popularity,add(price,1)) desc</a></li>
+    </ul>
+
+
+    <p>
       If no sort is specified, the default is <code>score desc</code> to return the matches having the highest relevancy.
     </p>
 
@@ -402,6 +411,21 @@ in subsequent searches.
 
 
 <section>
+  <title>Search UI</title>
+  <p>
+    Solr includes an example search interface built with velocity templating
+    that demonstrates many features, including searching, faceting, highlighting,
+    autocomplete, and geospatial searching. 
+  </p>
+  <p>
+    Try it out at
+    <a href="http://localhost:8983/solr/browse">http://localhost:8983/solr/browse</a>
+  </p>
+</section> <!-- Search UI -->
+
+
+
+<section>
   <title>Text Analysis</title>
 
   <p>

