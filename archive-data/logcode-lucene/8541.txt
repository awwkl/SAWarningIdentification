GitDiffStart: 1e3adfae1b8a011ab9cf2116891a0ddfcd5158c4 | Sun Jun 16 15:01:43 2013 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/codecs/TempPostingsReaderBase.java b/lucene/core/src/java/org/apache/lucene/codecs/TempPostingsReaderBase.java
index fbcff4d..d503318 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/TempPostingsReaderBase.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/TempPostingsReaderBase.java
@@ -57,7 +57,6 @@ public abstract class TempPostingsReaderBase implements Closeable {
   public abstract TempTermState newTermState() throws IOException;
 
   /** Actually decode metadata for next term */
-  // nocommit: remove the 'fieldInfo' ? I suppose for a given postingsPBR, this should be fixed?
   public abstract void decodeTerm(long[] longs, DataInput in, FieldInfo fieldInfo, TempTermState state) throws IOException;
 
   /** Must fully consume state, since after this call that
diff --git a/lucene/core/src/java/org/apache/lucene/codecs/TempPostingsWriterBase.java b/lucene/core/src/java/org/apache/lucene/codecs/TempPostingsWriterBase.java
index 15d63bc..c89624c 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/TempPostingsWriterBase.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/TempPostingsWriterBase.java
@@ -52,7 +52,7 @@ public abstract class TempPostingsWriterBase extends PostingsConsumer implements
   public abstract void start(IndexOutput termsOut) throws IOException;
 
   /** Start a new term.  Note that a matching call to {@link
-   *  #finishTerm(TermStats)} is done, only if the term has at least one
+   *  #finishTerm(long[], DataOutput, TermStats)} is done, only if the term has at least one
    *  document. */
   public abstract void startTerm() throws IOException;
 
@@ -60,11 +60,10 @@ public abstract class TempPostingsWriterBase extends PostingsConsumer implements
    *  TermStats} contains the term's summary statistics. */
   public abstract void finishTerm(long[] longs, DataOutput out, TermStats stats) throws IOException;
 
-  /** Return the fixed length of longs */
-  public abstract int longsSize();
-
-  /** Called when the writing switches to another field. */
-  public abstract void setField(FieldInfo fieldInfo);
+  /** 
+   * Return the fixed length of longs,
+   * called when the writing switches to another field. */
+  public abstract int setField(FieldInfo fieldInfo);
 
   @Override
   public abstract void close() throws IOException;

