GitDiffStart: 764283bf8af2e05bcfb8b3d9b04b348f943469ab | Fri Oct 3 03:01:05 2003 +0000
diff --git a/docs/queryparsersyntax.html b/docs/queryparsersyntax.html
index 3cc44af..24d0b50 100644
--- a/docs/queryparsersyntax.html
+++ b/docs/queryparsersyntax.html
@@ -135,7 +135,7 @@
             <li>Untokenized fields are best added directly to queries, and not
             through the query parser.  If a field's values are generated programmatically
             by the application, then so should query clauses for this field.
-            Analyzers, like the query parser, are designed to convert human-entered
+            An analyzer, which the query parser uses, is designed to convert human-entered
             text to terms.  Program-generated values, like dates, keywords, etc.,
             should be consistently program-generated.</li>
 
@@ -409,7 +409,7 @@
         <blockquote>
                                     <p>Range Queries allow one to match documents whose field(s) values
             are between the lower and upper bound specified by the Range Query.
-            Range Queries are inclusive (i.e. the query includes the specified lower and upper bound).
+            Range Queries can be inclusive or exclusive of the upper and lower bounds.
             Sorting is done lexicographically.</p>
                                                     <div align="left">
     <table cellspacing="4" cellpadding="0" border="0">
@@ -430,7 +430,7 @@
     </tr>
     </table>
     </div>
-                                                <p>This will find documents whose mod_date fields have values between 20020101 and 20030101.
+                                                <p>This will find documents whose mod_date fields have values between 20020101 and 20030101, inclusive.
             Note that Range Queries are not reserved for date fields.  You could also use range queries with non-date fields:</p>
                                                     <div align="left">
     <table cellspacing="4" cellpadding="0" border="0">
@@ -441,7 +441,7 @@
     </tr>
     <tr>
       <td bgcolor="#023264" width="1"><img src="/images/void.gif" width="1" height="1" vspace="0" hspace="0" border="0"/></td>
-      <td bgcolor="#ffffff"><pre>title:[Aida TO Carmen]</pre></td>
+      <td bgcolor="#ffffff"><pre>title:{Aida TO Carmen}</pre></td>
       <td bgcolor="#023264" width="1"><img src="/images/void.gif" width="1" height="1" vspace="0" hspace="0" border="0"/></td>
     </tr>
     <tr>
@@ -451,7 +451,9 @@
     </tr>
     </table>
     </div>
-                                                <p>This will find all documents whose titles are between Aida and Carmen.</p>
+                                                <p>This will find all documents whose titles are between Aida and Carmen, but not including Aida and Carmen.</p>
+                                                <p>Inclusive range queries are denoted by square brackets.  Exclusive range queries are denoted by
+            curly brackets.</p>
                             </blockquote>
       </td></tr>
       <tr><td><br/></td></tr>
diff --git a/xdocs/queryparsersyntax.xml b/xdocs/queryparsersyntax.xml
index 114a054..b5b8b36 100644
--- a/xdocs/queryparsersyntax.xml
+++ b/xdocs/queryparsersyntax.xml
@@ -25,7 +25,7 @@
             <li>Untokenized fields are best added directly to queries, and not
             through the query parser.  If a field's values are generated programmatically
             by the application, then so should query clauses for this field.
-            Analyzers, like the query parser, are designed to convert human-entered
+            An analyzer, which the query parser uses, is designed to convert human-entered
             text to terms.  Program-generated values, like dates, keywords, etc.,
             should be consistently program-generated.</li>
 
@@ -102,13 +102,15 @@
         <subsection name="Range Searches">
             <p>Range Queries allow one to match documents whose field(s) values
             are between the lower and upper bound specified by the Range Query.
-            Range Queries are inclusive (i.e. the query includes the specified lower and upper bound).
+            Range Queries can be inclusive or exclusive of the upper and lower bounds.
             Sorting is done lexicographically.</p>
             <source>mod_date:[20020101 TO 20030101]</source>
-            <p>This will find documents whose mod_date fields have values between 20020101 and 20030101.
+            <p>This will find documents whose mod_date fields have values between 20020101 and 20030101, inclusive.
             Note that Range Queries are not reserved for date fields.  You could also use range queries with non-date fields:</p>
-            <source>title:[Aida TO Carmen]</source>
-            <p>This will find all documents whose titles are between Aida and Carmen.</p>
+            <source>title:{Aida TO Carmen}</source>
+            <p>This will find all documents whose titles are between Aida and Carmen, but not including Aida and Carmen.</p>
+            <p>Inclusive range queries are denoted by square brackets.  Exclusive range queries are denoted by
+            curly brackets.</p>
         </subsection>
 
 

