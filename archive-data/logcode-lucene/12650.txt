GitDiffStart: 03bf368eddf26d6afe293b065d5216bd917a77a5 | Tue Apr 24 13:16:11 2012 +0000
diff --git a/lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector.java b/lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector.java
index 60739c0..ae7644a 100644
--- a/lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector.java
+++ b/lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector.java
@@ -26,12 +26,14 @@ import org.apache.lucene.util.PriorityQueue;
 
 import java.io.IOException;
 
+// TODO: this sentence is too long for the class summary.
 /** BlockGroupingCollector performs grouping with a
  *  single pass collector, as long as you are grouping by a
  *  doc block field, ie all documents sharing a given group
  *  value were indexed as a doc block using the atomic
- *  {@link IndexWriter#addDocuments} or {@link
- *  IndexWriter#updateDocuments} API.
+ *  {@link IndexWriter#addDocuments IndexWriter.addDocuments()} 
+ *  or {@link IndexWriter#updateDocuments IndexWriter.updateDocuments()} 
+ *  API.
  *
  *  <p>This results in faster performance (~25% faster QPS)
  *  than the two-pass grouping collectors, with the tradeoff
diff --git a/lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java b/lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java
index f12e6f8..2c22041 100644
--- a/lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java
+++ b/lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java
@@ -43,8 +43,8 @@ import org.apache.lucene.util.FixedBitSet;
 /**
  * This query requires that you index
  * children and parent docs as a single block, using the
- * {@link IndexWriter#addDocuments} or {@link
- * IndexWriter#updateDocuments} API.  In each block, the
+ * {@link IndexWriter#addDocuments IndexWriter.addDocuments()} or {@link
+ * IndexWriter#updateDocuments IndexWriter.updateDocuments()} API.  In each block, the
  * child documents must appear first, ending with the parent
  * document.  At search time you provide a Filter
  * identifying the parents, however this Filter must provide
diff --git a/lucene/join/src/java/org/apache/lucene/search/join/package.html b/lucene/join/src/java/org/apache/lucene/search/join/package.html
index 216e463..5cea27a 100644
--- a/lucene/join/src/java/org/apache/lucene/search/join/package.html
+++ b/lucene/join/src/java/org/apache/lucene/search/join/package.html
@@ -23,7 +23,8 @@
 
 <p>The index-time joining support joins while searching, where joined
   documents are indexed as a single document block using
-  {@link org.apache.lucene.index.IndexWriter#addDocuments}.  This is useful for any normalized content (XML documents or database tables).  In database terms, all rows for all
+  {@link org.apache.lucene.index.IndexWriter#addDocuments IndexWriter.addDocuments()}.  
+  This is useful for any normalized content (XML documents or database tables).  In database terms, all rows for all
   joined tables matching a single row of the primary table must be
   indexed as a single document block, with the parent document
   being last in the group.</p>
@@ -48,7 +49,7 @@
   use the {@link org.apache.lucene.search.join.ToParentBlockJoinCollector} to collect the hits. Once the
   search is done, you retrieve a {@link
   org.apache.lucene.search.grouping.TopGroups} instance from the
-  {@link org.apache.lucene.search.join.ToParentBlockJoinCollector#getTopGroups} method.</p>
+  {@link org.apache.lucene.search.join.ToParentBlockJoinCollector#getTopGroups ToParentBlockJoinCollector.getTopGroups()} method.</p>
 
 <p>To map/join in the opposite direction, use {@link
   org.apache.lucene.search.join.ToChildBlockJoinQuery}.  This wraps
@@ -73,7 +74,8 @@
   Basically the query-time joining is accessible from one static method. The user of this method supplies the method
   with the described input and a <code>IndexSearcher</code> where the from terms need to be collected from. The returned
   query can be executed with the same <code>IndexSearcher</code>, but also with another <code>IndexSearcher</code>.
-  Example usage of the {@link org.apache.lucene.search.join.JoinUtil#createJoinQuery(String, boolean, String, org.apache.lucene.search.Query, org.apache.lucene.search.IndexSearcher)} :
+  Example usage of the {@link org.apache.lucene.search.join.JoinUtil#createJoinQuery(String, boolean, String, org.apache.lucene.search.Query, org.apache.lucene.search.IndexSearcher) 
+  JoinUtil.createJoinQuery()} :
 </p>
 <pre class="prettyprint">
   String fromField = "from"; // Name of the from field

