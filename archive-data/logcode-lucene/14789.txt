GitDiffStart: 44b56415a896e846cc8eaae4c3697b7d5bf877c9 | Mon Sep 26 03:30:09 2011 +0000
diff --git a/solr/core/src/test/org/apache/solr/update/AutoCommitTest.java b/solr/core/src/test/org/apache/solr/update/AutoCommitTest.java
index f94418b..40d4b83 100644
--- a/solr/core/src/test/org/apache/solr/update/AutoCommitTest.java
+++ b/solr/core/src/test/org/apache/solr/update/AutoCommitTest.java
@@ -172,7 +172,7 @@ public class AutoCommitTest extends AbstractSolrTestCase {
         adoc("id", "14", "subject", "info" ), null ) );
     handler.handleRequest( req, rsp );
 
-    assertTrue(trigger.waitForNewSearcher(10000));
+    assertTrue(trigger.waitForNewSearcher(15000));
 
     req.setContentStreams( toContentStreams(
         adoc("id", "15", "subject", "info" ), null ) );
@@ -216,7 +216,7 @@ public class AutoCommitTest extends AbstractSolrTestCase {
     assertQ("shouldn't find any", req("id:529") ,"//result[@numFound=0]" );
 
     // Wait longer than the autocommit time
-    assertTrue(trigger.waitForNewSearcher(30000));
+    assertTrue(trigger.waitForNewSearcher(45000));
     trigger.reset();
     req.setContentStreams( toContentStreams(
       adoc("id", "530", "field_t", "what's inside?", "subject", "info"), null ) );
@@ -330,7 +330,7 @@ public class AutoCommitTest extends AbstractSolrTestCase {
     }
     req.close();
     
-    assertTrue(softTrigger.waitForNewSearcher(10000));
+    assertTrue(softTrigger.waitForNewSearcher(30000));
     softTrigger.reset();
     
     assertTrue(trigger.waitForNewSearcher(10000));
@@ -489,11 +489,11 @@ public class AutoCommitTest extends AbstractSolrTestCase {
     assertTrue("expected:>=2 but got " + totalCommits, totalCommits >= 2);
     assertQ("deleted and time has passed", req("id:529") ,"//result[@numFound=0]" );
     
-    // now make the call 5 times really fast and make sure it 
-    // only commits once
+    // now make the call 2 times really fast and make sure id:500
+    // is not visible right away
     req.setContentStreams( toContentStreams(
         adoc("id", "500" ), null ) );
-    for( int i=0;i<5; i++ ) {
+    for( int i=0;i<2; i++ ) {
       handler.handleRequest( req, rsp );
     }
     assertQ("should not be there yet", req("id:500") ,"//result[@numFound=0]" );
diff --git a/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java b/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
index 75cfe80..2650b36 100644
--- a/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
+++ b/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
@@ -364,13 +364,22 @@ abstract public class SolrExampleTests extends SolrJettyTestBase
     rsp = server.query( new SolrQuery( "*:*") );
     Assert.assertEquals( 0, rsp.getResults().getNumFound() );
     
+    // TODO: not a great way to test this - timing is easily out
+    // of whack due to parallel tests and various computer specs/load
     Thread.sleep( 1000 ); // wait 1 sec
 
     // now check that it comes out...
     rsp = server.query( new SolrQuery( "id:id3") );
     
-    if(rsp.getResults().getNumFound() == 0) {
-      // wait and try again for slower machines
+    int cnt = 0;
+    while (rsp.getResults().getNumFound() == 0) {
+      // wait and try again for slower/busier machines
+      // and/or parallel test effects.
+      
+      if (cnt++ == 10) {
+        break;
+      }
+      
       Thread.sleep( 2000 ); // wait 2 seconds...
       
       rsp = server.query( new SolrQuery( "id:id3") );
@@ -391,11 +400,18 @@ abstract public class SolrExampleTests extends SolrJettyTestBase
     // now check that it comes out...
     rsp = server.query( new SolrQuery( "id:id4") );
 
-    if(rsp.getResults().getNumFound() == 0) {
-      // wait and try again for slower machines
+    cnt = 0;
+    while (rsp.getResults().getNumFound() == 0) {
+      // wait and try again for slower/busier machines
+      // and/or parallel test effects.
+      
+      if (cnt++ == 10) {
+        break;
+      }
+      
       Thread.sleep( 2000 ); // wait 2 seconds...
       
-      rsp = server.query( new SolrQuery( "id:id4") );
+      rsp = server.query( new SolrQuery( "id:id3") );
     }
     
     Assert.assertEquals( 1, rsp.getResults().getNumFound() );

