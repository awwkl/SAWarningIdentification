GitDiffStart: 51ca380dd8c3836d29294735b0b7489c76a0ded0 | Fri Feb 24 21:02:51 2012 +0000
diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java
index 7c13044..125215a 100644
--- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java
+++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java
@@ -1131,21 +1131,22 @@ public class CoreContainer
       return;
     }
     
-    String attribValue = null;
     if (node != null) {
       String rawAttribValue = DOMUtil.getAttr(node, name, null);
       if (value == null) {
         coreAttribs.put(name, rawAttribValue);
         return;
       }
-      if (rawAttribValue == null && defaultValue != null && value.equals(defaultValue)) return;
+      if (rawAttribValue == null && defaultValue != null && value.equals(defaultValue)) {
+        return;
+      }
       if (rawAttribValue != null && value.equals(DOMUtil.substituteProperty(rawAttribValue, loader.getCoreProperties()))){
-        attribValue = rawAttribValue;
+        coreAttribs.put(name, rawAttribValue);
+      } else {
+        coreAttribs.put(name, value);
       }
     }
-    if (attribValue != null) {
-      coreAttribs.put(name, attribValue);
-    }
+
   }
 
 
diff --git a/solr/solrj/src/java/org/apache/solr/common/util/DOMUtil.java b/solr/solrj/src/java/org/apache/solr/common/util/DOMUtil.java
index 3baacf3..d9e18e2 100644
--- a/solr/solrj/src/java/org/apache/solr/common/util/DOMUtil.java
+++ b/solr/solrj/src/java/org/apache/solr/common/util/DOMUtil.java
@@ -328,7 +328,7 @@ public class DOMUtil {
           fragment = System.getProperty(propertyName, defaultValue);
         }
         if (fragment == null) {
-          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, "No system property or default value specified for " + propertyName);
+          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, "No system property or default value specified for " + propertyName + " value:" + value);
         }
       }
       sb.append(fragment);
diff --git a/solr/solrj/src/test-files/solrj/solr/shared/conf/schema.xml b/solr/solrj/src/test-files/solrj/solr/shared/conf/schema.xml
index da37f27..6f6e3db 100644
--- a/solr/solrj/src/test-files/solrj/solr/shared/conf/schema.xml
+++ b/solr/solrj/src/test-files/solrj/solr/shared/conf/schema.xml
@@ -16,7 +16,7 @@
  limitations under the License.
 -->
 
-<schema name="example core ${l10n}" version="1.1">
+<schema name="example core ${l10n:}" version="1.1">
   <types>
     <fieldtype name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
     <fieldType name="text-FR" class="solr.TextField" positionIncrementGap="100">
@@ -54,7 +54,7 @@
     <field name="id" type="string" indexed="true" stored="true" multiValued="false" required="true"/>
     <field name="type" type="string" indexed="true" stored="true" multiValued="false"/>
     <field name="name" type="string" indexed="true" stored="true" multiValued="false"/>
-    <field name="${ctlField}" type="text-${l10n}" indexed="true" stored="true" multiValued="true"/>
+    <field name="${ctlField:}" type="text-${l10n:EN}" indexed="true" stored="true" multiValued="true"/>
   </fields>
 
   <!-- field to use to determine and enforce document uniqueness. -->
diff --git a/solr/solrj/src/test-files/solrj/solr/shared/conf/solrconfig.xml b/solr/solrj/src/test-files/solrj/solr/shared/conf/solrconfig.xml
index c3fbe58..0b638dd 100644
--- a/solr/solrj/src/test-files/solrj/solr/shared/conf/solrconfig.xml
+++ b/solr/solrj/src/test-files/solrj/solr/shared/conf/solrconfig.xml
@@ -22,7 +22,7 @@
 -->
 <config>
   <luceneMatchVersion>${tests.luceneMatchVersion:LUCENE_CURRENT}</luceneMatchVersion>
-  <dataDir>${solr.solr.home}/data/${l10n}-${version}</dataDir>
+  <dataDir>${solr.solr.home}/data/${l10n:}-${version:}</dataDir>
   <directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.RAMDirectoryFactory}"/>
 
   <updateHandler class="solr.DirectUpdateHandler2" />
diff --git a/solr/solrj/src/test-files/solrj/solr/shared/solr.xml b/solr/solrj/src/test-files/solrj/solr/shared/solr.xml
index dd17d78..ee09850 100644
--- a/solr/solrj/src/test-files/solrj/solr/shared/solr.xml
+++ b/solr/solrj/src/test-files/solrj/solr/shared/solr.xml
@@ -31,6 +31,7 @@
     If 'null' (or absent), cores will not be manageable via REST
   -->
   <cores adminPath="/admin/cores" defaultCoreName="core0" host="127.0.0.1" hostPort="${hostPort:8983}" hostContext="solr" zkClientTimeout="8000">
+    <core name="collection1" instanceDir="." />
     <core name="core0" instanceDir="${theInstanceDir:./}" collection="${collection:acollection}">
       <property name="version" value="3.5"/>
       <property name="l10n" value="EN"/>
diff --git a/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServer.java b/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServer.java
index 3eb45b8..cd9c90a 100644
--- a/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServer.java
+++ b/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServer.java
@@ -82,7 +82,7 @@ public class TestEmbeddedSolrServer extends LuceneTestCase {
     
     EmbeddedSolrServer solrServer = getSolrCore0();
     
-    Assert.assertEquals(2, cores.getCores().size());
+    Assert.assertEquals(3, cores.getCores().size());
     List<SolrCore> solrCores = new ArrayList<SolrCore>();
     for (SolrCore solrCore : cores.getCores()) {
       Assert.assertEquals(false, solrCore.isClosed());
diff --git a/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java b/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java
index e09bcaa..59fa18c 100644
--- a/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java
+++ b/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java
@@ -244,6 +244,43 @@ public class TestSolrProperties extends LuceneTestCase {
     } finally {
       fis.close();
     }
+    
+    coreadmin = getRenamedSolrAdmin();
+    CoreAdminRequest.createCore("newCore", home.getAbsolutePath(), coreadmin);
+    
+//    fis = new FileInputStream(new File(solrXml.getParent(), "solr-persist.xml"));
+//    solrPersistXml = IOUtils.toString(fis);
+//    System.out.println("xml:" + solrPersistXml);
+//    fis.close();
+    
+    mcr = CoreAdminRequest.persist("solr-persist.xml", getRenamedSolrAdmin());
+    
+//    fis = new FileInputStream(new File(solrXml.getParent(), "solr-persist.xml"));
+//    solrPersistXml = IOUtils.toString(fis);
+//    System.out.println("xml:" + solrPersistXml);
+//    fis.close();
+    
+    fis = new FileInputStream(new File(solrXml.getParent(), "solr-persist.xml"));
+    try {
+      Document document = builder.parse(fis);
+      assertTrue(exists("/solr/cores/core[@name='collection1' and @instanceDir='./']", document));
+    } finally {
+      fis.close();
+    }
+    
+    // test reload and parse
+    cores.shutdown();
+    
+    cores = new CoreContainer(home.getAbsolutePath(), new File(solrXml.getParent(), "solr-persist.xml")); 
+ 
+    
+    mcr = CoreAdminRequest.persist("solr-persist.xml", getRenamedSolrAdmin());
+    
+//     fis = new FileInputStream(new File(solrXml.getParent(),
+//     "solr-persist.xml"));
+//     solrPersistXml = IOUtils.toString(fis);
+//     System.out.println("xml:" + solrPersistXml);
+//     fis.close();
   }
   
   public static boolean exists(String xpathStr, Node node)

