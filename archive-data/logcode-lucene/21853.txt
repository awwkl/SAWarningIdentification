GitDiffStart: 8609f34c233e2d41cc5567f8a4a2015ccc7dc352 | Tue Feb 5 03:46:33 2008 +0000
diff --git a/src/test/org/apache/solr/search/FooQParserPlugin.java b/src/test/org/apache/solr/search/FooQParserPlugin.java
new file mode 100755
index 0000000..fc2c3a6
--- /dev/null
+++ b/src/test/org/apache/solr/search/FooQParserPlugin.java
@@ -0,0 +1,46 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.solr.search;
+
+import org.apache.solr.common.params.SolrParams;
+import org.apache.solr.common.util.NamedList;
+import org.apache.solr.request.SolrQueryRequest;
+import org.apache.lucene.search.Query;
+import org.apache.lucene.search.TermQuery;
+import org.apache.lucene.queryParser.ParseException;
+import org.apache.lucene.index.Term;
+
+
+public class FooQParserPlugin extends QParserPlugin {
+  public QParser createParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {
+    return new FooQParser(qstr, localParams, params, req);
+  }
+
+  public void init(NamedList args) {
+  }
+}
+
+class FooQParser extends QParser {
+  public FooQParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {
+    super(qstr, localParams, params, req);
+  }
+
+  protected Query parse() throws ParseException {
+    return new TermQuery(new Term(localParams.get(QueryParsing.F), localParams.get(QueryParsing.V)));
+  }
+}
diff --git a/src/test/org/apache/solr/search/TestQueryTypes.java b/src/test/org/apache/solr/search/TestQueryTypes.java
index e0f1464..8203ca9 100755
--- a/src/test/org/apache/solr/search/TestQueryTypes.java
+++ b/src/test/org/apache/solr/search/TestQueryTypes.java
@@ -66,6 +66,13 @@ public class TestQueryTypes extends AbstractSolrTestCase {
             ,"//result[@numFound='0']"
             );
 
+
+    assertQ("test custom plugin query",
+            req("q","<!foo f=v_t>hello")
+            ,"//result[@numFound='2']"
+            );
+
+
     assertQ("test single term field query on text type",
             req("q","<!field f=v_t>HELLO")
             ,"//result[@numFound='2']"
@@ -176,4 +183,4 @@ public class TestQueryTypes extends AbstractSolrTestCase {
              );
 
   }
-}
+}
\ No newline at end of file
diff --git a/src/test/test-files/solr/conf/solrconfig.xml b/src/test/test-files/solr/conf/solrconfig.xml
index 43fed2f..c486741 100644
--- a/src/test/test-files/solr/conf/solrconfig.xml
+++ b/src/test/test-files/solr/conf/solrconfig.xml
@@ -320,4 +320,8 @@
   <propTest attr1="${solr.test.sys.prop1}-$${literal}"
             attr2="${non.existent.sys.prop:default-from-config}">prefix-${solr.test.sys.prop2}-suffix</propTest>
 
+  <queryParser name="foo" class="FooQParserPlugin"/>
+
+
+
 </config>

