GitDiffStart: 9c0c4a162147a38a989a570cc6c71bd6d9a02dc2 | Tue Oct 21 11:21:26 2008 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index c69f900..2876593 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -67,6 +67,9 @@ New Features
     as well as configuration replication and exposes detailed statistics and progress information
     on the Admin page. Works on all platforms. (Noble Paul, yonik, Akshay Ukey, shalin)
 
+10. SOLR-746: Added "omitHeader" request parameter to omit the header from the response.
+    (Noble Paul via shalin)
+
 Optimizations
 ----------------------
  1. SOLR-374: Use IndexReader.reopen to save resources by re-using parts of the
diff --git a/src/java/org/apache/solr/common/params/CommonParams.java b/src/java/org/apache/solr/common/params/CommonParams.java
index ad09235..4f33c4d 100755
--- a/src/java/org/apache/solr/common/params/CommonParams.java
+++ b/src/java/org/apache/solr/common/params/CommonParams.java
@@ -89,7 +89,10 @@ public interface CommonParams {
   
   /** include the parameters in the header **/
   public static final String HEADER_ECHO_PARAMS = "echoParams";
-  
+
+  /** include header in the response */
+  public static final String OMIT_HEADER = "omitHeader";
+
   /** valid values for: <code>echoParams</code> */
   public enum EchoParamStyle {
     EXPLICIT,
diff --git a/src/java/org/apache/solr/common/util/NamedList.java b/src/java/org/apache/solr/common/util/NamedList.java
index a918fd8..4439f8c 100644
--- a/src/java/org/apache/solr/common/util/NamedList.java
+++ b/src/java/org/apache/solr/common/util/NamedList.java
@@ -287,4 +287,10 @@ public class NamedList<T> implements Cloneable, Serializable, Iterable<Map.Entry
     };
     return iter;
   }
+
+  public T remove(String name) {
+    int idx = indexOf(name, 0);
+    if(idx != -1) return remove(idx);
+    return null;
+  }
 }
diff --git a/src/java/org/apache/solr/request/BinaryResponseWriter.java b/src/java/org/apache/solr/request/BinaryResponseWriter.java
index f2e1ac3..b42f7a6 100755
--- a/src/java/org/apache/solr/request/BinaryResponseWriter.java
+++ b/src/java/org/apache/solr/request/BinaryResponseWriter.java
@@ -21,6 +21,7 @@ import org.apache.lucene.document.Fieldable;
 import org.apache.solr.common.SolrDocument;
 import org.apache.solr.common.SolrDocumentList;
 import org.apache.solr.common.SolrException;
+import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.util.NamedListCodec;
 import org.apache.solr.schema.IndexSchema;
@@ -40,6 +41,8 @@ import java.util.*;
 public class BinaryResponseWriter implements BinaryQueryResponseWriter {
   public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {
     Resolver resolver = new Resolver(req, response.getReturnFields());
+    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);
+    if(omitHeader != null && omitHeader) response.getValues().remove("responseHeader");
     NamedListCodec codec = new NamedListCodec(resolver);
     codec.marshal(response.getValues(), out);
   }
diff --git a/src/java/org/apache/solr/request/JSONResponseWriter.java b/src/java/org/apache/solr/request/JSONResponseWriter.java
index 1f49b77..5f77860 100644
--- a/src/java/org/apache/solr/request/JSONResponseWriter.java
+++ b/src/java/org/apache/solr/request/JSONResponseWriter.java
@@ -21,6 +21,7 @@ import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Fieldable;
 import org.apache.solr.common.SolrDocument;
 import org.apache.solr.common.SolrDocumentList;
+import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.util.SimpleOrderedMap;
 import org.apache.solr.schema.SchemaField;
@@ -85,6 +86,8 @@ class JSONWriter extends TextResponseWriter {
     if(wrapperFunction!=null) {
         writer.write(wrapperFunction + "(");
     }
+    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);
+    if(omitHeader != null && omitHeader) rsp.getValues().remove("responseHeader");
     writeNamedList(null, rsp.getValues());
     if(wrapperFunction!=null) {
         writer.write(')');
@@ -836,4 +839,4 @@ abstract class NaNFloatWriter extends JSONWriter {
       writeDouble(name, Double.toString(val));
     }
   }
-}
\ No newline at end of file
+}
diff --git a/src/java/org/apache/solr/request/XMLWriter.java b/src/java/org/apache/solr/request/XMLWriter.java
index c6f5a05..b2a533a 100644
--- a/src/java/org/apache/solr/request/XMLWriter.java
+++ b/src/java/org/apache/solr/request/XMLWriter.java
@@ -99,6 +99,8 @@ final public class XMLWriter {
 
     // dump response values
     NamedList lst = rsp.getValues();
+    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);
+    if(omitHeader != null && omitHeader) lst.remove("responseHeader");
     int sz = lst.size();
     int start=0;
 

