GitDiffStart: 8589202889cf0be2ddae321743c3ce16fc236257 | Tue Aug 18 16:31:31 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 581365e..801c686 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -142,6 +142,8 @@ Bug Fixes
 * SOLR-7935: Fix very rare race condition that can cause an update to fail
   via NullPointerException during a core reload. (yonik)
 
+* SOLR-7941: multivalued params are concatenated when using config API (noble)
+
 Optimizations
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/handler/DumpRequestHandler.java b/solr/core/src/java/org/apache/solr/handler/DumpRequestHandler.java
index 0c8fc9e..9a84b2e 100644
--- a/solr/core/src/java/org/apache/solr/handler/DumpRequestHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/DumpRequestHandler.java
@@ -46,9 +46,12 @@ public class DumpRequestHandler extends RequestHandlerBase
       for (String returnParam : returnParams) {
         String[] vals = req.getParams().getParams(returnParam);
         if(vals != null){
-          for (String val : vals) {
-            params.add(returnParam,val);
+          if (vals.length == 1) {
+            params.add(returnParam, vals[0]);
+          } else {
+            params.add(returnParam, vals);
           }
+
         }
 
       }
diff --git a/solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.java b/solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.java
index 1ea9592..cb442c6 100644
--- a/solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.java
+++ b/solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.java
@@ -189,7 +189,7 @@ public class TestSolrConfigHandler extends RestTestBase {
         10);
 
     payload = "{\n" +
-        "'update-requesthandler' : { 'name' : '/x', 'class': 'org.apache.solr.handler.DumpRequestHandler' , 'startup' : 'lazy' , 'a':'b' , 'defaults': {'def_a':'def A val'}}\n" +
+        "'update-requesthandler' : { 'name' : '/x', 'class': 'org.apache.solr.handler.DumpRequestHandler' , 'startup' : 'lazy' , 'a':'b' , 'defaults': {'def_a':'def A val', 'multival':['a','b','c']}}\n" +
         "}";
     runConfigCommand(writeHarness, "/config?wt=json", payload);
 
@@ -209,6 +209,14 @@ public class TestSolrConfigHandler extends RestTestBase {
         "def A val",
         10);
 
+    testForResponseElement(writeHarness,
+        testServerBaseUrl,
+        "/x?wt=json&param=multival&json.nl=map",
+        cloudSolrClient,
+        Arrays.asList("params", "multival"),
+        Arrays.asList("a", "b", "c"),
+        10);
+
     payload = "{\n" +
         "'delete-requesthandler' : '/x'" +
         "}";
diff --git a/solr/solrj/src/java/org/apache/solr/common/params/SolrParams.java b/solr/solrj/src/java/org/apache/solr/common/params/SolrParams.java
index 924fabc..42b8ed7 100644
--- a/solr/solrj/src/java/org/apache/solr/common/params/SolrParams.java
+++ b/solr/solrj/src/java/org/apache/solr/common/params/SolrParams.java
@@ -316,6 +316,13 @@ public abstract class SolrParams implements Serializable {
       Object val = params.getVal(i);
       if (val instanceof String[]) {
         MultiMapSolrParams.addParam(name, (String[]) val, map);
+      } else if (val instanceof List) {
+        List l = (List) val;
+        String[] s = new String[l.size()];
+        for (int j = 0; j < l.size(); j++) {
+          s[j] = l.get(j) == null ? null : String.valueOf(l.get(j));
+        }
+        MultiMapSolrParams.addParam(name, s, map);
       } else {
         MultiMapSolrParams.addParam(name, val.toString(), map);
       }

