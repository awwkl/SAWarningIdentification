GitDiffStart: 83027eca9ef0a1b02b355475085c99a237f1b00c | Mon Mar 25 19:30:20 2013 +0000
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter.java
index 9f2d165..d6d8c3d 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter.java
@@ -45,7 +45,6 @@ public final class StemmerOverrideFilter extends TokenFilter {
   private final KeywordAttribute keywordAtt = addAttribute(KeywordAttribute.class);
   private final BytesReader fstReader;
   private final Arc<BytesRef> scratchArc = new FST.Arc<BytesRef>();
-;
   private final CharsRef spare = new CharsRef();
   
   /**
@@ -65,6 +64,10 @@ public final class StemmerOverrideFilter extends TokenFilter {
   @Override
   public boolean incrementToken() throws IOException {
     if (input.incrementToken()) {
+      if (fstReader == null) {
+        // No overrides
+        return true;
+      }
       if (!keywordAtt.isKeyword()) { // don't muck with already-keyworded terms
         final BytesRef stem = stemmerOverrideMap.get(termAtt.buffer(), termAtt.length(), scratchArc, fstReader);
         if (stem != null) {
@@ -106,13 +109,17 @@ public final class StemmerOverrideFilter extends TokenFilter {
      * Returns a {@link BytesReader} to pass to the {@link #get(char[], int, Arc, BytesReader)} method.
      */
     BytesReader getBytesReader() {
-      return fst.getBytesReader();
+      if (fst == null) {
+        return null;
+      } else {
+        return fst.getBytesReader();
+      }
     }
 
     /**
      * Returns the value mapped to the given key or <code>null</code> if the key is not in the FST dictionary.
      */
-    final BytesRef get(char[] buffer, int bufferLen, Arc<BytesRef> scratchArc, BytesReader fstReader) throws IOException {
+    BytesRef get(char[] buffer, int bufferLen, Arc<BytesRef> scratchArc, BytesReader fstReader) throws IOException {
       BytesRef pendingOutput = fst.outputs.getNoOutput();
       BytesRef matchOutput = null;
       int bufUpto = 0;
diff --git a/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter.java b/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter.java
index e26efa1..3e34230 100644
--- a/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter.java
+++ b/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter.java
@@ -60,6 +60,14 @@ public class TestStemmerOverrideFilter extends BaseTokenStreamTestCase {
         tokenizer, builder.build()));
     assertTokenStreamContents(stream, new String[] {"books"});
   }
+
+  public void testNoOverrides() throws IOException {
+    StemmerOverrideFilter.Builder builder = new StemmerOverrideFilter.Builder(true);
+    Tokenizer tokenizer = new KeywordTokenizer(new StringReader("book"));
+    TokenStream stream = new PorterStemFilter(new StemmerOverrideFilter(
+        tokenizer, builder.build()));
+    assertTokenStreamContents(stream, new String[] {"book"});
+  }
   
   public void testRandomRealisticWhiteSpace() throws IOException {
     Map<String,String> map = new HashMap<String,String>();

