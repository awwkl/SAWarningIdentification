GitDiffStart: 07e7b557fef6a50c632f9a8a967dc0be99a5bb1e | Mon Dec 10 21:21:12 2007 +0000
diff --git a/src/java/org/apache/lucene/search/payloads/BoostingTermQuery.java b/src/java/org/apache/lucene/search/payloads/BoostingTermQuery.java
index 4495196..e9be290 100644
--- a/src/java/org/apache/lucene/search/payloads/BoostingTermQuery.java
+++ b/src/java/org/apache/lucene/search/payloads/BoostingTermQuery.java
@@ -32,12 +32,12 @@ import java.io.IOException;
  * that it factors in the value of the payload located at each of the positions where the
  * {@link org.apache.lucene.index.Term} occurs.
  * <p>
- * In order to take advantage of this, you must override {@link org.apache.lucene.search.Similarity#scorePayload(byte[],int,int)}
+ * In order to take advantage of this, you must override {@link org.apache.lucene.search.Similarity#scorePayload(String, byte[],int,int)}
  * which returns 1 by default.
  * <p>
  * Payload scores are averaged across term occurrences in the document.  
  * 
- * @see org.apache.lucene.search.Similarity#scorePayload(byte[], int, int)
+ * @see org.apache.lucene.search.Similarity#scorePayload(String, byte[], int, int)
  */
 public class BoostingTermQuery extends SpanTermQuery{
 

