GitDiffStart: 778e1b31abbf0cb5425b140425b9bf918530daca | Tue Dec 2 21:50:19 2014 +0000
diff --git a/solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest.java b/solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest.java
index 55f5ce8..4c58030 100644
--- a/solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest.java
+++ b/solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest.java
@@ -23,12 +23,17 @@ import org.apache.solr.common.SolrDocument;
 import org.apache.solr.common.SolrDocumentList;
 import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.params.ModifiableSolrParams;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashSet;
 
 public class CloudMLTQParserTest extends AbstractFullDistribZkTestBase {
+
+  static Logger log = LoggerFactory.getLogger(CloudMLTQParserTest.class);
+  
   public CloudMLTQParserTest() {
     fixShardCount = true;
     shardCount = 2;
@@ -125,13 +130,20 @@ public class CloudMLTQParserTest extends AbstractFullDistribZkTestBase {
     String expectedQueryString = "lowerfilt:over lowerfilt:fox lowerfilt:lazy lowerfilt:brown "
         + "lowerfilt:jumped lowerfilt:red lowerfilt:dogs. lowerfilt:quote lowerfilt:the";
     
-    ArrayList<String> actualParsedQueries = (ArrayList<String>) queryResponse
-        .getDebugMap().get("parsedquery");
-    
-    for(int counter=0; counter < actualParsedQueries.size(); counter++) {
-      assertTrue("Parsed queries aren't equal",
-          compareParsedQueryStrings(expectedQueryString,
-          actualParsedQueries.get(counter)));
+    try {
+      ArrayList<String> actualParsedQueries = (ArrayList<String>) queryResponse
+          .getDebugMap().get("parsedquery");
+
+      for (int counter = 0; counter < actualParsedQueries.size(); counter++) {
+        assertTrue("Parsed queries aren't equal",
+            compareParsedQueryStrings(expectedQueryString,
+                actualParsedQueries.get(counter)));
+      }
+    } catch (ClassCastException ex) {
+      // TODO: Adding this to just track a rare test failure.
+      // Once SOLR-6755 is resolved, this should be removed.
+      log.info("QueryResponse.debugMap: {}", queryResponse.getDebugMap().toString());
+      log.info("ClusterState: {}", cloudClient.getZkStateReader().getClusterState().toString());
     }
 
     // Assert that {!mlt}id does not throw an exception i.e. implicitly, only fields that are stored + have explicit

