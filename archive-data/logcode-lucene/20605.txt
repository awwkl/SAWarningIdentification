GitDiffStart: 801ea7c395d23727244390bace3fbd696844fdf6 | Wed Feb 11 11:01:44 2009 +0000
diff --git a/contrib/dataimporthandler/CHANGES.txt b/contrib/dataimporthandler/CHANGES.txt
index 9d8d210..53b28cc 100644
--- a/contrib/dataimporthandler/CHANGES.txt
+++ b/contrib/dataimporthandler/CHANGES.txt
@@ -125,6 +125,10 @@ Bug Fixes
 16.SOLR-1009: Repeated column names result in duplicate values.
               (Fergus McMenemie, Noble Paul via shalin)
 
+17.SOLR-1017: Fix thread-safety issue with last_index_time for concurrent imports in multiple cores due to unsafe usage
+              of SimpleDateFormat by multiple threads.
+              (Ryuuichi Kumai via shalin)
+
 Documentation
 ----------------------
 
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
index 824ae28..b59e658 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
@@ -414,8 +414,12 @@ public class DataImporter {
     }
   };
 
-  static final SimpleDateFormat DATE_TIME_FORMAT = new SimpleDateFormat(
-          "yyyy-MM-dd HH:mm:ss");
+  static final ThreadLocal<SimpleDateFormat> DATE_TIME_FORMAT = new ThreadLocal<SimpleDateFormat>() {
+    @Override
+    protected SimpleDateFormat initialValue() {
+      return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+    }
+  };
 
   static final class MSG {
     public static final String NO_CONFIG_FOUND = "Configuration not found";
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
index 916f4b0..c2abc67 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
@@ -76,8 +76,8 @@ public class DocBuilder {
     VariableResolverImpl resolver = new VariableResolverImpl();
     Map<String, Object> indexerNamespace = new HashMap<String, Object>();
     if (dataImporter.getLastIndexTime() != null)
-      indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT
-              .format(dataImporter.getLastIndexTime()));
+      indexerNamespace.put(LAST_INDEX_TIME,
+              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));
     indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());
     indexerNamespace.put("request", requestParameters.requestParams);
     indexerNamespace.put("functions", EvaluatorBag.getFunctionsNamespace(resolver,
@@ -165,7 +165,7 @@ public class DocBuilder {
     if (stop.get()) {
       if (DataImporter.ABORT_CMD.equals(requestParameters.command)) {
         // Dont commit if aborted using command=abort
-        statusMessages.put("Aborted", DataImporter.DATE_TIME_FORMAT.format(new Date()));
+        statusMessages.put("Aborted", DataImporter.DATE_TIME_FORMAT.get().format(new Date()));
         rollback();
       } else if (requestParameters.commit) {
         // Debug mode, commit if commit=true was specified
@@ -277,7 +277,7 @@ public class DocBuilder {
 
   @SuppressWarnings("unchecked")
   public void addStatusMessage(String msg) {
-    statusMessages.put(msg, DataImporter.DATE_TIME_FORMAT.format(new Date()));
+    statusMessages.put(msg, DataImporter.DATE_TIME_FORMAT.get().format(new Date()));
   }
 
   @SuppressWarnings("unchecked")
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag.java
index 87b525b..c830860 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag.java
@@ -155,7 +155,7 @@ public class EvaluatorBag {
           } else {
             String s = o.toString();
             try {
-              date = DataImporter.DATE_TIME_FORMAT.parse(s);
+              date = DataImporter.DATE_TIME_FORMAT.get().parse(s);
             } catch (ParseException exp) {
               throw new DataImportHandlerException(
                       DataImportHandlerException.SEVERE,
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java
index 3a72fd8..6da9519 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java
@@ -111,7 +111,7 @@ public class FileListEntityProcessor extends EntityProcessorBase {
       }
     }
     try {
-      return DataImporter.DATE_TIME_FORMAT.parse(dateStr);
+      return DataImporter.DATE_TIME_FORMAT.get().parse(dateStr);
     } catch (ParseException exp) {
       throw new DataImportHandlerException(DataImportHandlerException.SEVERE,
               "Invalid expression for date", exp);
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java
index 7b93acf..26e4429 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java
@@ -98,7 +98,7 @@ public class SolrWriter {
 
     try {
       if (result != null)
-        return DataImporter.DATE_TIME_FORMAT.parse(result);
+        return DataImporter.DATE_TIME_FORMAT.get().parse(result);
     } catch (ParseException e) {
       throw new DataImportHandlerException(DataImportHandlerException.WARN,
               "Unable to read last indexed time from: "
@@ -113,8 +113,8 @@ public class SolrWriter {
     Properties props = readIndexerProperties();
 
     try {
-      props.put(SolrWriter.LAST_INDEX_KEY, DataImporter.DATE_TIME_FORMAT
-              .format(date));
+      props.put(SolrWriter.LAST_INDEX_KEY,
+              DataImporter.DATE_TIME_FORMAT.get().format(date));
       String filePath = configDir;
       if (configDir != null && !configDir.endsWith(File.separator))
         filePath += File.separator;
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateString.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateString.java
index dfffd57..794432a 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateString.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TemplateString.java
@@ -100,7 +100,7 @@ public class TemplateString {
   private String getObjectAsString(Object val) {
     if (val instanceof java.sql.Date) {
       java.sql.Date d = (java.sql.Date) val;
-      return DataImporter.DATE_TIME_FORMAT.format(d);
+      return DataImporter.DATE_TIME_FORMAT.get().format(d);
     }
     return val.toString();
   }

