GitDiffStart: 12b30db6ce8d3e3b6a3eea8f63fd19c8501e770e | Mon Feb 9 19:02:32 2015 +0000
diff --git a/solr/common-build.xml b/solr/common-build.xml
index d74a343..f5b5fd5 100644
--- a/solr/common-build.xml
+++ b/solr/common-build.xml
@@ -30,10 +30,6 @@
   <property name="javac.target" value="1.8"/>
   <property name="javac.args" value=""/>
 
-  <!-- for now disable doclint: -->
-  <property name="javadoc.doclint.args" value="-Xdoclint:none"/>
-  <property name="javac.doclint.args" value=""/>
-  
   <property name="dest" location="${common-solr.dir}/build" />
   <property name="build.dir" location="${dest}/${ant.project.name}"/>
   <property name="dist" location="${common-solr.dir}/dist"/>
diff --git a/solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.java b/solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.java
index 0b34e9d..df76250 100644
--- a/solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.java
+++ b/solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinContentStreamDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinContentStreamDataSource.java
index 1cbac64..f4b1d7a 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinContentStreamDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinContentStreamDataSource.java
@@ -23,10 +23,10 @@ import java.io.InputStream;
 import java.io.IOException;
 import java.util.Properties;
 /**
- * <p> A data source implementation which can be used to read binary stream from content streams. </p> <p/> <p> Refer to <a
+ * <p> A data source implementation which can be used to read binary stream from content streams. </p> <p> Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a> for more
  * details. </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 3.1
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinFileDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinFileDataSource.java
index 3ebf35a..dc7a0f5 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinFileDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinFileDataSource.java
@@ -28,13 +28,12 @@ import java.util.Properties;
  * <p>
  * A DataSource which reads from local files
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 3.1
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinURLDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinURLDataSource.java
index b7d7b73..3f9c530 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinURLDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/BinURLDataSource.java
@@ -26,10 +26,10 @@ import java.net.URL;
 import java.net.URLConnection;
 import java.util.Properties;
 /**
- * <p> A data source implementation which can be used to read binary streams using HTTP. </p> <p/> <p> Refer to <a
+ * <p> A data source implementation which can be used to read binary streams using HTTP. </p> <p> Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a> for more
  * details. </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 3.1
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ClobTransformer.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ClobTransformer.java
index ac0d393..4bbe046 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ClobTransformer.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ClobTransformer.java
@@ -27,10 +27,10 @@ import java.util.Map;
 
 /**
  * {@link Transformer} instance which converts a {@link Clob} to a {@link String}.
- * <p/>
+ * <p>
  * Refer to <a href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @since solr 1.4
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContentStreamDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContentStreamDataSource.java
index 015b7f4..4482160 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContentStreamDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContentStreamDataSource.java
@@ -25,10 +25,10 @@ import java.util.Properties;
 
 /**
  * A DataSource implementation which reads from the ContentStream of a POST request
- * <p/>
+ * <p>
  * Refer to <a href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.4
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Context.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Context.java
index 325138f..56b821d 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Context.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Context.java
@@ -32,7 +32,7 @@ import java.util.Map;
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DIHCache.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DIHCache.java
index ae7ddb6..4b756d9 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DIHCache.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DIHCache.java
@@ -35,7 +35,6 @@ public interface DIHCache extends Iterable<Map<String,Object>> {
    * Opens the cache using the specified properties. The {@link Context}
    * includes any parameters needed by the cache impl. This must be called
    * before any read/write operations are permitted.
-   * <p>
    */
   public void open(Context context);
   
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DIHWriter.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DIHWriter.java
index 33ad7da..93e493a 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DIHWriter.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DIHWriter.java
@@ -36,7 +36,7 @@ public interface DIHWriter {
 
   /**
    * <p>
-   *  Release resources used by this writer.  After calling close, reads & updates will throw exceptions.
+   *  Release resources used by this writer.  After calling close, reads &amp; updates will throw exceptions.
    * </p>
    */
   public void close();
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java
index 89258a4..89ce010 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java
@@ -57,13 +57,12 @@ import org.xml.sax.InputSource;
  * <p>
  * It is configured in solrconfig.xml
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandlerException.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandlerException.java
index 81b49c2..b4ec65b 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandlerException.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandlerException.java
@@ -19,9 +19,8 @@ package org.apache.solr.handler.dataimport;
 
 /**
  * <p> Exception class for all DataImportHandler exceptions </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
- * <p/>
  *
  * @since solr 1.3
  */
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java
index 370ec5e..52ca977 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java
@@ -62,7 +62,7 @@ import java.util.concurrent.locks.ReentrantLock;
 
 /**
  * <p> Stores all configuration information for pulling and indexing data. </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataSource.java
index 4865697..de8a3d7 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataSource.java
@@ -23,17 +23,15 @@ import java.util.Properties;
  * <p>
  * Provides data from a source with a given query.
  * </p>
- * <p/>
  * <p>
  * Implementation of this abstract class must provide a default no-arg constructor
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
@@ -43,7 +41,7 @@ public abstract class DataSource<T> {
   /**
    * Initializes the DataSource with the <code>Context</code> and
    * initialization properties.
-   * <p/>
+   * <p>
    * This is invoked by the <code>DataImporter</code> after creating an
    * instance of this class.
    */
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DateFormatEvaluator.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DateFormatEvaluator.java
index 2eef988..8c35065 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DateFormatEvaluator.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DateFormatEvaluator.java
@@ -47,7 +47,6 @@ import org.apache.solr.util.DateMathParser;
  *  <li>The {@link Locale} to parse.  
  *      (optional. Defaults to the Root Locale) </li>
  * </ul>
- * </p>
  */
 public class DateFormatEvaluator extends Evaluator {
   
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DateFormatTransformer.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DateFormatTransformer.java
index 47ad0b3..c4042ca 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DateFormatTransformer.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DateFormatTransformer.java
@@ -28,13 +28,11 @@ import org.slf4j.LoggerFactory;
  * <p>
  * {@link Transformer} instance which creates {@link Date} instances out of {@link String}s.
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
- * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.java
index eaee297..3e55237 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.java
@@ -43,7 +43,7 @@ import java.util.concurrent.atomic.AtomicLong;
 /**
  * <p> {@link DocBuilder} is responsible for creating Solr documents out of the given configuration. It also maintains
  * statistics information. It depends on the {@link EntityProcessor} implementations to fetch data. </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessor.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessor.java
index 5122dcb..8cfbed9 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessor.java
@@ -23,17 +23,15 @@ import java.util.Map;
  * An instance of entity processor serves an entity. It is reused throughout the
  * import process.
  * </p>
- * <p/>
  * <p>
  * Implementations of this abstract class must provide a public no-args constructor.
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java
index 975775d..f2d8d57 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java
@@ -25,9 +25,9 @@ import org.slf4j.LoggerFactory;
 import java.util.*;
 
 /**
- * <p> Base class for all implementations of {@link EntityProcessor} </p> <p/> <p> Most implementations of {@link EntityProcessor}
+ * <p> Base class for all implementations of {@link EntityProcessor} </p> <p> Most implementations of {@link EntityProcessor}
  * extend this base class which provides common functionality. </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FieldReaderDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FieldReaderDataSource.java
index 20b34ee..c8ca66a 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FieldReaderDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FieldReaderDataSource.java
@@ -31,17 +31,17 @@ import java.util.Properties;
 
 /**
  * This can be useful for users who have a DB field containing xml and wish to use a nested {@link XPathEntityProcessor}
- * <p/>
+ * <p>
  * The datasouce may be configured as follows
- * <p/>
+ * <p>
  * &lt;datasource name="f1" type="FieldReaderDataSource" /&gt;
- * <p/>
+ * <p>
  * The enity which uses this datasource must keep the url value as the variable name url="field-name"
- * <p/>
+ * <p>
  * The fieldname must be resolvable from {@link VariableResolver}
- * <p/>
+ * <p>
  * This may be used with any {@link EntityProcessor} which uses a {@link DataSource}&lt;{@link Reader}&gt; eg: {@link XPathEntityProcessor}
- * <p/>
+ * <p>
  * Supports String, BLOB, CLOB data types and there is an extra field (in the entity) 'encoding' for BLOB types
  *
  * @since 1.4
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FieldStreamDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FieldStreamDataSource.java
index bb5d4e8..7cbcc9c 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FieldStreamDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FieldStreamDataSource.java
@@ -31,17 +31,16 @@ import static org.apache.solr.handler.dataimport.DataImportHandlerException.SEVE
 
 /**
  * This can be useful for users who have a DB field containing BLOBs which may be Rich documents
- * <p/>
+ * <p>
  * The datasouce may be configured as follows
- * <p/>
+ * <p>
  * &lt;dataSource name="f1" type="FieldStreamDataSource" /&gt;
- * <p/>
+ * <p>
  * The entity which uses this datasource must keep and attribute dataField
- * <p/>
+ * <p>
  * The fieldname must be resolvable from {@link VariableResolver}
- * <p/>
+ * <p>
  * This may be used with any {@link EntityProcessor} which uses a {@link DataSource}&lt;{@link InputStream}&gt; eg: TikaEntityProcessor
- * <p/>
  *
  * @since 3.1
  */
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FileDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FileDataSource.java
index 5f5136b..9b71d13 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FileDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FileDataSource.java
@@ -34,13 +34,12 @@ import static org.apache.solr.handler.dataimport.DataImportHandlerException.SEVE
  * The file is read with the default platform encoding. It can be overriden by
  * specifying the encoding in solrconfig.xml
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java
index d67d608..e86d09d 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/FileListEntityProcessor.java
@@ -31,7 +31,6 @@ import org.apache.solr.util.DateMathParser;
  * An {@link EntityProcessor} instance which can stream file names found in a given base
  * directory matching patterns and returning rows containing file information.
  * </p>
- * <p/>
  * <p>
  * It supports querying a give base directory by matching:
  * <ul>
@@ -43,14 +42,12 @@ import org.apache.solr.util.DateMathParser;
  * </ul>
  * Its output can be used along with {@link FileDataSource} to read from files in file
  * systems.
- * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/JdbcDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/JdbcDataSource.java
index 8c8de28..cb83687 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/JdbcDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/JdbcDataSource.java
@@ -33,10 +33,10 @@ import java.util.concurrent.Callable;
 import java.util.concurrent.TimeUnit;
 
 /**
- * <p> A DataSource implementation which can fetch data using JDBC. </p> <p/> <p> Refer to <a
+ * <p> A DataSource implementation which can fetch data using JDBC. </p> <p> Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a> for more
  * details. </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LineEntityProcessor.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LineEntityProcessor.java
index 99bbea1..0940cbd 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LineEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LineEntityProcessor.java
@@ -28,7 +28,6 @@ import org.apache.commons.io.IOUtils;
  * An {@link EntityProcessor} instance which can stream lines of text read from a 
  * datasource. Options allow lines to be explicitly skipped or included in the index.
  * </p>
- * <p/>
  * <p>
  * Attribute summary 
  * <ul>
@@ -39,17 +38,16 @@ import org.apache.commons.io.IOUtils;
  * <li>skipLineRegex is an optional attribute that is applied after any 
  *     acceptLineRegex and discards any line which matches this regExp.</li>
  * </ul>
- * </p><p>
+ * <p>
  * Although envisioned for reading lines from a file or url, LineEntityProcessor may also be useful
  * for dealing with change lists, where each line contains filenames which can be used by subsequent entities
  * to parse content from those files.
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.4
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer.java
index f0a1b97..621ff7f 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer.java
@@ -23,10 +23,10 @@ import java.util.Map;
 
 /**
  * A {@link Transformer} implementation which logs messages in a given template format.
- * <p/>
+ * <p>
  * Refer to <a href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.4
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/MockDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/MockDataSource.java
index 5036a50..8989ea2 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/MockDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/MockDataSource.java
@@ -25,7 +25,7 @@ import java.util.Properties;
  * <p>
  * A mock DataSource implementation which can be used for testing.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/NumberFormatTransformer.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/NumberFormatTransformer.java
index 5c28759..e2be661 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/NumberFormatTransformer.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/NumberFormatTransformer.java
@@ -33,13 +33,12 @@ import java.util.regex.Pattern;
  * Number, Integer, Currency and Percent styles as supported by
  * {@link NumberFormat} with configurable locales.
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer.java
index c5ccaad..355aa48 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer.java
@@ -27,13 +27,12 @@ import java.util.regex.Pattern;
  * A {@link Transformer} implementation which uses Regular Expressions to extract, split
  * and replace data in fields.
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer.java
index 5dc058a..165d76d 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer.java
@@ -31,13 +31,12 @@ import javax.script.ScriptException;
  * A {@link Transformer} instance capable of executing functions written in scripting
  * languages as a {@link Transformer} instance.
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrWriter.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrWriter.java
index 4a5dbb0..b536e2e 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrWriter.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrWriter.java
@@ -32,7 +32,7 @@ import java.nio.charset.StandardCharsets;
 
 /**
  * <p> Writes documents to SOLR. </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
index 864a137..076151a 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
@@ -29,13 +29,12 @@ import java.util.regex.Pattern;
  * databases. It is used in conjunction with {@link JdbcDataSource}. This is the default
  * {@link EntityProcessor} if none is specified explicitly in data-config.xml
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  *
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer.java
index 7d83ea3..99da9ef 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer.java
@@ -27,20 +27,18 @@ import org.slf4j.LoggerFactory;
  * A {@link Transformer} which can put values into a column by resolving an expression
  * containing other columns
  * </p>
- * <p/>
  * <p>
- * For example:<br />
+ * For example:<br>
  * &lt;field column="name" template="${e.lastName}, ${e.firstName}
  * ${e.middleName}" /&gt; will produce the name by combining values from
  * lastName, firstName and middleName fields as given in the template attribute.
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  *
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Transformer.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Transformer.java
index 4bbde75..c7923e1 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Transformer.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Transformer.java
@@ -22,17 +22,15 @@ import java.util.Map;
  * <p>
  * Use this API to implement a custom transformer for any given entity
  * </p>
- * <p/>
  * <p>
  * Implementations of this abstract class must provide a public no-args constructor.
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  *
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource.java
index b7609ad..d5ed8a0 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource.java
@@ -30,10 +30,10 @@ import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
 /**
- * <p> A data source implementation which can be used to read character files using HTTP. </p> <p/> <p> Refer to <a
+ * <p> A data source implementation which can be used to read character files using HTTP. </p> <p> Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a> for more
  * details. </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  *
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java
index acc4487..92fa722 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java
@@ -43,10 +43,10 @@ import java.util.concurrent.atomic.AtomicReference;
 
 /**
  * <p> An implementation of {@link EntityProcessor} which uses a streaming xpath parser to extract values out of XML documents.
- * It is typically used in conjunction with {@link URLDataSource} or {@link FileDataSource}. </p> <p/> <p> Refer to <a
+ * It is typically used in conjunction with {@link URLDataSource} or {@link FileDataSource}. </p> <p> Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a> for more
  * details. </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and may change in the future.</b>
  *
  *
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.java
index 68cb859..0a5639e 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.java
@@ -50,10 +50,8 @@ import org.slf4j.LoggerFactory;
  * This class is thread-safe for parsing xml. But adding fields is not
  * thread-safe. The recommended usage is to addField() in one thread and 
  * then share the instance across threads.
- * </p>
- * <p/>
- * <b>This API is experimental and may change in the future.</b>
  * <p>
+ * <b>This API is experimental and may change in the future.</b>
  *
  * @since solr 1.3
  */
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/config/DIHConfiguration.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/config/DIHConfiguration.java
index ee668bc..dc89b0f 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/config/DIHConfiguration.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/config/DIHConfiguration.java
@@ -36,13 +36,12 @@ import org.w3c.dom.Element;
  * <p>
  * Mapping for data-config.xml
  * </p>
- * <p/>
  * <p>
  * Refer to <a
  * href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
  * for more details.
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @since solr 1.3
diff --git a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase.java b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase.java
index 12bed33..2373475 100644
--- a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase.java
+++ b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase.java
@@ -44,7 +44,7 @@ import org.junit.Before;
  * <p>
  * Abstract base class for DataImportHandler tests
  * </p>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  *
diff --git a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource.java b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource.java
index 2725b77..8e2d5dd 100644
--- a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource.java
+++ b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource.java
@@ -35,7 +35,6 @@ import org.junit.Test;
  * <p>
  * Test for JdbcDataSource
  * </p>
- * <p/>
  * <p>
  * Note: The tests are ignored for the lack of DB support for testing
  * </p>
diff --git a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer.java b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer.java
index 1f01774..d478985 100644
--- a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer.java
+++ b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer.java
@@ -32,10 +32,7 @@ import java.util.List;
 import java.util.Map;
 
 /**
- * <p>
  * Test for ScriptTransformer
- * </p>
- * <p/>
  *
  *
  * @since solr 1.3
diff --git a/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingParams.java b/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingParams.java
index 60d5382..6b587f1 100644
--- a/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingParams.java
+++ b/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingParams.java
@@ -36,7 +36,7 @@ public interface ExtractingParams {
 
   /**
    * The param prefix for mapping Tika metadata to Solr fields.
-   * <p/>
+   * <p>
    * To map a field, add a name like:
    * <pre>fmap.title=solr.title</pre>
    *
@@ -48,7 +48,7 @@ public interface ExtractingParams {
 
   /**
    * The boost value for the name of the field.  The boost can be specified by a name mapping.
-   * <p/>
+   * <p>
    * For example
    * <pre>
    * map.title=solr.title
@@ -73,9 +73,8 @@ public interface ExtractingParams {
    * Restrict the extracted parts of a document to be indexed
    *  by passing in an XPath expression.  All content that satisfies the XPath expr.
    * will be passed to the {@link SolrContentHandler}.
-   * <p/>
+   * <p>
    * See Tika's docs for what the extracted document looks like.
-   * <p/>
    * @see #CAPTURE_ELEMENTS
    */
   public static final String XPATH_EXPRESSION = "xpath";
@@ -104,11 +103,11 @@ public interface ExtractingParams {
   /**
    * Capture the specified fields (and everything included below it that isn't capture by some other capture field) separately from the default.  This is different
    * then the case of passing in an XPath expression.
-   * <p/>
+   * <p>
    * The Capture field is based on the localName returned to the {@link SolrContentHandler}
    * by Tika, not to be confused by the mapped field.  The field name can then
    * be mapped into the index schema.
-   * <p/>
+   * <p>
    * For instance, a Tika document may look like:
    * <pre>
    *  &lt;html&gt;
diff --git a/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingRequestHandler.java b/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingRequestHandler.java
index b460849..6d9e31b 100644
--- a/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingRequestHandler.java
+++ b/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/ExtractingRequestHandler.java
@@ -43,7 +43,6 @@ import java.util.Map;
 /**
  * Handler for rich documents like PDF or Word or any other file format that Tika handles that need the text to be extracted
  * first from the document.
- * <p/>
  */
 public class ExtractingRequestHandler extends ContentStreamHandlerBase implements SolrCoreAware {
 
diff --git a/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler.java b/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler.java
index fe1ecf5..49f8b89 100644
--- a/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler.java
+++ b/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler.java
@@ -38,8 +38,7 @@ import java.util.*;
 /**
  * The class responsible for handling Tika events and translating them into {@link org.apache.solr.common.SolrInputDocument}s.
  * <B>This class is not thread-safe.</B>
- * <p/>
- * <p/>
+ * <p>
  * User's may wish to override this class to provide their own functionality.
  *
  * @see org.apache.solr.handler.extraction.SolrContentHandlerFactory
@@ -313,7 +312,7 @@ public class SolrContentHandler extends DefaultHandler implements ExtractingPara
 
   /**
    * Can be used to transform input values based on their {@link org.apache.solr.schema.SchemaField}
-   * <p/>
+   * <p>
    * This implementation only formats dates using the {@link org.apache.solr.common.util.DateUtil}.
    *
    * @param val    The value to transform
diff --git a/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandlerFactory.java b/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandlerFactory.java
index acf94a2..c91dd47 100644
--- a/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandlerFactory.java
+++ b/solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandlerFactory.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
diff --git a/solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory.java b/solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory.java
index 3b83ea7..633d1a7 100644
--- a/solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory.java
+++ b/solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory.java
@@ -41,7 +41,7 @@ import com.cybozu.labs.langdetect.LangDetectException;
 /**
  * Identifies the language of a set of input fields using 
  * http://code.google.com/p/language-detection
- * <p/>
+ * <p>
  * The UpdateProcessorChain config entry can take a number of parameters
  * which may also be passed as HTTP parameters on the update request
  * and override the defaults. Here is the simplest processor config possible:
diff --git a/solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessorFactory.java b/solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessorFactory.java
index e19270b..7a6c81e 100644
--- a/solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessorFactory.java
+++ b/solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessorFactory.java
@@ -28,7 +28,7 @@ import org.apache.solr.util.plugin.SolrCoreAware;
 /**
  * Identifies the language of a set of input fields using Tika's
  * LanguageIdentifier. The tika-core-x.y.jar must be on the classpath
- * <p/>
+ * <p>
  * The UpdateProcessorChain config entry can take a number of parameters
  * which may also be passed as HTTP parameters on the update request
  * and override the defaults. Here is the simplest processor config possible:
diff --git a/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.java b/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.java
index 5e6b34e..b14f944 100644
--- a/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.java
+++ b/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.java
@@ -172,7 +172,7 @@ public class JettySolrRunner {
   }
 
   /**
-   * Constructor taking an ordered list of additional (servlet holder -> path spec) mappings
+   * Constructor taking an ordered list of additional (servlet holder -&gt; path spec) mappings
    * to add to the servlet context
    */
   public JettySolrRunner(String solrHome, String context, int port,
@@ -190,7 +190,7 @@ public class JettySolrRunner {
   }
 
   /**
-   * Constructor taking an ordered list of additional (filter holder -> path spec) mappings.
+   * Constructor taking an ordered list of additional (filter holder -&gt; path spec) mappings.
    * Filters are placed after the DebugFilter but before the SolrDispatchFilter.
    */
   public JettySolrRunner(String solrHome, String context, int port,
diff --git a/solr/core/src/java/org/apache/solr/cloud/CloudUtil.java b/solr/core/src/java/org/apache/solr/cloud/CloudUtil.java
index 14c7f96..333fd50 100644
--- a/solr/core/src/java/org/apache/solr/cloud/CloudUtil.java
+++ b/solr/core/src/java/org/apache/solr/cloud/CloudUtil.java
@@ -89,7 +89,7 @@ public class CloudUtil {
   /**
    * Returns a displayable unified path to the given resource. For non-solrCloud that will be the
    * same as getConfigDir, but for Cloud it will be getConfigSetZkPath ending in a /
-   * <p/>
+   * <p>
    * <b>Note:</b> Do not use this to generate a valid file path, but for debug printing etc
    * @param loader Resource loader instance
    * @return a String of path to resource
diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkSolrResourceLoader.java b/solr/core/src/java/org/apache/solr/cloud/ZkSolrResourceLoader.java
index 3d9ec26..1fe9353 100644
--- a/solr/core/src/java/org/apache/solr/cloud/ZkSolrResourceLoader.java
+++ b/solr/core/src/java/org/apache/solr/cloud/ZkSolrResourceLoader.java
@@ -56,7 +56,6 @@ public class ZkSolrResourceLoader extends SolrResourceLoader {
    * will delegate to the context classloader when possible,
    * otherwise it will attempt to resolve resources using any jar files found in
    * the "lib/" directory in the specified instance directory.
-   * <p>
    */
   public ZkSolrResourceLoader(String instanceDir, String configSet, ClassLoader parent,
       Properties coreProperties, ZkController zooKeeperController) {
diff --git a/solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener.java b/solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener.java
index 839c3dc..8a7101d 100644
--- a/solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener.java
+++ b/solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener.java
@@ -61,7 +61,7 @@ public class AbstractSolrEventListener implements SolrEventListener {
   /**
    * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}
    * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.
-   * <p/>
+   * <p>
    * Makes a copy of NamedList and then adds the parameters.
    *
    *
diff --git a/solr/core/src/java/org/apache/solr/core/CloseHook.java b/solr/core/src/java/org/apache/solr/core/CloseHook.java
index 032f44c..d59c179 100644
--- a/solr/core/src/java/org/apache/solr/core/CloseHook.java
+++ b/solr/core/src/java/org/apache/solr/core/CloseHook.java
@@ -19,10 +19,10 @@ package org.apache.solr.core;
 
 /**
  * Used to request notification when the core is closed.
- * <p/>
+ * <p>
  * Call {@link org.apache.solr.core.SolrCore#addCloseHook(org.apache.solr.core.CloseHook)} during the {@link org.apache.solr.util.plugin.SolrCoreAware#inform(SolrCore)} method to
  * add a close hook to your object.
- * <p/>
+ * <p>
  * The close hook can be useful for releasing objects related to the request handler (for instance, if you have a JDBC DataSource or something like that)
  */
 
@@ -31,7 +31,7 @@ public abstract class CloseHook {
   /**
    * Method called when the given SolrCore object is closing / shutting down but before the update handler and
    * searcher(s) are actually closed
-   * <br />
+   * <br>
    * <b>Important:</b> Keep the method implementation as short as possible. If it were to use any heavy i/o , network connections -
    * it might be a better idea to launch in a separate Thread so as to not to block the process of
    * shutting down a given SolrCore instance.
@@ -42,9 +42,9 @@ public abstract class CloseHook {
 
   /**
    * Method called when the given SolrCore object has been shut down and update handlers and searchers are closed
-   * <br/>
+   * <br>
    * Use this method for post-close clean up operations e.g. deleting the index from disk.
-   * <br/>
+   * <br>
    * <b>The core's passed to the method is already closed and therefore, its update handler or searcher should *NOT* be used</b>
    *
    * <b>Important:</b> Keep the method implementation as short as possible. If it were to use any heavy i/o , network connections -
diff --git a/solr/core/src/java/org/apache/solr/core/Config.java b/solr/core/src/java/org/apache/solr/core/Config.java
index 7bd2126..c30b1cd 100644
--- a/solr/core/src/java/org/apache/solr/core/Config.java
+++ b/solr/core/src/java/org/apache/solr/core/Config.java
@@ -100,7 +100,7 @@ public class Config {
    * will be created.
    * </p>
    * <p>
-   * Consider passing a non-null 'name' parameter in all use-cases since it is used for logging & exception reporting.
+   * Consider passing a non-null 'name' parameter in all use-cases since it is used for logging &amp; exception reporting.
    * </p>
    * @param loader the resource loader used to obtain an input stream if 'is' is null
    * @param name the resource name used if the input stream 'is' is null
diff --git a/solr/core/src/java/org/apache/solr/core/CoreDescriptor.java b/solr/core/src/java/org/apache/solr/core/CoreDescriptor.java
index 157ce0d..2ea7ce3 100644
--- a/solr/core/src/java/org/apache/solr/core/CoreDescriptor.java
+++ b/solr/core/src/java/org/apache/solr/core/CoreDescriptor.java
@@ -264,7 +264,7 @@ public class CoreDescriptor {
    * Is this property a Solr-standard property, or is it an extra property
    * defined per-core by the user?
    * @param propName the Property name
-   * @return @{code true} if this property is user-defined
+   * @return {@code true} if this property is user-defined
    */
   protected static boolean isUserDefinedProperty(String propName) {
     return !standardPropNames.contains(propName);
diff --git a/solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java b/solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java
index 036d108..450b767 100644
--- a/solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java
+++ b/solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java
@@ -32,11 +32,11 @@ import java.util.concurrent.atomic.AtomicInteger;
 
 /**
  * A wrapper for an IndexDeletionPolicy instance.
- * <p/>
+ * <p>
  * Provides features for looking up IndexCommit given a version. Allows reserving index
  * commit points for certain amounts of time to support features such as index replication
  * or snapshooting directly out of a live index directory.
- * <p/>
+ * <p>
  * <b>NOTE</b>: The {@link #clone()} method returns <tt>this</tt> in order to make
  * this {@link IndexDeletionPolicy} instance trackable across {@link IndexWriter}
  * instantiations. This is correct because each core has its own
@@ -59,7 +59,7 @@ public final class IndexDeletionPolicyWrapper extends IndexDeletionPolicy {
 
   /**
    * Gets the most recent commit point
-   * <p/>
+   * <p>
    * It is recommended to reserve a commit point for the duration of usage so that
    * it is not deleted by the underlying deletion policy
    *
diff --git a/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java b/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java
index 840cb0d..e10bf3b 100644
--- a/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java
+++ b/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java
@@ -40,7 +40,6 @@ import java.util.concurrent.ConcurrentHashMap;
  * Responsible for finding (or creating) a MBeanServer from given configuration
  * and registering all SolrInfoMBean objects with JMX.
  * </p>
- * <p/>
  * <p>
  * Please see http://wiki.apache.org/solr/SolrJmx for instructions on usage and configuration
  * </p>
diff --git a/solr/core/src/java/org/apache/solr/core/SolrCore.java b/solr/core/src/java/org/apache/solr/core/SolrCore.java
index 8f47aee..a8d5083 100644
--- a/solr/core/src/java/org/apache/solr/core/SolrCore.java
+++ b/solr/core/src/java/org/apache/solr/core/SolrCore.java
@@ -1065,14 +1065,13 @@ public final class SolrCore implements SolrInfoMBean, Closeable {
    *   <li>all CloseHooks will be notified</li>
    *   <li>All MBeans will be unregistered from MBeanServer if JMX was enabled
    *       </li>
-   * </ul>
-   * <p>   
+   * </ul> 
    * <p>
    * The behavior of this method is determined by the result of decrementing
    * the core's reference count (A core is created with a reference count of 1)...
    * </p>
    * <ul>
-   *   <li>If reference count is > 0, the usage count is decreased by 1 and no
+   *   <li>If reference count is &gt; 0, the usage count is decreased by 1 and no
    *       resources are released.
    *   </li>
    *   <li>If reference count is == 0, the resources are released.
diff --git a/solr/core/src/java/org/apache/solr/core/SolrEventListener.java b/solr/core/src/java/org/apache/solr/core/SolrEventListener.java
index 0c67f76..7bf2c1a 100644
--- a/solr/core/src/java/org/apache/solr/core/SolrEventListener.java
+++ b/solr/core/src/java/org/apache/solr/core/SolrEventListener.java
@@ -37,7 +37,7 @@ public interface SolrEventListener extends NamedListInitializedPlugin{
   /** The searchers passed here are only guaranteed to be valid for the duration
    * of this method call, so care should be taken not to spawn threads or asynchronous
    * tasks with references to these searchers.
-   * <p/>
+   * <p>
    * Implementations should add the {@link org.apache.solr.common.params.EventParams#EVENT} parameter and set it to a value of either:
    * <ul>
    * <li>{@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} - First Searcher event</li>
diff --git a/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java b/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java
index 332a2cf..41724b6 100644
--- a/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java
+++ b/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java
@@ -151,7 +151,6 @@ public class SolrResourceLoader implements ResourceLoader,Closeable
    * otherwise it will attempt to resolve resources using any jar files
    * found in the "lib/" directory in the specified instance directory.
    * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.
-   * <p>
    */
   public SolrResourceLoader( String instanceDir, ClassLoader parent )
   {
@@ -286,7 +285,7 @@ public class SolrResourceLoader implements ResourceLoader,Closeable
 
   /**
    * EXPERT
-   * <p/>
+   * <p>
    * The underlying class loader.  Most applications will not need to use this.
    * @return The {@link ClassLoader}
    */
diff --git a/solr/core/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java b/solr/core/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java
index a1e7dac..f4ac13b 100644
--- a/solr/core/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java
@@ -50,7 +50,7 @@ import java.util.*;
 /**
  * An analysis handler that provides a breakdown of the analysis process of provided documents. This handler expects a
  * (single) content stream of the following format:
- * <p/>
+ * <br>
  * <pre><code>
  *  &lt;docs&gt;
  *      &lt;doc&gt;
@@ -63,12 +63,10 @@ import java.util.*;
  *      ...
  *  &lt;/docs&gt;
  * </code></pre>
- * <p/>
+ * <br>
  * <em><b>Note: Each document must contain a field which serves as the unique key. This key is used in the returned
  * response to associate an analysis breakdown to the analyzed document.</b></em>
- * <p/>
- * <p/>
- * <p/>
+ * <p>
  * Like the {@link org.apache.solr.handler.FieldAnalysisRequestHandler}, this handler also supports query analysis by
  * sending either an "analysis.query" or "q" request parameter that holds the query text to be analyzed. It also
  * supports the "analysis.showmatch" parameter which when set to {@code true}, all field tokens that match the query
diff --git a/solr/core/src/java/org/apache/solr/handler/FieldAnalysisRequestHandler.java b/solr/core/src/java/org/apache/solr/handler/FieldAnalysisRequestHandler.java
index 7fde9cc..15b79e7 100644
--- a/solr/core/src/java/org/apache/solr/handler/FieldAnalysisRequestHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/FieldAnalysisRequestHandler.java
@@ -38,7 +38,7 @@ import java.util.Set;
 
 /**
  * Provides the ability to specify multiple field types and field names in the same request. Expected parameters:
- * <table border="1">
+ * <table border="1" summary="table of parameters">
  * <tr>
  * <th align="left">Name</th>
  * <th align="left">Type</th>
diff --git a/solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java b/solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java
index 3cf1cde..f4ab68d 100644
--- a/solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java
@@ -83,16 +83,16 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 /**
- * <p> A Handler which provides a REST API for replication and serves replication requests from Slaves. <p/> </p>
+ * <p> A Handler which provides a REST API for replication and serves replication requests from Slaves. </p>
  * <p>When running on the master, it provides the following commands <ol> <li>Get the current replicable index version
  * (command=indexversion)</li> <li>Get the list of files for a given index version
  * (command=filelist&amp;indexversion=&lt;VERSION&gt;)</li> <li>Get full or a part (chunk) of a given index or a config
  * file (command=filecontent&amp;file=&lt;FILE_NAME&gt;) You can optionally specify an offset and length to get that
  * chunk of the file. You can request a configuration file by using "cf" parameter instead of the "file" parameter.</li>
- * <li>Get status/statistics (command=details)</li> </ol> </p> <p>When running on the slave, it provides the following
+ * <li>Get status/statistics (command=details)</li> </ol> <p>When running on the slave, it provides the following
  * commands <ol> <li>Perform a snap pull now (command=snappull)</li> <li>Get status/statistics (command=details)</li>
  * <li>Abort a snap pull (command=abort)</li> <li>Enable/Disable polling the master for new versions (command=enablepoll
- * or command=disablepoll)</li> </ol> </p>
+ * or command=disablepoll)</li> </ol>
  *
  *
  * @since solr 1.4
diff --git a/solr/core/src/java/org/apache/solr/handler/RequestHandlerBase.java b/solr/core/src/java/org/apache/solr/handler/RequestHandlerBase.java
index 00b8474..ad76ce2 100644
--- a/solr/core/src/java/org/apache/solr/handler/RequestHandlerBase.java
+++ b/solr/core/src/java/org/apache/solr/handler/RequestHandlerBase.java
@@ -62,7 +62,7 @@ public abstract class RequestHandlerBase implements SolrRequestHandler, SolrInfo
 
   /**
    * Initializes the {@link org.apache.solr.request.SolrRequestHandler} by creating three {@link org.apache.solr.common.params.SolrParams} named.
-   * <table border="1">
+   * <table border="1" summary="table of parameters">
    * <tr><th>Name</th><th>Description</th></tr>
    * <tr><td>defaults</td><td>Contains all of the named arguments contained within the list element named "defaults".</td></tr>
    * <tr><td>appends</td><td>Contains all of the named arguments contained within the list element named "appends".</td></tr>
diff --git a/solr/core/src/java/org/apache/solr/handler/SnapPuller.java b/solr/core/src/java/org/apache/solr/handler/SnapPuller.java
index cb0325f..b5f4697 100644
--- a/solr/core/src/java/org/apache/solr/handler/SnapPuller.java
+++ b/solr/core/src/java/org/apache/solr/handler/SnapPuller.java
@@ -115,7 +115,7 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 /**
- * <p/> Provides functionality of downloading changed index files as well as config files and a timer for scheduling fetches from the
+ * <p> Provides functionality of downloading changed index files as well as config files and a timer for scheduling fetches from the
  * master. </p>
  *
  *
diff --git a/solr/core/src/java/org/apache/solr/handler/SnapShooter.java b/solr/core/src/java/org/apache/solr/handler/SnapShooter.java
index b322dfc..9b2ab3c 100644
--- a/solr/core/src/java/org/apache/solr/handler/SnapShooter.java
+++ b/solr/core/src/java/org/apache/solr/handler/SnapShooter.java
@@ -42,7 +42,7 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 /**
- * <p/> Provides functionality equivalent to the snapshooter script </p>
+ * <p> Provides functionality equivalent to the snapshooter script </p>
  * This is no longer used in standard replication.
  *
  *
diff --git a/solr/core/src/java/org/apache/solr/handler/StandardRequestHandler.java b/solr/core/src/java/org/apache/solr/handler/StandardRequestHandler.java
index 30baf18..04bbe69 100644
--- a/solr/core/src/java/org/apache/solr/handler/StandardRequestHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/StandardRequestHandler.java
@@ -29,7 +29,6 @@ import java.net.URL;
  * in the solrconfig as defaults, and may be overriden as request parameters.
  * (TODO: complete documentation of request parameters here, rather than only
  * on the wiki).
- * </p>
  *
  * <ul>
  * <li> highlight - Set to any value not .equal() to "false" to enable highlight
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
index 85e8be8..f32901a 100644
--- a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
@@ -482,7 +482,7 @@ public class CoreAdminHandler extends RequestHandlerBase {
 
   /**
    * Handle Custom Action.
-   * <p/>
+   * <p>
    * This method could be overridden by derived classes to handle custom actions. <br> By default - this method throws a
    * solr exception. Derived classes are free to write their derivation if necessary.
    */
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
index d9a8077..aa1c68c 100644
--- a/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
@@ -57,7 +57,7 @@ import java.util.Set;
  * If you want to selectively restrict access some configuration files, you can list
  * these files in the {@link #HIDDEN} invariants.  For example to hide 
  * synonyms.txt and anotherfile.txt, you would register:
- * <p>
+ * <br>
  * <pre>
  * &lt;requestHandler name="/admin/file" class="org.apache.solr.handler.admin.ShowFileRequestHandler" &gt;
  *   &lt;lst name="defaults"&gt;
@@ -83,7 +83,7 @@ import java.util.Set;
  * set it directly using: {@link #USE_CONTENT_TYPE}.  For example, to get a plain text
  * version of schema.xml, try:
  * <pre>
- *   http://localhost:8983/solr/admin/file?file=schema.xml&contentType=text/plain
+ *   http://localhost:8983/solr/admin/file?file=schema.xml&amp;contentType=text/plain
  * </pre>
  *
  *
diff --git a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java
index d5dad88..cf17fd9 100644
--- a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java
+++ b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java
@@ -92,17 +92,17 @@ import org.apache.solr.util.plugin.SolrCoreAware;
 /**
  * The ExpandComponent is designed to work with the CollapsingPostFilter.
  * The CollapsingPostFilter collapses a result set on a field.
- * <p/>
+ * <p>
  * The ExpandComponent expands the collapsed groups for a single page.
- * <p/>
+ * <p>
  * http parameters:
- * <p/>
- * expand=true <br/>
- * expand.rows=5 <br/>
- * expand.sort=field asc|desc<br/>
- * expand.q=*:* (optional, overrides the main query)<br/>
- * expand.fq=type:child (optional, overrides the main filter queries)<br/>
- * expand.field=field (mandatory if the not used with the CollapsingQParserPlugin)<br/>
+ * <p>
+ * expand=true <br>
+ * expand.rows=5 <br>
+ * expand.sort=field asc|desc<br>
+ * expand.q=*:* (optional, overrides the main query)<br>
+ * expand.fq=type:child (optional, overrides the main filter queries)<br>
+ * expand.field=field (mandatory if the not used with the CollapsingQParserPlugin)<br>
  */
 public class ExpandComponent extends SearchComponent implements PluginInfoInitialized, SolrCoreAware {
   public static final String COMPONENT_NAME = "expand";
diff --git a/solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats.java b/solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats.java
index f84a587..2887ce2 100644
--- a/solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats.java
+++ b/solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats.java
@@ -39,7 +39,6 @@ import org.apache.solr.search.SolrIndexSearcher;
  * for facet values present in another field.
  * <p>
  * 9/10/2009 - Moved out of StatsComponent to allow open access to UnInvertedField
- * <p/>
  * @see org.apache.solr.handler.component.StatsComponent
  *
  */
diff --git a/solr/core/src/java/org/apache/solr/handler/component/TermVectorComponent.java b/solr/core/src/java/org/apache/solr/handler/component/TermVectorComponent.java
index 2df05d2..8f12c0a 100644
--- a/solr/core/src/java/org/apache/solr/handler/component/TermVectorComponent.java
+++ b/solr/core/src/java/org/apache/solr/handler/component/TermVectorComponent.java
@@ -56,10 +56,10 @@ import org.apache.solr.util.plugin.SolrCoreAware;
 
 /**
  * Return term vectors for the documents in a query result set.
- * <p/>
+ * <p>
  * Info available:
  * term, frequency, position, offset, IDF.
- * <p/>
+ * <p>
  * <b>Note</b> Returning IDF can be expensive.
  * 
  * <pre class="prettyprint">
diff --git a/solr/core/src/java/org/apache/solr/highlight/WeightedFragListBuilder.java b/solr/core/src/java/org/apache/solr/highlight/WeightedFragListBuilder.java
index b2ebe8c..6cc0da2 100644
--- a/solr/core/src/java/org/apache/solr/highlight/WeightedFragListBuilder.java
+++ b/solr/core/src/java/org/apache/solr/highlight/WeightedFragListBuilder.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
diff --git a/solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfig.java b/solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfig.java
index ac67123..625eb9f 100644
--- a/solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfig.java
+++ b/solr/core/src/java/org/apache/solr/internal/csv/writer/CSVConfig.java
@@ -144,7 +144,7 @@ public class CSVConfig {
 
     /**
      * Set the fill pattern. Defaults to {@link #FILLNONE}
-     * <br/>Other options are : {@link #FILLLEFT} and {@link #FILLRIGHT}
+     * <br>Other options are : {@link #FILLLEFT} and {@link #FILLRIGHT}
      * @param fill the fill pattern.
      */
     public void setFill(int fill) {
@@ -258,7 +258,7 @@ public class CSVConfig {
     }
 
     /**
-     * Creates a config based on a stream. It tries to guess<br/>
+     * Creates a config based on a stream. It tries to guess<br>
      * NOTE : The stream will be closed.
      * @param inputStream the inputstream. 
      * @return the guessed config. 
diff --git a/solr/core/src/java/org/apache/solr/logging/log4j/EventAppender.java b/solr/core/src/java/org/apache/solr/logging/log4j/EventAppender.java
index 1e8b6f0..88755ca 100644
--- a/solr/core/src/java/org/apache/solr/logging/log4j/EventAppender.java
+++ b/solr/core/src/java/org/apache/solr/logging/log4j/EventAppender.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
diff --git a/solr/core/src/java/org/apache/solr/logging/log4j/Log4jInfo.java b/solr/core/src/java/org/apache/solr/logging/log4j/Log4jInfo.java
index a1c28a5..9df6a6a 100644
--- a/solr/core/src/java/org/apache/solr/logging/log4j/Log4jInfo.java
+++ b/solr/core/src/java/org/apache/solr/logging/log4j/Log4jInfo.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
diff --git a/solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher.java b/solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher.java
index c137b65..e484a97 100644
--- a/solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher.java
+++ b/solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
diff --git a/solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase.java b/solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase.java
index abe1bb0..b76ce09 100644
--- a/solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase.java
+++ b/solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase.java
@@ -271,7 +271,7 @@ public abstract class SolrQueryParserBase extends QueryBuilder {
    * Sets the boolean operator of the QueryParser.
    * In default mode (<code>OR_OPERATOR</code>) terms without any modifiers
    * are considered optional: for example <code>capital of Hungary</code> is equal to
-   * <code>capital OR of OR Hungary</code>.<br/>
+   * <code>capital OR of OR Hungary</code>.<br>
    * In <code>AND_OPERATOR</code> mode terms are considered to be in conjunction: the
    * above mentioned query is parsed as <code>capital AND of AND Hungary</code>
    */
diff --git a/solr/core/src/java/org/apache/solr/request/IntervalFacets.java b/solr/core/src/java/org/apache/solr/request/IntervalFacets.java
index 90c8381..862a4be 100644
--- a/solr/core/src/java/org/apache/solr/request/IntervalFacets.java
+++ b/solr/core/src/java/org/apache/solr/request/IntervalFacets.java
@@ -53,7 +53,7 @@ import org.apache.solr.search.SyntaxError;
 
 /**
  * Computes interval facets for docvalues field (single or multivalued).
- * <p/>
+ * <p>
  * Given a set of intervals for a field and a DocSet, it calculates the number
  * of documents that match each of the intervals provided. The final count for
  * each interval should be exactly the same as the number of results of a range
@@ -61,12 +61,12 @@ import org.apache.solr.search.SyntaxError;
  * of {@code facet.query=field:[A TO B]} should be the same as the count of
  * {@code f.field.facet.interval.set=[A,B]}, however, this method will usually
  * be faster in cases where there are a larger number of intervals per field.
- * <p/>
+ * <p>
  * To use this class, create an instance using
  * {@link #IntervalFacets(SchemaField, SolrIndexSearcher, DocSet, String[], SolrParams)}
  * and then iterate the {@link FacetInterval} using {@link #iterator()}
- * <p/>
- * Intervals Format</br>
+ * <p>
+ * Intervals Format<br>
  * Intervals must begin with either '(' or '[', be followed by the start value,
  * then a comma ',', the end value, and finally ')' or ']'. For example:
  * <ul>
@@ -89,7 +89,7 @@ import org.apache.solr.search.SyntaxError;
  * As with facet.query, the key used to display the result can be set by using local params
  * syntax, for example:<p>
  * <code>{!key='First Half'}[0,5) </code>
- * <p/>
+ * <p>
  * To use this class:
  * <pre>
  * IntervalFacets intervalFacets = new IntervalFacets(schemaField, searcher, docs, intervalStrs, params);
diff --git a/solr/core/src/java/org/apache/solr/request/SimpleFacets.java b/solr/core/src/java/org/apache/solr/request/SimpleFacets.java
index 297fb8e..0a5e124 100644
--- a/solr/core/src/java/org/apache/solr/request/SimpleFacets.java
+++ b/solr/core/src/java/org/apache/solr/request/SimpleFacets.java
@@ -1245,7 +1245,7 @@ public class SimpleFacets {
   }
   
   /**
-   * A simple key=>val pair whose natural order is such that 
+   * A simple key=&gt;val pair whose natural order is such that 
    * <b>higher</b> vals come before lower vals.
    * In case of tie vals, then <b>lower</b> keys come before higher keys.
    */
diff --git a/solr/core/src/java/org/apache/solr/request/UnInvertedField.java b/solr/core/src/java/org/apache/solr/request/UnInvertedField.java
index bab1edd..64d8f82 100644
--- a/solr/core/src/java/org/apache/solr/request/UnInvertedField.java
+++ b/solr/core/src/java/org/apache/solr/request/UnInvertedField.java
@@ -462,7 +462,7 @@ public class UnInvertedField extends DocTermOrds {
   /**
    * Collect statistics about the UninvertedField.  Code is very similar to {@link #getCounts(org.apache.solr.search.SolrIndexSearcher, org.apache.solr.search.DocSet, int, int, Integer, boolean, String, String)}
    * It can be used to calculate stats on multivalued fields.
-   * <p/>
+   * <p>
    * This method is mainly used by the {@link org.apache.solr.handler.component.StatsComponent}.
    *
    * @param searcher The Searcher to use to gather the statistics
diff --git a/solr/core/src/java/org/apache/solr/response/SolrQueryResponse.java b/solr/core/src/java/org/apache/solr/response/SolrQueryResponse.java
index 17525a3..9ae7813 100644
--- a/solr/core/src/java/org/apache/solr/response/SolrQueryResponse.java
+++ b/solr/core/src/java/org/apache/solr/response/SolrQueryResponse.java
@@ -35,7 +35,7 @@ import org.apache.solr.search.SolrReturnFields;
  * the response to a query request.
  *
  * <p>
- * <a name="returnable_data" /><b>Note On Returnable Data...</b><br/>
+ * <a name="returnable_data"></a><b>Note On Returnable Data...</b><br>
  * A <code>SolrQueryResponse</code> may contain the following types of
  * Objects generated by the <code>SolrRequestHandler</code> that processed
  * the request.
diff --git a/solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java b/solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java
index bcfba99..183042d 100644
--- a/solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java
+++ b/solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java
@@ -26,7 +26,7 @@ import org.apache.solr.request.SolrQueryRequest;
  * A DocTransformer can add, remove or alter a Document before it is written out to the Response.  For instance, there are implementations
  * that can put explanations inline with a document, add constant values and mark items as being artificially boosted (see {@link org.apache.solr.handler.component.QueryElevationComponent})
  *
- * <p/>
+ * <p>
  * New instance for each request
  *
  * @see TransformerFactory
diff --git a/solr/core/src/java/org/apache/solr/rest/BaseSolrResource.java b/solr/core/src/java/org/apache/solr/rest/BaseSolrResource.java
index 99ce8be..ae83d88 100644
--- a/solr/core/src/java/org/apache/solr/rest/BaseSolrResource.java
+++ b/solr/core/src/java/org/apache/solr/rest/BaseSolrResource.java
@@ -73,7 +73,7 @@ public abstract class BaseSolrResource extends ServerResource {
    * from the SolrRequestInfo thread local, then gets the SolrCore
    * and IndexSchema and sets up the response.
    * writer.
-   * <p/>
+   * <p>
    * If an error occurs during initialization, setExisting(false) is
    * called and an error status code and message is set; in this case,
    * Restlet will not continue servicing the request (by calling the
diff --git a/solr/core/src/java/org/apache/solr/rest/schema/BaseFieldResource.java b/solr/core/src/java/org/apache/solr/rest/schema/BaseFieldResource.java
index 707e97b..51f1086 100644
--- a/solr/core/src/java/org/apache/solr/rest/schema/BaseFieldResource.java
+++ b/solr/core/src/java/org/apache/solr/rest/schema/BaseFieldResource.java
@@ -56,7 +56,7 @@ abstract class BaseFieldResource extends BaseSolrResource {
    * on this list.  The (Dynamic)FieldResource classes ignore this list, 
    * since the (dynamic) field is specified in the URL path, rather than
    * in a query parameter.
-   * <p/>
+   * <p>
    * Also pulls the "showDefaults" param from the request, for use by all
    * subclasses to include default values from the associated field type
    * in the response.  By default this param is off.
diff --git a/solr/core/src/java/org/apache/solr/rest/schema/CopyFieldCollectionResource.java b/solr/core/src/java/org/apache/solr/rest/schema/CopyFieldCollectionResource.java
index 365217a..ba59f53 100644
--- a/solr/core/src/java/org/apache/solr/rest/schema/CopyFieldCollectionResource.java
+++ b/solr/core/src/java/org/apache/solr/rest/schema/CopyFieldCollectionResource.java
@@ -43,7 +43,7 @@ import static org.apache.solr.common.SolrException.ErrorCode;
 
 /**
  * This class responds to requests at /solr/(corename)/schema/copyfields
- * <p/>
+ * <p>
  *
  * To restrict the set of copyFields in the response, specify one or both
  * of the following as query parameters, with values as space and/or comma
diff --git a/solr/core/src/java/org/apache/solr/rest/schema/DynamicFieldCollectionResource.java b/solr/core/src/java/org/apache/solr/rest/schema/DynamicFieldCollectionResource.java
index 854717d..314b333 100644
--- a/solr/core/src/java/org/apache/solr/rest/schema/DynamicFieldCollectionResource.java
+++ b/solr/core/src/java/org/apache/solr/rest/schema/DynamicFieldCollectionResource.java
@@ -41,7 +41,7 @@ import java.util.Map;
 
 /**
  * This class responds to requests at /solr/(corename)/schema/dynamicfields
- * <p/>
+ * <p>
  * To restrict the set of dynamic fields in the response, specify a comma
  * and/or space separated list of dynamic field patterns in the "fl" query
  * parameter. 
diff --git a/solr/core/src/java/org/apache/solr/rest/schema/FieldCollectionResource.java b/solr/core/src/java/org/apache/solr/rest/schema/FieldCollectionResource.java
index b131446..78357c9 100644
--- a/solr/core/src/java/org/apache/solr/rest/schema/FieldCollectionResource.java
+++ b/solr/core/src/java/org/apache/solr/rest/schema/FieldCollectionResource.java
@@ -48,7 +48,7 @@ import java.util.TreeSet;
 
 /**
  * This class responds to requests at /solr/(corename)/schema/fields
- * <p/>
+ * <p>
  * Two query parameters are supported:
  * <ul>
  * <li>
diff --git a/solr/core/src/java/org/apache/solr/rest/schema/FieldResource.java b/solr/core/src/java/org/apache/solr/rest/schema/FieldResource.java
index c974baa..eaf6175 100644
--- a/solr/core/src/java/org/apache/solr/rest/schema/FieldResource.java
+++ b/solr/core/src/java/org/apache/solr/rest/schema/FieldResource.java
@@ -43,12 +43,12 @@ import java.util.Map;
 /**
  * This class responds to requests at /solr/(corename)/schema/fields/(fieldname)
  * where "fieldname" is the name of a field.
- * <p/>
+ * <p>
  * The GET method returns properties for the given fieldname.
  * The "includeDynamic" query parameter, if specified, will cause the
  * dynamic field matching the given fieldname to be returned if fieldname
  * is not explicitly declared in the schema.
- * <p/>
+ * <p>
  * The PUT method accepts field addition requests in JSON format.
  */
 public class FieldResource extends BaseFieldResource implements GETable, PUTable {
diff --git a/solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType.java b/solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType.java
index f551587..89357eb 100644
--- a/solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType.java
+++ b/solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType.java
@@ -242,7 +242,7 @@ public abstract class AbstractSpatialFieldType<T extends SpatialStrategy> extend
    * Returns a String version of a shape to be used for the stored value. This method in Solr is only called if for some
    * reason a Shape object is passed to the field type (perhaps via a custom UpdateRequestProcessor),
    * *and* the field is marked as stored.  <em>The default implementation throws an exception.</em>
-   * <p/>
+   * <p>
    * Spatial4j 0.4 is probably the last release to support SpatialContext.toString(shape) but it's deprecated with no
    * planned replacement.  Shapes do have a toString() method but they are generally internal/diagnostic and not
    * standard WKT.
@@ -268,7 +268,7 @@ public abstract class AbstractSpatialFieldType<T extends SpatialStrategy> extend
   //--------------------------------------------------------------
 
   /**
-   * Implemented for compatibility with geofilt & bbox query parsers:
+   * Implemented for compatibility with geofilt &amp; bbox query parsers:
    * {@link SpatialQueryable}.
    */
   @Override
diff --git a/solr/core/src/java/org/apache/solr/schema/CoordinateFieldType.java b/solr/core/src/java/org/apache/solr/schema/CoordinateFieldType.java
index b81a281..702c251 100644
--- a/solr/core/src/java/org/apache/solr/schema/CoordinateFieldType.java
+++ b/solr/core/src/java/org/apache/solr/schema/CoordinateFieldType.java
@@ -20,15 +20,15 @@ package org.apache.solr.schema;
 /**
  * A CoordinateFieldType is the base class for {@link org.apache.solr.schema.FieldType}s that have semantics
  * related to items in a coordinate system.
- * <br/>
+ * <br>
  * Implementations depend on a delegating work to a sub {@link org.apache.solr.schema.FieldType}, specified by
  * either the {@link #SUB_FIELD_SUFFIX} or the {@link #SUB_FIELD_TYPE} (the latter is used if both are defined.
- * <br/>
+ * <br>
  * Example:
  * <pre>&lt;fieldType name="xy" class="solr.PointType" dimension="2" subFieldType="double"/&gt;
  * </pre>
  * In theory, classes deriving from this should be able to do things like represent a point, a polygon, a line, etc.
- * <br/>
+ * <br>
  * NOTE: There can only be one sub Field Type.
  *
  */
diff --git a/solr/core/src/java/org/apache/solr/schema/ExternalFileField.java b/solr/core/src/java/org/apache/solr/schema/ExternalFileField.java
index 98e76af..3f0e28a 100644
--- a/solr/core/src/java/org/apache/solr/schema/ExternalFileField.java
+++ b/solr/core/src/java/org/apache/solr/schema/ExternalFileField.java
@@ -30,7 +30,7 @@ import java.util.Map;
 
 /** Get values from an external file instead of the index.
  *
- * <p/><code>keyField</code> will normally be the unique key field, but it doesn't have to be.
+ * <p><code>keyField</code> will normally be the unique key field, but it doesn't have to be.
  * <ul><li> It's OK to have a keyField value that can't be found in the index</li>
  * <li>It's OK to have some documents without a keyField in the file (defVal is used as the default)</li>
  * <li>It's OK for a keyField value to point to multiple documents (no uniqueness requirement)</li>
@@ -40,19 +40,19 @@ import java.util.Map;
  * This parameter has never been implemented. As of Solr 3.6/4.0 it is optional and can be omitted.
  *
  * The format of the external file is simply newline separated keyFieldValue=floatValue.
- * <br/>Example:
- * <br/><code>doc33=1.414</code>
- * <br/><code>doc34=3.14159</code>
- * <br/><code>doc40=42</code>
+ * <br>Example:
+ * <br><code>doc33=1.414</code>
+ * <br><code>doc34=3.14159</code>
+ * <br><code>doc40=42</code>
  *
- * <p/>Solr looks for the external file in the index directory under the name of
+ * <p>Solr looks for the external file in the index directory under the name of
  * external_&lt;fieldname&gt; or external_&lt;fieldname&gt;.*
  *
- * <p/>If any files of the latter pattern appear, the last (after being sorted by name) will be used and previous versions will be deleted.
+ * <p>If any files of the latter pattern appear, the last (after being sorted by name) will be used and previous versions will be deleted.
  * This is to help support systems where one may not be able to overwrite a file (like Windows, if the file is in use).
- * <p/>If the external file has already been loaded, and it is changed, those changes will not be visible until a commit has been done.
- * <p/>The external file may be sorted or unsorted by the key field, but it will be substantially slower (untested) if it isn't sorted.
- * <p/>Fields of this type may currently only be used as a ValueSource in a FunctionQuery.
+ * <p>If the external file has already been loaded, and it is changed, those changes will not be visible until a commit has been done.
+ * <p>The external file may be sorted or unsorted by the key field, but it will be substantially slower (untested) if it isn't sorted.
+ * <p>Fields of this type may currently only be used as a ValueSource in a FunctionQuery.
  *
  * @see ExternalFileFieldReloader
  */
diff --git a/solr/core/src/java/org/apache/solr/schema/ExternalFileFieldReloader.java b/solr/core/src/java/org/apache/solr/schema/ExternalFileFieldReloader.java
index a2d6d4e..1d29e47 100644
--- a/solr/core/src/java/org/apache/solr/schema/ExternalFileFieldReloader.java
+++ b/solr/core/src/java/org/apache/solr/schema/ExternalFileFieldReloader.java
@@ -41,8 +41,8 @@ import java.util.List;
  * listeners in your solrconfig.xml:
  *
  * <pre>
- *   &lt;listener event="newSearcher" class="org.apache.solr.schema.ExternalFileFieldReloader"/>
- *   &lt;listener event="firstSearcher" class="org.apache.solr.schema.ExternalFileFieldReloader"/>
+ *   &lt;listener event="newSearcher" class="org.apache.solr.schema.ExternalFileFieldReloader"/&gt;
+ *   &lt;listener event="firstSearcher" class="org.apache.solr.schema.ExternalFileFieldReloader"/&gt;
  * </pre>
  *
  * The caches will be reloaded for all ExternalFileFields in your schema after
diff --git a/solr/core/src/java/org/apache/solr/schema/FieldType.java b/solr/core/src/java/org/apache/solr/schema/FieldType.java
index 09c7c2f..6ac68c0 100644
--- a/solr/core/src/java/org/apache/solr/schema/FieldType.java
+++ b/solr/core/src/java/org/apache/solr/schema/FieldType.java
@@ -231,7 +231,7 @@ public abstract class FieldType extends FieldProperties {
    * (taken from toInternal()).   Having a different representation for
    * external, internal, and indexed would present quite a few problems
    * given the current Lucene architecture.  An analyzer for adding docs
-   * would need to translate internal->indexed while an analyzer for
+   * would need to translate internal-&gt;indexed while an analyzer for
    * querying would need to translate external-&gt;indexed.
    * </p>
    * <p>
@@ -434,7 +434,7 @@ public abstract class FieldType extends FieldProperties {
   /**
    * Returns a Query instance for doing prefix searches on this field type.
    * Also, other QueryParser implementations may have different semantics.
-   * <p/>
+   * <p>
    * Sub-classes should override this method to provide their own range query implementation.
    *
    * @param parser       the {@link org.apache.solr.search.QParser} calling the method
@@ -676,7 +676,7 @@ public abstract class FieldType extends FieldProperties {
    * currently passes part1 and part2 as null if they are '*' respectively. minInclusive and maxInclusive are both true
    * currently by SolrQueryParser but that may change in the future. Also, other QueryParser implementations may have
    * different semantics.
-   * <p/>
+   * <p>
    * Sub-classes should override this method to provide their own range query implementation. They should strive to
    * handle nulls in part1 and/or part2 as well as unequal minInclusive and maxInclusive parameters gracefully.
    *
@@ -792,7 +792,7 @@ public abstract class FieldType extends FieldProperties {
   private static final String POSITION_INCREMENT_GAP = "positionIncrementGap";
 
   /**
-   * Get a map of property name -> value for this field type. 
+   * Get a map of property name -&gt; value for this field type. 
    * @param showDefaults if true, include default properties.
    */
   public SimpleOrderedMap<Object> getNamedPropertyValues(boolean showDefaults) {
diff --git a/solr/core/src/java/org/apache/solr/schema/IndexSchema.java b/solr/core/src/java/org/apache/solr/schema/IndexSchema.java
index 2f8b764..235d879 100644
--- a/solr/core/src/java/org/apache/solr/schema/IndexSchema.java
+++ b/solr/core/src/java/org/apache/solr/schema/IndexSchema.java
@@ -300,7 +300,7 @@ public class IndexSchema {
   
   /**
    * Name of the default search field specified in the schema file.
-   * <br/><b>Note:</b>Avoid calling this, try to use this method so that the 'df' param is consulted as an override:
+   * <br><b>Note:</b>Avoid calling this, try to use this method so that the 'df' param is consulted as an override:
    * {@link org.apache.solr.search.QueryParsing#getDefaultField(IndexSchema, String)}
    */
   public String getDefaultSearchFieldName() {
@@ -1356,7 +1356,7 @@ public class IndexSchema {
   }
 
   /**
-   * Get a map of property name -> value for the whole schema.
+   * Get a map of property name -&gt; value for the whole schema.
    */
   public SimpleOrderedMap<Object> getNamedPropertyValues() {
     SimpleOrderedMap<Object> topLevel = new SimpleOrderedMap<>();
diff --git a/solr/core/src/java/org/apache/solr/schema/RandomSortField.java b/solr/core/src/java/org/apache/solr/schema/RandomSortField.java
index 5d097a2..84dec6f 100644
--- a/solr/core/src/java/org/apache/solr/schema/RandomSortField.java
+++ b/solr/core/src/java/org/apache/solr/schema/RandomSortField.java
@@ -53,10 +53,10 @@ import org.apache.solr.search.QParser;
  * 
  * Examples of queries:
  * <ul>
- * <li>http://localhost:8983/solr/select/?q=*:*&fl=name&sort=random_1234%20desc</li>
- * <li>http://localhost:8983/solr/select/?q=*:*&fl=name&sort=random_2345%20desc</li>
- * <li>http://localhost:8983/solr/select/?q=*:*&fl=name&sort=random_ABDC%20desc</li>
- * <li>http://localhost:8983/solr/select/?q=*:*&fl=name&sort=random_21%20desc</li>
+ * <li>http://localhost:8983/solr/select/?q=*:*&amp;fl=name&amp;sort=random_1234%20desc</li>
+ * <li>http://localhost:8983/solr/select/?q=*:*&amp;fl=name&amp;sort=random_2345%20desc</li>
+ * <li>http://localhost:8983/solr/select/?q=*:*&amp;fl=name&amp;sort=random_ABDC%20desc</li>
+ * <li>http://localhost:8983/solr/select/?q=*:*&amp;fl=name&amp;sort=random_21%20desc</li>
  * </ul>
  * Note that multiple calls to the same URL will return the same sorting order.
  * 
diff --git a/solr/core/src/java/org/apache/solr/schema/SchemaField.java b/solr/core/src/java/org/apache/solr/schema/SchemaField.java
index e8feaed..caf2773 100644
--- a/solr/core/src/java/org/apache/solr/schema/SchemaField.java
+++ b/solr/core/src/java/org/apache/solr/schema/SchemaField.java
@@ -304,7 +304,7 @@ public final class SchemaField extends FieldProperties {
   }
 
   /**
-   * Get a map of property name -> value for this field.  If showDefaults is true,
+   * Get a map of property name -&gt; value for this field.  If showDefaults is true,
    * include default properties (those inherited from the declared property type and
    * not overridden in the field declaration).
    */
diff --git a/solr/core/src/java/org/apache/solr/schema/TrieField.java b/solr/core/src/java/org/apache/solr/schema/TrieField.java
index f8df52f..ccf1819 100644
--- a/solr/core/src/java/org/apache/solr/schema/TrieField.java
+++ b/solr/core/src/java/org/apache/solr/schema/TrieField.java
@@ -62,13 +62,13 @@ import org.apache.solr.search.QParser;
  * {@link DoubleField}.
  * See {@link org.apache.lucene.search.NumericRangeQuery} for more details.
  * It supports integer, float, long, double and date types.
- * <p/>
+ * <p>
  * For each number being added to this field, multiple terms are generated as per the algorithm described in the above
  * link. The possible number of terms increases dramatically with lower precision steps. For
  * the fast range search to work, trie fields must be indexed.
- * <p/>
+ * <p>
  * Trie fields are sortable in numerical order and can be used in function queries.
- * <p/>
+ * <p>
  * Note that if you use a precisionStep of 32 for int/float and 64 for long/double/date, then multiple terms will not be
  * generated, range search will be no faster than any other number field, but sorting will still be possible.
  *
diff --git a/solr/core/src/java/org/apache/solr/search/BitDocSet.java b/solr/core/src/java/org/apache/solr/search/BitDocSet.java
index 7b500ed..9da8bfd 100644
--- a/solr/core/src/java/org/apache/solr/search/BitDocSet.java
+++ b/solr/core/src/java/org/apache/solr/search/BitDocSet.java
@@ -60,7 +60,7 @@ public class BitDocSet extends DocSetBase {
     this.size = size;
   }
 
-  /*** DocIterator using nextSetBit()
+  /* DocIterator using nextSetBit()
   public DocIterator iterator() {
     return new DocIterator() {
       int pos=bits.nextSetBit(0);
@@ -158,7 +158,7 @@ public class BitDocSet extends DocSetBase {
   }
 
   /**
-   * Returns true of the doc exists in the set. Should only be called when doc <
+   * Returns true of the doc exists in the set. Should only be called when doc &lt;
    * {@link FixedBitSet#length()}.
    */
   @Override
diff --git a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java
index cc0fdf9..c560308 100644
--- a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java
+++ b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java
@@ -74,32 +74,32 @@ import org.apache.solr.schema.TrieLongField;
  This is a high performance alternative to standard Solr
  field collapsing (with ngroups) when the number of distinct groups
  in the result set is high.
- <p/>
+ <p>
  Sample syntax:
- <p/>
+ <p>
  Collapse based on the highest scoring document:
- <p/>
+ <p>
 
  fq=(!collapse field=field_name}
 
- <p/>
+ <p>
  Collapse based on the min value of a numeric field:
- <p/>
+ <p>
  fq={!collapse field=field_name min=field_name}
- <p/>
+ <p>
  Collapse based on the max value of a numeric field:
- <p/>
+ <p>
  fq={!collapse field=field_name max=field_name}
- <p/>
+ <p>
  Collapse with a null policy:
- <p/>
+ <p>
  fq={!collapse field=field_name nullPolicy=nullPolicy}
- <p/>
- There are three null policies: <br/>
- ignore : removes docs with a null value in the collapse field (default).<br/>
- expand : treats each doc with a null value in the collapse field as a separate group.<br/>
+ <p>
+ There are three null policies: <br>
+ ignore : removes docs with a null value in the collapse field (default).<br>
+ expand : treats each doc with a null value in the collapse field as a separate group.<br>
  collapse : collapses all docs with a null value into a single group using either highest score, or min/max.
- <p/>
+ <p>
  The CollapsingQParserPlugin fully supports the QueryElevationComponent
  **/
 
diff --git a/solr/core/src/java/org/apache/solr/search/ComplexPhraseQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/ComplexPhraseQParserPlugin.java
index 7d0165f..ecaf6ed 100644
--- a/solr/core/src/java/org/apache/solr/search/ComplexPhraseQParserPlugin.java
+++ b/solr/core/src/java/org/apache/solr/search/ComplexPhraseQParserPlugin.java
@@ -29,7 +29,7 @@ import org.apache.solr.request.SolrQueryRequest;
 
 /**
  * Parse Solr's variant on the Lucene {@link org.apache.lucene.queryparser.complexPhrase.ComplexPhraseQueryParser} syntax.
- * <p/>
+ * <p>
  * Modified from {@link org.apache.solr.search.LuceneQParserPlugin} and {@link org.apache.solr.search.SurroundQParserPlugin}
  */
 public class ComplexPhraseQParserPlugin extends QParserPlugin {
diff --git a/solr/core/src/java/org/apache/solr/search/DocList.java b/solr/core/src/java/org/apache/solr/search/DocList.java
index 6f41bd5..8ddaa97 100644
--- a/solr/core/src/java/org/apache/solr/search/DocList.java
+++ b/solr/core/src/java/org/apache/solr/search/DocList.java
@@ -43,7 +43,7 @@ public interface DocList extends DocSet {
    * Returns the total number of matches for the search
    * (as opposed to just the number collected according
    * to <code>offset()</code> and <code>size()</code>).
-   * Hence it's always true that matches() >= size()
+   * Hence it's always true that matches() &gt;= size()
    * @return number of matches for the search(query &amp; any filters)
    */
   public int matches();
diff --git a/solr/core/src/java/org/apache/solr/search/ExtendedQuery.java b/solr/core/src/java/org/apache/solr/search/ExtendedQuery.java
index 654d036..7e7bbba 100644
--- a/solr/core/src/java/org/apache/solr/search/ExtendedQuery.java
+++ b/solr/core/src/java/org/apache/solr/search/ExtendedQuery.java
@@ -27,7 +27,7 @@ public interface ExtendedQuery {
   public void setCache(boolean cache);
 
   /** Returns the cost of this query, used to order checking of filters that are not cached.
-   * If getCache()==false && getCost()>=100 && this instanceof PostFilter, then
+   * If getCache()==false &amp;&amp; getCost()&gt;=100 &amp;&amp; this instanceof PostFilter, then
    * the PostFilter interface will be used for filtering.
    */
   public int getCost();
diff --git a/solr/core/src/java/org/apache/solr/search/FastLRUCache.java b/solr/core/src/java/org/apache/solr/search/FastLRUCache.java
index c91de36..2d80cff 100644
--- a/solr/core/src/java/org/apache/solr/search/FastLRUCache.java
+++ b/solr/core/src/java/org/apache/solr/search/FastLRUCache.java
@@ -30,10 +30,10 @@ import java.util.concurrent.TimeUnit;
 
 /**
  * SolrCache based on ConcurrentLRUCache implementation.
- * <p/>
+ * <p>
  * This implementation does not use a separate cleanup thread. Instead it uses the calling thread
  * itself to do the cleanup when the size of the cache exceeds certain limits.
- * <p/>
+ * <p>
  * Also see <a href="http://wiki.apache.org/solr/SolrCaching">SolrCaching</a>
  *
  *
diff --git a/solr/core/src/java/org/apache/solr/search/Grouping.java b/solr/core/src/java/org/apache/solr/search/Grouping.java
index df12669..3d478a5 100644
--- a/solr/core/src/java/org/apache/solr/search/Grouping.java
+++ b/solr/core/src/java/org/apache/solr/search/Grouping.java
@@ -511,7 +511,7 @@ public class Grouping {
   /**
    * General group command. A group command is responsible for creating the first and second pass collectors.
    * A group command is also responsible for creating the response structure.
-   * <p/>
+   * <p>
    * Note: Maybe the creating the response structure should be done in something like a ReponseBuilder???
    * Warning NOT thread save!
    */
diff --git a/solr/core/src/java/org/apache/solr/search/LFUCache.java b/solr/core/src/java/org/apache/solr/search/LFUCache.java
index 7f87b86..a2b9930 100644
--- a/solr/core/src/java/org/apache/solr/search/LFUCache.java
+++ b/solr/core/src/java/org/apache/solr/search/LFUCache.java
@@ -32,12 +32,12 @@ import java.util.concurrent.TimeUnit;
 
 /**
  * SolrCache based on ConcurrentLFUCache implementation.
- * <p/>
+ * <p>
  * This implementation does not use a separate cleanup thread. Instead it uses the calling thread
  * itself to do the cleanup when the size of the cache exceeds certain limits.
- * <p/>
+ * <p>
  * Also see <a href="http://wiki.apache.org/solr/SolrCaching">SolrCaching</a>
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @see org.apache.solr.util.ConcurrentLFUCache
diff --git a/solr/core/src/java/org/apache/solr/search/MaxScoreQParser.java b/solr/core/src/java/org/apache/solr/search/MaxScoreQParser.java
index e58c793..4d04b6b 100644
--- a/solr/core/src/java/org/apache/solr/search/MaxScoreQParser.java
+++ b/solr/core/src/java/org/apache/solr/search/MaxScoreQParser.java
@@ -44,7 +44,7 @@ public class MaxScoreQParser extends LuceneQParser {
    * delegates all SHOULD clauses to DisjunctionMaxQuery with
    * meaning only the clause with the max score will contribute
    * to the overall score, unless the tie parameter is specified.
-   * <br/>
+   * <br>
    * The max() is only calculated from the SHOULD clauses.
    * Any MUST clauses will be passed through as separate
    * BooleanClauses and thus always contribute to the score.
diff --git a/solr/core/src/java/org/apache/solr/search/MaxScoreQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/MaxScoreQParserPlugin.java
index 0ff5bb6..e2b5fcc 100644
--- a/solr/core/src/java/org/apache/solr/search/MaxScoreQParserPlugin.java
+++ b/solr/core/src/java/org/apache/solr/search/MaxScoreQParserPlugin.java
@@ -23,7 +23,7 @@ import org.apache.solr.request.SolrQueryRequest;
  * Parses a query like Lucene query parser, but scoring with max score, not sum
  * <br>Accepts the "tie" request parameter as with dismax. 0.0=max, 1.0=sum
  * <br>All other parameters are as with Lucene parser
- * <br>Example: <code>q=foo {!maxscore v=$myq}&myq=A OR B OR C</code>
+ * <br>Example: <code>q=foo {!maxscore v=$myq}&amp;myq=A OR B OR C</code>
  */
 public class MaxScoreQParserPlugin extends LuceneQParserPlugin {
   public static final String NAME = "maxscore";
diff --git a/solr/core/src/java/org/apache/solr/search/PostFilter.java b/solr/core/src/java/org/apache/solr/search/PostFilter.java
index adc6a49..3cb48de 100644
--- a/solr/core/src/java/org/apache/solr/search/PostFilter.java
+++ b/solr/core/src/java/org/apache/solr/search/PostFilter.java
@@ -22,7 +22,7 @@ import org.apache.lucene.search.IndexSearcher;
 /** The PostFilter interface provides a mechanism to further filter documents
  * after they have already gone through the main query and other filters.
  * This is appropriate for filters with a very high cost.
- * <p/>
+ * <p>
  * The filtering mechanism used is a {@link DelegatingCollector}
  * that allows the filter to not call the delegate for certain documents,
  * thus effectively filtering them out.  This also avoids the normal
diff --git a/solr/core/src/java/org/apache/solr/search/QueryParsing.java b/solr/core/src/java/org/apache/solr/search/QueryParsing.java
index 70e0d2e..99de50e 100644
--- a/solr/core/src/java/org/apache/solr/search/QueryParsing.java
+++ b/solr/core/src/java/org/apache/solr/search/QueryParsing.java
@@ -569,7 +569,6 @@ public class QueryParsing {
   /**
    * Formats a Query for debugging, using the IndexSchema to make
    * complex field types readable.
-   * <p/>
    * <p>
    * The benefit of using this method instead of calling
    * <code>Query.toString</code> directly is that it knows about the data
diff --git a/solr/core/src/java/org/apache/solr/search/Sorting.java b/solr/core/src/java/org/apache/solr/search/Sorting.java
index 94cd0e0..5175ae0 100644
--- a/solr/core/src/java/org/apache/solr/search/Sorting.java
+++ b/solr/core/src/java/org/apache/solr/search/Sorting.java
@@ -20,7 +20,7 @@ package org.apache.solr.search;
 import org.apache.lucene.search.*;
 
 /**
- * Extra lucene sorting utilities & convenience methods
+ * Extra lucene sorting utilities &amp; convenience methods
  *
  *
  *
diff --git a/solr/core/src/java/org/apache/solr/search/SpatialFilterQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/SpatialFilterQParserPlugin.java
index a83a073..c8010a4 100644
--- a/solr/core/src/java/org/apache/solr/search/SpatialFilterQParserPlugin.java
+++ b/solr/core/src/java/org/apache/solr/search/SpatialFilterQParserPlugin.java
@@ -22,15 +22,14 @@ import org.apache.solr.request.SolrQueryRequest;
 
 /**
  * Creates a spatial Filter based on the type of spatial point used.
- * <p/>
+ * <p>
  * The field must implement {@link org.apache.solr.schema.SpatialQueryable}
- * <p/>
+ * <p>
  * All units are in Kilometers
- * <p/>
- * <p/>
+ * <p>
  * Syntax:
  * <pre>{!geofilt sfield=&lt;location_field&gt; pt=&lt;lat,lon&gt; d=&lt;distance&gt;}</pre>
- * <p/>
+ * <p>
  * Parameters:
  * <ul>
  * <li>sfield - The field to filter on. Required.</li>
@@ -38,13 +37,12 @@ import org.apache.solr.request.SolrQueryRequest;
  * <li>d - The distance in km.  Required.</li>
  * </ul>
  * The distance measure used currently depends on the FieldType.  LatLonType defaults to using haversine, PointType defaults to Euclidean (2-norm).
- *
- * <p/>
+ * <p>
  * Examples:
  * <pre>fq={!geofilt sfield=store pt=10.312,-20.556 d=3.5}</pre>
- * <pre>fq={!geofilt sfield=store}&pt=10.312,-20&d=3.5</pre>
- * <pre>fq={!geofilt}&sfield=store&pt=10.312,-20&d=3.5</pre>
- * <p/>
+ * <pre>fq={!geofilt sfield=store}&amp;pt=10.312,-20&amp;d=3.5</pre>
+ * <pre>fq={!geofilt}&amp;sfield=store&amp;pt=10.312,-20&amp;d=3.5</pre>
+ * <p>
  * Note: The geofilt for LatLonType is capable of also producing scores equal to the computed distance from the point
  * to the field, making it useful as a component of the main query or a boosting query.
  */
diff --git a/solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction.java b/solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction.java
index 85e0c3e..ae9e091 100644
--- a/solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction.java
+++ b/solr/core/src/java/org/apache/solr/search/function/distance/GeohashFunction.java
@@ -27,10 +27,10 @@ import java.io.IOException;
 
 /**
  * Takes in a latitude and longitude ValueSource and produces a GeoHash.
- * <p/>
+ * <p>
  * Ex: geohash(lat, lon)
  *
- * <p/>
+ * <p>
  * Note, there is no reciprocal function for this.
  **/
 public class GeohashFunction extends ValueSource {
diff --git a/solr/core/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java b/solr/core/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java
index c73d955..ec6d367 100644
--- a/solr/core/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java
+++ b/solr/core/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java
@@ -35,9 +35,9 @@ import java.util.Map;
 /**
  *  Calculate the Haversine distance between two geo hash codes.
  *
- * <p/>
+ * <p>
  * Ex: ghhsin(ValueSource, ValueSource, radius)
- * <p/>
+ * <p>
  *
  * @see org.apache.solr.search.function.distance.HaversineFunction for more details on the implementation
  *
diff --git a/solr/core/src/java/org/apache/solr/search/function/distance/HaversineFunction.java b/solr/core/src/java/org/apache/solr/search/function/distance/HaversineFunction.java
index c86683a..b561f89 100644
--- a/solr/core/src/java/org/apache/solr/search/function/distance/HaversineFunction.java
+++ b/solr/core/src/java/org/apache/solr/search/function/distance/HaversineFunction.java
@@ -32,9 +32,9 @@ import java.util.Map;
 /**
  * Calculate the Haversine formula (distance) between any two points on a sphere
  * Takes in four value sources: (latA, lonA); (latB, lonB).
- * <p/>
+ * <p>
  * Assumes the value sources are in radians unless
- * <p/>
+ * <p>
  * See http://en.wikipedia.org/wiki/Great-circle_distance and
  * http://en.wikipedia.org/wiki/Haversine_formula for the actual formula and
  * also http://www.movable-type.co.uk/scripts/latlong.html
diff --git a/solr/core/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java b/solr/core/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java
index 670b896..146203e 100644
--- a/solr/core/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java
+++ b/solr/core/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java
@@ -30,7 +30,7 @@ import java.util.Map;
 
 /**
  * Calculate the p-norm for a Vector.  See http://en.wikipedia.org/wiki/Lp_space
- * <p/>
+ * <p>
  * Common cases:
  * <ul>
  * <li>0 = Sparseness calculation</li>
@@ -79,7 +79,7 @@ public class VectorDistanceFunction extends ValueSource {
 
   /**
    * Calculate the p-norm (i.e. length) between two vectors.
-   * <p/>
+   * <p>
    * See <a href="http://en.wikipedia.org/wiki/Lp_space">Lp space</a>
    *
    * @param vec1  The first vector
diff --git a/solr/core/src/java/org/apache/solr/search/similarities/DFRSimilarityFactory.java b/solr/core/src/java/org/apache/solr/search/similarities/DFRSimilarityFactory.java
index 62fc00a..ceb6cb3 100644
--- a/solr/core/src/java/org/apache/solr/search/similarities/DFRSimilarityFactory.java
+++ b/solr/core/src/java/org/apache/solr/search/similarities/DFRSimilarityFactory.java
@@ -99,7 +99,6 @@ import org.apache.solr.schema.SimilarityFactory;
  *        </ul>
  * </ol>
  * <p>
- * <p>
  * Optional settings:
  * <ul>
  *   <li>discountOverlaps (bool): Sets
diff --git a/solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection.java b/solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection.java
index f2073da..c9976a9 100644
--- a/solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection.java
+++ b/solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection.java
@@ -69,7 +69,7 @@ public class DirectSolrConnection
   /**
    * For example:
    * 
-   * String json = solr.request( "/select?qt=dismax&wt=json&q=...", null );
+   * String json = solr.request( "/select?qt=dismax&amp;wt=json&amp;q=...", null );
    * String xml = solr.request( "/update", "&lt;add&gt;&lt;doc&gt;&lt;field ..." );
    */
   public String request( String pathAndParams, String body ) throws Exception
diff --git a/solr/core/src/java/org/apache/solr/servlet/ResponseUtils.java b/solr/core/src/java/org/apache/solr/servlet/ResponseUtils.java
index 73d8f60..682816b 100644
--- a/solr/core/src/java/org/apache/solr/servlet/ResponseUtils.java
+++ b/solr/core/src/java/org/apache/solr/servlet/ResponseUtils.java
@@ -31,10 +31,10 @@ public class ResponseUtils {
 
   /**
    * Adds the given Throwable's message to the given NamedList.
-   * <p/>
+   * <p>
    * If the response code is not a regular code, the Throwable's
    * stack trace is both logged and added to the given NamedList.
-   * <p/>
+   * <p>
    * Status codes less than 100 are adjusted to be 500.
    */
   public static int getErrorInfo(Throwable ex, NamedList info, Logger log) {
diff --git a/solr/core/src/java/org/apache/solr/spelling/SolrSpellChecker.java b/solr/core/src/java/org/apache/solr/spelling/SolrSpellChecker.java
index 011a785..646c19c 100644
--- a/solr/core/src/java/org/apache/solr/spelling/SolrSpellChecker.java
+++ b/solr/core/src/java/org/apache/solr/spelling/SolrSpellChecker.java
@@ -187,7 +187,6 @@ public abstract class SolrSpellChecker {
   /**
    * Get suggestions for the given query.  Tokenizes the query using a field appropriate Analyzer.
    * The {@link SpellingResult#getSuggestions()} suggestions must be ordered by best suggestion first.
-   * <p/>
    *
    * @param options The {@link SpellingOptions} to use
    * @return The {@link SpellingResult} suggestions
diff --git a/solr/core/src/java/org/apache/solr/spelling/suggest/SuggesterParams.java b/solr/core/src/java/org/apache/solr/spelling/suggest/SuggesterParams.java
index 4de2b38..ce82eae 100644
--- a/solr/core/src/java/org/apache/solr/spelling/suggest/SuggesterParams.java
+++ b/solr/core/src/java/org/apache/solr/spelling/suggest/SuggesterParams.java
@@ -28,7 +28,7 @@ public interface SuggesterParams {
 
   /**
    * The count of suggestions to return for each query term not in the index and/or dictionary.
-   * <p/>
+   * <p>
    * If this parameter is absent in the request then only one suggestion is
    * returned. If it is more than one then a maximum of given suggestions are
    * returned for each token in the query.
@@ -37,7 +37,7 @@ public interface SuggesterParams {
   
   /**
    * Use the value for this parameter as the query to spell check.
-   * <p/>
+   * <p>
    * This parameter is <b>optional</b>. If absent, then the q parameter is
    * used.
    */
diff --git a/solr/core/src/java/org/apache/solr/update/CommitUpdateCommand.java b/solr/core/src/java/org/apache/solr/update/CommitUpdateCommand.java
index ee5df59..28f9029 100644
--- a/solr/core/src/java/org/apache/solr/update/CommitUpdateCommand.java
+++ b/solr/core/src/java/org/apache/solr/update/CommitUpdateCommand.java
@@ -31,7 +31,7 @@ public class CommitUpdateCommand extends UpdateCommand {
   public boolean prepareCommit = false;
 
   /**
-   * During optimize, optimize down to <= this many segments.  Must be >= 1
+   * During optimize, optimize down to &lt;= this many segments.  Must be &gt;= 1
    *
    * @see org.apache.lucene.index.IndexWriter#forceMerge(int)
    */
diff --git a/solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java b/solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java
index 814d7a4..2cc1fd1 100644
--- a/solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java
+++ b/solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java
@@ -15,9 +15,6 @@
  * limitations under the License.
  */
 
-/**
- */
-
 package org.apache.solr.update;
 
 import org.apache.lucene.document.Document;
diff --git a/solr/core/src/java/org/apache/solr/update/DocumentBuilder.java b/solr/core/src/java/org/apache/solr/update/DocumentBuilder.java
index 6b58f6d..5e8980a 100644
--- a/solr/core/src/java/org/apache/solr/update/DocumentBuilder.java
+++ b/solr/core/src/java/org/apache/solr/update/DocumentBuilder.java
@@ -64,7 +64,7 @@ public class DocumentBuilder {
    * Convert a SolrInputDocument to a lucene Document.
    * 
    * This function should go elsewhere.  This builds the Document without an
-   * extra Map<> checking for multiple values.  For more discussion, see:
+   * extra Map&lt;&gt; checking for multiple values.  For more discussion, see:
    * http://www.nabble.com/Re%3A-svn-commit%3A-r547493---in--lucene-solr-trunk%3A-.--src-java-org-apache-solr-common--src-java-org-apache-solr-schema--src-java-org-apache-solr-update--src-test-org-apache-solr-common--tf3931539.html
    * 
    * TODO: /!\ NOTE /!\ This semantics of this function are still in flux.  
diff --git a/solr/core/src/java/org/apache/solr/update/processor/DefaultValueUpdateProcessorFactory.java b/solr/core/src/java/org/apache/solr/update/processor/DefaultValueUpdateProcessorFactory.java
index dd4ec25..4ca6c05 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/DefaultValueUpdateProcessorFactory.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/DefaultValueUpdateProcessorFactory.java
@@ -38,7 +38,7 @@ import org.apache.solr.update.AddUpdateCommand;
  * in the <code>price</code> and/or <code>type</code> fields, it will be given 
  * default values of <code>0.0</code> and/or <code>unknown</code> 
  * (respectively).
- * <p>
+ * <br>
  *
  * <pre class="prettyprint">
  * &lt;processor class="solr.DefaultValueUpdateProcessorFactory"&gt;
diff --git a/solr/core/src/java/org/apache/solr/update/processor/MaxFieldValueUpdateProcessorFactory.java b/solr/core/src/java/org/apache/solr/update/processor/MaxFieldValueUpdateProcessorFactory.java
index 2f311c1..6b19d5b 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/MaxFieldValueUpdateProcessorFactory.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/MaxFieldValueUpdateProcessorFactory.java
@@ -41,7 +41,7 @@ import java.util.Iterator;
  * values (ie: <code>64, 128, 1024</code>) in the field 
  * <code>largestFileSize</code> then only the biggest value 
  * (ie: <code>1024</code>) will be kept in that field.
- * <p>
+ * <br>
  *
  * <pre class="prettyprint">
  *  &lt;processor class="solr.MaxFieldValueUpdateProcessorFactory"&gt;
diff --git a/solr/core/src/java/org/apache/solr/update/processor/MinFieldValueUpdateProcessorFactory.java b/solr/core/src/java/org/apache/solr/update/processor/MinFieldValueUpdateProcessorFactory.java
index e8d5a86..eb248d1 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/MinFieldValueUpdateProcessorFactory.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/MinFieldValueUpdateProcessorFactory.java
@@ -41,7 +41,7 @@ import java.util.Iterator;
  * values (ie: <code>64, 128, 1024</code>) in the field 
  * <code>smallestFileSize</code> then only the smallest value 
  * (ie: <code>64</code>) will be kept in that field.
- * <p>
+ * <br>
  *
  * <pre class="prettyprint">
  *  &lt;processor class="solr.MinFieldValueUpdateProcessorFactory"&gt;
diff --git a/solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory.java b/solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory.java
index e0d2444..b0bd112 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory.java
@@ -64,7 +64,7 @@ import java.util.Set;
  *   &lt;arr name="falseValue"&gt;
  *     &lt;str&gt;False&lt;/str&gt;
  *     &lt;str&gt;No&lt;/str&gt;
- *   &lt:/arr&gt;
+ *   &lt;/arr&gt;
  * &lt;/processor&gt;</pre>
  */
 public class ParseBooleanFieldUpdateProcessorFactory extends FieldMutatingUpdateProcessorFactory {
diff --git a/solr/core/src/java/org/apache/solr/update/processor/ScriptEngineCustomizer.java b/solr/core/src/java/org/apache/solr/update/processor/ScriptEngineCustomizer.java
index 9f59954..8def2e3 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/ScriptEngineCustomizer.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/ScriptEngineCustomizer.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
diff --git a/solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory.java b/solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory.java
index d1c3835..687df21 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory.java
@@ -90,7 +90,6 @@ import org.slf4j.LoggerFactory;
  *  <li>logger - A {@link Logger} that can be used for logging purposes in the script</li>
  *  <li>params - The "params" init argument in the factory configuration (if any)</li>
  * </ul>
- * </p>
  * <p>
  * Internally this update processor uses JDK 6 scripting engine support, 
  * and any {@link Invocable} implementations of <code>ScriptEngine</code> 
diff --git a/solr/core/src/java/org/apache/solr/update/processor/TimestampUpdateProcessorFactory.java b/solr/core/src/java/org/apache/solr/update/processor/TimestampUpdateProcessorFactory.java
index 64d91d5..1dca49d 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/TimestampUpdateProcessorFactory.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/TimestampUpdateProcessorFactory.java
@@ -42,7 +42,7 @@ import org.apache.solr.common.params.CommonParams; // javadoc
  * In the example configuration below, if a document does not contain a value 
  * in the <code>timestamp</code> field, a new <code>Date</code> will be 
  * generated and added as the value of that field.
- * <p>
+ * <br>
  *
  * <pre class="prettyprint">
  * &lt;processor class="solr.TimestampUpdateProcessorFactory"&gt;
diff --git a/solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory.java b/solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory.java
index e099f04..ee2709f 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory.java
@@ -40,7 +40,7 @@ import org.apache.solr.schema.SchemaField;
  * In the example configuration below, if a document does not contain a value
  * in the <code>id</code> field, a new <code>UUID</code> will be generated
  * and added as the value of that field.
- * <p>
+ * <br>
  *
  * <pre class="prettyprint">
  * &lt;processor class="solr.UUIDUpdateProcessorFactory"&gt;
@@ -54,7 +54,6 @@ import org.apache.solr.schema.SchemaField;
  * is used as field and a new <code>UUID</code> will be generated
  * and added as the value of that field. The field type of the uniqueKeyField
  * must be anything which accepts a string or UUID value.
- * <p>
  * @see UUID
  */
 public class UUIDUpdateProcessorFactory extends UpdateRequestProcessorFactory {
diff --git a/solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache.java b/solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache.java
index f0b031f..8f14ce9 100644
--- a/solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache.java
+++ b/solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache.java
@@ -31,11 +31,11 @@ import java.util.concurrent.locks.ReentrantLock;
 
 /**
  * A LFU cache implementation based upon ConcurrentHashMap.
- * <p/>
+ * <p>
  * This is not a terribly efficient implementation.  The tricks used in the
  * LRU version were not directly usable, perhaps it might be possible to
  * rewrite them with LFU in mind.
- * <p/>
+ * <p>
  * <b>This API is experimental and subject to change</b>
  *
  * @since solr 1.6
@@ -215,7 +215,7 @@ public class ConcurrentLFUCache<K, V> {
 
   /**
    * Returns 'n' number of least used entries present in this cache.
-   * <p/>
+   * <p>
    * This uses a TreeSet to collect the 'n' least used items ordered by ascending hitcount
    * and returns a LinkedHashMap containing 'n' or less than 'n' entries.
    *
@@ -259,7 +259,7 @@ public class ConcurrentLFUCache<K, V> {
 
   /**
    * Returns 'n' number of most used entries present in this cache.
-   * <p/>
+   * <p>
    * This uses a TreeSet to collect the 'n' most used items ordered by descending hitcount
    * and returns a LinkedHashMap containing 'n' or less than 'n' entries.
    *
diff --git a/solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache.java b/solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache.java
index be7068a..9a774f2 100644
--- a/solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache.java
+++ b/solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache.java
@@ -34,7 +34,7 @@ import java.lang.ref.WeakReference;
 /**
  * A LRU cache implementation based upon ConcurrentHashMap and other techniques to reduce
  * contention and synchronization overhead to utilize multiple CPU cores more effectively.
- * <p/>
+ * <p>
  * Note that the implementation does not follow a true LRU (least-recently-used) eviction
  * strategy. Instead it strives to remove least recently used items but when the initial
  * cleanup does not remove enough items to reach the 'acceptableWaterMark' limit, it can
diff --git a/solr/core/src/java/org/apache/solr/util/LongPriorityQueue.java b/solr/core/src/java/org/apache/solr/util/LongPriorityQueue.java
index 2b0dcf7..e02a01c 100644
--- a/solr/core/src/java/org/apache/solr/util/LongPriorityQueue.java
+++ b/solr/core/src/java/org/apache/solr/util/LongPriorityQueue.java
@@ -149,7 +149,7 @@ public class LongPriorityQueue {
   }
 
   /** Removes and returns the least element of the PriorityQueue in log(size)
-    time.  Only valid if size() > 0.
+    time.  Only valid if size() &gt; 0.
    */
   public long pop() {
     long result = heap[1];            // save first value
diff --git a/solr/core/src/java/org/apache/solr/util/SimplePostTool.java b/solr/core/src/java/org/apache/solr/util/SimplePostTool.java
index d9879ea..84ce8b2 100644
--- a/solr/core/src/java/org/apache/solr/util/SimplePostTool.java
+++ b/solr/core/src/java/org/apache/solr/util/SimplePostTool.java
@@ -564,7 +564,7 @@ public class SimplePostTool {
 
   /**
    * A very simple crawler, pulling URLs to fetch from a backlog and then
-   * recurses N levels deep if recursive>0. Links are parsed from HTML
+   * recurses N levels deep if recursive&gt;0. Links are parsed from HTML
    * through first getting an XHTML version using SolrCell with extractOnly,
    * and followed if they are local. The crawler pauses for a default delay
    * of 10 seconds between each fetch, this can be configured in the delay
@@ -744,7 +744,7 @@ public class SimplePostTool {
   /**
    * Appends a URL query parameter to a URL 
    * @param url the original URL
-   * @param param the parameter(s) to append, separated by "&"
+   * @param param the parameter(s) to append, separated by "&amp;"
    * @return the string version of the resulting URL
    */
   public static String appendParam(String url, String param) {
diff --git a/solr/core/src/test/org/apache/solr/BasicFunctionalityTest.java b/solr/core/src/test/org/apache/solr/BasicFunctionalityTest.java
index 7cf28dd..e57a8bd 100644
--- a/solr/core/src/test/org/apache/solr/BasicFunctionalityTest.java
+++ b/solr/core/src/test/org/apache/solr/BasicFunctionalityTest.java
@@ -77,7 +77,7 @@ public class BasicFunctionalityTest extends SolrTestCaseJ4 {
   }
   // tests the performance of dynamic field creation and
   // field property testing.
-  /***
+  /*
   public void testFieldPerf() {
     IndexSchema schema = h.getCore().getSchema();
     SchemaField[] fields = schema.getDynamicFieldPrototypes();
diff --git a/solr/core/src/test/org/apache/solr/CursorPagingTest.java b/solr/core/src/test/org/apache/solr/CursorPagingTest.java
index 3b7c8a2..9154f36 100644
--- a/solr/core/src/test/org/apache/solr/CursorPagingTest.java
+++ b/solr/core/src/test/org/apache/solr/CursorPagingTest.java
@@ -22,17 +22,19 @@ import org.apache.lucene.util.SentinelIntSet;
 import org.apache.lucene.util.mutable.MutableValueInt;
 import org.apache.solr.core.SolrInfoMBean;
 import org.apache.solr.common.SolrInputDocument;
+import org.apache.solr.common.params.CursorMarkParams;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.params.GroupParams;
+
 import static org.apache.solr.common.params.CursorMarkParams.CURSOR_MARK_PARAM;
 import static org.apache.solr.common.params.CursorMarkParams.CURSOR_MARK_NEXT;
 import static org.apache.solr.common.params.CursorMarkParams.CURSOR_MARK_START;
+
 import org.apache.solr.common.SolrException;
 import org.apache.solr.common.SolrException.ErrorCode;
 import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.search.CursorMark; //jdoc
-
 import org.noggit.ObjectBuilder;
 
 import java.nio.ByteBuffer;
@@ -49,7 +51,7 @@ import org.junit.BeforeClass;
 import org.junit.After;
 
 /**
- * Tests of deep paging using {@link CursorMark} and {@link #CURSOR_MARK_PARAM}.
+ * Tests of deep paging using {@link CursorMark} and {@link CursorMarkParams#CURSOR_MARK_PARAM}.
  */
 public class CursorPagingTest extends SolrTestCaseJ4 {
 
@@ -651,8 +653,8 @@ public class CursorPagingTest extends SolrTestCaseJ4 {
   }
 
   /**
-   * Given a set of params, executes a cursor query using {@link #CURSOR_MARK_START}
-   * and then continuously walks the results using {@link #CURSOR_MARK_START} as long
+   * Given a set of params, executes a cursor query using {@link CursorMarkParams#CURSOR_MARK_START}
+   * and then continuously walks the results using {@link CursorMarkParams#CURSOR_MARK_START} as long
    * as a non-0 number of docs ar returned.  This method records the the set of all id's
    * (must be positive ints) encountered and throws an assertion failure if any id is
    * encountered more than once, or if the set grows above maxSize
@@ -733,8 +735,8 @@ public class CursorPagingTest extends SolrTestCaseJ4 {
   }
 
   /**
-   * Given a set of params, executes a cursor query using {@link #CURSOR_MARK_START}
-   * and then continuously walks the results using {@link #CURSOR_MARK_START} as long
+   * Given a set of params, executes a cursor query using {@link CursorMarkParams#CURSOR_MARK_START}
+   * and then continuously walks the results using {@link CursorMarkParams#CURSOR_MARK_START} as long
    * as a non-0 number of docs ar returned.  This method records the the set of all id's
    * (must be positive ints) encountered and throws an assertion failure if any id is
    * encountered more than once, or if the set grows above maxSize.
@@ -817,7 +819,7 @@ public class CursorPagingTest extends SolrTestCaseJ4 {
 
   /**
    * Asserts that the query matches the specified JSON patterns and then returns the
-   * {@link #CURSOR_MARK_NEXT} value from the response
+   * {@link CursorMarkParams#CURSOR_MARK_NEXT} value from the response
    *
    * @see #assertJQ
    */
diff --git a/solr/core/src/test/org/apache/solr/analysis/TestCharFilters.java b/solr/core/src/test/org/apache/solr/analysis/TestCharFilters.java
index 317509c..1e15c17 100644
--- a/solr/core/src/test/org/apache/solr/analysis/TestCharFilters.java
+++ b/solr/core/src/test/org/apache/solr/analysis/TestCharFilters.java
@@ -39,7 +39,7 @@ public class TestCharFilters extends SolrTestCaseJ4 {
   
   /**
    * Test query analysis: at querytime MockCharFilter will
-   * double the 'a', so ab -> aab, and aba -> aabaa
+   * double the 'a', so ab -&gt; aab, and aba -&gt; aabaa
    * 
    * We run the test twice to make sure reuse is working
    */
@@ -58,7 +58,7 @@ public class TestCharFilters extends SolrTestCaseJ4 {
   
   /**
    * Test index analysis: at indextime MockCharFilter will
-   * double the 'a', so ab -> aab, and aba -> aabaa
+   * double the 'a', so ab -&gt; aab, and aba -&gt; aabaa
    * 
    * We run the test twice to make sure reuse is working
    */
diff --git a/solr/core/src/test/org/apache/solr/analysis/TestWordDelimiterFilterFactory.java b/solr/core/src/test/org/apache/solr/analysis/TestWordDelimiterFilterFactory.java
index 40cf1df..1464364 100644
--- a/solr/core/src/test/org/apache/solr/analysis/TestWordDelimiterFilterFactory.java
+++ b/solr/core/src/test/org/apache/solr/analysis/TestWordDelimiterFilterFactory.java
@@ -126,7 +126,7 @@ public class TestWordDelimiterFilterFactory extends SolrTestCaseJ4 {
     clearIndex();
   }
 
-  /***
+  /*
   public void testPerformance() throws IOException {
     String s = "now is the time-for all good men to come to-the aid of their country.";
     Token tok = new Token();
diff --git a/solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java b/solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java
index 6a7debc..af5aabf 100644
--- a/solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java
+++ b/solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java
@@ -17,6 +17,7 @@
 package org.apache.solr.cloud;
 
 import com.carrotsearch.randomizedtesting.annotations.Seed;
+
 import org.apache.lucene.util.LuceneTestCase.Slow;
 import org.apache.lucene.util.SentinelIntSet;
 import org.apache.lucene.util.TestUtil;
@@ -30,15 +31,17 @@ import org.apache.solr.common.SolrException;
 import org.apache.solr.common.SolrException.ErrorCode;
 import org.apache.solr.common.SolrInputDocument;
 import org.apache.solr.common.params.CommonParams;
+import org.apache.solr.common.params.CursorMarkParams;
 import org.apache.solr.common.params.GroupParams;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.search.CursorMark;
+
 import static org.apache.solr.common.params.CursorMarkParams.CURSOR_MARK_PARAM;
 import static org.apache.solr.common.params.CursorMarkParams.CURSOR_MARK_NEXT;
 import static org.apache.solr.common.params.CursorMarkParams.CURSOR_MARK_START;
-import org.apache.solr.search.CursorMark; //jdoc
 
+import org.apache.solr.search.CursorMark; //jdoc
 import org.junit.Test;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -50,7 +53,7 @@ import java.util.List;
 import java.util.Map;
 
 /**
- * Distributed tests of deep paging using {@link CursorMark} and {@link #CURSOR_MARK_PARAM}.
+ * Distributed tests of deep paging using {@link CursorMark} and {@link CursorMarkParams#CURSOR_MARK_PARAM}.
  * 
  * NOTE: this class Reuses some utilities from {@link CursorPagingTest} that assume the same schema and configs.
  *
@@ -669,7 +672,7 @@ public class DistribCursorPagingTest extends AbstractFullDistribZkTestBase {
 
   /**
    * Given a QueryResponse returned by SolrServer.query, asserts that the
-   * response does include {@link #CURSOR_MARK_NEXT} key and returns it
+   * response does include {@link CursorMarkParams#CURSOR_MARK_NEXT} key and returns it
    * @see org.apache.solr.client.solrj.SolrClient#query
    */
   private String assertHashNextCursorMark(QueryResponse rsp) {
@@ -686,8 +689,8 @@ public class DistribCursorPagingTest extends AbstractFullDistribZkTestBase {
 
   /**
    * <p>
-   * Given a set of params, executes a cursor query using {@link #CURSOR_MARK_START} 
-   * and then continuously walks the results using {@link #CURSOR_MARK_START} as long 
+   * Given a set of params, executes a cursor query using {@link CursorMarkParams#CURSOR_MARK_START} 
+   * and then continuously walks the results using {@link CursorMarkParams#CURSOR_MARK_START} as long 
    * as a non-0 number of docs ar returned.  This method records the the set of all id's
    * (must be postive ints) encountered and throws an assertion failure if any id is 
    * encountered more then once, or if the set grows above maxSize
diff --git a/solr/core/src/test/org/apache/solr/schema/IndexSchemaTest.java b/solr/core/src/test/org/apache/solr/schema/IndexSchemaTest.java
index 6d23bec..2c0c6b0 100644
--- a/solr/core/src/test/org/apache/solr/schema/IndexSchemaTest.java
+++ b/solr/core/src/test/org/apache/solr/schema/IndexSchemaTest.java
@@ -38,8 +38,8 @@ public class IndexSchemaTest extends SolrTestCaseJ4 {
 
   /**
    * This test assumes the schema includes:
-   * <dynamicField name="dynamic_*" type="string" indexed="true" stored="true"/>
-   * <dynamicField name="*_dynamic" type="string" indexed="true" stored="true"/>
+   * &lt;dynamicField name="dynamic_*" type="string" indexed="true" stored="true"/&gt;
+   * &lt;dynamicField name="*_dynamic" type="string" indexed="true" stored="true"/&gt;
    */
   @Test
   public void testDynamicCopy()
diff --git a/solr/core/src/test/org/apache/solr/search/TestDocSet.java b/solr/core/src/test/org/apache/solr/search/TestDocSet.java
index 7401ec4..6fb425a 100644
--- a/solr/core/src/test/org/apache/solr/search/TestDocSet.java
+++ b/solr/core/src/test/org/apache/solr/search/TestDocSet.java
@@ -234,7 +234,7 @@ public class TestDocSet extends LuceneTestCase {
     return sets;
   }
 
-  /**** needs code insertion into HashDocSet
+  /* needs code insertion into HashDocSet
   public void testCollisions() {
     loadfactor=.75f;
     rand=new Random(12345);  // make deterministic
@@ -266,7 +266,7 @@ public class TestDocSet extends LuceneTestCase {
   public static int smallSetType = 0;  // 0==sortedint, 1==hash, 2==FixedBitSet
   public static int smallSetCuttoff=3000;
 
-  /***
+  /*
   public void testIntersectionSizePerformance() {
     loadfactor=.75f; // for HashDocSet    
     rand=new Random(1);  // make deterministic
@@ -299,7 +299,7 @@ public class TestDocSet extends LuceneTestCase {
   }
    ***/
 
-  /****
+  /*
   public void testExistsPerformance() {
     loadfactor=.75f;
     rand=new Random(12345);  // make deterministic
@@ -323,7 +323,7 @@ public class TestDocSet extends LuceneTestCase {
   }
    ***/
 
-   /**** needs code insertion into HashDocSet
+   /* needs code insertion into HashDocSet
    public void testExistsCollisions() {
     loadfactor=.75f;
     rand=new Random(12345);  // make deterministic
@@ -499,7 +499,7 @@ public class TestDocSet extends LuceneTestCase {
     Filter fa = a.getTopFilter();
     Filter fb = b.getTopFilter();
 
-    /*** top level filters are no longer supported
+    /* top level filters are no longer supported
     // test top-level
     DocIdSet da = fa.getDocIdSet(topLevelContext);
     DocIdSet db = fb.getDocIdSet(topLevelContext);
diff --git a/solr/core/src/test/org/apache/solr/search/function/TestOrdValues.java b/solr/core/src/test/org/apache/solr/search/function/TestOrdValues.java
index d7a309f..c204d37 100644
--- a/solr/core/src/test/org/apache/solr/search/function/TestOrdValues.java
+++ b/solr/core/src/test/org/apache/solr/search/function/TestOrdValues.java
@@ -51,13 +51,13 @@ import org.junit.Test;
 
 /**
  * Test search based on OrdFieldSource and ReverseOrdFieldSource.
- * <p/>
+ * <p>
  * Tests here create an index with a few documents, each having
  * an indexed "id" field.
  * The ord values of this field are later used for scoring.
- * <p/>
+ * <p>
  * The order tests use Hits to verify that docs are ordered as expected.
- * <p/>
+ * <p>
  * The exact score tests use TopDocs top to verify the exact score.
  */
 public class TestOrdValues extends LuceneTestCase {
diff --git a/solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest.java b/solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest.java
index 7ea4b6b..191f5fc 100644
--- a/solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest.java
+++ b/solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest.java
@@ -39,7 +39,7 @@ import java.util.List;
 /**
  * Tests {@link StatelessScriptUpdateProcessorFactory}.
  *
- * TODO: This test, to run from an IDE, requires a working directory of <path-to>/solr/core/src/test-files.  Fix!
+ * TODO: This test, to run from an IDE, requires a working directory of &lt;path-to&gt;/solr/core/src/test-files.  Fix!
  */
 public class StatelessScriptUpdateProcessorFactoryTest extends UpdateProcessorTestBase {
 
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery.java b/solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery.java
index 80eb623..221c338 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery.java
@@ -68,7 +68,7 @@ public class SolrQuery extends ModifiableSolrParams
 
   /** enable/disable terms.  
    * 
-   * @param b flag to indicate terms should be enabled. <br /> if b==false, removes all other terms parameters
+   * @param b flag to indicate terms should be enabled. <br> if b==false, removes all other terms parameters
    * @return Current reference (<i>this</i>)
    */
   public SolrQuery setTerms(boolean b) {
@@ -319,7 +319,7 @@ public class SolrQuery extends ModifiableSolrParams
    * 
    * @param name Name of the facet field to be removed.
    * 
-   * @return true, if the item was removed. <br />
+   * @return true, if the item was removed. <br>
    *           false, if the facet field was null or did not exist.
    */
   public boolean removeFacetField(String name) {
@@ -332,7 +332,7 @@ public class SolrQuery extends ModifiableSolrParams
   
   /** enable/disable faceting.  
    * 
-   * @param b flag to indicate faceting should be enabled. <br /> if b==false, removes all other faceting parameters
+   * @param b flag to indicate faceting should be enabled. <br> if b==false, removes all other faceting parameters
    * @return Current reference (<i>this</i>)
    */
   public SolrQuery setFacet(boolean b) {
@@ -475,7 +475,7 @@ public class SolrQuery extends ModifiableSolrParams
   /** remove a field for highlighting
    * 
    * @param f field name to not highlight
-   * @return <i>true</i>, if removed, <br /> <i>false</i>, otherwise
+   * @return <i>true</i>, if removed, <br> <i>false</i>, otherwise
    */
   public boolean removeHighlightField(String f) {
     boolean b = this.remove(HighlightParams.FIELDS, f);
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.java b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.java
index fe1e587..809ca12 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.java
@@ -171,11 +171,11 @@ public class CloudSolrClient extends SolrClient {
    *          that starts with a forward slash. Using a chroot allows multiple
    *          applications to coexist in one ensemble. For full details, see the
    *          Zookeeper documentation. Some examples:
-   *          <p/>
+   *          <p>
    *          "host1:2181"
-   *          <p/>
+   *          <p>
    *          "host1:2181,host2:2181,host3:2181/mysolrchroot"
-   *          <p/>
+   *          <p>
    *          "zoo1.example.com:2181,zoo2.example.com:2181,zoo3.example.com:2181"
    */
   public CloudSolrClient(String zkHost) {
@@ -203,11 +203,11 @@ public class CloudSolrClient extends SolrClient {
    *          that starts with a forward slash. Using a chroot allows multiple
    *          applications to coexist in one ensemble. For full details, see the
    *          Zookeeper documentation. Some examples:
-   *          <p/>
+   *          <p>
    *          "host1:2181"
-   *          <p/>
+   *          <p>
    *          "host1:2181,host2:2181,host3:2181/mysolrchroot"
-   *          <p/>
+   *          <p>
    *          "zoo1.example.com:2181,zoo2.example.com:2181,zoo3.example.com:2181"
    * @param httpClient
    *          the {@link HttpClient} instance to be used for all requests. The
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient.java b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient.java
index ec49e46..0499abb 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient.java
@@ -98,7 +98,7 @@ public class HttpSolrClient extends SolrClient {
   
   /**
    * Default value: null / empty.
-   * <p/>
+   * <p>
    * Parameters that are added to every request regardless. This may be a place
    * to add something like an authentication token.
    */
@@ -106,7 +106,7 @@ public class HttpSolrClient extends SolrClient {
   
   /**
    * Default response parser is BinaryResponseParser
-   * <p/>
+   * <p>
    * This parser represents the default Response Parser chosen to parse the
    * response if the parser were not specified as part of the request.
    * 
@@ -665,7 +665,7 @@ public class HttpSolrClient extends SolrClient {
   }
   
   /**
-   * Allow server->client communication to be compressed. Currently gzip and
+   * Allow server-&gt;client communication to be compressed. Currently gzip and
    * deflate are supported. If the server supports compression the response will
    * be compressed. This method is only allowed if the http client is of type
    * DefatulHttpClient.
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient.java b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient.java
index 1c28f5a..c6c591d 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient.java
@@ -51,11 +51,11 @@ import java.util.*;
  * {@link CloudSolrClient}, but this class may be used
  * for updates because the server will forward them to the appropriate leader.
  *
- * <p/>
+ * <p>
  * It offers automatic failover when a server goes down and it detects when the server comes back up.
- * <p/>
+ * <p>
  * Load balancing is done using a simple round-robin on the list of servers.
- * <p/>
+ * <p>
  * If a request to a server fails by an IOException due to a connection timeout or read timeout then the host is taken
  * off the list of live servers and moved to a 'dead server list' and the request is resent to the next live server.
  * This process is continued till it tries all the live servers. If at least one server is alive, the request succeeds,
@@ -68,8 +68,8 @@ import java.util.*;
  * </pre></blockquote>
  * This detects if a dead server comes alive automatically. The check is done in fixed intervals in a dedicated thread.
  * This interval can be set using {@link #setAliveCheckInterval} , the default is set to one minute.
- * <p/>
- * <b>When to use this?</b><br/> This can be used as a software load balancer when you do not wish to setup an external
+ * <p>
+ * <b>When to use this?</b><br> This can be used as a software load balancer when you do not wish to setup an external
  * load balancer. Alternatives to this code are to use
  * a dedicated hardware load balancer or using Apache httpd with mod_proxy_balancer as a load balancer. See <a
  * href="http://en.wikipedia.org/wiki/Load_balancing_(computing)">Load balancing on Wikipedia</a>
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/ContentStreamUpdateRequest.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/ContentStreamUpdateRequest.java
index 6b02486..2697e3f 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/ContentStreamUpdateRequest.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/ContentStreamUpdateRequest.java
@@ -31,7 +31,7 @@ import java.util.List;
  * Basic functionality to upload a File or {@link org.apache.solr.common.util.ContentStream} to a Solr Cell or some
  * other handler that takes ContentStreams (CSV)
  * <p>
- * See http://wiki.apache.org/solr/ExtractingRequestHandler<br/>
+ * See http://wiki.apache.org/solr/ExtractingRequestHandler<br>
  * See http://wiki.apache.org/solr/UpdateCSV
  * 
  *
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter.java
index a33fe7e..15872b2 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter.java
@@ -32,7 +32,7 @@ import java.nio.charset.StandardCharsets;
 
 /**
  * A RequestWriter is used to write requests to Solr.
- * <p/>
+ * <p>
  * A subclass can override the methods in this class to supply a custom format in which a request can be sent.
  *
  *
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/response/AnalysisResponseBase.java b/solr/solrj/src/java/org/apache/solr/client/solrj/response/AnalysisResponseBase.java
index 1e399f3..21396a5 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/response/AnalysisResponseBase.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/response/AnalysisResponseBase.java
@@ -33,7 +33,7 @@ public class AnalysisResponseBase extends SolrResponseBase {
 
   /**
    * Parses the given named list and builds a list of analysis phases form it. Expects a named list of the form:
-   * <p/>
+   * <br>
    * <pre><code>
    *  &lt;lst name="index"&gt;
    *      &lt;arr name="Tokenizer"&gt;
@@ -78,7 +78,7 @@ public class AnalysisResponseBase extends SolrResponseBase {
 
   /**
    * Parses the given named list and builds a token infoform it. Expects a named list of the form:
-   * <p/>
+   * <br>
    * <pre><code>
    *  &lt;arr name="Tokenizer"&gt;
    *      &lt;str name="text"&gt;the_text&lt;/str&gt;
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils.java b/solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils.java
index 9f33d6f..bfefb3a 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils.java
@@ -184,9 +184,10 @@ public class ClientUtils
   //---------------------------------------------------------------------------------------
 
   /**
-   * See: {@link org.apache.lucene.queryparser.classic queryparser syntax} 
+   * See: <a href="https://www.google.com/?gws_rd=ssl#q=lucene+query+parser+syntax">Lucene query parser syntax</a>
    * for more information on Escaping Special Characters
    */
+  // NOTE: its broken to link to any lucene-queryparser.jar docs, not in classpath!!!!!
   public static String escapeQueryChars(String s) {
     StringBuilder sb = new StringBuilder();
     for (int i = 0; i < s.length(); i++) {
diff --git a/solr/solrj/src/java/org/apache/solr/common/SolrDocument.java b/solr/solrj/src/java/org/apache/solr/common/SolrDocument.java
index f0a713f..b7e4465 100644
--- a/solr/solrj/src/java/org/apache/solr/common/SolrDocument.java
+++ b/solr/solrj/src/java/org/apache/solr/common/SolrDocument.java
@@ -214,7 +214,7 @@ public class SolrDocument implements Map<String,Object>, Iterable<Map.Entry<Stri
   }
 
   /**
-   * Iterate of String->Object keys
+   * Iterate of String-&gt;Object keys
    */
   @Override
   public Iterator<Entry<String, Object>> iterator() {
diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection.java b/solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection.java
index aadf00a..a5e4252 100644
--- a/solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection.java
+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection.java
@@ -130,14 +130,14 @@ public class DocCollection extends ZkNodeProps {
   }
 
   /**
-   * Get the map of all slices (sliceName->Slice) for this collection.
+   * Get the map of all slices (sliceName-&gt;Slice) for this collection.
    */
   public Map<String, Slice> getSlicesMap() {
     return slices;
   }
 
   /**
-   * Get the map of active slices (sliceName->Slice) for this collection.
+   * Get the map of active slices (sliceName-&gt;Slice) for this collection.
    */
   public Map<String, Slice> getActiveSlicesMap() {
     return activeSlices;
diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkOperation.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkOperation.java
index c152956..b4da540 100644
--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkOperation.java
+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkOperation.java
@@ -1,4 +1,4 @@
-/**
+/*
  *
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
diff --git a/solr/solrj/src/java/org/apache/solr/common/params/CommonParams.java b/solr/solrj/src/java/org/apache/solr/common/params/CommonParams.java
index 0f122c5..aaa0b71 100644
--- a/solr/solrj/src/java/org/apache/solr/common/params/CommonParams.java
+++ b/solr/solrj/src/java/org/apache/solr/common/params/CommonParams.java
@@ -151,7 +151,7 @@ public interface CommonParams {
   public static final String STREAM_CONTENTTYPE = "stream.contentType";
   
   /**
-   * Timeout value in milliseconds.  If not set, or the value is <= 0, there is no timeout.
+   * Timeout value in milliseconds.  If not set, or the value is &gt;= 0, there is no timeout.
    */
   public static final String TIME_ALLOWED = "timeAllowed";
   
@@ -206,7 +206,7 @@ public interface CommonParams {
   public static final String CACHE = "cache";
 
   /** Used as a local param on filter queries in conjunction with cache=false.  Filters are checked in order, from
-   * smallest cost to largest. If cost>=100 and the query implements PostFilter, then that interface will be used to do post query filtering.
+   * smallest cost to largest. If cost&gt;=100 and the query implements PostFilter, then that interface will be used to do post query filtering.
    */
   public static final String COST = "cost";
 
diff --git a/solr/solrj/src/java/org/apache/solr/common/params/CoreAdminParams.java b/solr/solrj/src/java/org/apache/solr/common/params/CoreAdminParams.java
index b04ebcc..f673c6c 100644
--- a/solr/solrj/src/java/org/apache/solr/common/params/CoreAdminParams.java
+++ b/solr/solrj/src/java/org/apache/solr/common/params/CoreAdminParams.java
@@ -1,4 +1,3 @@
-/**
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
diff --git a/solr/solrj/src/java/org/apache/solr/common/params/FacetParams.java b/solr/solrj/src/java/org/apache/solr/common/params/FacetParams.java
index 0947494..fc6372d 100644
--- a/solr/solrj/src/java/org/apache/solr/common/params/FacetParams.java
+++ b/solr/solrj/src/java/org/apache/solr/common/params/FacetParams.java
@@ -151,7 +151,7 @@ public interface FacetParams {
 
  /**
    * When faceting by enumerating the terms in a field,
-   * only use the filterCache for terms with a df >= to this parameter.
+   * only use the filterCache for terms with a df &gt;= to this parameter.
    */
   public static final String FACET_ENUM_CACHE_MINDF = FACET + ".enum.cache.minDf";
   /**
@@ -311,7 +311,7 @@ public interface FacetParams {
   
   /**
    * An enumeration of the legal values for {@link #FACET_DATE_INCLUDE} and {@link #FACET_RANGE_INCLUDE}
-   * <p>
+   * <br>
    * <ul>
    * <li>lower = all gap based ranges include their lower bound</li>
    * <li>upper = all gap based ranges include their upper bound</li>
diff --git a/solr/solrj/src/java/org/apache/solr/common/params/QueryElevationParams.java b/solr/solrj/src/java/org/apache/solr/common/params/QueryElevationParams.java
index 7519339..d5a0b41 100644
--- a/solr/solrj/src/java/org/apache/solr/common/params/QueryElevationParams.java
+++ b/solr/solrj/src/java/org/apache/solr/common/params/QueryElevationParams.java
@@ -32,7 +32,7 @@ public interface QueryElevationParams {
   /**
    * The name of the field that editorial results will be written out as when using the QueryElevationComponent, which
    * automatically configures the EditorialMarkerFactory.  The default name is "elevated"
-   * <br/>
+   * <br>
    * See http://wiki.apache.org/solr/DocTransformers
    */
   String EDITORIAL_MARKER_FIELD_NAME = "editorialMarkerFieldName";
@@ -40,7 +40,7 @@ public interface QueryElevationParams {
    * The name of the field that excluded editorial results will be written out as when using the QueryElevationComponent, which
    * automatically configures the EditorialMarkerFactory.  The default name is "excluded".  This is only used
    * when {@link #MARK_EXCLUDES} is set to true at query time.
-   * <br/>
+   * <br>
    * See http://wiki.apache.org/solr/DocTransformers
    */
   String EXCLUDE_MARKER_FIELD_NAME = "excludeMarkerFieldName";
diff --git a/solr/solrj/src/java/org/apache/solr/common/params/SpellingParams.java b/solr/solrj/src/java/org/apache/solr/common/params/SpellingParams.java
index 27fb4e1..918592d 100644
--- a/solr/solrj/src/java/org/apache/solr/common/params/SpellingParams.java
+++ b/solr/solrj/src/java/org/apache/solr/common/params/SpellingParams.java
@@ -34,7 +34,7 @@ public interface SpellingParams {
 
   /**
    * The count of suggestions to return for each query term not in the index and/or dictionary.
-   * <p/>
+   * <p>
    * If this parameter is absent in the request then only one suggestion is
    * returned. If it is more than one then a maximum of given suggestions are
    * returned for each token in the query.
@@ -43,7 +43,7 @@ public interface SpellingParams {
   
   /**
    * The count of suggestions to return for each query term existing in the index and/or dictionary.
-   * <p/>
+   * <p>
    * If this parameter is absent in the request then no suggestions are generated.  This parameter allows
    * for receiving alternative terms to use in context-sensitive spelling corrections.
    */
@@ -70,7 +70,7 @@ public interface SpellingParams {
    * When this parameter is set to true and the misspelled word exists in the
    * user field, only words that occur more frequently in the Solr field than
    * the one given will be returned. The default value is false.
-   * <p/>
+   * <p>
    * <b>This is applicable only for dictionaries built from Solr fields.</b>
    */
   public static final String SPELLCHECK_ONLY_MORE_POPULAR = SPELLCHECK_PREFIX + "onlyMorePopular";
@@ -79,14 +79,14 @@ public interface SpellingParams {
    * Whether to use the extended response format, which is more complicated but
    * richer. Returns the document frequency for each suggestion and returns one
    * suggestion block for each term in the query string. Default is false.
-   * <p/>
+   * <p>
    * <b>This is applicable only for dictionaries built from Solr fields.</b>
    */
   public static final String SPELLCHECK_EXTENDED_RESULTS = SPELLCHECK_PREFIX + "extendedResults";
 
   /**
    * Use the value for this parameter as the query to spell check.
-   * <p/>
+   * <p>
    * This parameter is <b>optional</b>. If absent, then the q parameter is
    * used.
    */
@@ -148,7 +148,7 @@ public interface SpellingParams {
   /**
    * <p>
    * Whether to use the Extended Results Format for collations. 
-   * Includes "before>after" pairs to easily allow clients to generate messages like "no results for PORK.  did you mean POLK?"
+   * Includes "before&gt;after" pairs to easily allow clients to generate messages like "no results for PORK.  did you mean POLK?"
    * Also indicates the # of hits each collation will return on re-query.  Default=false, which retains 1.4-compatible output.
    * </p>
    * <p>
diff --git a/solr/solrj/src/java/org/apache/solr/common/util/DateUtil.java b/solr/solrj/src/java/org/apache/solr/common/util/DateUtil.java
index c77080a..49b7fc4 100644
--- a/solr/solrj/src/java/org/apache/solr/common/util/DateUtil.java
+++ b/solr/solrj/src/java/org/apache/solr/common/util/DateUtil.java
@@ -105,7 +105,7 @@ public class DateUtil {
 
   /**
    * Slightly modified from org.apache.commons.httpclient.util.DateUtil.parseDate
-   * <p/>
+   * <p>
    * Parses the date value using the given date formats.
    *
    * @param dateValue   the date value to parse
diff --git a/solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream.java b/solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream.java
index 502df3c..09a7441 100644
--- a/solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream.java
+++ b/solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream.java
@@ -101,7 +101,7 @@ public class FastOutputStream extends OutputStream implements DataOutput {
 
 
   /** reserve at least len bytes at the end of the buffer.
-   * Invalid if len > buffer.length
+   * Invalid if len &gt; buffer.length
    */
   public void reserve(int len) throws IOException {
     if (len > (buf.length - pos))
diff --git a/solr/solrj/src/java/org/apache/solr/common/util/Hash.java b/solr/solrj/src/java/org/apache/solr/common/util/Hash.java
index 81bfa95..81b5232 100644
--- a/solr/solrj/src/java/org/apache/solr/common/util/Hash.java
+++ b/solr/solrj/src/java/org/apache/solr/common/util/Hash.java
@@ -178,7 +178,7 @@ public class Hash {
 
 
   /**<p>This is the 64 bit version of lookup3ycs, corresponding to Bob Jenkin's
-   * lookup3 hashlittle2 with initval biased by -(numCodePoints<<2).  It is equivalent
+   * lookup3 hashlittle2 with initval biased by -(numCodePoints&lt;&lt;2).  It is equivalent
    * to lookup3ycs in that if the high bits of initval==0, then the low bits of the
    * result will be the same as lookup3ycs.
    * </p>
diff --git a/solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec.java b/solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec.java
index e331aca..687525c 100644
--- a/solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec.java
+++ b/solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec.java
@@ -36,7 +36,7 @@ import java.nio.ByteBuffer;
  * object in the object tree which does not fall into these types, It must be converted to one of these. Implement an
  * ObjectResolver and pass it over It is expected that this class is used on both end of the pipes. The class has one
  * read method and one write method for each of the datatypes
- * <p/>
+ * <p>
  * Note -- Never re-use an instance of this class for more than one marshal or unmarshall operation. Always create a new
  * instance.
  */
@@ -732,7 +732,7 @@ public class JavaBinCodec {
 
   /**
    * Special method for variable length int (copied from lucene). Usually used for writing the length of a
-   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3
+   * collection/array/map In most of the cases the length can be represented in one byte (length &lt; 127) so it saves 3
    * bytes/object
    *
    * @throws IOException If there is a low-level I/O error.
diff --git a/solr/solrj/src/java/org/apache/solr/common/util/StrUtils.java b/solr/solrj/src/java/org/apache/solr/common/util/StrUtils.java
index e2b0cb2..8ac87d7 100644
--- a/solr/solrj/src/java/org/apache/solr/common/util/StrUtils.java
+++ b/solr/solrj/src/java/org/apache/solr/common/util/StrUtils.java
@@ -78,7 +78,7 @@ public class StrUtils {
    * <p>
    * Current backslash escaping supported:
    * <br> \n \t \r \b \f are escaped the same as a Java String
-   * <br> Other characters following a backslash are produced verbatim (\c => c)
+   * <br> Other characters following a backslash are produced verbatim (\c =&gt; c)
    *
    * @param s  the string to split
    * @param separator the separator to split on
@@ -258,7 +258,6 @@ public class StrUtils {
    * <p>
    * Characters with a numeric value less than 32 are encoded.
    * &amp;,=,%,+,space are encoded.
-   * <p>
    */
   public static void partialURLEncodeVal(Appendable dest, String val) throws IOException {
     for (int i=0; i<val.length(); i++) {
diff --git a/solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java b/solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java
index f8751db..617e125 100644
--- a/solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java
+++ b/solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java
@@ -1000,7 +1000,7 @@ public abstract class BaseDistributedSearchTestCase extends SolrTestCaseJ4 {
   /**
    * Implementations can pre-test the control data for basic correctness before using it
    * as a check for the shard data.  This is useful, for instance, if a test bug is introduced
-   * causing a spelling index not to get built:  both control & shard data would have no results
+   * causing a spelling index not to get built:  both control &amp; shard data would have no results
    * but because they match the test would pass.  This method gives us a chance to ensure something
    * exists in the control data.
    */

