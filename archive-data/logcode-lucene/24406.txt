GitDiffStart: 45864d1c9c1de4fbd92cde3f3c12329ea860c0d0 | Wed Feb 16 20:20:15 2005 +0000
diff --git a/contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter.java b/contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter.java
index bc43095..1d6a1fe 100644
--- a/contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter.java
+++ b/contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter.java
@@ -108,7 +108,6 @@ public class Highlighter
 
 		//Get text
 		ArrayList fragTexts = new ArrayList();
-		int n = 0;
 		for (int i = 0; i < frag.length; i++)
 		{
 			if ((frag[i] != null) && (frag[i].getScore() > 0))
@@ -217,7 +216,6 @@ public class Highlighter
 			currentFrag.textEndPos = newText.length();
 
 			//sort the most relevant sections of the text
-			int minScore = 0;
 			for (Iterator i = docFrags.iterator(); i.hasNext();)
 			{
 				currentFrag = (TextFragment) i.next();
diff --git a/contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter.java b/contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter.java
index a2f0f01..457012a 100755
--- a/contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter.java
+++ b/contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter.java
@@ -24,8 +24,6 @@ package org.apache.lucene.search.highlight;
  * @author David Spencer dave@searchmorph.com
  */
 
-import org.apache.lucene.search.highlight.*;
-
 public class SpanGradientFormatter
 	extends GradientFormatter
 {
diff --git a/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources.java b/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources.java
index 69b0bfc..2f4e16e 100644
--- a/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources.java
+++ b/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources.java
@@ -100,7 +100,7 @@ public class TokenSources
             {
                 this.tokens=tokens;
             }
-            public Token next() throws IOException
+            public Token next()
             {
                 if(currentToken>=tokens.length)
                 {

