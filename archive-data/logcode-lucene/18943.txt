GitDiffStart: de0aaadb81cb0bc12e20f9828e7959562dabb6c5 | Thu Oct 29 17:30:46 2009 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 85cda45..4eb97e0 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -164,6 +164,10 @@ Bug fixes
 * LUCENE-2013: SpanRegexQuery does not work with QueryScorer.
   (Benjamin Keil via Mark Miller)
 
+* LUCENE-2016: Replace illegal U+FFFF character with the replacement
+  char (U+FFFD) during indexing, to prevent silent index corruption.
+  (Peter Keegan, Mike McCandless)
+
 New features
 
 * LUCENE-1933: Provide a convenience AttributeFactory that creates a
diff --git a/src/java/org/apache/lucene/index/TermsHashPerField.java b/src/java/org/apache/lucene/index/TermsHashPerField.java
index 2a71f1d..da6b2ab 100644
--- a/src/java/org/apache/lucene/index/TermsHashPerField.java
+++ b/src/java/org/apache/lucene/index/TermsHashPerField.java
@@ -377,9 +377,11 @@ final class TermsHashPerField extends InvertedDocConsumerPerField {
             ch = tokenText[downto] = UnicodeUtil.UNI_REPLACEMENT_CHAR;
           }            
         }
-      } else if (ch >= UnicodeUtil.UNI_SUR_HIGH_START && ch <= UnicodeUtil.UNI_SUR_HIGH_END)
-        // Unpaired
+      } else if (ch >= UnicodeUtil.UNI_SUR_HIGH_START && (ch <= UnicodeUtil.UNI_SUR_HIGH_END ||
+                                                          ch == 0xffff)) {
+        // Unpaired or 0xffff
         ch = tokenText[downto] = UnicodeUtil.UNI_REPLACEMENT_CHAR;
+      }
 
       code = (code*31) + ch;
     }
diff --git a/src/test/org/apache/lucene/index/TestIndexWriter.java b/src/test/org/apache/lucene/index/TestIndexWriter.java
index b610c41..f0883ac 100644
--- a/src/test/org/apache/lucene/index/TestIndexWriter.java
+++ b/src/test/org/apache/lucene/index/TestIndexWriter.java
@@ -29,7 +29,6 @@ import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.HashSet;
 import java.util.Random;
 
 import org.apache.lucene.util.LuceneTestCase;
@@ -4523,4 +4522,20 @@ public class TestIndexWriter extends LuceneTestCase {
     w.close();
     d.close();
   }
+
+  public void testEmbeddedFFFF() throws Throwable {
+
+    Directory d = new MockRAMDirectory();
+    IndexWriter w = new IndexWriter(d, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);
+    Document doc = new Document();
+    doc.add(new Field("field", "a a\uffffb", Field.Store.NO, Field.Index.ANALYZED));
+    w.addDocument(doc);
+    doc = new Document();
+    doc.add(new Field("field", "a", Field.Store.NO, Field.Index.ANALYZED));
+    w.addDocument(doc);
+    w.close();
+
+    _TestUtil.checkIndex(d);
+    d.close();
+  }
 }

