GitDiffStart: 2580956b8b00e7fbd52d2db418a512a8afb32117 | Fri Jan 8 15:59:36 2016 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index f0e9937..b0c6bd1 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -454,6 +454,9 @@ Other Changes
 * SOLR-8504: (IndexSchema|SolrIndexConfig)Test: private static finals for
   solrconfig.xml and schema.xml String literals. (Christine Poerschke)
 
+* SOLR-8505: core/DirectoryFactory.LOCK_TYPE_HDFS - add & use it instead of String literals
+  (Christine Poerschke)
+
 ==================  5.4.0 ==================
 
 Consult the LUCENE_CHANGES.txt file for additional, low level, changes in this release
diff --git a/solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/SolrRecordWriter.java b/solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/SolrRecordWriter.java
index 7184ca5..518841d 100644
--- a/solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/SolrRecordWriter.java
+++ b/solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/SolrRecordWriter.java
@@ -43,6 +43,7 @@ import org.apache.solr.client.solrj.embedded.EmbeddedSolrServer;
 import org.apache.solr.common.SolrInputDocument;
 import org.apache.solr.core.CoreContainer;
 import org.apache.solr.core.CoreDescriptor;
+import org.apache.solr.core.DirectoryFactory;
 import org.apache.solr.core.HdfsDirectoryFactory;
 import org.apache.solr.core.SolrCore;
 import org.apache.solr.core.SolrResourceLoader;
@@ -151,7 +152,7 @@ class SolrRecordWriter<K, V> extends RecordWriter<K, V> {
 
     // TODO: This is fragile and should be well documented
     System.setProperty("solr.directoryFactory", HdfsDirectoryFactory.class.getName()); 
-    System.setProperty("solr.lock.type", "hdfs"); 
+    System.setProperty("solr.lock.type", DirectoryFactory.LOCK_TYPE_HDFS);
     System.setProperty("solr.hdfs.nrtcachingdirectory", "false");
     System.setProperty("solr.hdfs.blockcache.enabled", "false");
     System.setProperty("solr.autoCommit.maxTime", "600000");
diff --git a/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java b/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java
index e3bbd02..715b6a6 100644
--- a/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java
+++ b/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java
@@ -60,6 +60,7 @@ public abstract class DirectoryFactory implements NamedListInitializedPlugin,
   public final static String LOCK_TYPE_NATIVE = "native";
   public final static String LOCK_TYPE_SINGLE = "single";
   public final static String LOCK_TYPE_NONE   = "none";
+  public final static String LOCK_TYPE_HDFS   = "hdfs";
   
   /**
    * Indicates a Directory will no longer be used, and when its ref count
diff --git a/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java b/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java
index b516ee6..56c9cba 100644
--- a/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java
+++ b/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java
@@ -155,12 +155,12 @@ public class HdfsDirectoryFactory extends CachingDirectoryFactory implements Sol
   @Override
   protected LockFactory createLockFactory(String rawLockType) throws IOException {
     if (null == rawLockType) {
-      LOG.warn("No lockType configured, assuming 'hdfs'.");
-      rawLockType = "hdfs";
+      rawLockType = DirectoryFactory.LOCK_TYPE_HDFS;
+      LOG.warn("No lockType configured, assuming '"+rawLockType+"'.");
     }
     final String lockType = rawLockType.toLowerCase(Locale.ROOT).trim();
     switch (lockType) {
-      case "hdfs":
+      case DirectoryFactory.LOCK_TYPE_HDFS:
         return HdfsLockFactory.INSTANCE;
       case DirectoryFactory.LOCK_TYPE_SINGLE:
         return new SingleInstanceLockFactory();
diff --git a/solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsTestUtil.java b/solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsTestUtil.java
index 214ba8d..3ed975a 100644
--- a/solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsTestUtil.java
+++ b/solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsTestUtil.java
@@ -21,6 +21,7 @@ import org.apache.hadoop.hdfs.server.namenode.ha.HATestUtil;
 import org.apache.lucene.util.LuceneTestCase;
 import org.apache.solr.SolrTestCaseJ4;
 import org.apache.solr.common.util.IOUtils;
+import org.apache.solr.core.DirectoryFactory;
 import org.apache.solr.util.HdfsUtil;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -87,7 +88,7 @@ public class HdfsTestUtil {
     
     System.setProperty("test.build.data", dir + File.separator + "hdfs" + File.separator + "build");
     System.setProperty("test.cache.data", dir + File.separator + "hdfs" + File.separator + "cache");
-    System.setProperty("solr.lock.type", "hdfs");
+    System.setProperty("solr.lock.type", DirectoryFactory.LOCK_TYPE_HDFS);
     
     
     System.setProperty("solr.hdfs.blockcache.global", Boolean.toString(LuceneTestCase.random().nextBoolean()));
diff --git a/solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest.java b/solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest.java
index e0f1376..80e0f80 100755
--- a/solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest.java
+++ b/solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest.java
@@ -26,6 +26,7 @@ public class DirectoryFactoryTest extends LuceneTestCase {
     assertEquals("native", DirectoryFactory.LOCK_TYPE_NATIVE);
     assertEquals("single", DirectoryFactory.LOCK_TYPE_SINGLE);
     assertEquals("none", DirectoryFactory.LOCK_TYPE_NONE);
+    assertEquals("hdfs", DirectoryFactory.LOCK_TYPE_HDFS);
   }
 
 }
diff --git a/solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java b/solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java
index d444700..114a384 100644
--- a/solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java
+++ b/solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java
@@ -137,7 +137,8 @@ public class SolrIndexConfigTest extends SolrTestCaseJ4 {
       assertTrue(DirectoryFactory.LOCK_TYPE_SIMPLE.equals(lockType) ||
           DirectoryFactory.LOCK_TYPE_NATIVE.equals(lockType) ||
           DirectoryFactory.LOCK_TYPE_SINGLE.equals(lockType) ||
-          DirectoryFactory.LOCK_TYPE_NONE.equals(lockType));
+          DirectoryFactory.LOCK_TYPE_NONE.equals(lockType) ||
+          DirectoryFactory.LOCK_TYPE_HDFS.equals(lockType));
     }
 
     ++mSizeExpected; assertTrue(m.get("infoStreamEnabled") instanceof Boolean);

