GitDiffStart: ed5381fe194dd0a7a907878e3a1e5991ba51d4c7 | Thu Dec 17 13:49:43 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 7863293..f000e9c 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -223,6 +223,9 @@ New Features
 * SOLR-8378: Add upconfig and downconfig commands to the bin/solr script
   (Erick Erickson)
 
+* SOLR-8434: Add wildcard support to role, to match any role in RuleBasedAuthorizationPlugin (noble)
+
+
 Bug Fixes
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin.java b/solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin.java
index 2e09acb..9156bb5 100644
--- a/solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin.java
+++ b/solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin.java
@@ -147,6 +147,8 @@ public class RuleBasedAuthorizationPlugin implements AuthorizationPlugin, Config
         //this resource needs a principal but the request has come without
         //any credential.
         return MatchStatus.USER_REQUIRED;
+      } else if (permission.role.contains("*")) {
+        return MatchStatus.PERMITTED;
       }
 
       for (String role : permission.role) {
diff --git a/solr/core/src/test/org/apache/solr/security/TestRuleBasedAuthorizationPlugin.java b/solr/core/src/test/org/apache/solr/security/TestRuleBasedAuthorizationPlugin.java
index 41f6b99..6a51fb1 100644
--- a/solr/core/src/test/org/apache/solr/security/TestRuleBasedAuthorizationPlugin.java
+++ b/solr/core/src/test/org/apache/solr/security/TestRuleBasedAuthorizationPlugin.java
@@ -30,6 +30,7 @@ import org.apache.solr.common.params.MapSolrParams;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.Utils;
 import org.apache.solr.security.AuthorizationContext.CollectionRequest;
+import org.apache.solr.security.AuthorizationContext.RequestType;
 
 import static java.util.Collections.singletonList;
 import static java.util.Collections.singletonMap;
@@ -54,7 +55,10 @@ public class TestRuleBasedAuthorizationPlugin extends SolrTestCaseJ4 {
       "      collection:mycoll," +
       "      path:'/update/*'," +
       "      role:[dev,admin]" +
-      "    },{name:read , role:dev }]}";
+      "    }," +
+      "{name:read , role:dev }," +
+      "{name:freeforall, path:'/foo', role:'*'}]}";
+
 
 
   public void testBasicPermissions() {
@@ -64,43 +68,49 @@ public class TestRuleBasedAuthorizationPlugin extends SolrTestCaseJ4 {
 
     checkRules(makeMap("resource", "/update/json/docs",
         "httpMethod", "POST",
+        "userPrincipal", "unknownuser",
+        "collectionRequests", "freeforall" )
+        , STATUS_OK);
+
+    checkRules(makeMap("resource", "/update/json/docs",
+        "httpMethod", "POST",
         "userPrincipal", "tim",
-        "collectionRequests", singletonList(new CollectionRequest("mycoll")) )
+        "collectionRequests", "mycoll")
         , STATUS_OK);
 
 
     checkRules(makeMap("resource", "/update/json/docs",
         "httpMethod", "POST",
-        "collectionRequests", singletonList(new CollectionRequest("mycoll")) )
+        "collectionRequests", "mycoll" )
         , PROMPT_FOR_CREDENTIALS);
 
     checkRules(makeMap("resource", "/schema",
         "userPrincipal", "somebody",
-        "collectionRequests", singletonList(new CollectionRequest("mycoll")),
+        "collectionRequests", "mycoll",
         "httpMethod", "POST")
         , FORBIDDEN);
 
     checkRules(makeMap("resource", "/schema",
         "userPrincipal", "somebody",
-        "collectionRequests", singletonList(new CollectionRequest("mycoll")),
+        "collectionRequests", "mycoll",
         "httpMethod", "GET")
         , STATUS_OK);
 
     checkRules(makeMap("resource", "/schema/fields",
         "userPrincipal", "somebody",
-        "collectionRequests", singletonList(new CollectionRequest("mycoll")),
+        "collectionRequests", "mycoll",
         "httpMethod", "GET")
         , STATUS_OK);
 
     checkRules(makeMap("resource", "/schema",
         "userPrincipal", "somebody",
-        "collectionRequests", singletonList(new CollectionRequest("mycoll")),
+        "collectionRequests", "mycoll",
         "httpMethod", "POST" )
         , FORBIDDEN);
 
     checkRules(makeMap("resource", "/admin/collections",
         "userPrincipal", "tim",
-        "requestType", AuthorizationContext.RequestType.ADMIN,
+        "requestType", RequestType.ADMIN,
         "collectionRequests", null,
         "httpMethod", "GET",
         "params", new MapSolrParams(singletonMap("action", "LIST")))
@@ -108,7 +118,7 @@ public class TestRuleBasedAuthorizationPlugin extends SolrTestCaseJ4 {
 
     checkRules(makeMap("resource", "/admin/collections",
         "userPrincipal", null,
-        "requestType", AuthorizationContext.RequestType.ADMIN,
+        "requestType", RequestType.ADMIN,
         "collectionRequests", null,
         "httpMethod", "GET",
         "params", new MapSolrParams(singletonMap("action", "LIST")))
@@ -116,14 +126,14 @@ public class TestRuleBasedAuthorizationPlugin extends SolrTestCaseJ4 {
 
     checkRules(makeMap("resource", "/admin/collections",
         "userPrincipal", null,
-        "requestType", AuthorizationContext.RequestType.ADMIN,
+        "requestType", RequestType.ADMIN,
         "collectionRequests", null,
         "params", new MapSolrParams(singletonMap("action", "CREATE")))
         , PROMPT_FOR_CREDENTIALS);
 
     checkRules(makeMap("resource", "/admin/collections",
         "userPrincipal", null,
-        "requestType", AuthorizationContext.RequestType.ADMIN,
+        "requestType", RequestType.ADMIN,
         "collectionRequests", null,
         "params", new MapSolrParams(singletonMap("action", "RELOAD")))
         , PROMPT_FOR_CREDENTIALS);
@@ -131,14 +141,14 @@ public class TestRuleBasedAuthorizationPlugin extends SolrTestCaseJ4 {
 
     checkRules(makeMap("resource", "/admin/collections",
         "userPrincipal", "somebody",
-        "requestType", AuthorizationContext.RequestType.ADMIN,
+        "requestType", RequestType.ADMIN,
         "collectionRequests", null,
         "params", new MapSolrParams(singletonMap("action", "CREATE")))
         , FORBIDDEN);
 
     checkRules(makeMap("resource", "/admin/collections",
         "userPrincipal", "tim",
-        "requestType", AuthorizationContext.RequestType.ADMIN,
+        "requestType", RequestType.ADMIN,
         "collectionRequests", null,
         "params", new MapSolrParams(singletonMap("action", "CREATE")))
         , STATUS_OK);
@@ -203,7 +213,11 @@ public class TestRuleBasedAuthorizationPlugin extends SolrTestCaseJ4 {
 
     @Override
     public List<CollectionRequest> getCollectionRequests() {
-      return (List<CollectionRequest>) values.get("collectionRequests");
+      Object collectionRequests = values.get("collectionRequests");
+      if (collectionRequests instanceof String) {
+        return singletonList(new CollectionRequest((String)collectionRequests));
+      }
+      return (List<CollectionRequest>) collectionRequests;
     }
 
     @Override

