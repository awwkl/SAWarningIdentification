GitDiffStart: 9a31a8828fb5f5e3f7f2f3e2a678dc411575b648 | Sun Mar 18 06:51:06 2007 +0000
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
index 12e37e0..273d7f9 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
@@ -69,11 +69,11 @@ public class PerfRunData {
         "org.apache.lucene.analysis.standard.StandardAnalyzer")).newInstance();
     // doc maker
     docMaker = (DocMaker) Class.forName(config.get("doc.maker",
-        "org.apache.lucene.benchmark.byTask.utils.SimpleDocMaker")).newInstance();
+        "org.apache.lucene.benchmark.byTask.feeds.SimpleDocMaker")).newInstance();
     docMaker.setConfig(config);
     // query makers
     // we use separate (identical) instances for each "read" task type, so each can iterate the quries separately.
-    Class qmkrClass = Class.forName(config.get("query.maker","org.apache.lucene.benchmark.byTask.utils.SimpleQueryMaker"));
+    Class qmkrClass = Class.forName(config.get("query.maker","org.apache.lucene.benchmark.byTask.feeds.SimpleQueryMaker"));
     searchQueryMaker = (QueryMaker) qmkrClass.newInstance();
     searchQueryMaker.setConfig(config);
     searchTravQueryMaker = (QueryMaker) qmkrClass.newInstance();
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersQueryMaker.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersQueryMaker.java
index eb4527d..a9fdc72 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersQueryMaker.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersQueryMaker.java
@@ -109,7 +109,7 @@ public class ReutersQueryMaker implements QueryMaker {
   private void prepareQueries() throws Exception {
     // analyzer (default is standard analyzer)
     Analyzer anlzr= (Analyzer) Class.forName(config.get("analyzer",
-    "org.apache.lucene.analysis.StandardAnalyzer")).newInstance(); 
+    "org.apache.lucene.analysis.standard.StandardAnalyzer")).newInstance(); 
     
     List queryList = new ArrayList(20);
     queryList.addAll(Arrays.asList(STANDARD_QUERIES));
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/SimpleQueryMaker.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/SimpleQueryMaker.java
index d0cc328..1042806 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/SimpleQueryMaker.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/SimpleQueryMaker.java
@@ -48,7 +48,7 @@ public class SimpleQueryMaker implements QueryMaker {
   protected Query[] prepareQueries() throws Exception {
     // analyzer (default is standard analyzer)
     Analyzer anlzr= (Analyzer) Class.forName(config.get("analyzer",
-        "org.apache.lucene.analysis.StandardAnalyzer")).newInstance(); 
+        "org.apache.lucene.analysis.standard.StandardAnalyzer")).newInstance(); 
     
     QueryParser qp = new QueryParser("body",anlzr);
     ArrayList qq = new ArrayList();

