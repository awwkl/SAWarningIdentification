GitDiffStart: d207e8c39a9025ccbfca68fbaa90525bf8f5c8b4 | Thu Nov 5 18:44:13 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 0167c2e..261ca5b 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -140,12 +140,6 @@ Jetty 9.2.13.v20150730
 Upgrading from Solr 5.3
 -----------------------
 
-* DefaultSimilarityFactory has been renamed to ClassicSimilarityFactory to mach the underlying rename of
-  DefaultSimilarity to ClassicSimilarity and the (eventual) move away from using it as a default.
-  If you currently have DefaultSimilarityFactory explicitly refrenced in your schema.xml, you will now get
-  a warning urging you to edit your config to use the functionally identical ClassicSimilarityFactory.
-  DefaultSimilarityFactory will be removed completely in Solr 6.  See SOLR-8239 for more details.
-
 * SOLR-7859: The following APIs are now deprecated:
   - SolrCore.getStartTime: Use SolrCore.getStartTimeStamp instead.
   - SolrIndexSearcher.getOpenTime: Use SolrIndexSearcher.getOpenTimeStamp instead.
@@ -446,8 +440,6 @@ Other Changes
 * SOLR-8147: contrib/analytics FieldFacetAccumulator now throws IOException instead of SolrException
   (Scott Stults via Christine Poerschke)
 
-* SOLR-8239: Added ClassicSimilarityFactory, marked DefaultSimilarityFactory as deprecated. (hossman)
-
 ==================  5.3.1 ==================
 
 Bug Fixes
diff --git a/solr/contrib/clustering/src/test-files/clustering/solr/collection1/conf/schema.xml b/solr/contrib/clustering/src/test-files/clustering/solr/collection1/conf/schema.xml
index 39b6b16..1fdf3b5 100644
--- a/solr/contrib/clustering/src/test-files/clustering/solr/collection1/conf/schema.xml
+++ b/solr/contrib/clustering/src/test-files/clustering/solr/collection1/conf/schema.xml
@@ -332,4 +332,19 @@
    <copyField source="body" dest="text"/>
   <copyField source="snippet" dest="text"/>
 
+ <!-- Similarity is the scoring routine for each document vs. a query.
+      A custom similarity may be specified here, but the default is fine
+      for most applications.  -->
+ <!-- <similarity class="org.apache.lucene.search.DefaultSimilarity"/> -->
+ <!-- ... OR ...
+      Specify a SimilarityFactory class name implementation
+      allowing parameters to be used.
+ -->
+ <!--
+ <similarity class="com.example.solr.CustomSimilarityFactory">
+   <str name="paramkey">param value</str>
+ </similarity>
+ -->
+
+
 </schema>
diff --git a/solr/contrib/uima/src/test-files/uima/solr/collection1/conf/schema.xml b/solr/contrib/uima/src/test-files/uima/solr/collection1/conf/schema.xml
index 483fa2a..6bf2a54 100644
--- a/solr/contrib/uima/src/test-files/uima/solr/collection1/conf/schema.xml
+++ b/solr/contrib/uima/src/test-files/uima/solr/collection1/conf/schema.xml
@@ -607,4 +607,23 @@
   -->
   <!-- <copyField source="name" dest="alphaNameSort"/> -->
 
+
+  <!--
+    Similarity is the scoring routine for each document vs. a query. A
+    custom similarity may be specified here, but the default is fine for
+    most applications.
+  -->
+  <!--
+    <similarity class="org.apache.lucene.search.DefaultSimilarity"/>
+  -->
+  <!--
+    ... OR ... Specify a SimilarityFactory class name implementation
+    allowing parameters to be used.
+  -->
+  <!--
+    <similarity class="com.example.solr.CustomSimilarityFactory"> <str
+    name="paramkey">param value</str> </similarity>
+  -->
+
+
 </schema>
diff --git a/solr/contrib/uima/src/test-files/uima/uima-tokenizers-schema.xml b/solr/contrib/uima/src/test-files/uima/uima-tokenizers-schema.xml
index 2ab8808..dfba444 100644
--- a/solr/contrib/uima/src/test-files/uima/uima-tokenizers-schema.xml
+++ b/solr/contrib/uima/src/test-files/uima/uima-tokenizers-schema.xml
@@ -611,4 +611,22 @@
   <!-- <copyField source="name" dest="alphaNameSort"/> -->
 
 
+  <!--
+    Similarity is the scoring routine for each document vs. a query. A
+    custom similarity may be specified here, but the default is fine for
+    most applications.
+  -->
+  <!--
+    <similarity class="org.apache.lucene.search.DefaultSimilarity"/>
+  -->
+  <!--
+    ... OR ... Specify a SimilarityFactory class name implementation
+    allowing parameters to be used.
+  -->
+  <!--
+    <similarity class="com.example.solr.CustomSimilarityFactory"> <str
+    name="paramkey">param value</str> </similarity>
+  -->
+
+
 </schema>
diff --git a/solr/core/src/java/org/apache/solr/schema/IndexSchema.java b/solr/core/src/java/org/apache/solr/schema/IndexSchema.java
index 966c295..5fecdbe 100644
--- a/solr/core/src/java/org/apache/solr/schema/IndexSchema.java
+++ b/solr/core/src/java/org/apache/solr/schema/IndexSchema.java
@@ -65,7 +65,7 @@ import org.apache.solr.core.SolrResourceLoader;
 import org.apache.solr.request.LocalSolrQueryRequest;
 import org.apache.solr.response.SchemaXmlWriter;
 import org.apache.solr.response.SolrQueryResponse;
-import org.apache.solr.search.similarities.ClassicSimilarityFactory;
+import org.apache.solr.search.similarities.DefaultSimilarityFactory;
 import org.apache.solr.util.DOMUtil;
 import org.apache.solr.util.plugin.SolrCoreAware;
 import org.slf4j.Logger;
@@ -497,7 +497,7 @@ public class IndexSchema {
       Node node = (Node) xpath.evaluate(expression, document, XPathConstants.NODE);
       similarityFactory = readSimilarity(loader, node);
       if (similarityFactory == null) {
-        similarityFactory = new ClassicSimilarityFactory();
+        similarityFactory = new DefaultSimilarityFactory();
         final NamedList similarityParams = new NamedList();
         Version luceneVersion = getDefaultLuceneMatchVersion();
         similarityFactory.init(SolrParams.toSolrParams(similarityParams));
diff --git a/solr/core/src/java/org/apache/solr/search/similarities/ClassicSimilarityFactory.java b/solr/core/src/java/org/apache/solr/search/similarities/ClassicSimilarityFactory.java
deleted file mode 100644
index a8cf6ab..0000000
--- a/solr/core/src/java/org/apache/solr/search/similarities/ClassicSimilarityFactory.java
+++ /dev/null
@@ -1,65 +0,0 @@
-package org.apache.solr.search.similarities;
-
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import org.apache.lucene.search.similarities.ClassicSimilarity;
-import org.apache.lucene.search.similarities.Similarity;
-import org.apache.lucene.search.similarities.TFIDFSimilarity; // javadoc
-import org.apache.solr.common.params.SolrParams;
-import org.apache.solr.schema.SimilarityFactory;
-
-/**
- * Factory for {@link ClassicSimilarity}
- * <p>
- * ClassicSimilarity is Lucene's original scoring implementation, based
- * upon the Vector Space Model.
- * <p>
- * Optional settings:
- * <ul>
- *   <li>discountOverlaps (bool): Sets
- *       {@link ClassicSimilarity#setDiscountOverlaps(boolean)}</li>
- * </ul>
- * @see TFIDFSimilarity
- * @lucene.experimental
- */
-public class ClassicSimilarityFactory extends SimilarityFactory {
-
-  /** Init param name for specifying the value to use in 
-   * {@link ClassicSimilarity#setDiscountOverlaps(boolean)} 
-   */
-  public static final String DISCOUNT_OVERLAPS = "discountOverlaps";
-
-  /** 
-   * Controls the value of {@link ClassicSimilarity#setDiscountOverlaps(boolean)} 
-   * on newly constructed instances of {@link ClassicSimilarity}
-   */
-  protected boolean discountOverlaps = true;
-
-  @Override
-  public void init(SolrParams params) {
-    super.init(params);
-    discountOverlaps = params.getBool(DISCOUNT_OVERLAPS, true);
-  }
-
-  @Override
-  public Similarity getSimilarity() {
-    ClassicSimilarity sim = new ClassicSimilarity();
-    sim.setDiscountOverlaps(discountOverlaps);
-    return sim;
-  }
-}
diff --git a/solr/core/src/java/org/apache/solr/search/similarities/DefaultSimilarityFactory.java b/solr/core/src/java/org/apache/solr/search/similarities/DefaultSimilarityFactory.java
index e3b18f5..4b3cc38 100644
--- a/solr/core/src/java/org/apache/solr/search/similarities/DefaultSimilarityFactory.java
+++ b/solr/core/src/java/org/apache/solr/search/similarities/DefaultSimilarityFactory.java
@@ -16,29 +16,50 @@ package org.apache.solr.search.similarities;
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-import org.apache.lucene.search.similarities.Similarity;
 
+import org.apache.lucene.search.similarities.ClassicSimilarity;
+import org.apache.lucene.search.similarities.Similarity;
+import org.apache.lucene.search.similarities.TFIDFSimilarity; // javadoc
 import org.apache.solr.common.params.SolrParams;
-
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
+import org.apache.solr.schema.SimilarityFactory;
 
 /**
- * @deprecated This class has been renamed to <code>ClassicSimilarityFactory</code> to reflect the renaming of the underlying Similarity returned.
- *
- * @see ClassicSimilarityFactory
+ * Factory for {@link ClassicSimilarity}
+ * <p>
+ * ClassicSimilarity is Lucene's original scoring implementation, based
+ * upon the Vector Space Model.
+ * <p>
+ * Optional settings:
+ * <ul>
+ *   <li>discountOverlaps (bool): Sets
+ *       {@link ClassicSimilarity#setDiscountOverlaps(boolean)}</li>
+ * </ul>
+ * @see TFIDFSimilarity
+ * @lucene.experimental
  */
-@Deprecated
-public class DefaultSimilarityFactory extends ClassicSimilarityFactory {
-  
-  public static final Logger log = LoggerFactory.getLogger(DefaultSimilarityFactory.class);
+public class DefaultSimilarityFactory extends SimilarityFactory {
+
+  /** Init param name for specifying the value to use in 
+   * {@link ClassicSimilarity#setDiscountOverlaps(boolean)} 
+   */
+  public static final String DISCOUNT_OVERLAPS = "discountOverlaps";
+
+  /** 
+   * Controls the value of {@link ClassicSimilarity#setDiscountOverlaps(boolean)} 
+   * on newly constructed instances of {@link ClassicSimilarity}
+   */
+  protected boolean discountOverlaps = true;
 
   @Override
   public void init(SolrParams params) {
     super.init(params);
-    log.warn("DefaultSimilarityFactory has been renamed and deprecated.  " +
-             "Please update your configuration file to refer to ClassicSimilarityFactory instead");
+    discountOverlaps = params.getBool(DISCOUNT_OVERLAPS, true);
+  }
+
+  @Override
+  public Similarity getSimilarity() {
+    ClassicSimilarity sim = new ClassicSimilarity();
+    sim.setDiscountOverlaps(discountOverlaps);
+    return sim;
   }
-  
 }
diff --git a/solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.java b/solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.java
index 390a964..2e377a1 100644
--- a/solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.java
+++ b/solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.java
@@ -35,9 +35,9 @@ import org.apache.solr.util.plugin.SolrCoreAware;
  * <b>NOTE:</b> Users should be aware that in addition to supporting 
  * <code>Similarity</code> configurations specified on individual 
  * field types, this factory also differs in behavior from 
- * {@link ClassicSimilarityFactory} because of other differences in the 
+ * {@link DefaultSimilarityFactory} because of other differences in the 
  * implementations of <code>PerFieldSimilarityWrapper</code> and 
- * {@link ClassicSimilarity} - notably in methods such as 
+ * <code>DefaultSimilarity</code> - notably in methods such as 
  * {@link Similarity#coord} and {@link Similarity#queryNorm}.  
  * </p>
  *
diff --git a/solr/core/src/java/org/apache/solr/search/similarities/SweetSpotSimilarityFactory.java b/solr/core/src/java/org/apache/solr/search/similarities/SweetSpotSimilarityFactory.java
index ac4976d..42ac4e9 100644
--- a/solr/core/src/java/org/apache/solr/search/similarities/SweetSpotSimilarityFactory.java
+++ b/solr/core/src/java/org/apache/solr/search/similarities/SweetSpotSimilarityFactory.java
@@ -34,7 +34,7 @@ import static org.apache.solr.common.SolrException.ErrorCode.*;
  * </p>
  * <p>
  * In addition to the <code>discountOverlaps</code> init param supported by 
- * {@link ClassicSimilarityFactory} The following sets of init params are 
+ * {@link DefaultSimilarityFactory} The following sets of init params are 
  * supported by this factory:
  * </p>
  * <ul>
@@ -106,7 +106,7 @@ import static org.apache.solr.common.SolrException.ErrorCode.*;
  *      <code>SweetSpotSimilarity</code> for SVG diagrams showing how the 
  *      each function behaves with various settings/inputs.
  */
-public class SweetSpotSimilarityFactory extends ClassicSimilarityFactory {
+public class SweetSpotSimilarityFactory extends DefaultSimilarityFactory {
   private SweetSpotSimilarity sim = null;
 
   @Override
diff --git a/solr/core/src/test-files/solr/collection1/conf/schema-copyfield-test.xml b/solr/core/src/test-files/solr/collection1/conf/schema-copyfield-test.xml
index d759dca..c8af043 100644
--- a/solr/core/src/test-files/solr/collection1/conf/schema-copyfield-test.xml
+++ b/solr/core/src/test-files/solr/collection1/conf/schema-copyfield-test.xml
@@ -459,4 +459,10 @@
   
    <copyField source="*" dest="catchall_t"/>
 
+ <!-- Similarity is the scoring routine for each document vs a query.
+      A custom similarity may be specified here, but the default is fine
+      for most applications.
+ -->
+ <!-- <similarity class="org.apache.lucene.search.similarities.DefaultSimilarity"/> -->
+
 </schema>
diff --git a/solr/core/src/test-files/solr/collection1/conf/schema-required-fields.xml b/solr/core/src/test-files/solr/collection1/conf/schema-required-fields.xml
index c34f34f..f048e40 100644
--- a/solr/core/src/test-files/solr/collection1/conf/schema-required-fields.xml
+++ b/solr/core/src/test-files/solr/collection1/conf/schema-required-fields.xml
@@ -413,4 +413,10 @@
  
    <copyField source="*_t" dest="text"/>
    
+ <!-- Similarity is the scoring routine for each document vs a query.
+      A custom similarity may be specified here, but the default is fine
+      for most applications.
+ -->
+ <!-- <similarity class="org.apache.lucene.search.similarities.DefaultSimilarity"/> -->
+
 </schema>
diff --git a/solr/core/src/test-files/solr/collection1/conf/schema-tfidf.xml b/solr/core/src/test-files/solr/collection1/conf/schema-tfidf.xml
index f9bbde9..eacea90 100644
--- a/solr/core/src/test-files/solr/collection1/conf/schema-tfidf.xml
+++ b/solr/core/src/test-files/solr/collection1/conf/schema-tfidf.xml
@@ -16,46 +16,34 @@
  limitations under the License.
 -->
 
-<!-- Test schema file for ClassicSimilarityFactory specified on a per-fieldtype basis
-     See TestClassicSimilarityFactory
--->
+<!-- Test schema file for DefaultSimilarityFactory -->
 
 <schema name="test" version="1.0">
+  <types>
+    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
+
+    <!-- TF/IDF -->
+    <fieldType name="text" class="solr.TextField">
+      <analyzer class="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
+      <similarity class="solr.DefaultSimilarityFactory"/>
+    </fieldType>
+
+    <!-- TF/IDF -->
+    <fieldType name="text_overlap" class="solr.TextField">
+      <analyzer class="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
+      <similarity class="solr.DefaultSimilarityFactory">
+        <bool name="discountOverlaps">false</bool>
+      </similarity>
+    </fieldType>
+   
+  </types>
+
+  <fields>
+    <field name="id" type="int" indexed="true" stored="true" multiValued="false" required="false"/>
+    <field name="text" type="text" indexed="true" stored="false"/>
+    <field name="text_overlap" type="text_overlap" indexed="true" stored="false"/>
+  </fields>
 
-  <!-- testDefaults -->
-  <field name="text" type="text" indexed="true" stored="false"/>
-  <fieldType name="text" class="solr.TextField">
-    <analyzer class="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
-    <similarity class="solr.ClassicSimilarityFactory"/>
-  </fieldType>
-  
-  <!-- testParams -->
-  <field name="text_overlap" type="text_overlap" indexed="true" stored="false"/>
-  <fieldType name="text_overlap" class="solr.TextField">
-    <analyzer class="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
-    <similarity class="solr.ClassicSimilarityFactory">
-      <bool name="discountOverlaps">false</bool>
-    </similarity>
-  </fieldType>
-
-  <!-- testDefaultWithDefaults -->
-  <field name="text__default" type="text__default" indexed="true" stored="false"/>
-  <fieldType name="text__default" class="solr.TextField">
-    <analyzer class="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
-    <similarity class="solr.DefaultSimilarityFactory"/>
-  </fieldType>
-  
-  <!-- testDefaultWithParams -->
-  <field name="text_overlap__default" type="text_overlap__default" indexed="true" stored="false"/>
-  <fieldType name="text_overlap__default" class="solr.TextField">
-    <analyzer class="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
-    <similarity class="solr.DefaultSimilarityFactory">
-      <bool name="discountOverlaps">false</bool>
-    </similarity>
-  </fieldType>
-
-  <field name="id" type="int" indexed="true" stored="true" multiValued="false" required="false"/>
-  <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
   <defaultSearchField>text</defaultSearchField>
   <uniqueKey>id</uniqueKey>
   <similarity class="solr.SchemaSimilarityFactory"/>
diff --git a/solr/core/src/test/org/apache/solr/rest/schema/TestSchemaSimilarityResource.java b/solr/core/src/test/org/apache/solr/rest/schema/TestSchemaSimilarityResource.java
index 64aac1a..b649e81 100644
--- a/solr/core/src/test/org/apache/solr/rest/schema/TestSchemaSimilarityResource.java
+++ b/solr/core/src/test/org/apache/solr/rest/schema/TestSchemaSimilarityResource.java
@@ -24,7 +24,7 @@ public class TestSchemaSimilarityResource extends SolrRestletTestBase {
   public void testGetSchemaSimilarity() throws Exception {
     assertQ("/schema/similarity?indent=on&wt=xml",
             "count(/response/lst[@name='similarity']) = 1",
-            "/response/lst[@name='similarity']/str[@name='class'][.='org.apache.solr.search.similarities.ClassicSimilarityFactory']");
+            "/response/lst[@name='similarity']/str[@name='class'][.='org.apache.solr.search.similarities.DefaultSimilarityFactory']");
   }
 }
 
diff --git a/solr/core/src/test/org/apache/solr/search/similarities/TestClassicSimilarityFactory.java b/solr/core/src/test/org/apache/solr/search/similarities/TestClassicSimilarityFactory.java
deleted file mode 100644
index 6b9ca9c..0000000
--- a/solr/core/src/test/org/apache/solr/search/similarities/TestClassicSimilarityFactory.java
+++ /dev/null
@@ -1,56 +0,0 @@
-package org.apache.solr.search.similarities;
-
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import org.apache.lucene.search.similarities.ClassicSimilarity;
-import org.apache.lucene.search.similarities.Similarity;
-import org.junit.BeforeClass;
-
-/**
- * Tests {@link DefaultSimilarityFactory} when specified on a per-fieldtype basis with various init options.
- * @see SchemaSimilarityFactory
- */
-public class TestClassicSimilarityFactory extends BaseSimilarityTestCase {
-  @BeforeClass
-  public static void beforeClass() throws Exception {
-    initCore("solrconfig-basic.xml","schema-tfidf.xml");
-  }
-  
-  /** Classic w/ default parameters */
-  public void testDefaults() throws Exception {
-    ClassicSimilarity sim = getSimilarity("text", ClassicSimilarity.class);
-    assertEquals(true, sim.getDiscountOverlaps());
-  }
-  /** Classic w/ explicit params */
-  public void testParams() throws Exception {
-    ClassicSimilarity sim = getSimilarity("text_overlap", ClassicSimilarity.class);
-    assertEquals(false, sim.getDiscountOverlaps());
-  }
-  
-  /** Default w/ default parameters */
-  public void testDefaultWithDefaults() throws Exception {
-    ClassicSimilarity sim = getSimilarity("text__default", ClassicSimilarity.class);
-    assertEquals(true, sim.getDiscountOverlaps());
-  }
-  /** Default w/ explicit params */
-  public void testDefaultWithParams() throws Exception {
-    ClassicSimilarity sim = getSimilarity("text_overlap__default", ClassicSimilarity.class);
-    assertEquals(false, sim.getDiscountOverlaps());
-  }
-
-}
diff --git a/solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory.java b/solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory.java
new file mode 100644
index 0000000..254cb3b
--- /dev/null
+++ b/solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory.java
@@ -0,0 +1,46 @@
+package org.apache.solr.search.similarities;
+
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.lucene.search.similarities.ClassicSimilarity;
+import org.apache.lucene.search.similarities.Similarity;
+import org.junit.BeforeClass;
+
+/**
+ * Tests {@link DefaultSimilarityFactory}
+ */
+public class TestDefaultSimilarityFactory extends BaseSimilarityTestCase {
+  @BeforeClass
+  public static void beforeClass() throws Exception {
+    initCore("solrconfig-basic.xml","schema-tfidf.xml");
+  }
+  
+  /** default parameters */
+  public void testDefaults() throws Exception {
+    Similarity sim = getSimilarity("text");
+    assertEquals(ClassicSimilarity.class, sim.getClass());
+    assertEquals(true, ((ClassicSimilarity)sim).getDiscountOverlaps());
+  }
+  /** explicit params */
+  public void testParams() throws Exception {
+    Similarity sim = getSimilarity("text_overlap");
+    assertEquals(ClassicSimilarity.class, sim.getClass());
+    assertEquals(false, ((ClassicSimilarity)sim).getDiscountOverlaps());
+  }
+
+}
diff --git a/solr/core/src/test/org/apache/solr/search/similarities/TestNonDefinedSimilarityFactory.java b/solr/core/src/test/org/apache/solr/search/similarities/TestNonDefinedSimilarityFactory.java
index 8c2b9e8..6e46fa7 100644
--- a/solr/core/src/test/org/apache/solr/search/similarities/TestNonDefinedSimilarityFactory.java
+++ b/solr/core/src/test/org/apache/solr/search/similarities/TestNonDefinedSimilarityFactory.java
@@ -22,7 +22,7 @@ import org.apache.lucene.util.Version;
 import org.junit.After;
 
 /**
- * Verifies that the default behavior of the implicit {@link ClassicSimilarityFactory} 
+ * Verifies that the default behavior of the implicit {@link DefaultSimilarityFactory} 
  * (ie: no similarity configured in schema.xml at all) is consistnent with 
  * expectations based on the luceneMatchVersion
  * @see <a href="https://issues.apache.org/jira/browse/SOLR-5561">SOLR-5561</a>
diff --git a/solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java b/solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java
index 9038604..2ea0611 100644
--- a/solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java
+++ b/solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java
@@ -240,7 +240,7 @@ public class SchemaTest extends RestTestBase {
         new SchemaRequest.GlobalSimilarity();
     SchemaResponse.GlobalSimilarityResponse globalSimilarityResponse = globalSimilarityRequest.process(getSolrClient());
     assertValidSchemaResponse(globalSimilarityResponse);
-    assertEquals("org.apache.solr.search.similarities.ClassicSimilarityFactory",
+    assertEquals("org.apache.solr.search.similarities.DefaultSimilarityFactory",
         globalSimilarityResponse.getSimilarity().get("class"));
   }
 

