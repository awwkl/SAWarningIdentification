GitDiffStart: 5a0c012250bb68cb0977fdd7fa016fbcb62721c2 | Wed Jun 17 00:05:29 2015 +0000
diff --git a/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettyConfig.java b/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettyConfig.java
index 93788c6..59ff331 100644
--- a/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettyConfig.java
+++ b/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettyConfig.java
@@ -20,6 +20,7 @@ package org.apache.solr.client.solrj.embedded;
 import org.eclipse.jetty.servlet.ServletHolder;
 
 import javax.servlet.Filter;
+import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.TreeMap;
 
@@ -72,7 +73,7 @@ public class JettyConfig {
     boolean stopAtShutdown = true;
     Long waitForLoadingCoresToFinishMs = 300000L;
     Map<ServletHolder, String> extraServlets = new TreeMap<>();
-    Map<Class<? extends Filter>, String> extraFilters = new TreeMap<>();
+    Map<Class<? extends Filter>, String> extraFilters = new LinkedHashMap<>();
     SSLConfig sslConfig = null;
 
     public Builder setPort(int port) {
@@ -95,8 +96,8 @@ public class JettyConfig {
       return this;
     }
 
-    public Builder withServlet(ServletHolder servlet, String servletName) {
-      extraServlets.put(servlet, servletName);
+    public Builder withServlet(ServletHolder servlet, String pathSpec) {
+      extraServlets.put(servlet, pathSpec);
       return this;
     }
 
@@ -106,8 +107,8 @@ public class JettyConfig {
       return this;
     }
 
-    public Builder withFilter(Class<? extends Filter> filterClass, String filterName) {
-      extraFilters.put(filterClass, filterName);
+    public Builder withFilter(Class<? extends Filter> filterClass, String pathSpec) {
+      extraFilters.put(filterClass, pathSpec);
       return this;
     }
 
diff --git a/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java b/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java
index 51e55fc..b13cd40 100644
--- a/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java
+++ b/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster.java
@@ -109,7 +109,7 @@ public class TestMiniSolrCloudCluster extends LuceneTestCase {
       assertEquals(NUM_SERVERS - 1, miniCluster.getJettySolrRunners().size());
 
       // create a server
-      JettySolrRunner startedServer = miniCluster.startJettySolrRunner(null, null, null);
+      JettySolrRunner startedServer = miniCluster.startJettySolrRunner();
       assertTrue(startedServer.isRunning());
       assertEquals(NUM_SERVERS, miniCluster.getJettySolrRunners().size());
 
@@ -176,7 +176,7 @@ public class TestMiniSolrCloudCluster extends LuceneTestCase {
         // now restore the original state so that this function could be called multiple times
         
         // re-create a server (to restore original NUM_SERVERS count)
-        startedServer = miniCluster.startJettySolrRunner(null, null, null);
+        startedServer = miniCluster.startJettySolrRunner();
         assertTrue(startedServer.isRunning());
         assertEquals(NUM_SERVERS, miniCluster.getJettySolrRunners().size());
         Thread.sleep(15000);
@@ -257,4 +257,14 @@ public class TestMiniSolrCloudCluster extends LuceneTestCase {
 
   }
 
+  @Test
+  public void testExraFilters() throws Exception {
+    File solrXml = new File(SolrTestCaseJ4.TEST_HOME(), "solr-no-core.xml");
+    Builder jettyConfig = JettyConfig.builder();
+    jettyConfig.waitForLoadingCoresToFinish(null);
+    jettyConfig.withFilter(JettySolrRunner.DebugFilter.class, "*");
+    MiniSolrCloudCluster cluster = new MiniSolrCloudCluster(NUM_SERVERS, createTempDir().toFile(), solrXml, jettyConfig.build());
+    cluster.shutdown();
+  }
+
 }

