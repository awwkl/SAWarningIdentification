GitDiffStart: b2f3f2edff51f70254093497b2c9cc3ce4ce7021 | Sun Jun 27 00:45:12 2010 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 5398f22..cab778e 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -185,6 +185,7 @@ New Features
              Example search UI now available at http://localhost:8983/solr/browse
              (ehatcher)
 
+* SOLR-1974: Add LimitTokenCountFilterFactory. (koji)
    
 Optimizations
 ----------------------
diff --git a/solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java b/solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java
new file mode 100644
index 0000000..5a08142
--- /dev/null
+++ b/solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java
@@ -0,0 +1,40 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.solr.analysis;
+
+import java.util.Map;
+
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilter;
+
+public class LimitTokenCountFilterFactory extends BaseTokenFilterFactory {
+
+  int maxTokenCount;
+
+  @Override
+  public void init(Map<String, String> args) {
+    super.init( args );
+    maxTokenCount = Integer.parseInt( args.get( "maxTokenCount" ) );
+  }
+
+  @Override
+  public TokenStream create(TokenStream input) {
+    return new LimitTokenCountFilter( input, maxTokenCount );
+  }
+
+}

