GitDiffStart: e7f5029e004646cbb97ee5a4a9bed8fd15316430 | Sun Jan 29 20:00:00 2012 +0000
diff --git a/lucene/src/java/org/apache/lucene/index/SlowCompositeReaderWrapper.java b/lucene/src/java/org/apache/lucene/index/SlowCompositeReaderWrapper.java
index 44e0283..5353bcb 100644
--- a/lucene/src/java/org/apache/lucene/index/SlowCompositeReaderWrapper.java
+++ b/lucene/src/java/org/apache/lucene/index/SlowCompositeReaderWrapper.java
@@ -149,6 +149,16 @@ public final class SlowCompositeReaderWrapper extends AtomicIndexReader {
   }
 
   @Override
+  public Object getCoreCacheKey() {
+    return in.getCoreCacheKey();
+  }
+
+  @Override
+  public Object getCombinedCoreAndDeletesKey() {
+    return in.getCombinedCoreAndDeletesKey();
+  }
+
+  @Override
   protected void doClose() throws IOException {
     // nocommit: as this is a wrapper, should we really close the delegate?
     in.close();
diff --git a/lucene/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker.java b/lucene/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker.java
index 2134a47..3c26503 100644
--- a/lucene/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker.java
+++ b/lucene/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker.java
@@ -36,6 +36,7 @@ public class TestFieldCacheSanityChecker extends LuceneTestCase {
   protected AtomicIndexReader readerA;
   protected AtomicIndexReader readerB;
   protected AtomicIndexReader readerX;
+  protected AtomicIndexReader readerAclone;
   protected Directory dirA, dirB;
   private static final int NUM_DOCS = 1000;
 
@@ -70,6 +71,9 @@ public class TestFieldCacheSanityChecker extends LuceneTestCase {
     }
     wA.close();
     wB.close();
+    DirectoryReader rA = DirectoryReader.open(dirA);
+    readerA = SlowCompositeReaderWrapper.wrap(rA);
+    readerAclone = SlowCompositeReaderWrapper.wrap(rA);
     readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));
     readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));
     readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));
@@ -78,6 +82,7 @@ public class TestFieldCacheSanityChecker extends LuceneTestCase {
   @Override
   public void tearDown() throws Exception {
     readerA.close();
+    readerAclone.close();
     readerB.close();
     readerX.close();
     dirA.close();
@@ -91,6 +96,7 @@ public class TestFieldCacheSanityChecker extends LuceneTestCase {
 
     cache.getDoubles(readerA, "theDouble", false);
     cache.getDoubles(readerA, "theDouble", FieldCache.DEFAULT_DOUBLE_PARSER, false);
+    cache.getDoubles(readerAclone, "theDouble", FieldCache.DEFAULT_DOUBLE_PARSER, false);
     cache.getDoubles(readerB, "theDouble", FieldCache.DEFAULT_DOUBLE_PARSER, false);
 
     cache.getInts(readerX, "theInt", false);

