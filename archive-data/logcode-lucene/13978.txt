GitDiffStart: 2da5fdc636a5b8e14c5fd6c6642eab2b87d7f4f9 | Thu Jan 26 16:17:23 2012 +0000
diff --git a/solr/core/src/java/org/apache/solr/cloud/AssignShard.java b/solr/core/src/java/org/apache/solr/cloud/AssignShard.java
index 2343673..53337db 100644
--- a/solr/core/src/java/org/apache/solr/cloud/AssignShard.java
+++ b/solr/core/src/java/org/apache/solr/cloud/AssignShard.java
@@ -35,11 +35,8 @@ public class AssignShard {
    * Assign a new unique id up to slices count - then add replicas evenly.
    * 
    * @param collection
-   * 
-   * @param slices
+   * @param state
    * @return
-   * @throws InterruptedException
-   * @throws KeeperException
    */
   public static String assignShard(String collection, CloudState state) {
 
diff --git a/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java b/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
index 48229dd..05becb2 100644
--- a/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
+++ b/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
@@ -199,7 +199,6 @@ public  class LeaderElector {
    * watch the next lowest numbered node.
    * 
    * @param context
-   * @param SolrCore - optional - sometimes null
    * @return sequential node number
    * @throws KeeperException
    * @throws InterruptedException
@@ -256,8 +255,7 @@ public  class LeaderElector {
   /**
    * Set up any ZooKeeper nodes needed for leader election.
    * 
-   * @param shardId
-   * @param collection
+   * @param context
    * @throws InterruptedException
    * @throws KeeperException
    */
diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/solr/core/src/java/org/apache/solr/cloud/ZkController.java
index 5467b7d..3c46de0 100644
--- a/solr/core/src/java/org/apache/solr/cloud/ZkController.java
+++ b/solr/core/src/java/org/apache/solr/cloud/ZkController.java
@@ -130,16 +130,15 @@ public final class ZkController {
     zkServer.stop();
   }
 
-
   /**
-   * @param coreContainer if null, recovery will not be enabled
+   * @param cc if null, recovery will not be enabled
    * @param zkServerAddress
    * @param zkClientTimeout
    * @param zkClientConnectTimeout
    * @param localHost
    * @param locaHostPort
    * @param localHostContext
-   * @param numShards 
+   * @param registerOnReconnect
    * @throws InterruptedException
    * @throws TimeoutException
    * @throws IOException
@@ -437,13 +436,14 @@ public final class ZkController {
   }
 
 
+
   /**
    * Register shard with ZooKeeper.
    * 
    * @param coreName
-   * @param cloudDesc
-   * @return
-   * @throws Exception 
+   * @param desc
+   * @return the shardId for the SolrCore
+   * @throws Exception
    */
   public String register(String coreName, final CoreDescriptor desc) throws Exception {  
     return register(coreName, desc, false);
@@ -456,7 +456,7 @@ public final class ZkController {
    * @param coreName
    * @param desc
    * @param recoverReloadedCores
-   * @return
+   * @return the shardId for the SolrCore
    * @throws Exception
    */
   public String register(String coreName, final CoreDescriptor desc, boolean recoverReloadedCores) throws Exception {  

