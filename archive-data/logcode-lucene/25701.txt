GitDiffStart: 2a96b329a81f24bfd213e63bbcc41ed4957af478 | Mon May 6 21:59:44 2002 +0000
diff --git a/build.xml b/build.xml
index 323cede..aba6b10 100644
--- a/build.xml
+++ b/build.xml
@@ -198,6 +198,7 @@
   <!-- ================================================================== -->
   <target name="demo" depends="compile" if="javacc.present">
     <mkdir dir="${build.demo}"/>
+    <mkdir dir="${build.demo.src}" />
 
     <copy todir="${build.demo.src}">
       <fileset dir="${demo.src}">
@@ -211,7 +212,6 @@
       javacchome="${javacc.zip.dir}"
       outputdirectory="${build.demo.src}/org/apache/lucene/demo/html"
     />
-
     <mkdir dir="${build.demo.classes}"/>
 
     <javac
diff --git a/src/java/org/apache/lucene/queryParser/QueryParser.jj b/src/java/org/apache/lucene/queryParser/QueryParser.jj
index 491879c..a38fbc5 100644
--- a/src/java/org/apache/lucene/queryParser/QueryParser.jj
+++ b/src/java/org/apache/lucene/queryParser/QueryParser.jj
@@ -111,12 +111,16 @@ public class QueryParser {
    *  @param field	the default field for query terms.
    *  @param analyzer   used to find terms in the query text.
    *  @throws ParseException if the parsing fails
-   *  @throws TokenMgrError if the parsing fails
    */
   static public Query parse(String query, String field, Analyzer analyzer)
-       throws ParseException, TokenMgrError {
-    QueryParser parser = new QueryParser(field, analyzer);
-    return parser.parse(query);
+       throws ParseException {
+    try {
+      QueryParser parser = new QueryParser(field, analyzer);
+      return parser.parse(query);
+    }
+    catch (TokenMgrError tme) { 
+      throw new ParseException(tme.getMessage());
+    }
   }
        
   Analyzer analyzer;
@@ -269,9 +273,12 @@ PARSER_END(QueryParser)
 
 <*> TOKEN : {
   <#_NUM_CHAR:   ["0"-"9"] >
-| <#_TERM_START_CHAR: ~[ " ", "\t", "+", "-", "!", "(", ")", ":", "^", 
-                         "[", "]", "\"", "{", "}", "~", "*" ] >
-| <#_TERM_CHAR: <_TERM_START_CHAR> >
+| <#_ESCAPED_CHAR: "\\" [ "\\", "+", "-", "!", "(", ")", ":", "^", 
+                          "[", "]", "\"", "{", "}", "~", "*" ] >
+| <#_TERM_START_CHAR: ( ~[ " ", "\t", "+", "-", "!", "(", ")", ":", "^", 
+                           "[", "]", "\"", "{", "}", "~", "*" ] 
+                       | <_ESCAPED_CHAR> ) >
+| <#_TERM_CHAR: ( <_TERM_START_CHAR> | <_ESCAPED_CHAR> ) >
 | <#_WHITESPACE: ( " " | "\t" ) >
 }
 
diff --git a/src/test/org/apache/lucene/queryParser/TestQueryParser.java b/src/test/org/apache/lucene/queryParser/TestQueryParser.java
index ffc3949..f2df2ac 100644
--- a/src/test/org/apache/lucene/queryParser/TestQueryParser.java
+++ b/src/test/org/apache/lucene/queryParser/TestQueryParser.java
@@ -246,4 +246,13 @@ public class TestQueryParser extends TestCase {
     assertQueryEquals("( bar blar { a z}) ", null, "bar blar {a-z}");
     assertQueryEquals("gack ( bar blar { a z}) ", null, "gack (bar blar {a-z})");
   }
+
+  public void testEscaped() throws Exception {
+    Analyzer a = new WhitespaceAnalyzer();
+    assertQueryEquals("\\[brackets", a, "\\[brackets");
+    assertQueryEquals("\\[brackets", null, "brackets");
+    assertQueryEquals("\\\\", a, "\\\\");
+    assertQueryEquals("\\+blah", a, "\\+blah");
+    assertQueryEquals("\\(blah", a, "\\(blah");
+  }
 }

