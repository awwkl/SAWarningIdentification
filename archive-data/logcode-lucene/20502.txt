GitDiffStart: 2d4d167cedc5f9cebdc8a1f6655ac8d316495cfc | Tue Mar 17 06:42:33 2009 +0000
diff --git a/contrib/dataimporthandler/CHANGES.txt b/contrib/dataimporthandler/CHANGES.txt
index 60cf125..d433b82 100644
--- a/contrib/dataimporthandler/CHANGES.txt
+++ b/contrib/dataimporthandler/CHANGES.txt
@@ -90,6 +90,9 @@ New Features
               through the new API methods.
               (Noble Paul via shalin)
 
+21.SOLR-1062: A LogTransformer which can log data in a given template format.
+              (Jon Baer, Noble Paul via shalin)
+
 Optimizations
 ----------------------
 1. SOLR-846:  Reduce memory consumption during delta import by removing keys when used
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LogTransformer.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LogTransformer.java
new file mode 100644
index 0000000..6ce2d54
--- /dev/null
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LogTransformer.java
@@ -0,0 +1,67 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.solr.handler.dataimport;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import java.util.Map;
+
+/**
+ * A Transformer implementation which logs messages in a given template format.
+ * <p/>
+ * Refer to <a href="http://wiki.apache.org/solr/DataImportHandler">http://wiki.apache.org/solr/DataImportHandler</a>
+ * for more details.
+ * <p/>
+ * <b>This API is experimental and may change in the future.</b>
+ *
+ * @version $Id$
+ * @since solr 1.4
+ */
+public class LogTransformer extends Transformer {
+  Logger LOG = LoggerFactory.getLogger(LogTransformer.class);
+
+  public Object transformRow(Map<String, Object> row, Context context) {
+    VariableResolver vr = context.getVariableResolver();
+    String expr = context.getEntityAttribute(LOG_TEMPLATE);
+    String level = vr.replaceTokens(context.getEntityAttribute(LOG_LEVEL));
+
+    if (expr == null || level == null) return row;
+
+    if ("info".equals(level)) {
+      if (LOG.isInfoEnabled())
+        LOG.info(vr.replaceTokens(expr));
+    } else if ("trace".equals(level)) {
+      if (LOG.isTraceEnabled())
+        LOG.trace(vr.replaceTokens(expr));
+    } else if ("warn".equals(level)) {
+      if (LOG.isWarnEnabled())
+        LOG.warn(vr.replaceTokens(expr));
+    } else if ("error".equals(level)) {
+      if (LOG.isErrorEnabled())
+        LOG.error(vr.replaceTokens(expr));
+    } else if ("debug".equals(level)) {
+      if (LOG.isDebugEnabled())
+        LOG.debug(vr.replaceTokens(expr));
+    }
+
+    return row;
+  }
+
+  public static final String LOG_TEMPLATE = "logTemplate";
+  public static final String LOG_LEVEL = "logLevel";
+}

