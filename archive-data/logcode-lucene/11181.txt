GitDiffStart: c3e0ecf4359e833afd1f1bf8aa631c140a6741a5 | Sun Sep 9 16:12:03 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
index 8139c86..20dbaf0 100644
--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
@@ -2212,7 +2212,7 @@ public class IndexWriter implements Closeable, TwoPhaseCommit {
    * {@link #prepareFlushedSegment(FlushedSegment)} to obtain the
    * {@link SegmentInfo} for the flushed segment.
    * 
-   * @see #prepareFlushedSegment(FlushedSegment)
+   * @see #prepareFlushedSegment(DocumentsWriterPerThread.FlushedSegment)
    */
   synchronized void publishFlushedSegment(SegmentInfoPerCommit newSegment,
       FrozenBufferedDeletes packet, FrozenBufferedDeletes globalPacket) throws IOException {
diff --git a/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/NameIntCacheLRU.java b/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/NameIntCacheLRU.java
index 24d010a..90712f9 100644
--- a/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/NameIntCacheLRU.java
+++ b/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/NameIntCacheLRU.java
@@ -70,8 +70,6 @@ class NameIntCacheLRU {
 
   /**
    * Subclasses can override this to provide caching by e.g. hash of the string.
-   * @param name
-   * @return
    */
   Object key(CategoryPath name) {
     // Note that a copy constructor (cloning) here is necessary, because a
diff --git a/lucene/spatial/src/java/overview.html b/lucene/spatial/src/java/overview.html
index 51fe003..58b9738 100644
--- a/lucene/spatial/src/java/overview.html
+++ b/lucene/spatial/src/java/overview.html
@@ -23,16 +23,18 @@
   <h1>The Spatial Module for Apache Lucene</h1>
 
   <p>
-    The spatial module is new is Lucene 4, replacing the old contrib module
+    The spatial module is new to Lucene 4, replacing the old "contrib" module
     that came before it. The principle interface to the module is
     a {@link org.apache.lucene.spatial.SpatialStrategy}
     which encapsulates an approach to indexing and searching
     based on shapes.  Different Strategies have different features and
-    performance profiles, which are documented at each Strategy class level.
+    performance profiles, which are documented at each Strategy implementation
+    class level.
   </p>
   <p>
-    For some sample code showing how to use the API, see SpatialExample.java in
-    the tests.
+    For some sample code showing how to use the API, see
+    <a href="https://svn.apache.org/repos/asf/lucene/dev/trunk/lucene/spatial/src/test/org/apache/lucene/spatial/SpatialExample.java">
+      SpatialExample.java</a> in the tests.
   </p>
   <p>
     The spatial module uses
@@ -57,7 +59,9 @@
     Lucene Spatial Playground (LSP) as an external project.  In ~March 2012, LSP
     split into this new module as part of Lucene and Spatial4j externally. A
     large chunk of the LSP implementation originated as SOLR-2155 which uses
-    trie/prefix-tree algorithms with a geohash encoding.
+    trie/prefix-tree algorithms with a geohash encoding.  That approach is
+    implemented in {@link org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy}
+    today.
   </p>
 
   </body>

