GitDiffStart: c029ce687870bf6df8c0b61de10e368e61c15360 | Tue Jan 31 00:51:13 2012 +0000
diff --git a/lucene/src/java/org/apache/lucene/codecs/Codec.java b/lucene/src/java/org/apache/lucene/codecs/Codec.java
index 288d648..8e960da 100644
--- a/lucene/src/java/org/apache/lucene/codecs/Codec.java
+++ b/lucene/src/java/org/apache/lucene/codecs/Codec.java
@@ -21,6 +21,7 @@ import java.io.IOException;
 import java.util.Set;
 
 import org.apache.lucene.index.IndexFileNames;
+import org.apache.lucene.index.IndexWriterConfig; // javadocs
 import org.apache.lucene.index.SegmentInfo;
 import org.apache.lucene.util.NamedSPILoader;
 
@@ -38,6 +39,7 @@ public abstract class Codec implements NamedSPILoader.NamedSPI {
     this.name = name;
   }
   
+  /** Returns this codec's name */
   @Override
   public String getName() {
     return name;
@@ -100,11 +102,17 @@ public abstract class Codec implements NamedSPILoader.NamedSPI {
   
   private static Codec defaultCodec = Codec.forName("Lucene40");
   
+  /** expert: returns the default codec used for newly created
+   *  {@link IndexWriterConfig}s.
+   */
   // TODO: should we use this, or maybe a system property is better?
   public static Codec getDefault() {
     return defaultCodec;
   }
   
+  /** expert: sets the default codec used for newly created
+   *  {@link IndexWriterConfig}s.
+   */
   public static void setDefault(Codec codec) {
     defaultCodec = codec;
   }
diff --git a/lucene/src/java/org/apache/lucene/codecs/DocValuesFormat.java b/lucene/src/java/org/apache/lucene/codecs/DocValuesFormat.java
index 202712a..6de7773 100644
--- a/lucene/src/java/org/apache/lucene/codecs/DocValuesFormat.java
+++ b/lucene/src/java/org/apache/lucene/codecs/DocValuesFormat.java
@@ -20,10 +20,15 @@ package org.apache.lucene.codecs;
 import java.io.IOException;
 import java.util.Set;
 
+import org.apache.lucene.index.DocValues; // javadocs
 import org.apache.lucene.index.PerDocWriteState;
 import org.apache.lucene.index.SegmentInfo;
 import org.apache.lucene.index.SegmentReadState;
 
+/**
+ * Encodes/decodes {@link DocValues}
+ * @lucene.experimental
+ */
 public abstract class DocValuesFormat {
   public abstract PerDocConsumer docsConsumer(PerDocWriteState state) throws IOException;
   public abstract PerDocProducer docsProducer(SegmentReadState state) throws IOException;
diff --git a/lucene/src/java/org/apache/lucene/codecs/FieldInfosFormat.java b/lucene/src/java/org/apache/lucene/codecs/FieldInfosFormat.java
index bedd145..a687605 100644
--- a/lucene/src/java/org/apache/lucene/codecs/FieldInfosFormat.java
+++ b/lucene/src/java/org/apache/lucene/codecs/FieldInfosFormat.java
@@ -20,9 +20,11 @@ package org.apache.lucene.codecs;
 import java.io.IOException;
 import java.util.Set;
 
+import org.apache.lucene.index.FieldInfos; // javadocs
 import org.apache.lucene.index.SegmentInfo;
 
 /**
+ * Encodes/decodes {@link FieldInfos}
  * @lucene.experimental
  */
 public abstract class FieldInfosFormat {
diff --git a/lucene/src/java/org/apache/lucene/codecs/FieldsConsumer.java b/lucene/src/java/org/apache/lucene/codecs/FieldsConsumer.java
index ea47207..d71d16c 100644
--- a/lucene/src/java/org/apache/lucene/codecs/FieldsConsumer.java
+++ b/lucene/src/java/org/apache/lucene/codecs/FieldsConsumer.java
@@ -26,7 +26,7 @@ import org.apache.lucene.index.FieldsEnum;
 import org.apache.lucene.index.MergeState;
 import org.apache.lucene.index.Terms;
 
-/** Abstract API that consumes terms, doc, freq, prox and
+/** Abstract API that consumes terms, doc, freq, prox, offset and
  *  payloads postings.  Concrete implementations of this
  *  actually do "something" with the postings (write it into
  *  the index in a specific format).
diff --git a/lucene/src/java/org/apache/lucene/codecs/PostingsFormat.java b/lucene/src/java/org/apache/lucene/codecs/PostingsFormat.java
index 67ea8ba..3ed7e6c 100644
--- a/lucene/src/java/org/apache/lucene/codecs/PostingsFormat.java
+++ b/lucene/src/java/org/apache/lucene/codecs/PostingsFormat.java
@@ -25,7 +25,9 @@ import org.apache.lucene.index.SegmentWriteState;
 import org.apache.lucene.index.SegmentReadState;
 import org.apache.lucene.util.NamedSPILoader;
 
-/** @lucene.experimental */
+/** 
+ * Encodes/decodes terms, postings, and proximity data.
+ * @lucene.experimental */
 public abstract class PostingsFormat implements NamedSPILoader.NamedSPI {
 
   private static final NamedSPILoader<PostingsFormat> loader =
diff --git a/lucene/src/java/org/apache/lucene/search/IndexSearcher.java b/lucene/src/java/org/apache/lucene/search/IndexSearcher.java
index a455aaa..bd1b19f 100644
--- a/lucene/src/java/org/apache/lucene/search/IndexSearcher.java
+++ b/lucene/src/java/org/apache/lucene/search/IndexSearcher.java
@@ -791,7 +791,10 @@ public class IndexSearcher {
   }
   
   /**
-   * Returns {@link TermStatistics} for a term
+   * Returns {@link TermStatistics} for a term.
+   * 
+   * This can be overridden for example, to return a term's statistics
+   * across a distributed collection.
    * @lucene.experimental
    */
   public TermStatistics termStatistics(Term term, TermContext context) throws IOException {
@@ -799,7 +802,10 @@ public class IndexSearcher {
   };
   
   /**
-   * Returns {@link CollectionStatistics} for a field
+   * Returns {@link CollectionStatistics} for a field.
+   * 
+   * This can be overridden for example, to return a field's statistics
+   * across a distributed collection.
    * @lucene.experimental
    */
   public CollectionStatistics collectionStatistics(String field) throws IOException {

