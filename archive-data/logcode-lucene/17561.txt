GitDiffStart: 80659afa983a0b07566fc1aa0d9c279c474f7b55 | Wed Aug 11 21:33:28 2010 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 8f4918d..0656a02 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -400,6 +400,9 @@ Bug Fixes
 * SOLR-2008: avoid possible RejectedExecutionException w/autoCommit
   by making SolreCore close the UpdateHandler before closing the
   SearchExecutor.  (NarasimhaRaju, hossman)
+
+* SOLR-2036: Avoid expensive fieldCache ram estimation for the
+  admin stats page. (yonik)
   
 
 Other Changes
diff --git a/solr/src/java/org/apache/solr/search/SolrFieldCacheMBean.java b/solr/src/java/org/apache/solr/search/SolrFieldCacheMBean.java
index 24e6d59..aa81b7b 100644
--- a/solr/src/java/org/apache/solr/search/SolrFieldCacheMBean.java
+++ b/solr/src/java/org/apache/solr/search/SolrFieldCacheMBean.java
@@ -64,16 +64,18 @@ public class SolrFieldCacheMBean implements SolrInfoMBean {
       stats.add("entry#" + i, e.toString());
     }
 
-    Insanity[] insanity = checker.checkSanity(entries);
+    Insanity[] insanity = checker.check(entries);
 
     stats.add("insanity_count", insanity.length);
     for (int i = 0; i < insanity.length; i++) {
 
+      /** RAM estimation is both CPU and memory intensive... we don't want to do it unless asked.
       // we only estimate the size of insane entries
       for (CacheEntry e : insanity[i].getCacheEntries()) {
         // don't re-estimate if we've already done it.
         if (null == e.getEstimatedSize()) e.estimateSize();
       }
+      **/
       
       stats.add("insanity#" + i, insanity[i].toString());
     }

