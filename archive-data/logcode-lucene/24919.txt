GitDiffStart: 8ca05a3deb6c607e20e3b49d5806a8b3cd73759f | Wed Sep 22 18:18:27 2004 +0000
diff --git a/src/java/org/apache/lucene/search/Similarity.java b/src/java/org/apache/lucene/search/Similarity.java
index 096ebbd..307480e 100644
--- a/src/java/org/apache/lucene/search/Similarity.java
+++ b/src/java/org/apache/lucene/search/Similarity.java
@@ -102,6 +102,13 @@ public abstract class Similarity {
     return NORM_TABLE[b & 0xFF];
   }
 
+  /** Returns a table for decoding normalization bytes.
+   * @see #encodeNorm(float)
+   */
+  public static float[] getNormDecoder() {
+    return NORM_TABLE;
+  }
+
   /** Computes the normalization value for a field given the total number of
    * terms contained in a field.  These values, together with field boosts, are
    * stored in an index and multipled into scores for hits on each field by the
diff --git a/src/java/org/apache/lucene/search/TermScorer.java b/src/java/org/apache/lucene/search/TermScorer.java
index a9e94fa..437b9a7 100644
--- a/src/java/org/apache/lucene/search/TermScorer.java
+++ b/src/java/org/apache/lucene/search/TermScorer.java
@@ -62,6 +62,7 @@ final class TermScorer extends Scorer {
 
   protected boolean score(HitCollector c, int end) throws IOException {
     Similarity similarity = getSimilarity();      // cache sim in local
+    float[] normDecoder = similarity.getNormDecoder();
     while (doc < end) {                           // for docs in window
       int f = freqs[pointer];
       float score =                               // compute tf(f)*weight
@@ -69,7 +70,7 @@ final class TermScorer extends Scorer {
          ? scoreCache[f]                          // cache hit
          : similarity.tf(f)*weightValue;          // cache miss
 
-      score *= Similarity.decodeNorm(norms[doc]); // normalize for field
+      score *= normDecoder[norms[doc] & 0xFF];    // normalize for field
 
       c.collect(doc, score);                      // collect score
 

