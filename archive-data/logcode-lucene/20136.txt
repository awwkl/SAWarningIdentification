GitDiffStart: 7dab6190e807a392da22ab3e3c39e6a920e0e203 | Thu Jun 4 17:28:56 2009 +0000
diff --git a/src/java/org/apache/solr/handler/component/FacetComponent.java b/src/java/org/apache/solr/handler/component/FacetComponent.java
index 65f3268..9a46a94 100644
--- a/src/java/org/apache/solr/handler/component/FacetComponent.java
+++ b/src/java/org/apache/solr/handler/component/FacetComponent.java
@@ -369,7 +369,8 @@ public class  FacetComponent extends SearchComponent
       facet_fields.add(dff.getKey(), fieldCounts);
 
       ShardFacetCount[] counts;
-      if (dff.sort.equals(FacetParams.FACET_SORT_COUNT)) {
+      boolean countSorted = dff.sort.equals(FacetParams.FACET_SORT_COUNT);
+      if (countSorted) {
         counts = dff.countSorted;
         if (counts == null || dff.needRefinements) {
           counts = dff.getCountSorted();
@@ -382,7 +383,10 @@ public class  FacetComponent extends SearchComponent
 
       int end = dff.limit < 0 ? counts.length : Math.min(dff.offset + dff.limit, counts.length);
       for (int i=dff.offset; i<end; i++) {
-        if (counts[i].count < dff.minCount) break;
+        if (counts[i].count < dff.minCount) {
+          if (countSorted) break;  // if sorted by count, we can break out of loop early
+          else continue;
+        }
         fieldCounts.add(counts[i].name, num(counts[i].count));
       }
 
diff --git a/src/test/org/apache/solr/TestDistributedSearch.java b/src/test/org/apache/solr/TestDistributedSearch.java
index 29781ac..eb15d94 100755
--- a/src/test/org/apache/solr/TestDistributedSearch.java
+++ b/src/test/org/apache/solr/TestDistributedSearch.java
@@ -543,7 +543,9 @@ public class TestDistributedSearch extends TestCase {
 
     query("q","*:*", "rows",100, "facet","true", "facet.field",t1);
     query("q","*:*", "rows",100, "facet","true", "facet.field",t1, "facet.limit",-1, "facet.sort","count");
+    query("q","*:*", "rows",100, "facet","true", "facet.field",t1, "facet.limit",-1, "facet.sort","count", "facet.mincount",2);
     query("q","*:*", "rows",100, "facet","true", "facet.field",t1, "facet.limit",-1, "facet.sort","index");
+    query("q","*:*", "rows",100, "facet","true", "facet.field",t1, "facet.limit",-1, "facet.sort","index", "facet.mincount",2);
     query("q","*:*", "rows",100, "facet","true", "facet.field",t1,"facet.limit",1);
     query("q","*:*", "rows",100, "facet","true", "facet.query","quick", "facet.query","all", "facet.query","*:*");
     query("q","*:*", "rows",100, "facet","true", "facet.field",t1, "facet.offset",1);

