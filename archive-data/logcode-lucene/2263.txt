GitDiffStart: 180d7828a73055936fddd7f6afa2985df730347c | Wed Dec 16 22:10:49 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 3e3cc9b..7863293 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -191,6 +191,8 @@ Other Changes
 * SOLR-8266: Remove Java Serialization from the Streaming API. The /stream handler now only accepts
   Streaming Expressions. (Jason Gerlowski, Joel Bernstein)
 
+* SOLR-8426: Enable /export, /stream and /sql handlers by default and remove them from example configs.  (shalin)
+
 
 ======================= 5.5.0 =======================
 
diff --git a/solr/core/src/java/org/apache/solr/core/ImplicitPlugins.java b/solr/core/src/java/org/apache/solr/core/ImplicitPlugins.java
index 25b3dce..a833760 100644
--- a/solr/core/src/java/org/apache/solr/core/ImplicitPlugins.java
+++ b/solr/core/src/java/org/apache/solr/core/ImplicitPlugins.java
@@ -20,6 +20,7 @@ package org.apache.solr.core;
 
 import java.util.ArrayList;
 import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
@@ -27,8 +28,10 @@ import org.apache.solr.common.util.NamedList;
 import org.apache.solr.handler.PingRequestHandler;
 import org.apache.solr.handler.RealTimeGetHandler;
 import org.apache.solr.handler.ReplicationHandler;
+import org.apache.solr.handler.SQLHandler;
 import org.apache.solr.handler.SchemaHandler;
 import org.apache.solr.handler.SolrConfigHandler;
+import org.apache.solr.handler.StreamHandler;
 import org.apache.solr.handler.UpdateRequestHandler;
 import org.apache.solr.handler.admin.LoggingHandler;
 import org.apache.solr.handler.admin.LukeRequestHandler;
@@ -39,13 +42,15 @@ import org.apache.solr.handler.admin.ShowFileRequestHandler;
 import org.apache.solr.handler.admin.SolrInfoMBeanHandler;
 import org.apache.solr.handler.admin.SystemInfoHandler;
 import org.apache.solr.handler.admin.ThreadDumpHandler;
+import org.apache.solr.handler.component.SearchHandler;
 import org.apache.solr.request.SolrRequestHandler;
 
 import static java.util.Collections.singletonMap;
-import static org.apache.solr.common.util.Utils.makeMap;
 import static org.apache.solr.common.params.CommonParams.JSON;
 import static org.apache.solr.common.params.CommonParams.NAME;
 import static org.apache.solr.common.params.CommonParams.WT;
+import static org.apache.solr.common.util.Utils.makeMap;
+import static org.apache.solr.core.PluginInfo.APPENDS;
 import static org.apache.solr.core.PluginInfo.DEFAULTS;
 import static org.apache.solr.core.PluginInfo.INVARIANTS;
 
@@ -55,51 +60,95 @@ public class ImplicitPlugins {
     List<PluginInfo> implicits = new ArrayList<>();
 
     //update handle implicits
-    implicits.add(getReqHandlerInfo("/update", UpdateRequestHandler.class, null));
-    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap("update.contentType", "application/json")));
-    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap("update.contentType", "application/csv")));
-    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap("update.contentType", "application/json", "json.command", "false")));
+    implicits.add(createPluginInfoWithDefaults("/update", UpdateRequestHandler.class, null));
+    implicits.add(createPluginInfoWithDefaults(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap("update.contentType", "application/json")));
+    implicits.add(createPluginInfoWithDefaults(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap("update.contentType", "application/csv")));
+    implicits.add(createPluginInfoWithDefaults(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap("update.contentType", "application/json", "json.command", "false")));
 
     //solrconfighandler
-    PluginInfo config = getReqHandlerInfo("/config", SolrConfigHandler.class, null);
+    PluginInfo config = createPluginInfoWithDefaults("/config", SolrConfigHandler.class, null);
     if (solrCore.getConfigSetProperties() != null) {
       config.initArgs.addAll(solrCore.getConfigSetProperties());
     }
     implicits.add(config);
     //schemahandler
-    PluginInfo schema = getReqHandlerInfo("/schema", SchemaHandler.class, null);
+    PluginInfo schema = createPluginInfoWithDefaults("/schema", SchemaHandler.class, null);
     if (solrCore.getConfigSetProperties() != null) {
       schema.initArgs.addAll(solrCore.getConfigSetProperties());
     }
     implicits.add(schema);
     //register replicationhandler always for SolrCloud
-    implicits.add(getReqHandlerInfo("/replication", ReplicationHandler.class,null));
+    implicits.add(createPluginInfoWithDefaults("/replication", ReplicationHandler.class,null));
 
-    implicits.add(getReqHandlerInfo("/get", RealTimeGetHandler.class,
+    implicits.add(createPluginInfoWithDefaults("/get", RealTimeGetHandler.class,
         makeMap(
             "omitHeader", "true",
             WT, JSON,
             "indent", "true")));
+
+    PluginInfo exportInitArgs = createPluginInfo("/export", SearchHandler.class,
+        null, // defaults
+        null, // appends
+        // we need invariants here
+        makeMap(
+            "rq", "{!xport}",
+            "wt", "xsort",
+            "distrib", "false"
+        ));
+    exportInitArgs.initArgs.add("components", Collections.singletonList("query"));
+    implicits.add(exportInitArgs);
+
+    implicits.add(createPluginInfo("/stream", StreamHandler.class,
+        null, // defaults
+        null, // appends
+        // we need invariants here
+        makeMap(
+            "wt", "json",
+            "distrib", "false"
+        )));
+
+    implicits.add(createPluginInfo("/sql", SQLHandler.class,
+        null, // defaults
+        null, // appends
+        // we need invariants here
+        makeMap(
+            "wt", "json",
+            "distrib", "false"
+        )));
+
     //register adminHandlers
-    implicits.add(getReqHandlerInfo("/admin/luke", LukeRequestHandler.class, null));
-    implicits.add(getReqHandlerInfo("/admin/system", SystemInfoHandler.class, null));
-    implicits.add(getReqHandlerInfo("/admin/mbeans", SolrInfoMBeanHandler.class, null));
-    implicits.add(getReqHandlerInfo("/admin/plugins", PluginInfoHandler.class, null));
-    implicits.add(getReqHandlerInfo("/admin/threads", ThreadDumpHandler.class, null));
-    implicits.add(getReqHandlerInfo("/admin/properties", PropertiesRequestHandler.class, null));
-    implicits.add(getReqHandlerInfo("/admin/logging", LoggingHandler.class, null));
-    implicits.add(getReqHandlerInfo("/admin/file", ShowFileRequestHandler.class, null));
-    PluginInfo ping = getReqHandlerInfo("/admin/ping", PingRequestHandler.class, null);
-    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap("echoParams", "all", "q", "{!lucene}*:*")));
-    implicits.add(ping);
-    implicits.add(getReqHandlerInfo("/admin/segments", SegmentsInfoRequestHandler.class, null));
+    implicits.add(createPluginInfoWithDefaults("/admin/luke", LukeRequestHandler.class, null));
+    implicits.add(createPluginInfoWithDefaults("/admin/system", SystemInfoHandler.class, null));
+    implicits.add(createPluginInfoWithDefaults("/admin/mbeans", SolrInfoMBeanHandler.class, null));
+    implicits.add(createPluginInfoWithDefaults("/admin/plugins", PluginInfoHandler.class, null));
+    implicits.add(createPluginInfoWithDefaults("/admin/threads", ThreadDumpHandler.class, null));
+    implicits.add(createPluginInfoWithDefaults("/admin/properties", PropertiesRequestHandler.class, null));
+    implicits.add(createPluginInfoWithDefaults("/admin/logging", LoggingHandler.class, null));
+    implicits.add(createPluginInfoWithDefaults("/admin/file", ShowFileRequestHandler.class, null));
+    implicits.add(createPluginInfo("/admin/ping", PingRequestHandler.class,
+        null, // defaults
+        null, // appends
+        // invariants
+        makeMap("echoParams", "all", "q", "{!lucene}*:*")));
+    implicits.add(createPluginInfoWithDefaults("/admin/segments", SegmentsInfoRequestHandler.class, null));
     return implicits;
   }
 
-  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){
-    if(defaults == null) defaults= Collections.emptyMap();
+  public static PluginInfo createPluginInfoWithDefaults(String name, Class clz, Map defaults) {
+    return createPluginInfo(name, clz, defaults, null, null);
+  }
+
+  public static PluginInfo createPluginInfo(String name, Class clz, Map defaults, Map appends, Map invariants) {
+    if (defaults == null) defaults = Collections.emptyMap();
     Map m = makeMap(NAME, name, "class", clz.getName());
-    // be explicit with generics, because Java 9 fails to compile otherwise (type inference: Map.Entry[] vs. singletonMap):
-    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(Collections.<String,Object>singletonMap(DEFAULTS, new NamedList<>(defaults))),null);
+    Map<String, Object> args = new HashMap<>(1);
+    args.put(DEFAULTS, new NamedList<>(defaults));
+    if (appends != null)  {
+      args.put(APPENDS, new NamedList<>(appends));
+    }
+    if (invariants != null) {
+      args.put(INVARIANTS, new NamedList<>(invariants));
+    }
+    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(args), null);
   }
 }
diff --git a/solr/core/src/java/org/apache/solr/response/SortingResponseWriter.java b/solr/core/src/java/org/apache/solr/response/SortingResponseWriter.java
index 00c16bf..bc7d5b6 100644
--- a/solr/core/src/java/org/apache/solr/response/SortingResponseWriter.java
+++ b/solr/core/src/java/org/apache/solr/response/SortingResponseWriter.java
@@ -94,7 +94,7 @@ public class SortingResponseWriter implements QueryResponseWriter {
       exception = new IOException(new SyntaxError("No sort criteria was provided."));
     }
 
-    if(sort.needsScores()) {
+    if(sort != null && sort.needsScores()) {
       exception = new IOException(new SyntaxError("Scoring is not currently supported with xsort."));
     }
 
@@ -109,16 +109,18 @@ public class SortingResponseWriter implements QueryResponseWriter {
     SolrParams params = req.getParams();
     String fl = params.get("fl");
 
+    String[] fields = null;
+
     if(fl == null) {
       exception = new IOException(new SyntaxError("export field list (fl) must be specified."));
-    }
-
-    String[] fields = fl.split(",");
+    } else  {
+      fields = fl.split(",");
 
-    for(int i=0;i<fields.length; i++) {
-      if(fl.trim().equals("score")) {
-        exception =  new IOException(new SyntaxError("Scoring is not currently supported with xsort."));
-        break;
+      for(int i=0;i<fields.length; i++) {
+        if(fl.trim().equals("score")) {
+          exception =  new IOException(new SyntaxError("Scoring is not currently supported with xsort."));
+          break;
+        }
       }
     }
 
diff --git a/solr/core/src/test-files/solr/collection1/conf/solrconfig-sortingresponse.xml b/solr/core/src/test-files/solr/collection1/conf/solrconfig-sortingresponse.xml
index 23f1d72..35ad58b 100644
--- a/solr/core/src/test-files/solr/collection1/conf/solrconfig-sortingresponse.xml
+++ b/solr/core/src/test-files/solr/collection1/conf/solrconfig-sortingresponse.xml
@@ -27,13 +27,6 @@
   <schemaFactory class="ClassicIndexSchemaFactory"/>
   <requestHandler name="standard" class="solr.StandardRequestHandler" />
 
-  <requestHandler name="/export" class="solr.SearchHandler">
-    <lst name="invariants">
-    <str name="rq">{!xport}</str>
-    <str name="wt">xsort</str>
-    <str name="distrib">false</str>
-  </lst>
-
   <query>
 
     <enableLazyFieldLoading>true</enableLazyFieldLoading>
@@ -49,9 +42,4 @@
   </query>
 
 
-  <arr name="components">
-      <str>query</str>
-    </arr>
-  </requestHandler>
-
 </config>
diff --git a/solr/core/src/test-files/solr/collection1/conf/solrconfig-sql.xml b/solr/core/src/test-files/solr/collection1/conf/solrconfig-sql.xml
index 6255398..e164924 100644
--- a/solr/core/src/test-files/solr/collection1/conf/solrconfig-sql.xml
+++ b/solr/core/src/test-files/solr/collection1/conf/solrconfig-sql.xml
@@ -44,37 +44,6 @@
     </lst>
   </requestHandler>
 
-  <requestHandler name="/export" class="solr.SearchHandler">
-    <lst name="invariants">
-      <str name="rq">{!xport}</str>
-      <str name="wt">xsort</str>
-      <str name="distrib">false</str>
-    </lst>
-
-    <arr name="components">
-      <str>query</str>
-    </arr>
-  </requestHandler>
-
-  <!--
-   Distributed Stream processing.
- -->
-
-  <requestHandler name="/stream" class="solr.StreamHandler">
-    <lst name="invariants">
-      <str name="wt">json</str>
-      <str name="distrib">false</str>
-    </lst>
-  </requestHandler>
-
-  <requestHandler name="/sql" class="solr.SQLHandler">
-    <lst name="invariants">
-      <str name="wt">json</str>
-      <str name="distrib">false</str>
-    </lst>
-  </requestHandler>
-
-
   <requestDispatcher handleSelect="true" >
     <requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="2048" />
   </requestDispatcher>
diff --git a/solr/core/src/test/org/apache/solr/MinimalSchemaTest.java b/solr/core/src/test/org/apache/solr/MinimalSchemaTest.java
index 24caf0e..52d47f4 100644
--- a/solr/core/src/test/org/apache/solr/MinimalSchemaTest.java
+++ b/solr/core/src/test/org/apache/solr/MinimalSchemaTest.java
@@ -111,7 +111,10 @@ public class MinimalSchemaTest extends SolrTestCaseJ4 {
             handler.startsWith("/admin") ||
             handler.startsWith("/schema") ||
             handler.startsWith("/config") ||
-            handler.startsWith("/mlt")
+            handler.startsWith("/mlt") ||
+            handler.startsWith("/export") ||
+            handler.startsWith("/sql") ||
+            handler.startsWith("/stream")
             ) {
           continue;
         }
diff --git a/solr/example/files/conf/solrconfig.xml b/solr/example/files/conf/solrconfig.xml
index be69a4f..9aef828 100644
--- a/solr/example/files/conf/solrconfig.xml
+++ b/solr/example/files/conf/solrconfig.xml
@@ -856,37 +856,6 @@
     </lst>
   </requestHandler>
 
-  <!--
-    The export request handler is used to export full sorted result sets.
-    Do not change these defaults.
-  -->
-
-  <requestHandler name="/export" class="solr.SearchHandler">
-    <lst name="invariants">
-      <str name="rq">{!xport}</str>
-      <str name="wt">xsort</str>
-      <str name="distrib">false</str>
-    </lst>
-
-    <arr name="components">
-      <str>query</str>
-    </arr>
-  </requestHandler>
-
-
-  <!--
-  Distributed Stream processing.
-  -->
-
-  <requestHandler name="/stream" class="solr.StreamHandler">
-    <lst name="invariants">
-      <str name="wt">json</str>
-      <str name="distrib">false</str>
-    </lst>
-  </requestHandler>
-
-
-
   <!-- Field Analysis Request Handler
 
        RequestHandler that provides much the same functionality as
diff --git a/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml b/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml
index 9c39e8d..a1770be 100644
--- a/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml
+++ b/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml
@@ -447,23 +447,6 @@
      </lst>
   </requestHandler>
 
-  <!--
-    The export request handler is used to export full sorted result sets.
-    Do not change these defaults.
-  -->
-  <requestHandler name="/export" class="solr.SearchHandler">
-    <lst name="invariants">
-      <str name="rq">{!xport}</str>
-      <str name="wt">xsort</str>
-      <str name="distrib">false</str>
-    </lst>
-
-    <arr name="components">
-      <str>query</str>
-    </arr>
-  </requestHandler>
-
-
   <initParams path="/update/**,/query,/select,/tvrh,/elevate,/spell">
     <lst name="defaults">
       <str name="df">text</str>
diff --git a/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml b/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml
index d65e24e..f25d322 100644
--- a/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml
+++ b/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml
@@ -830,41 +830,6 @@
   </requestHandler>
 
 
-    <!--
-     The export request handler is used to export full sorted result sets.
-     Do not change these defaults.
-   -->
-
-  <requestHandler name="/export" class="solr.SearchHandler">
-    <lst name="invariants">
-      <str name="rq">{!xport}</str>
-      <str name="wt">xsort</str>
-      <str name="distrib">false</str>
-    </lst>
-
-    <arr name="components">
-      <str>query</str>
-    </arr>
-  </requestHandler>
-
-
-  <requestHandler name="/stream" class="solr.StreamHandler">
-    <lst name="invariants">
-      <str name="wt">json</str>
-      <str name="distrib">false</str>
-    </lst>
-  </requestHandler>
-
-
-  <requestHandler name="/sql" class="solr.SQLHandler">
-    <lst name="invariants">
-      <str name="wt">json</str>
-      <str name="distrib">false</str>
-    </lst>
-  </requestHandler>
-
-
-
   <!-- A Robust Example
        
        This example SearchHandler declaration shows off usage of the
diff --git a/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml b/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml
index 6428539..f4167ee 100644
--- a/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml
+++ b/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml
@@ -856,46 +856,7 @@
      </lst>
   </requestHandler>
 
-
-
-  <!--
-    The export request handler is used to export full sorted result sets.
-    Do not change these defaults.
-  -->
-
-  <requestHandler name="/export" class="solr.SearchHandler">
-    <lst name="invariants">
-      <str name="rq">{!xport}</str>
-      <str name="wt">xsort</str>
-      <str name="distrib">false</str>
-    </lst>
-
-    <arr name="components">
-      <str>query</str>
-    </arr>
-  </requestHandler>
-
-
-
-
- <requestHandler name="/stream" class="solr.StreamHandler">
-   <lst name="invariants">
-     <str name="wt">json</str>
-     <str name="distrib">false</str>
-   </lst>
- </requestHandler>
-
-
-  <requestHandler name="/sql" class="solr.SQLHandler">
-    <lst name="invariants">
-      <str name="wt">json</str>
-      <str name="distrib">false</str>
-    </lst>
-  </requestHandler>
-
-
-
-  <!-- A Robust Example 
+  <!-- A Robust Example
        
        This example SearchHandler declaration shows off usage of the
        SearchHandler with many defaults declared
diff --git a/solr/solrj/src/test-files/solrj/solr/collection1/conf/solrconfig-sql.xml b/solr/solrj/src/test-files/solrj/solr/collection1/conf/solrconfig-sql.xml
index 6255398..e164924 100644
--- a/solr/solrj/src/test-files/solrj/solr/collection1/conf/solrconfig-sql.xml
+++ b/solr/solrj/src/test-files/solrj/solr/collection1/conf/solrconfig-sql.xml
@@ -44,37 +44,6 @@
     </lst>
   </requestHandler>
 
-  <requestHandler name="/export" class="solr.SearchHandler">
-    <lst name="invariants">
-      <str name="rq">{!xport}</str>
-      <str name="wt">xsort</str>
-      <str name="distrib">false</str>
-    </lst>
-
-    <arr name="components">
-      <str>query</str>
-    </arr>
-  </requestHandler>
-
-  <!--
-   Distributed Stream processing.
- -->
-
-  <requestHandler name="/stream" class="solr.StreamHandler">
-    <lst name="invariants">
-      <str name="wt">json</str>
-      <str name="distrib">false</str>
-    </lst>
-  </requestHandler>
-
-  <requestHandler name="/sql" class="solr.SQLHandler">
-    <lst name="invariants">
-      <str name="wt">json</str>
-      <str name="distrib">false</str>
-    </lst>
-  </requestHandler>
-
-
   <requestDispatcher handleSelect="true" >
     <requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="2048" />
   </requestDispatcher>
diff --git a/solr/solrj/src/test-files/solrj/solr/collection1/conf/solrconfig-streaming.xml b/solr/solrj/src/test-files/solrj/solr/collection1/conf/solrconfig-streaming.xml
index 5eae0d9..6b10869 100644
--- a/solr/solrj/src/test-files/solrj/solr/collection1/conf/solrconfig-streaming.xml
+++ b/solr/solrj/src/test-files/solrj/solr/collection1/conf/solrconfig-streaming.xml
@@ -36,35 +36,6 @@
   </updateHandler>
 
 
-  <requestHandler name="/export" class="solr.SearchHandler">
-    <lst name="invariants">
-      <str name="rq">{!xport}</str>
-      <str name="wt">xsort</str>
-      <str name="distrib">false</str>
-    </lst>
-
-    <arr name="components">
-      <str>query</str>
-    </arr>
-  </requestHandler>
-
-  <!--
-   Distributed Stream processing.
- -->
-
-  <requestHandler name="/stream" class="solr.StreamHandler">
-    <lst name="invariants">
-      <str name="wt">json</str>
-      <str name="distrib">false</str>
-    </lst>
-    
-    <!-- This is how you provide other functions --> 
-    <!-- <lst name="streamFunctions">
-      <str name="recordCount">org.apache.solr.client.solrj.io.stream.RecordCountStream</str>
-    </lst> -->
-    
-  </requestHandler>
-  
   <requestDispatcher handleSelect="true" >
     <requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="2048" />
   </requestDispatcher>

