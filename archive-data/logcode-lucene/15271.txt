GitDiffStart: e94f5fcc99bc0b7cd2297edaea029c75f3535767 | Fri Jul 8 09:49:23 2011 +0000
diff --git a/lucene/src/java/org/apache/lucene/index/codecs/SegmentInfosWriter.java b/lucene/src/java/org/apache/lucene/index/codecs/SegmentInfosWriter.java
index 42a3d81..9c79edf 100644
--- a/lucene/src/java/org/apache/lucene/index/codecs/SegmentInfosWriter.java
+++ b/lucene/src/java/org/apache/lucene/index/codecs/SegmentInfosWriter.java
@@ -48,7 +48,7 @@ public abstract class SegmentInfosWriter {
    * First phase of the two-phase commit - ensure that all output can be
    * successfully written out.
    * @param out an instance of {@link IndexOutput} returned from a previous
-   * call to {@link #writeInfos(Directory, String, SegmentInfos)}.
+   * call to {@link #writeInfos(Directory, String, SegmentInfos, IOContext)}.
    * @throws IOException
    */
   public abstract void prepareCommit(IndexOutput out) throws IOException;
@@ -57,7 +57,7 @@ public abstract class SegmentInfosWriter {
    * Second phase of the two-phase commit. In this step the output should be
    * finalized and closed.
    * @param out an instance of {@link IndexOutput} returned from a previous
-   * call to {@link #writeInfos(Directory, String, SegmentInfos)}.
+   * call to {@link #writeInfos(Directory, String, SegmentInfos, IOContext)}.
    * @throws IOException
    */
   public abstract void finishCommit(IndexOutput out) throws IOException;
diff --git a/lucene/src/java/org/apache/lucene/store/Directory.java b/lucene/src/java/org/apache/lucene/store/Directory.java
index cd82f3f..dff4b08 100644
--- a/lucene/src/java/org/apache/lucene/store/Directory.java
+++ b/lucene/src/java/org/apache/lucene/store/Directory.java
@@ -52,7 +52,7 @@ public abstract class Directory implements Closeable {
    * Returns an array of strings, one for each file in the directory.
    * 
    * @throws NoSuchDirectoryException if the directory is not prepared for any
-   *         write operations (such as {@link #createOutput(String)}).
+   *         write operations (such as {@link #createOutput(String, IOContext)}).
    * @throws IOException in case of other IO errors
    */
   public abstract String[] listAll() throws IOException;
diff --git a/lucene/src/java/org/apache/lucene/store/IOContext.java b/lucene/src/java/org/apache/lucene/store/IOContext.java
index 7f253a2..04a8964 100644
--- a/lucene/src/java/org/apache/lucene/store/IOContext.java
+++ b/lucene/src/java/org/apache/lucene/store/IOContext.java
@@ -20,8 +20,8 @@ package org.apache.lucene.store;
 /**
  * IOContext holds additional details on the merge/search context. A IOContext
  * object can never be initialized as null as passed as a parameter to either
- * {@link #org.apache.lucene.store.Directory.openInput()} or
- * {@link #org.apache.lucene.store.Directory.createInput()}
+ * {@link org.apache.lucene.store.Directory#openInput(String, IOContext)} or
+ * {@link org.apache.lucene.store.Directory#createOutput(String, IOContext)}
  */
 public class IOContext {
 
diff --git a/lucene/src/java/org/apache/lucene/util/BitVector.java b/lucene/src/java/org/apache/lucene/util/BitVector.java
index b58c7af..a9f76fe 100644
--- a/lucene/src/java/org/apache/lucene/util/BitVector.java
+++ b/lucene/src/java/org/apache/lucene/util/BitVector.java
@@ -20,12 +20,10 @@ package org.apache.lucene.util;
 import java.io.IOException;
 import java.util.Arrays;
 
-import org.apache.lucene.index.MergePolicy.OneMerge;
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.IOContext;
 import org.apache.lucene.store.IndexInput;
 import org.apache.lucene.store.IndexOutput;
-import org.apache.lucene.store.IOContext.Context;
 
 /** Optimized implementation of a vector of bits.  This is more-or-less like
  *  java.util.BitSet, but also includes the following:
@@ -217,7 +215,7 @@ public final class BitVector implements Cloneable, Bits {
 
   /** Writes this vector to the file <code>name</code> in Directory
     <code>d</code>, in a format that can be read by the constructor {@link
-    #BitVector(Directory, String)}.  */
+    #BitVector(Directory, String, IOContext)}.  */
   public final void write(Directory d, String name, IOContext context) throws IOException {
     IndexOutput output = d.createOutput(name, context);
     try {

