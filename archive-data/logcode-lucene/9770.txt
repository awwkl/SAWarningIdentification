GitDiffStart: 39e77a6f8eab33f8d015a85f6c81f5331ee900f0 | Mon Jan 21 16:40:02 2013 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java b/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
index c7c13fe..e2ebb34 100644
--- a/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
+++ b/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
@@ -22,6 +22,7 @@ import java.util.ArrayList;
 import java.util.List;
 
 import org.apache.lucene.codecs.Codec;
+import org.apache.lucene.index.FieldInfo.DocValuesType;
 import org.apache.lucene.index.IndexReader.ReaderClosedListener;
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.RAMDirectory;
@@ -174,6 +175,9 @@ public class MultiDocValues {
       config.setCodec(Codec.forName("SimpleText"));
       IndexWriter writer = new IndexWriter(scratch, config);
       List<AtomicReader> newLeaves = new ArrayList<AtomicReader>();
+      // fake up fieldinfos
+      FieldInfo fi = new FieldInfo(field, false, 0, false, false, false, null, DocValuesType.SORTED, null, null);
+      final FieldInfos fis = new FieldInfos(new FieldInfo[] { fi });
       for (AtomicReaderContext ctx : leaves) {
         final AtomicReader a = ctx.reader();
         newLeaves.add(new FilterAtomicReader(a) {
@@ -189,6 +193,22 @@ public class MultiDocValues {
           public boolean hasDeletions() {
             return false; // lie
           }
+          @Override
+          public FieldInfos getFieldInfos() {
+            return fis;
+          }
+          @Override
+          public Fields getTermVectors(int docID) throws IOException {
+            return null; // lie
+          }
+          @Override
+          public void document(int docID, StoredFieldVisitor visitor) throws IOException {
+            // lie
+          }
+          @Override
+          public Fields fields() throws IOException {
+            return null; // lie
+          }
         });
       }
       writer.addIndexes(newLeaves.toArray(new AtomicReader[0]));
diff --git a/lucene/core/src/test/org/apache/lucene/search/TestSearchAfter.java b/lucene/core/src/test/org/apache/lucene/search/TestSearchAfter.java
index 4392e6d..d6b0b28 100644
--- a/lucene/core/src/test/org/apache/lucene/search/TestSearchAfter.java
+++ b/lucene/core/src/test/org/apache/lucene/search/TestSearchAfter.java
@@ -41,7 +41,6 @@ import org.apache.lucene.util._TestUtil;
 /**
  * Tests IndexSearcher's searchAfter() method
  */
-// nocommit fail w/ OOME?: ant test  -Dtestcase=TestSearchAfter -Dtests.method=testQueries -Dtests.seed=98B4DA915983D1AE -Dtests.slow=true -Dtests.locale=sr -Dtests.timezone=Etc/GMT+2 -Dtests.file.encoding=UTF-8
 public class TestSearchAfter extends LuceneTestCase {
   private Directory dir;
   private IndexReader reader;

