GitDiffStart: a38facf99a5be7cb2ef8d5a0cddaaa45d57de2b6 | Fri Jan 11 15:56:13 2013 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java b/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
index 378da1b..1a13522 100644
--- a/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
+++ b/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
@@ -607,18 +607,19 @@ class MultiDocValues extends DocValues {
   }
   
   public static NumericDocValues simpleNormValues(final IndexReader r, final String field) throws IOException {
+    final List<AtomicReaderContext> leaves = r.leaves();
+    if (leaves.size() == 1) {
+      return leaves.get(0).reader().simpleNormValues(field);
+    }
     FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(field);
     if (fi == null || fi.hasNorms() == false) {
       return null;
     }
-    final List<AtomicReaderContext> leaves = r.leaves();
     boolean anyReal = false;
     for(AtomicReaderContext ctx : leaves) {
       NumericDocValues norms = ctx.reader().simpleNormValues(field);
 
-      if (norms == null) {
-        norms = NumericDocValues.EMPTY;
-      } else {
+      if (norms != null) {
         anyReal = true;
       }
     }
diff --git a/lucene/test-framework/src/java/org/apache/lucene/index/MultiSimpleDocValues.java b/lucene/test-framework/src/java/org/apache/lucene/index/MultiSimpleDocValues.java
index 12569c8..fc54743 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/index/MultiSimpleDocValues.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/index/MultiSimpleDocValues.java
@@ -31,13 +31,14 @@ public class MultiSimpleDocValues {
 
   public static NumericDocValues simpleNumericValues(final IndexReader r, final String field) throws IOException {
     final List<AtomicReaderContext> leaves = r.leaves();
+    if (leaves.size() == 1) {
+      return leaves.get(0).reader().getNumericDocValues(field);
+    }
     boolean anyReal = false;
     for(AtomicReaderContext ctx : leaves) {
       NumericDocValues values = ctx.reader().getNumericDocValues(field);
 
-      if (values == null) {
-        values = NumericDocValues.EMPTY;
-      } else {
+      if (values != null) {
         anyReal = true;
       }
     }
@@ -67,14 +68,15 @@ public class MultiSimpleDocValues {
 
   public static BinaryDocValues simpleBinaryValues(final IndexReader r, final String field) throws IOException {
     final List<AtomicReaderContext> leaves = r.leaves();
+    if (leaves.size() == 1) {
+      return leaves.get(0).reader().getBinaryDocValues(field);
+    }
     boolean anyReal = false;
 
     for(AtomicReaderContext ctx : leaves) {
       BinaryDocValues values = ctx.reader().getBinaryDocValues(field);
 
-      if (values == null) {
-        values = BinaryDocValues.EMPTY;
-      } else {
+      if (values != null) {
         anyReal = true;
       }
     }
@@ -103,5 +105,4 @@ public class MultiSimpleDocValues {
       };
     }
   }
-
 }

