GitDiffStart: 8177498c8680f562be2245124b605510d938f5ae | Thu Aug 8 20:07:18 2013 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 903e57e..489f79f 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -46,6 +46,12 @@ New Features
 * SOLR-3359: Added analyzer attribute/property to SynonymFilterFactory.
   (Ryo Onodera via Koji Sekiguchi)
 
+Bugs
+
+* LUCENE-5160: Handle the case where reading from a file or FileChannel returns -1, which
+  could happen in rare cases where something happens to the file between the time we start the
+  read loop (where we check the length) and when we actually do the read. (gsingers, yonik, Robert Muir, Uwe Schindler)
+
 Optimizations
 
 * LUCENE-4848: Use Java 7 NIO2-FileChannel instead of RandomAccessFile
diff --git a/lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.java b/lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.java
index ad5b129..b674118 100644
--- a/lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.java
+++ b/lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.java
@@ -200,6 +200,9 @@ public class NIOFSDirectory extends FSDirectory {
           }
           bb.limit(limit);
           int i = channel.read(bb, pos);
+          if (i < 0){//be defensive here, even though we checked before hand, something could have changed
+            throw new EOFException("read past EOF: " + this + " off: " + offset + " len: " + len + " pos: " + pos + " limit: " + limit + " end: " + end);
+          }
           pos += i;
           readOffset += i;
           readLength -= i;
diff --git a/lucene/core/src/java/org/apache/lucene/store/SimpleFSDirectory.java b/lucene/core/src/java/org/apache/lucene/store/SimpleFSDirectory.java
index 786e077..ecb446e 100644
--- a/lucene/core/src/java/org/apache/lucene/store/SimpleFSDirectory.java
+++ b/lucene/core/src/java/org/apache/lucene/store/SimpleFSDirectory.java
@@ -155,6 +155,9 @@ public class SimpleFSDirectory extends FSDirectory {
               readLength = chunkSize;
             }
             final int i = file.read(b, offset + total, readLength);
+            if (i < 0){//be defensive here, even though we checked before hand, something could have changed
+             throw new EOFException("read past EOF: " + this + " off: " + offset + " len: " + len + " total: " + total + " readLen: " + readLength + " end: " + end);
+            }
             total += i;
           } while (total < len);
         } catch (OutOfMemoryError e) {

