GitDiffStart: fce60c94bb2a4b16ebe4343713a7df104ea88738 | Tue Oct 6 12:49:07 2015 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 77315b9..cfe4b04 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -127,6 +127,9 @@ Optimizations
 
 Bug Fixes
 
+* LUCENE-6817: ComplexPhraseQueryParser.ComplexPhraseQuery does not display 
+  slop in toString(). (Ahmet Arslan via Dawid Weiss)
+
 * LUCENE-6730: Hyper-parameter c is ignored in term frequency NormalizationH1.
   (Ahmet Arslan via Robert Muir)
 
diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java b/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java
index f2737f8..7a5f77a 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java
@@ -399,7 +399,10 @@ public class ComplexPhraseQueryParser extends QueryParser {
 
     @Override
     public String toString(String field) {
-      return "\"" + phrasedQueryStringContents + "\"";
+      if (slopFactor == 0)
+        return "\"" + phrasedQueryStringContents + "\"";
+      else
+        return "\"" + phrasedQueryStringContents + "\"" + "~" + slopFactor;
     }
 
     @Override
diff --git a/lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery.java b/lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery.java
index 8d3cd69..c25b93f 100644
--- a/lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery.java
+++ b/lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery.java
@@ -139,6 +139,19 @@ public class TestComplexPhraseQuery extends LuceneTestCase {
     checkMatches("name:\"john smith\"~2 AND role:designer AND id:3", "3");
   }
 
+  public void testToStringContainsSlop() throws Exception {
+    ComplexPhraseQueryParser qp = new ComplexPhraseQueryParser(defaultFieldName, analyzer);
+    int slop = random().nextInt(31) + 1;
+
+    String qString = "name:\"j* smyth~\"~" + slop;
+    Query query = qp.parse(qString);
+    assertTrue("Slop is not shown in toString()", query.toString().endsWith("~" + slop));
+
+    String string = "\"j* smyth~\"";
+    Query q = qp.parse(string);
+    assertEquals("Don't show implicit slop of zero", q.toString(), string);
+  }
+
   public void testHashcodeEquals() throws Exception {
     ComplexPhraseQueryParser qp = new ComplexPhraseQueryParser(defaultFieldName, analyzer);
     qp.setInOrder(true);

