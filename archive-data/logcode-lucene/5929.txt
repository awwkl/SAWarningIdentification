GitDiffStart: f2eacfd18b2ca804aa74017336a99899eded5a3f | Tue Jun 24 13:53:52 2014 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index c8579ba..6b9a5bb 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -105,6 +105,8 @@ Other Changes
 * SOLR-6178, LUCENE-5775: Deprecate JaspellLookupFactory. (Uwe Schindler,
   Mike McCandless)
 
+* SOLR-5902: Corecontainer level mbeans are not exposed (noble)
+
 ==================  4.9.0 ==================
 
 Versions of Major Components
diff --git a/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java b/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java
index bc95767..9cbd048 100644
--- a/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java
+++ b/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java
@@ -816,4 +816,7 @@ public class SolrResourceLoader implements ResourceLoader,Closeable
   public void close() throws IOException {
     IOUtils.close(classLoader);
   }
+  public List<SolrInfoMBean> getInfoMBeans(){
+    return Collections.unmodifiableList(infoMBeans);
+  }
 }
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler.java
index 3698440..0c2b50d 100644
--- a/solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler.java
@@ -34,6 +34,7 @@ import java.io.StringReader;
 import java.net.URL;
 import java.text.NumberFormat;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Locale;
 import java.util.Set;
@@ -131,36 +132,39 @@ public class SolrInfoMBeanHandler extends RequestHandlerBase {
     
     Map<String, SolrInfoMBean> reg = req.getCore().getInfoRegistry();
     for (Map.Entry<String, SolrInfoMBean> entry : reg.entrySet()) {
-      String key = entry.getKey();
-      SolrInfoMBean m = entry.getValue();
+      addMBean(req, cats, requestedKeys, entry.getKey(),entry.getValue());
+    }
 
-      if ( ! ( requestedKeys.isEmpty() || requestedKeys.contains(key) ) ) continue;
+    for (SolrInfoMBean infoMBean : req.getCore().getCoreDescriptor().getCoreContainer().getResourceLoader().getInfoMBeans()) {
+      addMBean(req,cats,requestedKeys,infoMBean.getName(),infoMBean);
+    }
+    return cats;
+  }
 
-      NamedList<NamedList<Object>> catInfo = cats.get(m.getCategory().name());
-      if ( null == catInfo ) continue;
+  private void addMBean(SolrQueryRequest req, NamedList<NamedList<NamedList<Object>>> cats, Set<String> requestedKeys, String key, SolrInfoMBean m) {
+    if ( ! ( requestedKeys.isEmpty() || requestedKeys.contains(key) ) ) return;
+    NamedList<NamedList<Object>> catInfo = cats.get(m.getCategory().name());
+    if ( null == catInfo ) return;
+    NamedList<Object> mBeanInfo = new SimpleOrderedMap<>();
+    mBeanInfo.add("class", m.getName());
+    mBeanInfo.add("version", m.getVersion());
+    mBeanInfo.add("description", m.getDescription());
+    mBeanInfo.add("src", m.getSource());
 
-      NamedList<Object> mBeanInfo = new SimpleOrderedMap<>();
-      mBeanInfo.add("class", m.getName());
-      mBeanInfo.add("version", m.getVersion());
-      mBeanInfo.add("description", m.getDescription());
-      mBeanInfo.add("src", m.getSource());
-      
-      // Use an external form
-      URL[] urls = m.getDocs();
-      if(urls!=null) {
-        List<String> docs = new ArrayList<>(urls.length);
-        for(URL url : urls) {
-          docs.add(url.toExternalForm());
-        }
-        mBeanInfo.add("docs", docs);
+    // Use an external form
+    URL[] urls = m.getDocs();
+    if(urls!=null) {
+      List<String> docs = new ArrayList<>(urls.length);
+      for(URL url : urls) {
+        docs.add(url.toExternalForm());
       }
-      
-      if (req.getParams().getFieldBool(key, "stats", false))
-        mBeanInfo.add("stats", m.getStatistics());
-      
-      catInfo.add(key, mBeanInfo);
+      mBeanInfo.add("docs", docs);
     }
-    return cats;
+
+    if (req.getParams().getFieldBool(key, "stats", false))
+      mBeanInfo.add("stats", m.getStatistics());
+
+    catInfo.add(key, mBeanInfo);
   }
 
   protected NamedList<NamedList<NamedList<Object>>> getDiff(
diff --git a/solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest.java b/solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest.java
index 66ba14c..f7992bb 100644
--- a/solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest.java
+++ b/solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest.java
@@ -61,5 +61,13 @@ public class MBeansHandlerTest extends SolrTestCaseJ4 {
     
     //System.out.println("stats:"+stats);
     assertEquals("Was: 1, Now: 2, Delta: 1", stats.get("requests"));
+
+    xml = h.query(req(
+        CommonParams.QT,"/admin/mbeans",
+        "stats","true",
+        "key","org.apache.solr.handler.admin.CollectionsHandler"
+    ));
+    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);
+    assertNotNull( nl.get("QUERYHANDLER").get("org.apache.solr.handler.admin.CollectionsHandler"));
   }
 }

