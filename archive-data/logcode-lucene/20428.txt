GitDiffStart: 3fc80aa23985b8d1a2cd1c2fff227f57b23b2143 | Sat Apr 4 10:18:05 2009 +0000
diff --git a/docs/fileformats.html b/docs/fileformats.html
index c6ce219..8e3ce83 100644
--- a/docs/fileformats.html
+++ b/docs/fileformats.html
@@ -2430,12 +2430,23 @@ document.write("Last Published: " + document.lastModified);
 <a name="N10873"></a><a name="Limitations"></a>
 <h2 class="boxed">Limitations</h2>
 <div class="section">
-<p>There
-                are a few places where these file formats limit the maximum number of
-                terms and documents to a 32-bit quantity, or to approximately 4
-                billion. This is not today a problem, but, in the long term,
-                probably will be. These should therefore be replaced with either
-                UInt64 values, or better yet, with VInt values which have no limit.
+<p>
+	      When referring to term numbers, Lucene's current
+	      implementation uses a Java <span class="codefrag">int</span>, which means
+	      the maximum number of unique terms in any single index
+	      segment is 2,147,483,648.  This is technically not a
+	      limitation of the index file format, just of Lucene's
+	      current implementation.
+	    </p>
+<p>
+	      Similarly, Lucene uses a Java <span class="codefrag">int</span> to refer
+	      to document numbers, and the index file format uses an
+	      <span class="codefrag">Int32</span> on-disk to store document numbers.
+	      This is a limitation of both the index file format and
+	      the current implementation.  Eventually these should be
+	      replaced with either <span class="codefrag">UInt64</span> values, or
+	      better yet, <span class="codefrag">VInt</span> values which have no
+	      limit.
             </p>
 </div>
 
diff --git a/docs/fileformats.pdf b/docs/fileformats.pdf
index bb40e7e..01a43c1 100644
--- a/docs/fileformats.pdf
+++ b/docs/fileformats.pdf
@@ -894,12 +894,22 @@ For example, if there are 8000 bits and only bits 10,12,32 are set, DGaps would
 
 8. Limitations
 
-There are a few places where these file formats limit the maximum number of terms and
-documents to a 32-bit quantity, or to approximately 4 billion. This is not today a problem,
-but, in the long term, probably will be. These should therefore be replaced with either UInt64
-values, or better yet, with VInt values which have no limit.
+When referring to term numbers, Lucene's current implementation uses a Java int, which
+means the maximum number of unique terms in any single index segment is 2,147,483,648.
+This is technically not a limitation of the index file format, just of Lucene's current
+implementation.
 
                                                                        Page 20
 
 Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
+Similarly, Lucene uses a Java int to refer to document numbers, and the index file format
+uses an Int32 on-disk to store document numbers. This is a limitation of both the index file
+format and the current implementation. Eventually these should be replaced with either
+UInt64 values, or better yet, VInt values which have no limit.
+
+Page 21
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 
\ No newline at end of file
diff --git a/src/site/src/documentation/content/xdocs/fileformats.xml b/src/site/src/documentation/content/xdocs/fileformats.xml
index c12d680..c232b2e 100644
--- a/src/site/src/documentation/content/xdocs/fileformats.xml
+++ b/src/site/src/documentation/content/xdocs/fileformats.xml
@@ -1802,12 +1802,23 @@
 
         <section id="Limitations"><title>Limitations</title>
 
-            <p>There
-                are a few places where these file formats limit the maximum number of
-                terms and documents to a 32-bit quantity, or to approximately 4
-                billion. This is not today a problem, but, in the long term,
-                probably will be. These should therefore be replaced with either
-                UInt64 values, or better yet, with VInt values which have no limit.
+            <p>
+	      When referring to term numbers, Lucene's current
+	      implementation uses a Java <code>int</code>, which means
+	      the maximum number of unique terms in any single index
+	      segment is 2,147,483,648.  This is technically not a
+	      limitation of the index file format, just of Lucene's
+	      current implementation.
+	    </p>
+	    <p>
+	      Similarly, Lucene uses a Java <code>int</code> to refer
+	      to document numbers, and the index file format uses an
+	      <code>Int32</code> on-disk to store document numbers.
+	      This is a limitation of both the index file format and
+	      the current implementation.  Eventually these should be
+	      replaced with either <code>UInt64</code> values, or
+	      better yet, <code>VInt</code> values which have no
+	      limit.
             </p>
 
         </section>

