GitDiffStart: f5821bc977e7ddf63e9dfce8dd5e1eced1996c1a | Mon Jun 11 19:14:58 2012 +0000
diff --git a/solr/core/src/java/org/apache/solr/schema/FieldTypePluginLoader.java b/solr/core/src/java/org/apache/solr/schema/FieldTypePluginLoader.java
index 75bbd83..9d0b49b 100644
--- a/solr/core/src/java/org/apache/solr/schema/FieldTypePluginLoader.java
+++ b/solr/core/src/java/org/apache/solr/schema/FieldTypePluginLoader.java
@@ -135,10 +135,10 @@ public final class FieldTypePluginLoader
     return fieldTypes.put( name, plugin );
   }
 
-  // The point here is that, if no multitermanalyzer was specified in the schema file, do one of several things:
+  // The point here is that, if no multiterm analyzer was specified in the schema file, do one of several things:
   // 1> If legacyMultiTerm == false, assemble a new analyzer composed of all of the charfilters,
   //    lowercase filters and asciifoldingfilter.
-  // 2> If letacyMultiTerm == true just construct the analyzer from a KeywordTokenizer. That should mimic current behavior.
+  // 2> If legacyMultiTerm == true just construct the analyzer from a KeywordTokenizer. That should mimic current behavior.
   //    Do the same if they've specified that the old behavior is required (legacyMultiTerm="true")
 
   private Analyzer constructMultiTermAnalyzer(Analyzer queryAnalyzer) {

