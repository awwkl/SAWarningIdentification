GitDiffStart: cfef10bb9d9f78baef3bb3ab313fad557c8f3a04 | Tue Dec 2 22:33:35 2008 +0000
diff --git a/src/java/org/apache/lucene/index/SegmentReader.java b/src/java/org/apache/lucene/index/SegmentReader.java
index 1c441e0..304d5bd 100644
--- a/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/src/java/org/apache/lucene/index/SegmentReader.java
@@ -591,6 +591,7 @@ class SegmentReader extends DirectoryIndexReader {
       deletedDocs.write(directory(), si.getDelFileName());
       
       si.setDelCount(si.getDelCount()+pendingDeleteCount);
+      pendingDeleteCount = 0;
     }
     if (undeleteAll && si.hasDeletions()) {
       si.clearDelGen();
diff --git a/src/test/org/apache/lucene/index/TestIndexReader.java b/src/test/org/apache/lucene/index/TestIndexReader.java
index f6b06bd..0df1a04 100644
--- a/src/test/org/apache/lucene/index/TestIndexReader.java
+++ b/src/test/org/apache/lucene/index/TestIndexReader.java
@@ -1519,4 +1519,27 @@ public class TestIndexReader extends LuceneTestCase
         _TestUtil.rmDir(indexDir);
       }
     }
+
+  // LUCENE-1474
+  public void testIndexReader() throws Exception {
+    Directory dir = new RAMDirectory();
+    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(),
+                                         IndexWriter.MaxFieldLength.UNLIMITED);
+    writer.addDocument(createDocument("a"));
+    writer.addDocument(createDocument("b"));
+    writer.addDocument(createDocument("c"));
+    writer.close();
+    IndexReader reader = IndexReader.open(dir);
+    reader.deleteDocuments(new Term("id", "a"));
+    reader.flush();
+    reader.deleteDocuments(new Term("id", "b"));
+    reader.close();
+    IndexReader.open(dir).close();
+  }
+
+  private Document createDocument(String id) {
+    Document doc = new Document();
+    doc.add(new Field("id", id, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));
+    return doc;
+  }
 }

