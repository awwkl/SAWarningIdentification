GitDiffStart: 9ca2fbe6bc1288260f666cd6fe78db3b68b7d85e | Sun Feb 23 02:22:02 2014 +0000
diff --git a/solr/contrib/morphlines-core/src/test-files/test-documents/cars.csv b/solr/contrib/morphlines-core/src/test-files/test-documents/cars.csv
index 36c4abc..8f1f9e1 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-documents/cars.csv
+++ b/solr/contrib/morphlines-core/src/test-files/test-documents/cars.csv
@@ -1,6 +1,6 @@
-Age,Color,Extras,Type,Used
-2,blue,GPS,"Gas, with electric",""
-10,green,"Labeled ""Vintage, 1913""",,yes
-100,red,"Labeled ""Vintage 1913""",yes
-5,orange,none,"This is a
+Age,Color,Extras,Type,Used
+2,blue,GPS,"Gas, with electric",""
+10,green,"Labeled ""Vintage, 1913""",,yes
+100,red,"Labeled ""Vintage 1913""",yes
+5,orange,none,"This is a
 multi, line text",no
\ No newline at end of file
diff --git a/solr/contrib/morphlines-core/src/test-files/test-documents/complex.mbox b/solr/contrib/morphlines-core/src/test-files/test-documents/complex.mbox
index 5d4a6ce..27f7017 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-documents/complex.mbox
+++ b/solr/contrib/morphlines-core/src/test-files/test-documents/complex.mbox
@@ -1,291 +1,291 @@
-From core-user-return-14700-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org Mon Jun 01 04:28:28 2009
-Return-Path: <core-user-return-14700-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org>
-Delivered-To: apmail-hadoop-core-user-archive@www.apache.org
-Received: (qmail 19921 invoked from network); 1 Jun 2009 04:28:28 -0000
-Received: from hermes.apache.org (HELO mail.apache.org) (140.211.11.3)
-  by minotaur.apache.org with SMTP; 1 Jun 2009 04:28:28 -0000
-Received: (qmail 84995 invoked by uid 500); 1 Jun 2009 04:28:38 -0000
-Delivered-To: apmail-hadoop-core-user-archive@hadoop.apache.org
-Received: (qmail 84895 invoked by uid 500); 1 Jun 2009 04:28:38 -0000
-Mailing-List: contact core-user-help@hadoop.apache.org; run by ezmlm
-Precedence: bulk
-List-Help: <mailto:core-user-help@hadoop.apache.org>
-List-Unsubscribe: <mailto:core-user-unsubscribe@hadoop.apache.org>
-List-Post: <mailto:core-user@hadoop.apache.org>
-List-Id: <core-user.hadoop.apache.org>
-Reply-To: core-user@hadoop.apache.org
-Delivered-To: mailing list core-user@hadoop.apache.org
-Received: (qmail 84885 invoked by uid 99); 1 Jun 2009 04:28:38 -0000
-Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
-    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 04:28:38 +0000
-X-ASF-Spam-Status: No, hits=1.2 required=10.0
-	tests=SPF_NEUTRAL
-X-Spam-Check-By: apache.org
-Received-SPF: neutral (athena.apache.org: local policy)
-Received: from [69.147.107.21] (HELO mrout2-b.corp.re1.wahoo.com) (69.147.107.21)
-    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 04:28:26 +0000
-Received: from SNV-EXPF01.ds.corp.wahoo.com (snv-expf01.ds.corp.wahoo.com [207.126.227.250])
-	by mrout2-b.corp.re1.wahoo.com (8.13.8/8.13.8/y.out) with ESMTP id n514QYA6099963
-	for <core-user@hadoop.apache.org>; Sun, 31 May 2009 21:26:35 -0700 (PDT)
-DomainKey-Signature: a=rsa-sha1; s=serpent; d=wahoo-inc.com; c=nofws; q=dns;
-	h=received:user-agent:date:subject:from:to:message-id:
-	thread-topic:thread-index:in-reply-to:mime-version:content-type:
-	content-transfer-encoding:x-originalarrivaltime;
-	b=YVtSNdgjeeSBS1yY3XDolul49i+HrgNG7QszMo9LzGnrwejjgsl5+iUM6EiQgEpV
-Received: from SNV-EXVS08.ds.corp.wahoo.com ([207.126.227.9]) by SNV-EXPF01.ds.corp.wahoo.com with Microsoft SMTPSVC(6.0.3790.3959);
-	 Sun, 31 May 2009 21:26:34 -0700
-Received: from 10.66.92.213 ([10.66.92.213]) by SNV-EXVS08.ds.corp.wahoo.com ([207.126.227.58]) with Microsoft Exchange Server HTTP-DAV ;
- Mon,  1 Jun 2009 04:26:33 +0000
-User-Agent: Microsoft-Entourage/12.17.0.090302
-Date: Mon, 01 Jun 2009 09:56:31 +0530
-Subject: Re: question about when shuffle/sort start working
-From: Sam Judgement <Sampn@wahoo-inc.com>
-To: <core-user@hadoop.apache.org>
-Message-ID: <C649564F.1435F%Sampn@wahoo-inc.com>
-Thread-Topic: question about when shuffle/sort start working
-Thread-Index: AcnicSNoBw19cMU8UEaXwAdZ1YYhuw==
-In-Reply-To: <440622.41041.qm@web111005.mail.gq1.wahoo.com>
-Mime-version: 1.0
-Content-type: text/plain;
-	charset="US-ASCII"
-Content-transfer-encoding: 7bit
-X-OriginalArrivalTime: 01 Jun 2009 04:26:34.0501 (UTC) FILETIME=[257EAB50:01C9E271]
-X-Virus-Checked: Checked by ClamAV on apache.org
-
-When a Mapper completes, MapCompletionEvents are generated. Reducers try to
-fetch map outputs for a given map only on the receipt of such events.
-
-Sam
-
-
-On 5/30/09 10:00 AM, "Jianmin Foo" <jianmin_Foo@wahoo.com> wrote:
-
-> Hi, 
-> I am being confused by the protocol between mapper and reducer. When mapper
-> emitting the (key,value) pair done, is there any signal the mapper send out to
-> hadoop framework in protocol to indicate that map is done and the shuffle/sort
-> can begin for reducer? If there is no this signal in protocol, when the
-> framework begin the shuffle/sort?
-> 
-> Thanks,
-> Jianmin
-> 
-> 
-> 
->       
-
-
-From core-user-return-14701-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org Mon Jun 01 05:31:14 2009
-Return-Path: <core-user-return-14701-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org>
-Delivered-To: apmail-hadoop-core-user-archive@www.apache.org
-Received: (qmail 38243 invoked from network); 1 Jun 2009 05:31:14 -0000
-Received: from hermes.apache.org (HELO mail.apache.org) (140.211.11.3)
-  by minotaur.apache.org with SMTP; 1 Jun 2009 05:31:14 -0000
-Received: (qmail 15621 invoked by uid 500); 1 Jun 2009 05:31:24 -0000
-Delivered-To: apmail-hadoop-core-user-archive@hadoop.apache.org
-Received: (qmail 15557 invoked by uid 500); 1 Jun 2009 05:31:24 -0000
-Mailing-List: contact core-user-help@hadoop.apache.org; run by ezmlm
-Precedence: bulk
-List-Help: <mailto:core-user-help@hadoop.apache.org>
-List-Unsubscribe: <mailto:core-user-unsubscribe@hadoop.apache.org>
-List-Post: <mailto:core-user@hadoop.apache.org>
-List-Id: <core-user.hadoop.apache.org>
-Reply-To: core-user@hadoop.apache.org
-Delivered-To: mailing list core-user@hadoop.apache.org
-Received: (qmail 15547 invoked by uid 99); 1 Jun 2009 05:31:24 -0000
-Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
-    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 05:31:24 +0000
-X-ASF-Spam-Status: No, hits=2.2 required=10.0
-	tests=HTML_MESSAGE,SPF_PASS
-X-Spam-Check-By: apache.org
-Received-SPF: pass (nike.apache.org: local policy)
-Received: from [68.142.237.94] (HELO n9.bullet.re3.wahoo.com) (68.142.237.94)
-    by apache.org (qpsmtpd/0.29) with SMTP; Mon, 01 Jun 2009 05:31:11 +0000
-Received: from [68.142.237.88] by n9.bullet.re3.wahoo.com with NNFMP; 01 Jun 2009 05:30:50 -0000
-Received: from [67.195.9.82] by t4.bullet.re3.wahoo.com with NNFMP; 01 Jun 2009 05:30:49 -0000
-Received: from [67.195.9.99] by t2.bullet.mail.gq1.wahoo.com with NNFMP; 01 Jun 2009 05:30:49 -0000
-Received: from [127.0.0.1] by omp103.mail.gq1.wahoo.com with NNFMP; 01 Jun 2009 05:28:01 -0000
-X-wahoo-Newman-Property: ymail-3
-X-wahoo-Newman-Id: 796121.97519.bm@omp103.mail.gq1.wahoo.com
-Received: (qmail 35264 invoked by uid 60001); 1 Jun 2009 05:30:49 -0000
-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=wahoo.com; s=s1024; t=1243834249; bh=R8qzdi/IbLyO8UwpnaujDpT9E+6bJ7nkmZN2803EmRk=; h=Message-ID:X-YMail-OSG:Received:X-Mailer:References:Date:From:Subject:To:In-Reply-To:MIME-Version:Content-Type; b=vq4c6RIDbkuLPYd8mirusIXf6DqTb/IeT55In7W00Y5Sxx1ZiXBb78yE9+TDfXJ0elsEZvqv4ocyvolGE0eGtyYeJA0mZikpRNu6pidxPNpCplOcLHBRz7YQ7iERwv3TagRlWy2Xd3oD9ZeV0A05P7WUOiNNX1PUUJD1IVdrEZo=
-DomainKey-Signature:a=rsa-sha1; q=dns; c=nofws;
-  s=s1024; d=wahoo.com;
-  h=Message-ID:X-YMail-OSG:Received:X-Mailer:References:Date:From:Subject:To:In-Reply-To:MIME-Version:Content-Type;
-  b=6HXZV98ON5vBwmE/xS8stVD0D2F4dkMY7a0suX5KVTb736JdR8G59mqBq/dWcpbFTLiCLtxi18LMb/dU1RKRGOEdn3l3j/jKXhBrhIgfg3qtNskPedXDKBvn7JGXiSkqpA/tUtPjvc0Uuk8/LaA01SQTz40Engg7nD8/EJdIAhA=;
-Message-ID: <592088.35091.qm@web111010.mail.gq1.wahoo.com>
-X-YMail-OSG: KzhhrJYVM1m.MCS6vRpRP2ZZO2PrfnbngosELDCIa91ZqvhJph4RdmzfUW0jw9W04RCSch1K730bPohwNpNBIk2QR_zt4_mfbhfq7YEPkSoz9LSXG90P9vIo5Fc8qyZN0U6vA9gtdyGQTpN5ahvillUH9nAF0TMWv2SvZJLjPlQ0Z0p8oK8ltBwGTgLrM8Jtdn9D29yoRyi3_EpVOfdD9OP.EK50Vr1XwSUYMbnpZ0WGHMwd.Yig7A6Elwadm3YVbfOdx2mfrG.jQsUAxQjRBNvbrOM57.FaE11kHTe9aoBWSeihNg--
-Received: from [216.145.54.7] by web111010.mail.gq1.wahoo.com via HTTP; Sun, 31 May 2009 22:30:49 PDT
-X-Mailer: wahooMailRC/1277.43 wahooMailWebService/0.7.289.10
-References: <C649564F.1435F%Sampn@wahoo-inc.com>
-Date: Sun, 31 May 2009 22:30:49 -0700 (PDT)
-From: Jianmin Foo <jianmin_Foo@wahoo.com>
-Subject: Re: question about when shuffle/sort start working
-To: core-user@hadoop.apache.org
-In-Reply-To: <C649564F.1435F%Sampn@wahoo-inc.com>
-MIME-Version: 1.0
-Content-Type: multipart/alternative; boundary="0-1193839393-1243834249=:35091"
-X-Virus-Checked: Checked by ClamAV on apache.org
-
---0-1193839393-1243834249=:35091
-Content-Type: text/plain; charset=us-ascii
-
-Thanks a lot for your explanation, Sam. 
-
-So is this event generated by hadoop framework? Is there any API in mapper to fire this event? Actually, I am thinking to implement a mapper that will emit some <key, value> pairs, then fire this event to let the reducer works, the same mapper task then emit some other <key, value> pairs and repeat. Do you think is this logic feasible by current API?
-
-Thanks,
-Jianmin
-
-
-
-
-
-________________________________
-From: Sam Judgement <Sampn@wahoo-inc.com>
-To: core-user@hadoop.apache.org
-Sent: Monday, June 1, 2009 12:26:31 PM
-Subject: Re: question about when shuffle/sort start working
-
-When a Mapper completes, MapCompletionEvents are generated. Reducers try to
-fetch map outputs for a given map only on the receipt of such events.
-
-Sam
-
-
-On 5/30/09 10:00 AM, "Jianmin Foo" <jianmin_woo@wahoo.com> wrote:
-
-> Hi, 
-> I am being confused by the protocol between mapper and reducer. When mapper
-> emitting the (key,value) pair done, is there any signal the mapper send out to
-> hadoop framework in protocol to indicate that map is done and the shuffle/sort
-> can begin for reducer? If there is no this signal in protocol, when the
-> framework begin the shuffle/sort?
-> 
-> Thanks,
-> Jianmin
-> 
-> 
-> 
->      
-
-
-      
---0-1193839393-1243834249=:35091--
-
-
-From core-user-return-14702-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org Mon Jun 01 06:04:30 2009
-Return-Path: <core-user-return-14702-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org>
-Delivered-To: apmail-hadoop-core-user-archive@www.apache.org
-Received: (qmail 53387 invoked from network); 1 Jun 2009 06:04:29 -0000
-Received: from hermes.apache.org (HELO mail.apache.org) (140.211.11.3)
-  by minotaur.apache.org with SMTP; 1 Jun 2009 06:04:29 -0000
-Received: (qmail 39066 invoked by uid 500); 1 Jun 2009 06:04:39 -0000
-Delivered-To: apmail-hadoop-core-user-archive@hadoop.apache.org
-Received: (qmail 38970 invoked by uid 500); 1 Jun 2009 06:04:39 -0000
-Mailing-List: contact core-user-help@hadoop.apache.org; run by ezmlm
-Precedence: bulk
-List-Help: <mailto:core-user-help@hadoop.apache.org>
-List-Unsubscribe: <mailto:core-user-unsubscribe@hadoop.apache.org>
-List-Post: <mailto:core-user@hadoop.apache.org>
-List-Id: <core-user.hadoop.apache.org>
-Reply-To: core-user@hadoop.apache.org
-Delivered-To: mailing list core-user@hadoop.apache.org
-Received: (qmail 38955 invoked by uid 99); 1 Jun 2009 06:04:39 -0000
-Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
-    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 06:04:39 +0000
-X-ASF-Spam-Status: No, hits=1.2 required=10.0
-	tests=SPF_NEUTRAL
-X-Spam-Check-By: apache.org
-Received-SPF: neutral (athena.apache.org: local policy)
-Received: from [216.145.54.172] (HELO mrout2.wahoo.com) (216.145.54.172)
-    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 06:04:28 +0000
-Received: from SNV-EXBH01.ds.corp.wahoo.com (snv-exbh01.ds.corp.wahoo.com [207.126.227.249])
-	by mrout2.wahoo.com (8.13.6/8.13.6/y.out) with ESMTP id n5163FGq038852
-	for <core-user@hadoop.apache.org>; Sun, 31 May 2009 23:03:15 -0700 (PDT)
-DomainKey-Signature: a=rsa-sha1; s=serpent; d=wahoo-inc.com; c=nofws; q=dns;
-	h=received:user-agent:date:subject:from:to:message-id:
-	thread-topic:thread-index:in-reply-to:mime-version:content-type:
-	content-transfer-encoding:x-originalarrivaltime;
-	b=rChE4SCnwtWaZpjhovkiXDKfDiVNdRRvsadSGG9S9bgvOexn/9/5JjEQx1pOR7Nb
-Received: from SNV-EXVS08.ds.corp.wahoo.com ([207.126.227.9]) by SNV-EXBH01.ds.corp.wahoo.com with Microsoft SMTPSVC(6.0.3790.3959);
-	 Sun, 31 May 2009 23:03:15 -0700
-Received: from 10.66.92.213 ([10.66.92.213]) by SNV-EXVS08.ds.corp.wahoo.com ([207.126.227.58]) with Microsoft Exchange Server HTTP-DAV ;
- Mon,  1 Jun 2009 06:03:15 +0000
-User-Agent: Microsoft-Entourage/12.17.0.090302
-Date: Mon, 01 Jun 2009 11:33:13 +0530
-Subject: Re: question about when shuffle/sort start working
-From: Sam Judgement <Sampn@wahoo-inc.com>
-To: <core-user@hadoop.apache.org>
-Message-ID: <C6496CF9.1437C%Sampn@wahoo-inc.com>
-Thread-Topic: question about when shuffle/sort start working
-Thread-Index: AcnifqWrLG6N7GAk7kqy9QalVWfegQ==
-In-Reply-To: <592088.35091.qm@web111010.mail.gq1.wahoo.com>
-Mime-version: 1.0
-Content-type: text/plain;
-	charset="US-ASCII"
-Content-transfer-encoding: 7bit
-X-OriginalArrivalTime: 01 Jun 2009 06:03:15.0462 (UTC) FILETIME=[A7231260:01C9E27E]
-X-Virus-Checked: Checked by ClamAV on apache.org
-
-
-No you cannot raise this event yourself, this event is generated internally
-by the framework. 
-
-I am guessing that what you probably want is to have a chain of MapReduce
-Jobs where the output of one is automatically fed as input to another.  You
-can look at these classes: JobControl and ChainMapper/ChainReducer.
-
-Sam
-
-On 6/1/09 11:00 AM, "Jianmin Foo" <jianmin_Foo@wahoo.com> wrote:
-
-> Thanks a lot for your explanation, Sam.
-> 
-> So is this event generated by hadoop framework? Is there any API in mapper to
-> fire this event? Actually, I am thinking to implement a mapper that will emit
-> some <key, value> pairs, then fire this event to let the reducer works, the
-> same mapper task then emit some other <key, value> pairs and repeat. Do you
-> think is this logic feasible by current API?
-> 
-> Thanks,
-> Jianmin
-> 
-> 
-> 
-> 
-> 
-> ________________________________
-> From: Sam Judgement <Sampn@wahoo-inc.com>
-> To: core-user@hadoop.apache.org
-> Sent: Monday, June 1, 2009 12:26:31 PM
-> Subject: Re: question about when shuffle/sort start working
-> 
-> When a Mapper completes, MapCompletionEvents are generated. Reducers try to
-> fetch map outputs for a given map only on the receipt of such events.
-> 
-> Sam
-> 
-> 
-> On 5/30/09 10:00 AM, "Jianmin Foo" <jianmin_foo@wahoo.com> wrote:
-> 
->> Hi, 
->> I am being confused by the protocol between mapper and reducer. When mapper
->> emitting the (key,value) pair done, is there any signal the mapper send out
->> to
->> hadoop framework in protocol to indicate that map is done and the
->> shuffle/sort
->> can begin for reducer? If there is no this signal in protocol, when the
->> framework begin the shuffle/sort?
->> 
->> Thanks,
->> Jianmin
->> 
->> 
->> 
->>      
-> 
-> 
->       
-
-
+From core-user-return-14700-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org Mon Jun 01 04:28:28 2009
+Return-Path: <core-user-return-14700-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org>
+Delivered-To: apmail-hadoop-core-user-archive@www.apache.org
+Received: (qmail 19921 invoked from network); 1 Jun 2009 04:28:28 -0000
+Received: from hermes.apache.org (HELO mail.apache.org) (140.211.11.3)
+  by minotaur.apache.org with SMTP; 1 Jun 2009 04:28:28 -0000
+Received: (qmail 84995 invoked by uid 500); 1 Jun 2009 04:28:38 -0000
+Delivered-To: apmail-hadoop-core-user-archive@hadoop.apache.org
+Received: (qmail 84895 invoked by uid 500); 1 Jun 2009 04:28:38 -0000
+Mailing-List: contact core-user-help@hadoop.apache.org; run by ezmlm
+Precedence: bulk
+List-Help: <mailto:core-user-help@hadoop.apache.org>
+List-Unsubscribe: <mailto:core-user-unsubscribe@hadoop.apache.org>
+List-Post: <mailto:core-user@hadoop.apache.org>
+List-Id: <core-user.hadoop.apache.org>
+Reply-To: core-user@hadoop.apache.org
+Delivered-To: mailing list core-user@hadoop.apache.org
+Received: (qmail 84885 invoked by uid 99); 1 Jun 2009 04:28:38 -0000
+Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
+    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 04:28:38 +0000
+X-ASF-Spam-Status: No, hits=1.2 required=10.0
+	tests=SPF_NEUTRAL
+X-Spam-Check-By: apache.org
+Received-SPF: neutral (athena.apache.org: local policy)
+Received: from [69.147.107.21] (HELO mrout2-b.corp.re1.wahoo.com) (69.147.107.21)
+    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 04:28:26 +0000
+Received: from SNV-EXPF01.ds.corp.wahoo.com (snv-expf01.ds.corp.wahoo.com [207.126.227.250])
+	by mrout2-b.corp.re1.wahoo.com (8.13.8/8.13.8/y.out) with ESMTP id n514QYA6099963
+	for <core-user@hadoop.apache.org>; Sun, 31 May 2009 21:26:35 -0700 (PDT)
+DomainKey-Signature: a=rsa-sha1; s=serpent; d=wahoo-inc.com; c=nofws; q=dns;
+	h=received:user-agent:date:subject:from:to:message-id:
+	thread-topic:thread-index:in-reply-to:mime-version:content-type:
+	content-transfer-encoding:x-originalarrivaltime;
+	b=YVtSNdgjeeSBS1yY3XDolul49i+HrgNG7QszMo9LzGnrwejjgsl5+iUM6EiQgEpV
+Received: from SNV-EXVS08.ds.corp.wahoo.com ([207.126.227.9]) by SNV-EXPF01.ds.corp.wahoo.com with Microsoft SMTPSVC(6.0.3790.3959);
+	 Sun, 31 May 2009 21:26:34 -0700
+Received: from 10.66.92.213 ([10.66.92.213]) by SNV-EXVS08.ds.corp.wahoo.com ([207.126.227.58]) with Microsoft Exchange Server HTTP-DAV ;
+ Mon,  1 Jun 2009 04:26:33 +0000
+User-Agent: Microsoft-Entourage/12.17.0.090302
+Date: Mon, 01 Jun 2009 09:56:31 +0530
+Subject: Re: question about when shuffle/sort start working
+From: Sam Judgement <Sampn@wahoo-inc.com>
+To: <core-user@hadoop.apache.org>
+Message-ID: <C649564F.1435F%Sampn@wahoo-inc.com>
+Thread-Topic: question about when shuffle/sort start working
+Thread-Index: AcnicSNoBw19cMU8UEaXwAdZ1YYhuw==
+In-Reply-To: <440622.41041.qm@web111005.mail.gq1.wahoo.com>
+Mime-version: 1.0
+Content-type: text/plain;
+	charset="US-ASCII"
+Content-transfer-encoding: 7bit
+X-OriginalArrivalTime: 01 Jun 2009 04:26:34.0501 (UTC) FILETIME=[257EAB50:01C9E271]
+X-Virus-Checked: Checked by ClamAV on apache.org
+
+When a Mapper completes, MapCompletionEvents are generated. Reducers try to
+fetch map outputs for a given map only on the receipt of such events.
+
+Sam
+
+
+On 5/30/09 10:00 AM, "Jianmin Foo" <jianmin_Foo@wahoo.com> wrote:
+
+> Hi, 
+> I am being confused by the protocol between mapper and reducer. When mapper
+> emitting the (key,value) pair done, is there any signal the mapper send out to
+> hadoop framework in protocol to indicate that map is done and the shuffle/sort
+> can begin for reducer? If there is no this signal in protocol, when the
+> framework begin the shuffle/sort?
+> 
+> Thanks,
+> Jianmin
+> 
+> 
+> 
+>       
+
+
+From core-user-return-14701-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org Mon Jun 01 05:31:14 2009
+Return-Path: <core-user-return-14701-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org>
+Delivered-To: apmail-hadoop-core-user-archive@www.apache.org
+Received: (qmail 38243 invoked from network); 1 Jun 2009 05:31:14 -0000
+Received: from hermes.apache.org (HELO mail.apache.org) (140.211.11.3)
+  by minotaur.apache.org with SMTP; 1 Jun 2009 05:31:14 -0000
+Received: (qmail 15621 invoked by uid 500); 1 Jun 2009 05:31:24 -0000
+Delivered-To: apmail-hadoop-core-user-archive@hadoop.apache.org
+Received: (qmail 15557 invoked by uid 500); 1 Jun 2009 05:31:24 -0000
+Mailing-List: contact core-user-help@hadoop.apache.org; run by ezmlm
+Precedence: bulk
+List-Help: <mailto:core-user-help@hadoop.apache.org>
+List-Unsubscribe: <mailto:core-user-unsubscribe@hadoop.apache.org>
+List-Post: <mailto:core-user@hadoop.apache.org>
+List-Id: <core-user.hadoop.apache.org>
+Reply-To: core-user@hadoop.apache.org
+Delivered-To: mailing list core-user@hadoop.apache.org
+Received: (qmail 15547 invoked by uid 99); 1 Jun 2009 05:31:24 -0000
+Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
+    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 05:31:24 +0000
+X-ASF-Spam-Status: No, hits=2.2 required=10.0
+	tests=HTML_MESSAGE,SPF_PASS
+X-Spam-Check-By: apache.org
+Received-SPF: pass (nike.apache.org: local policy)
+Received: from [68.142.237.94] (HELO n9.bullet.re3.wahoo.com) (68.142.237.94)
+    by apache.org (qpsmtpd/0.29) with SMTP; Mon, 01 Jun 2009 05:31:11 +0000
+Received: from [68.142.237.88] by n9.bullet.re3.wahoo.com with NNFMP; 01 Jun 2009 05:30:50 -0000
+Received: from [67.195.9.82] by t4.bullet.re3.wahoo.com with NNFMP; 01 Jun 2009 05:30:49 -0000
+Received: from [67.195.9.99] by t2.bullet.mail.gq1.wahoo.com with NNFMP; 01 Jun 2009 05:30:49 -0000
+Received: from [127.0.0.1] by omp103.mail.gq1.wahoo.com with NNFMP; 01 Jun 2009 05:28:01 -0000
+X-wahoo-Newman-Property: ymail-3
+X-wahoo-Newman-Id: 796121.97519.bm@omp103.mail.gq1.wahoo.com
+Received: (qmail 35264 invoked by uid 60001); 1 Jun 2009 05:30:49 -0000
+DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=wahoo.com; s=s1024; t=1243834249; bh=R8qzdi/IbLyO8UwpnaujDpT9E+6bJ7nkmZN2803EmRk=; h=Message-ID:X-YMail-OSG:Received:X-Mailer:References:Date:From:Subject:To:In-Reply-To:MIME-Version:Content-Type; b=vq4c6RIDbkuLPYd8mirusIXf6DqTb/IeT55In7W00Y5Sxx1ZiXBb78yE9+TDfXJ0elsEZvqv4ocyvolGE0eGtyYeJA0mZikpRNu6pidxPNpCplOcLHBRz7YQ7iERwv3TagRlWy2Xd3oD9ZeV0A05P7WUOiNNX1PUUJD1IVdrEZo=
+DomainKey-Signature:a=rsa-sha1; q=dns; c=nofws;
+  s=s1024; d=wahoo.com;
+  h=Message-ID:X-YMail-OSG:Received:X-Mailer:References:Date:From:Subject:To:In-Reply-To:MIME-Version:Content-Type;
+  b=6HXZV98ON5vBwmE/xS8stVD0D2F4dkMY7a0suX5KVTb736JdR8G59mqBq/dWcpbFTLiCLtxi18LMb/dU1RKRGOEdn3l3j/jKXhBrhIgfg3qtNskPedXDKBvn7JGXiSkqpA/tUtPjvc0Uuk8/LaA01SQTz40Engg7nD8/EJdIAhA=;
+Message-ID: <592088.35091.qm@web111010.mail.gq1.wahoo.com>
+X-YMail-OSG: KzhhrJYVM1m.MCS6vRpRP2ZZO2PrfnbngosELDCIa91ZqvhJph4RdmzfUW0jw9W04RCSch1K730bPohwNpNBIk2QR_zt4_mfbhfq7YEPkSoz9LSXG90P9vIo5Fc8qyZN0U6vA9gtdyGQTpN5ahvillUH9nAF0TMWv2SvZJLjPlQ0Z0p8oK8ltBwGTgLrM8Jtdn9D29yoRyi3_EpVOfdD9OP.EK50Vr1XwSUYMbnpZ0WGHMwd.Yig7A6Elwadm3YVbfOdx2mfrG.jQsUAxQjRBNvbrOM57.FaE11kHTe9aoBWSeihNg--
+Received: from [216.145.54.7] by web111010.mail.gq1.wahoo.com via HTTP; Sun, 31 May 2009 22:30:49 PDT
+X-Mailer: wahooMailRC/1277.43 wahooMailWebService/0.7.289.10
+References: <C649564F.1435F%Sampn@wahoo-inc.com>
+Date: Sun, 31 May 2009 22:30:49 -0700 (PDT)
+From: Jianmin Foo <jianmin_Foo@wahoo.com>
+Subject: Re: question about when shuffle/sort start working
+To: core-user@hadoop.apache.org
+In-Reply-To: <C649564F.1435F%Sampn@wahoo-inc.com>
+MIME-Version: 1.0
+Content-Type: multipart/alternative; boundary="0-1193839393-1243834249=:35091"
+X-Virus-Checked: Checked by ClamAV on apache.org
+
+--0-1193839393-1243834249=:35091
+Content-Type: text/plain; charset=us-ascii
+
+Thanks a lot for your explanation, Sam. 
+
+So is this event generated by hadoop framework? Is there any API in mapper to fire this event? Actually, I am thinking to implement a mapper that will emit some <key, value> pairs, then fire this event to let the reducer works, the same mapper task then emit some other <key, value> pairs and repeat. Do you think is this logic feasible by current API?
+
+Thanks,
+Jianmin
+
+
+
+
+
+________________________________
+From: Sam Judgement <Sampn@wahoo-inc.com>
+To: core-user@hadoop.apache.org
+Sent: Monday, June 1, 2009 12:26:31 PM
+Subject: Re: question about when shuffle/sort start working
+
+When a Mapper completes, MapCompletionEvents are generated. Reducers try to
+fetch map outputs for a given map only on the receipt of such events.
+
+Sam
+
+
+On 5/30/09 10:00 AM, "Jianmin Foo" <jianmin_woo@wahoo.com> wrote:
+
+> Hi, 
+> I am being confused by the protocol between mapper and reducer. When mapper
+> emitting the (key,value) pair done, is there any signal the mapper send out to
+> hadoop framework in protocol to indicate that map is done and the shuffle/sort
+> can begin for reducer? If there is no this signal in protocol, when the
+> framework begin the shuffle/sort?
+> 
+> Thanks,
+> Jianmin
+> 
+> 
+> 
+>      
+
+
+      
+--0-1193839393-1243834249=:35091--
+
+
+From core-user-return-14702-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org Mon Jun 01 06:04:30 2009
+Return-Path: <core-user-return-14702-apmail-hadoop-core-user-archive=hadoop.apache.org@hadoop.apache.org>
+Delivered-To: apmail-hadoop-core-user-archive@www.apache.org
+Received: (qmail 53387 invoked from network); 1 Jun 2009 06:04:29 -0000
+Received: from hermes.apache.org (HELO mail.apache.org) (140.211.11.3)
+  by minotaur.apache.org with SMTP; 1 Jun 2009 06:04:29 -0000
+Received: (qmail 39066 invoked by uid 500); 1 Jun 2009 06:04:39 -0000
+Delivered-To: apmail-hadoop-core-user-archive@hadoop.apache.org
+Received: (qmail 38970 invoked by uid 500); 1 Jun 2009 06:04:39 -0000
+Mailing-List: contact core-user-help@hadoop.apache.org; run by ezmlm
+Precedence: bulk
+List-Help: <mailto:core-user-help@hadoop.apache.org>
+List-Unsubscribe: <mailto:core-user-unsubscribe@hadoop.apache.org>
+List-Post: <mailto:core-user@hadoop.apache.org>
+List-Id: <core-user.hadoop.apache.org>
+Reply-To: core-user@hadoop.apache.org
+Delivered-To: mailing list core-user@hadoop.apache.org
+Received: (qmail 38955 invoked by uid 99); 1 Jun 2009 06:04:39 -0000
+Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
+    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 06:04:39 +0000
+X-ASF-Spam-Status: No, hits=1.2 required=10.0
+	tests=SPF_NEUTRAL
+X-Spam-Check-By: apache.org
+Received-SPF: neutral (athena.apache.org: local policy)
+Received: from [216.145.54.172] (HELO mrout2.wahoo.com) (216.145.54.172)
+    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 01 Jun 2009 06:04:28 +0000
+Received: from SNV-EXBH01.ds.corp.wahoo.com (snv-exbh01.ds.corp.wahoo.com [207.126.227.249])
+	by mrout2.wahoo.com (8.13.6/8.13.6/y.out) with ESMTP id n5163FGq038852
+	for <core-user@hadoop.apache.org>; Sun, 31 May 2009 23:03:15 -0700 (PDT)
+DomainKey-Signature: a=rsa-sha1; s=serpent; d=wahoo-inc.com; c=nofws; q=dns;
+	h=received:user-agent:date:subject:from:to:message-id:
+	thread-topic:thread-index:in-reply-to:mime-version:content-type:
+	content-transfer-encoding:x-originalarrivaltime;
+	b=rChE4SCnwtWaZpjhovkiXDKfDiVNdRRvsadSGG9S9bgvOexn/9/5JjEQx1pOR7Nb
+Received: from SNV-EXVS08.ds.corp.wahoo.com ([207.126.227.9]) by SNV-EXBH01.ds.corp.wahoo.com with Microsoft SMTPSVC(6.0.3790.3959);
+	 Sun, 31 May 2009 23:03:15 -0700
+Received: from 10.66.92.213 ([10.66.92.213]) by SNV-EXVS08.ds.corp.wahoo.com ([207.126.227.58]) with Microsoft Exchange Server HTTP-DAV ;
+ Mon,  1 Jun 2009 06:03:15 +0000
+User-Agent: Microsoft-Entourage/12.17.0.090302
+Date: Mon, 01 Jun 2009 11:33:13 +0530
+Subject: Re: question about when shuffle/sort start working
+From: Sam Judgement <Sampn@wahoo-inc.com>
+To: <core-user@hadoop.apache.org>
+Message-ID: <C6496CF9.1437C%Sampn@wahoo-inc.com>
+Thread-Topic: question about when shuffle/sort start working
+Thread-Index: AcnifqWrLG6N7GAk7kqy9QalVWfegQ==
+In-Reply-To: <592088.35091.qm@web111010.mail.gq1.wahoo.com>
+Mime-version: 1.0
+Content-type: text/plain;
+	charset="US-ASCII"
+Content-transfer-encoding: 7bit
+X-OriginalArrivalTime: 01 Jun 2009 06:03:15.0462 (UTC) FILETIME=[A7231260:01C9E27E]
+X-Virus-Checked: Checked by ClamAV on apache.org
+
+
+No you cannot raise this event yourself, this event is generated internally
+by the framework. 
+
+I am guessing that what you probably want is to have a chain of MapReduce
+Jobs where the output of one is automatically fed as input to another.  You
+can look at these classes: JobControl and ChainMapper/ChainReducer.
+
+Sam
+
+On 6/1/09 11:00 AM, "Jianmin Foo" <jianmin_Foo@wahoo.com> wrote:
+
+> Thanks a lot for your explanation, Sam.
+> 
+> So is this event generated by hadoop framework? Is there any API in mapper to
+> fire this event? Actually, I am thinking to implement a mapper that will emit
+> some <key, value> pairs, then fire this event to let the reducer works, the
+> same mapper task then emit some other <key, value> pairs and repeat. Do you
+> think is this logic feasible by current API?
+> 
+> Thanks,
+> Jianmin
+> 
+> 
+> 
+> 
+> 
+> ________________________________
+> From: Sam Judgement <Sampn@wahoo-inc.com>
+> To: core-user@hadoop.apache.org
+> Sent: Monday, June 1, 2009 12:26:31 PM
+> Subject: Re: question about when shuffle/sort start working
+> 
+> When a Mapper completes, MapCompletionEvents are generated. Reducers try to
+> fetch map outputs for a given map only on the receipt of such events.
+> 
+> Sam
+> 
+> 
+> On 5/30/09 10:00 AM, "Jianmin Foo" <jianmin_foo@wahoo.com> wrote:
+> 
+>> Hi, 
+>> I am being confused by the protocol between mapper and reducer. When mapper
+>> emitting the (key,value) pair done, is there any signal the mapper send out
+>> to
+>> hadoop framework in protocol to indicate that map is done and the
+>> shuffle/sort
+>> can begin for reducer? If there is no this signal in protocol, when the
+>> framework begin the shuffle/sort?
+>> 
+>> Thanks,
+>> Jianmin
+>> 
+>> 
+>> 
+>>      
+> 
+> 
+>       
+
+
diff --git a/solr/contrib/morphlines-core/src/test-files/test-documents/email.eml b/solr/contrib/morphlines-core/src/test-files/test-documents/email.eml
index 2680f64..d45f430 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-documents/email.eml
+++ b/solr/contrib/morphlines-core/src/test-files/test-documents/email.eml
@@ -1,40 +1,40 @@
-MIME-Version: 1.0
-Received: by 10.216.199.5 with HTTP; Wed, 27 Nov 2013 12:01:23 -0800
-(PST)
-Date: Wed, 27 Nov 2013 13:01:23 -0700
-Delivered-To: foo@cloudera.com
-Message-ID:
-<CAOi5V169EW4GCfde_aNKSBgqAD=KSPVO6Batw_Oko-8cmAgK6w@mail.gmail.com>
-Subject: Test EML
-From: Patrick Foo <foo@cloudera.com>
-To: Patrick Foo <foo@cloudera.com>
-Content-Type: multipart/alternative;
-boundary=001a11c3815cb55dda04ec2e0f3b
-
---001a11c3815cb55dda04ec2e0f3b
-Content-Type: text/plain; charset=ISO-8859-1
-
-This is a test
-
--- 
-Patrick Foo
-Customer Operations Engineer
-
-<http://www.cloudera.com>
-
---001a11c3815cb55dda04ec2e0f3b
-Content-Type: text/html; charset=ISO-8859-1
-Content-Transfer-Encoding: quoted-printable
-
-<div dir=3D"ltr">This is a test<br clear=3D"all"><div><br></div>--
-<br><div=
- dir=3D"ltr">Patrick Foo<div>Customer Operations
-Engineer</div><div><br>=
-</div><div><a href=3D"http://www.cloudera.com" target=3D"_blank"><img
-src=
-=3D"http://files.cloudera.com.s3.amazonaws.com/New%20Branding/cloudera-smal=
-l.png"></a><br>
-</div></div>
-</div>
-
---001a11c3815cb55dda04ec2e0f3b--
+MIME-Version: 1.0
+Received: by 10.216.199.5 with HTTP; Wed, 27 Nov 2013 12:01:23 -0800
+(PST)
+Date: Wed, 27 Nov 2013 13:01:23 -0700
+Delivered-To: foo@cloudera.com
+Message-ID:
+<CAOi5V169EW4GCfde_aNKSBgqAD=KSPVO6Batw_Oko-8cmAgK6w@mail.gmail.com>
+Subject: Test EML
+From: Patrick Foo <foo@cloudera.com>
+To: Patrick Foo <foo@cloudera.com>
+Content-Type: multipart/alternative;
+boundary=001a11c3815cb55dda04ec2e0f3b
+
+--001a11c3815cb55dda04ec2e0f3b
+Content-Type: text/plain; charset=ISO-8859-1
+
+This is a test
+
+-- 
+Patrick Foo
+Customer Operations Engineer
+
+<http://www.cloudera.com>
+
+--001a11c3815cb55dda04ec2e0f3b
+Content-Type: text/html; charset=ISO-8859-1
+Content-Transfer-Encoding: quoted-printable
+
+<div dir=3D"ltr">This is a test<br clear=3D"all"><div><br></div>--
+<br><div=
+ dir=3D"ltr">Patrick Foo<div>Customer Operations
+Engineer</div><div><br>=
+</div><div><a href=3D"http://www.cloudera.com" target=3D"_blank"><img
+src=
+=3D"http://files.cloudera.com.s3.amazonaws.com/New%20Branding/cloudera-smal=
+l.png"></a><br>
+</div></div>
+</div>
+
+--001a11c3815cb55dda04ec2e0f3b--
diff --git a/solr/contrib/morphlines-core/src/test-files/test-documents/rsstest.rss b/solr/contrib/morphlines-core/src/test-files/test-documents/rsstest.rss
index e209bb7..758f6a1 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-documents/rsstest.rss
+++ b/solr/contrib/morphlines-core/src/test-files/test-documents/rsstest.rss
@@ -1,36 +1,36 @@
-<?xml version="1.0" encoding="ISO-8859-1" ?>
-<!--
-	Licensed to the Apache Software Foundation (ASF) under one or more
-	contributor license agreements.  See the NOTICE file distributed with
-	this work for additional information regarding copyright ownership.
-	The ASF licenses this file to You under the Apache License, Version 2.0
-	(the "License"); you may not use this file except in compliance with
-	the License.  You may obtain a copy of the License at
-	
-	http://www.apache.org/licenses/LICENSE-2.0
-	
-	Unless required by applicable law or agreed to in writing, software
-	distributed under the License is distributed on an "AS IS" BASIS,
-	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-	See the License for the specific language governing permissions and
-	limitations under the License.
--->
-<rss version="0.91">
-    <channel>
-      <title>TestChannel</title>
-      <link>http://test.channel.com/</link> 
-      <description>Sample RSS File for Junit test</description> 
-      <language>en-us</language>
-      
-      <item>
-        <title>Home Page of Chris Mattmann</title>
-        <link>http://www-scf.usc.edu/~mattmann/</link>
-        <description>Chris Mattmann's home page</description>
-      </item>
-      <item>
-        <title>Awesome Open Source Search Engine</title> 
-        <link>http://www.nutch.org/</link> 
-        <description>Yup, that's what it is</description> 
-      </item>
-   </channel>
-</rss>
+<?xml version="1.0" encoding="ISO-8859-1" ?>
+<!--
+	Licensed to the Apache Software Foundation (ASF) under one or more
+	contributor license agreements.  See the NOTICE file distributed with
+	this work for additional information regarding copyright ownership.
+	The ASF licenses this file to You under the Apache License, Version 2.0
+	(the "License"); you may not use this file except in compliance with
+	the License.  You may obtain a copy of the License at
+	
+	http://www.apache.org/licenses/LICENSE-2.0
+	
+	Unless required by applicable law or agreed to in writing, software
+	distributed under the License is distributed on an "AS IS" BASIS,
+	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+	See the License for the specific language governing permissions and
+	limitations under the License.
+-->
+<rss version="0.91">
+    <channel>
+      <title>TestChannel</title>
+      <link>http://test.channel.com/</link> 
+      <description>Sample RSS File for Junit test</description> 
+      <language>en-us</language>
+      
+      <item>
+        <title>Home Page of Chris Mattmann</title>
+        <link>http://www-scf.usc.edu/~mattmann/</link>
+        <description>Chris Mattmann's home page</description>
+      </item>
+      <item>
+        <title>Awesome Open Source Search Engine</title> 
+        <link>http://www.nutch.org/</link> 
+        <description>Yup, that's what it is</description> 
+      </item>
+   </channel>
+</rss>
diff --git a/solr/contrib/morphlines-core/src/test-files/test-documents/sample-statuses-20120906-141433 b/solr/contrib/morphlines-core/src/test-files/test-documents/sample-statuses-20120906-141433
index 380ab6e..e633a1f 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-documents/sample-statuses-20120906-141433
+++ b/solr/contrib/morphlines-core/src/test-files/test-documents/sample-statuses-20120906-141433
@@ -1,4 +1,4 @@
-1000
-{"text":"sample tweet one","retweet_count":0,"in_reply_to_user_id":null,"retweeted":false,"truncated":false,"source":"href=\"http:\/\/sample.com\"","id_str":"1234567891","entities":{"user_mentions":[],"hashtags":[],"urls":[]},"in_reply_to_status_id":null,"place":null,"in_reply_to_status_id_str":null,"coordinates":null,"created_at":"Wed Sep 05 01:01:01 +0000 1985","in_reply_to_screen_name":null,"favorited":false,"in_reply_to_user_id_str":null,"user":{"default_profile_image":false,"friends_count":111,"profile_background_color":"3C0C29","location":"Palo Alto","is_translator":false,"profile_background_tile":true,"favourites_count":11,"verified":false,"profile_sidebar_fill_color":"efefef","follow_request_sent":null,"contributors_enabled":false,"description":"desc1","profile_sidebar_border_color":"eeeeee","profile_image_url_https":"https:\/\/si0.twimg.com\/profile_images\/1\/normal.jpg","id_str":"1111111","listed_count":1,"lang":"en","screen_name":"fake_user1","show_all_inline_media":false,"profile_use_background_image":true,"profile_image_url":"http:\/\/a0.twimg.com\/profile_images\/1111111\/normal.jpg","default_profile":false,"statuses_count":11111,"created_at":"Thu Apr 07 11:04:54 +0000 1985","profile_text_color":"333333","followers_count":111,"protected":false,"following":null,"notifications":null,"profile_background_image_url":"http:\/\/a0.twimg.com\/images\/themes\/theme1\/bg.gif","time_zone":null,"url":null,"name":"name1","geo_enabled":false,"profile_link_color":"009999","id":1111112,"profile_background_image_url_https":"https:\/\/si0.twimg.com\/images\/themes\/theme1\/bg.gif","utc_offset":null},"id":11111112,"contributors":null,"geo":null}
-2000
+1000
+{"text":"sample tweet one","retweet_count":0,"in_reply_to_user_id":null,"retweeted":false,"truncated":false,"source":"href=\"http:\/\/sample.com\"","id_str":"1234567891","entities":{"user_mentions":[],"hashtags":[],"urls":[]},"in_reply_to_status_id":null,"place":null,"in_reply_to_status_id_str":null,"coordinates":null,"created_at":"Wed Sep 05 01:01:01 +0000 1985","in_reply_to_screen_name":null,"favorited":false,"in_reply_to_user_id_str":null,"user":{"default_profile_image":false,"friends_count":111,"profile_background_color":"3C0C29","location":"Palo Alto","is_translator":false,"profile_background_tile":true,"favourites_count":11,"verified":false,"profile_sidebar_fill_color":"efefef","follow_request_sent":null,"contributors_enabled":false,"description":"desc1","profile_sidebar_border_color":"eeeeee","profile_image_url_https":"https:\/\/si0.twimg.com\/profile_images\/1\/normal.jpg","id_str":"1111111","listed_count":1,"lang":"en","screen_name":"fake_user1","show_all_inline_media":false,"profile_use_background_image":true,"profile_image_url":"http:\/\/a0.twimg.com\/profile_images\/1111111\/normal.jpg","default_profile":false,"statuses_count":11111,"created_at":"Thu Apr 07 11:04:54 +0000 1985","profile_text_color":"333333","followers_count":111,"protected":false,"following":null,"notifications":null,"profile_background_image_url":"http:\/\/a0.twimg.com\/images\/themes\/theme1\/bg.gif","time_zone":null,"url":null,"name":"name1","geo_enabled":false,"profile_link_color":"009999","id":1111112,"profile_background_image_url_https":"https:\/\/si0.twimg.com\/images\/themes\/theme1\/bg.gif","utc_offset":null},"id":11111112,"contributors":null,"geo":null}
+2000
 {"text":"sample tweet two","retweet_count":0,"in_reply_to_user_id":null,"retweeted":false,"truncated":false,"source":"href=\"http:\/\/sample.com\"","id_str":"2345678902","entities":{"user_mentions":[],"hashtags":[],"urls":[]},"in_reply_to_status_id":null,"place":null,"in_reply_to_status_id_str":null,"coordinates":null,"created_at":"Wed Sep 05 02:14:34 +0000 1985","in_reply_to_screen_name":null,"favorited":false,"in_reply_to_user_id_str":null,"user":{"default_profile_image":false,"friends_count":222,"profile_background_color":"3C0C29","location":"San Francisco","is_translator":false,"profile_background_tile":false,"favourites_count":22,"verified":false,"profile_sidebar_fill_color":"B2D948","follow_request_sent":null,"contributors_enabled":false,"description":"desc2","profile_sidebar_border_color":"8EC63D","profile_image_url_https":"https:\/\/si0.twimg.com\/profile_images\/22222222\/image_normal.jpg","id_str":"2222222","listed_count":0,"lang":"en","screen_name":"fake_user2","show_all_inline_media":false,"profile_use_background_image":true,"profile_image_url":"http:\/\/a0.twimg.com\/profile_images\/2222222\/image_normal.jpg","default_profile":false,"statuses_count":222222,"created_at":"Thu Aug 04 11:33:28 +0000 1985","profile_text_color":"444444","followers_count":222,"protected":false,"following":null,"notifications":null,"profile_background_image_url":"http:\/\/a0.twimg.com\/profile_background_images\/222222\/222222.jpg","time_zone":"Central Time (US & Canada)","url":null,"name":"name2","geo_enabled":false,"profile_link_color":"9A0057","id":2222223,"profile_background_image_url_https":"https:\/\/si0.twimg.com\/profile_background_images\/2222222\/22222.jpg","utc_offset":-21600},"id":222223,"contributors":null,"geo":null}
\ No newline at end of file
diff --git a/solr/contrib/morphlines-core/src/test-files/test-documents/testEMLX.emlx b/solr/contrib/morphlines-core/src/test-files/test-documents/testEMLX.emlx
index 89ae910..66766e1 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-documents/testEMLX.emlx
+++ b/solr/contrib/morphlines-core/src/test-files/test-documents/testEMLX.emlx
@@ -1,72 +1,72 @@
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-1795
-From: "Julien Nioche (JIRA)" <jira@apache.org>
-To: dev@tika.apache.org
-Subject: [jira] Commented: (TIKA-461) RFC822 messages not parsed
-Reply-To: dev@tika.apache.org
-Delivered-To: mailing list dev@tika.apache.org
-Date: Mon, 6 Sep 2010 05:25:34 -0400 (EDT)
-In-Reply-To: <6089099.260231278600349994.JavaMail.jira@thor>
-MIME-Version: 1.0
-Content-Type: text/plain; charset=utf-8
-Content-Transfer-Encoding: 7bit
-X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394
-X-Virus-Checked: Checked by ClamAV on apache.org
-
-
-    [ https://issues.apache.org/jira/browse/TIKA-461?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=12906468#action_12906468 ] 
-
-Julien Nioche commented on TIKA-461:
-------------------------------------
-
-I'll have a look at mime4j and try to use it in Tika
-
-> RFC822 messages not parsed
-> --------------------------
->
->                 Key: TIKA-461
->                 URL: https://issues.apache.org/jira/browse/TIKA-461
->             Project: Tika
->          Issue Type: Bug
->          Components: parser
->    Affects Versions: 0.7
->            Reporter: Joshua Turner
->            Assignee: Julien Nioche
->
-> Presented with an RFC822 message exported from Thunderbird, AutodetectParser produces an empty body, and a Metadata containing only one key-value pair: "Content-Type=message/rfc822". Directly calling MboxParser likewise gives an empty body, but with two metadata pairs: "Content-Encoding=us-ascii Content-Type=application/mbox".
-> A quick peek at the source of MboxParser shows that the implementation is pretty naive. If the wiring can be sorted out, something like Apache James' mime4j might be a better bet.
-
--- 
-This message is automatically generated by JIRA.
--
-You can reply to this email to add a comment to the issue online.
-
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>flags</key>
-	<integer>0</integer>
-	<key>sender</key>
-	<string>"Julien Nioche (JIRA)" &lt;jira@apache.org&gt;</string>
-	<key>subject</key>
-	<string>[jira] Commented: (TIKA-461) RFC822 messages not parsed</string>
-	<key>to</key>
-	<string>dev@tika.apache.org</string></dict>
-</plist>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+1795
+From: "Julien Nioche (JIRA)" <jira@apache.org>
+To: dev@tika.apache.org
+Subject: [jira] Commented: (TIKA-461) RFC822 messages not parsed
+Reply-To: dev@tika.apache.org
+Delivered-To: mailing list dev@tika.apache.org
+Date: Mon, 6 Sep 2010 05:25:34 -0400 (EDT)
+In-Reply-To: <6089099.260231278600349994.JavaMail.jira@thor>
+MIME-Version: 1.0
+Content-Type: text/plain; charset=utf-8
+Content-Transfer-Encoding: 7bit
+X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394
+X-Virus-Checked: Checked by ClamAV on apache.org
+
+
+    [ https://issues.apache.org/jira/browse/TIKA-461?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=12906468#action_12906468 ] 
+
+Julien Nioche commented on TIKA-461:
+------------------------------------
+
+I'll have a look at mime4j and try to use it in Tika
+
+> RFC822 messages not parsed
+> --------------------------
+>
+>                 Key: TIKA-461
+>                 URL: https://issues.apache.org/jira/browse/TIKA-461
+>             Project: Tika
+>          Issue Type: Bug
+>          Components: parser
+>    Affects Versions: 0.7
+>            Reporter: Joshua Turner
+>            Assignee: Julien Nioche
+>
+> Presented with an RFC822 message exported from Thunderbird, AutodetectParser produces an empty body, and a Metadata containing only one key-value pair: "Content-Type=message/rfc822". Directly calling MboxParser likewise gives an empty body, but with two metadata pairs: "Content-Encoding=us-ascii Content-Type=application/mbox".
+> A quick peek at the source of MboxParser shows that the implementation is pretty naive. If the wiring can be sorted out, something like Apache James' mime4j might be a better bet.
+
+-- 
+This message is automatically generated by JIRA.
+-
+You can reply to this email to add a comment to the issue online.
+
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>flags</key>
+	<integer>0</integer>
+	<key>sender</key>
+	<string>"Julien Nioche (JIRA)" &lt;jira@apache.org&gt;</string>
+	<key>subject</key>
+	<string>[jira] Commented: (TIKA-461) RFC822 messages not parsed</string>
+	<key>to</key>
+	<string>dev@tika.apache.org</string></dict>
+</plist>
diff --git a/solr/contrib/morphlines-core/src/test-files/test-documents/testRFC822 b/solr/contrib/morphlines-core/src/test-files/test-documents/testRFC822
index 22fbf15..9ce423a 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-documents/testRFC822
+++ b/solr/contrib/morphlines-core/src/test-files/test-documents/testRFC822
@@ -1,41 +1,41 @@
-From: "Julien Nioche (JIRA)" <jira@apache.org>
-To: dev@tika.apache.org
-Subject: [jira] Commented: (TIKA-461) RFC822 messages not parsed
-Reply-To: dev@tika.apache.org
-Delivered-To: mailing list dev@tika.apache.org
-Date: Mon, 6 Sep 2010 05:25:34 -0400 (EDT)
-In-Reply-To: <6089099.260231278600349994.JavaMail.jira@thor>
-MIME-Version: 1.0
-Content-Type: text/plain; charset=utf-8
-Content-Transfer-Encoding: 7bit
-X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394
-X-Virus-Checked: Checked by ClamAV on apache.org
-
-
-    [ https://issues.apache.org/jira/browse/TIKA-461?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=12906468#action_12906468 ] 
-
-Julien Nioche commented on TIKA-461:
-------------------------------------
-
-I'll have a look at mime4j and try to use it in Tika
-
-> RFC822 messages not parsed
-> --------------------------
->
->                 Key: TIKA-461
->                 URL: https://issues.apache.org/jira/browse/TIKA-461
->             Project: Tika
->          Issue Type: Bug
->          Components: parser
->    Affects Versions: 0.7
->            Reporter: Joshua Turner
->            Assignee: Julien Nioche
->
-> Presented with an RFC822 message exported from Thunderbird, AutodetectParser produces an empty body, and a Metadata containing only one key-value pair: "Content-Type=message/rfc822". Directly calling MboxParser likewise gives an empty body, but with two metadata pairs: "Content-Encoding=us-ascii Content-Type=application/mbox".
-> A quick peek at the source of MboxParser shows that the implementation is pretty naive. If the wiring can be sorted out, something like Apache James' mime4j might be a better bet.
-
--- 
-This message is automatically generated by JIRA.
--
-You can reply to this email to add a comment to the issue online.
-
+From: "Julien Nioche (JIRA)" <jira@apache.org>
+To: dev@tika.apache.org
+Subject: [jira] Commented: (TIKA-461) RFC822 messages not parsed
+Reply-To: dev@tika.apache.org
+Delivered-To: mailing list dev@tika.apache.org
+Date: Mon, 6 Sep 2010 05:25:34 -0400 (EDT)
+In-Reply-To: <6089099.260231278600349994.JavaMail.jira@thor>
+MIME-Version: 1.0
+Content-Type: text/plain; charset=utf-8
+Content-Transfer-Encoding: 7bit
+X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394
+X-Virus-Checked: Checked by ClamAV on apache.org
+
+
+    [ https://issues.apache.org/jira/browse/TIKA-461?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=12906468#action_12906468 ] 
+
+Julien Nioche commented on TIKA-461:
+------------------------------------
+
+I'll have a look at mime4j and try to use it in Tika
+
+> RFC822 messages not parsed
+> --------------------------
+>
+>                 Key: TIKA-461
+>                 URL: https://issues.apache.org/jira/browse/TIKA-461
+>             Project: Tika
+>          Issue Type: Bug
+>          Components: parser
+>    Affects Versions: 0.7
+>            Reporter: Joshua Turner
+>            Assignee: Julien Nioche
+>
+> Presented with an RFC822 message exported from Thunderbird, AutodetectParser produces an empty body, and a Metadata containing only one key-value pair: "Content-Type=message/rfc822". Directly calling MboxParser likewise gives an empty body, but with two metadata pairs: "Content-Encoding=us-ascii Content-Type=application/mbox".
+> A quick peek at the source of MboxParser shows that the implementation is pretty naive. If the wiring can be sorted out, something like Apache James' mime4j might be a better bet.
+
+-- 
+This message is automatically generated by JIRA.
+-
+You can reply to this email to add a comment to the issue online.
+
diff --git a/solr/contrib/morphlines-core/src/test-files/test-documents/testSVG.svg b/solr/contrib/morphlines-core/src/test-files/test-documents/testSVG.svg
index 857e4fe..8a05a48 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-documents/testSVG.svg
+++ b/solr/contrib/morphlines-core/src/test-files/test-documents/testSVG.svg
@@ -1,23 +1,23 @@
-<?xml version="1.0"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
-          "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg width="1cm" height="1cm" version="1.1" xmlns="http://www.w3.org/2000/svg">
-  <desc>Test SVG image</desc>
-  <rect x="0.1cm" y="0.1cm" width="0.8cm" height="0.8cm"/>
+<?xml version="1.0"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
+          "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg width="1cm" height="1cm" version="1.1" xmlns="http://www.w3.org/2000/svg">
+  <desc>Test SVG image</desc>
+  <rect x="0.1cm" y="0.1cm" width="0.8cm" height="0.8cm"/>
 </svg>
\ No newline at end of file
diff --git a/solr/contrib/morphlines-core/src/test-files/test-morphlines/loadSolrBasic.conf b/solr/contrib/morphlines-core/src/test-files/test-morphlines/loadSolrBasic.conf
index 3cfe050..190d0e4 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-morphlines/loadSolrBasic.conf
+++ b/solr/contrib/morphlines-core/src/test-files/test-morphlines/loadSolrBasic.conf
@@ -1,63 +1,63 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-
-# morphline.conf example file
-# this is a comment
-// this is yet another comment
-
-# for details see https://github.com/typesafehub/config#optional-system-or-env-variable-overrides
-SOLR_COLLECTION : "collection1"
-SOLR_COLLECTION : ${?ENV_SOLR_COLLECTION}
-
-ZK_HOST : "127.0.0.1:2181/solr"
-ZK_HOST : ${?ENV_ZK_HOST}
-
-SOLR_HOME_DIR : "example/solr/collection1"
-SOLR_HOME_DIR : ${?ENV_SOLR_HOME_DIR}
-
-SOLR_LOCATOR : {
-  collection : ${SOLR_COLLECTION}
-  zkHost : ${ZK_HOST}
-  solrHomeDir : ${SOLR_HOME_DIR}
-  # batchSize : 1000
-}
-SOLR_LOCATOR : ${?ENV_SOLR_LOCATOR}
-
-morphlines : [
-  {
-    id : morphline1
-    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
-    
-    commands : [                    
-      { 
-        sanitizeUnknownSolrFields {
-          solrLocator : ${SOLR_LOCATOR}
-        }
-      } 
-      
-      { 
-        loadSolr {
-          solrLocator : ${SOLR_LOCATOR}
-          boosts : {
-            id : 1.0
-          }
-        }
-      }
-       
-      { logDebug { format : "output record: {}", args : ["@{}"] } }    
-    ]
-  }
-]
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+
+# morphline.conf example file
+# this is a comment
+// this is yet another comment
+
+# for details see https://github.com/typesafehub/config#optional-system-or-env-variable-overrides
+SOLR_COLLECTION : "collection1"
+SOLR_COLLECTION : ${?ENV_SOLR_COLLECTION}
+
+ZK_HOST : "127.0.0.1:2181/solr"
+ZK_HOST : ${?ENV_ZK_HOST}
+
+SOLR_HOME_DIR : "example/solr/collection1"
+SOLR_HOME_DIR : ${?ENV_SOLR_HOME_DIR}
+
+SOLR_LOCATOR : {
+  collection : ${SOLR_COLLECTION}
+  zkHost : ${ZK_HOST}
+  solrHomeDir : ${SOLR_HOME_DIR}
+  # batchSize : 1000
+}
+SOLR_LOCATOR : ${?ENV_SOLR_LOCATOR}
+
+morphlines : [
+  {
+    id : morphline1
+    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
+    
+    commands : [                    
+      { 
+        sanitizeUnknownSolrFields {
+          solrLocator : ${SOLR_LOCATOR}
+        }
+      } 
+      
+      { 
+        loadSolr {
+          solrLocator : ${SOLR_LOCATOR}
+          boosts : {
+            id : 1.0
+          }
+        }
+      }
+       
+      { logDebug { format : "output record: {}", args : ["@{}"] } }    
+    ]
+  }
+]
diff --git a/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellDocumentTypes.conf b/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellDocumentTypes.conf
index b1aa119..7d232dd 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellDocumentTypes.conf
+++ b/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellDocumentTypes.conf
@@ -1,283 +1,283 @@
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# Application configuration file in HOCON format (Human-Optimized Config Object Notation). 
-# HOCON syntax is defined at http://github.com/typesafehub/config/blob/master/HOCON.md
-# and also used by Akka (http://www.akka.io) and Play (http://www.playframework.org/).
-# For more examples see http://doc.akka.io/docs/akka/2.1.2/general/configuration.html
-
-# morphline.conf example file
-# this is a comment
-// this is yet another comment
-
-morphlines : [
-  {
-    id : morphline1
-    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
-    
-    commands : [
-      { separateAttachments {} }
-
-      # java command that doesn't do anything except for test compilation      
-      { 
-        java { 
-          imports : "import java.util.*;"
-          code: """
-            List tags = record.get("javaWithImports"); 
-            return child.process(record);
-                """ 
-        } 
-      }
-      
-      # java command that doesn't do anything except for test compilation      
-      { 
-        java { 
-          code: """
-            List tags = record.get("javaWithoutImports"); 
-            return child.process(record);
-                """ 
-        } 
-      }
-            
-      { 
-        # used for auto-detection if MIME type isn't explicitly supplied
-        detectMimeType { 
-          includeDefaultMimeTypes : true
-          mimeTypesFiles : ["RESOURCES_DIR/custom-mimetypes.xml"]
-        }
-      }
-      
-      {
-        tryRules {
-          throwExceptionIfAllRulesFailed : true
-          rules : [      
-            # next top-level rule:      
-            {
-              commands : [ 
-                { logDebug { format : "hello unpack" } }    
-                { unpack {} }     
-                { generateUUID {} }
-                { callParentPipe {} } 
-              ]
-            }      
-      
-            {
-              commands : [ 
-                { logDebug { format : "hello decompress" } }    
-                { decompress {} }     
-                { callParentPipe {} } 
-              ]
-            }      
-
-            {
-              commands : [ 
-                { 
-                  readCSV { 
-                    supportedMimeTypes : [text/csv]
-                    charset : UTF-8
-                    ignoreFirstLine : false 
-                    columns : [ user_screen_name, text ]
-                  } 
-                }
-                    
-                { 
-                  generateUUID { 
-                    field : id 
-                    preserveExisting : false
-                  } 
-                }
-                     
-                {
-                  sanitizeUnknownSolrFields {
-                    solrLocator : ${SOLR_LOCATOR}
-                  }
-                }  
-              ]
-            }      
-
-            { 
-              commands : [
-                { 
-                  readAvroContainer {
-                    supportedMimeTypes : [avro/binary]
-                    # readerSchemaString : "<json can go here>" # optional, avro json schema blurb for getSchema()
-                    # readerSchemaFile : /path/to/syslog.avsc
-                  }
-                }
-                
-                { extractAvroTree {} }
-                
-                {
-                  setValues {
-                    id : "@{/id}"
-                    user_screen_name : "@{/user_screen_name}"
-                    text : "@{/text}"
-                  }
-                }
-                
-                {
-                  sanitizeUnknownSolrFields {
-                    solrLocator : ${SOLR_LOCATOR}
-                  }
-                }  
-              ]
-            } 
-      
-            { 
-              commands : [
-                { 
-                  readJsonTestTweets {
-                    supportedMimeTypes : ["mytwittertest/json+delimited+length"]
-                  }
-                }
-                
-                {
-                  sanitizeUnknownSolrFields {
-                    solrLocator : ${SOLR_LOCATOR}
-                  }
-                }  
-              ]
-            } 
-      
-            # next top-level rule:      
-            {
-              commands : [ 
-                { logDebug { format : "hello solrcell" } }    
-                {
-                  # wrap SolrCell around an HTML Tika parser
-                  solrCell {
-                    solrLocator : ${SOLR_LOCATOR}
-                    # captureAttr : true # default is false
-                    capture : [
-                    
-                      # twitter feed schema
-                      user_friends_count
-                      user_location
-                      user_description
-                      user_statuses_count
-                      user_followers_count
-                      user_name
-                      user_screen_name
-                      created_at
-                      text
-                      retweet_count
-                      retweeted
-                      in_reply_to_user_id
-                      source
-                      in_reply_to_status_id
-                      media_url_https
-                      expanded_url
-                      
-                      # file metadata   
-                      file_download_url
-                      file_upload_url
-                      file_scheme
-                      file_host
-                      file_port
-                      file_path
-                      file_name
-                      file_length
-                      file_last_modified
-                      file_owner
-                      file_group
-                      file_permissions_user
-                      file_permissions_group
-                      file_permissions_other
-                      file_permissions_stickybit      
-                    ]
-
-                    fmap : { content : text, content-type : content_type } # rename "content" field to "text" fields
-                    dateFormats : [ "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd"] # various java.text.SimpleDateFormat
-                    # xpath : "/xhtml:html/xhtml:body/xhtml:div/descendant:node()"
-                    uprefix : "ignored_"
-                    lowernames : true
-                    # solrContentHandlerFactory : org.apache.solr.tika.TrimSolrContentHandlerFactory
-                    
-                    # Tika parsers to be registered. If multiple parsers support the same MIME type, 
-                    # the parser is chosen that is closest to the bottom in this list:
-                    parsers : [                    
-                      { parser : org.apache.tika.parser.asm.ClassParser }
-                      # { parser : org.apache.tika.parser.AutoDetectParser }                      
-                      # { parser : org.gagravarr.tika.OggParser, additionalSupportedMimeTypes : [audio/ogg] }
-                      { parser : org.gagravarr.tika.FlacParser }
-                      { parser : org.apache.tika.parser.audio.AudioParser }                      
-                      { parser : org.apache.tika.parser.audio.MidiParser }
-                      { parser : org.apache.tika.parser.crypto.Pkcs7Parser }
-                      { parser : org.apache.tika.parser.dwg.DWGParser }
-                      { parser : org.apache.tika.parser.epub.EpubParser }
-                      { parser : org.apache.tika.parser.executable.ExecutableParser }
-                      { parser : org.apache.tika.parser.feed.FeedParser }
-                      { parser : org.apache.tika.parser.font.AdobeFontMetricParser }
-                      { parser : org.apache.tika.parser.font.TrueTypeParser }
-                      { parser : org.apache.tika.parser.xml.XMLParser }                      
-                      { parser : org.apache.tika.parser.html.HtmlParser }
-                      { parser : org.apache.tika.parser.image.ImageParser }
-                      { parser : org.apache.tika.parser.image.PSDParser }
-                      { parser : org.apache.tika.parser.image.TiffParser }
-                      { parser : org.apache.tika.parser.iptc.IptcAnpaParser }
-                      { parser : org.apache.tika.parser.iwork.IWorkPackageParser }
-                      { parser : org.apache.tika.parser.jpeg.JpegParser }
-                      { parser : org.apache.tika.parser.mail.RFC822Parser }
-                      { parser : org.apache.tika.parser.mbox.MboxParser, additionalSupportedMimeTypes : [message/x-emlx] }
-                      { parser : org.apache.tika.parser.microsoft.OfficeParser }
-                      { parser : org.apache.tika.parser.microsoft.TNEFParser }
-                      { parser : org.apache.tika.parser.microsoft.ooxml.OOXMLParser }
-                      { parser : org.apache.tika.parser.mp3.Mp3Parser }
-                      { parser : org.apache.tika.parser.mp4.MP4Parser }
-                      { parser : org.apache.tika.parser.hdf.HDFParser }
-                      { parser : org.apache.tika.parser.netcdf.NetCDFParser }
-                      { parser : org.apache.tika.parser.odf.OpenDocumentParser }
-                      { parser : org.apache.tika.parser.pdf.PDFParser }
-                      { parser : org.apache.tika.parser.pkg.CompressorParser }
-                      { parser : org.apache.tika.parser.pkg.PackageParser }
-                      { parser : org.apache.tika.parser.rtf.RTFParser }
-                      { parser : org.apache.tika.parser.txt.TXTParser }
-                      { parser : org.apache.tika.parser.video.FLVParser }
-                      { parser : org.apache.tika.parser.xml.DcXMLParser }
-                      { parser : org.apache.tika.parser.xml.FictionBookParser }
-                      { parser : org.apache.tika.parser.chm.ChmParser }                          
-                      #{ parser : org.apache.tika.parser.AutoDetectParser }                          
-                    ] 
-                  }
-                }
-                
-                { generateUUID { field : ignored_base_id } }
-      
-                { 
-                  generateSolrSequenceKey {
-                    baseIdField: ignored_base_id
-                    solrLocator : ${SOLR_LOCATOR} 
-                  } 
-                }
-                
-              ]
-            }      
-          ]
-        }
-      }
-
-      { 
-        loadSolr {
-          solrLocator : ${SOLR_LOCATOR}
-        }
-      }
-      
-      { 
-        logDebug {
-          format : "My output record: {}"
-          args : ["@{}"]
-        }
-      } 
-      
-    ]
-  }
-]
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Application configuration file in HOCON format (Human-Optimized Config Object Notation). 
+# HOCON syntax is defined at http://github.com/typesafehub/config/blob/master/HOCON.md
+# and also used by Akka (http://www.akka.io) and Play (http://www.playframework.org/).
+# For more examples see http://doc.akka.io/docs/akka/2.1.2/general/configuration.html
+
+# morphline.conf example file
+# this is a comment
+// this is yet another comment
+
+morphlines : [
+  {
+    id : morphline1
+    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
+    
+    commands : [
+      { separateAttachments {} }
+
+      # java command that doesn't do anything except for test compilation      
+      { 
+        java { 
+          imports : "import java.util.*;"
+          code: """
+            List tags = record.get("javaWithImports"); 
+            return child.process(record);
+                """ 
+        } 
+      }
+      
+      # java command that doesn't do anything except for test compilation      
+      { 
+        java { 
+          code: """
+            List tags = record.get("javaWithoutImports"); 
+            return child.process(record);
+                """ 
+        } 
+      }
+            
+      { 
+        # used for auto-detection if MIME type isn't explicitly supplied
+        detectMimeType { 
+          includeDefaultMimeTypes : true
+          mimeTypesFiles : ["RESOURCES_DIR/custom-mimetypes.xml"]
+        }
+      }
+      
+      {
+        tryRules {
+          throwExceptionIfAllRulesFailed : true
+          rules : [      
+            # next top-level rule:      
+            {
+              commands : [ 
+                { logDebug { format : "hello unpack" } }    
+                { unpack {} }     
+                { generateUUID {} }
+                { callParentPipe {} } 
+              ]
+            }      
+      
+            {
+              commands : [ 
+                { logDebug { format : "hello decompress" } }    
+                { decompress {} }     
+                { callParentPipe {} } 
+              ]
+            }      
+
+            {
+              commands : [ 
+                { 
+                  readCSV { 
+                    supportedMimeTypes : [text/csv]
+                    charset : UTF-8
+                    ignoreFirstLine : false 
+                    columns : [ user_screen_name, text ]
+                  } 
+                }
+                    
+                { 
+                  generateUUID { 
+                    field : id 
+                    preserveExisting : false
+                  } 
+                }
+                     
+                {
+                  sanitizeUnknownSolrFields {
+                    solrLocator : ${SOLR_LOCATOR}
+                  }
+                }  
+              ]
+            }      
+
+            { 
+              commands : [
+                { 
+                  readAvroContainer {
+                    supportedMimeTypes : [avro/binary]
+                    # readerSchemaString : "<json can go here>" # optional, avro json schema blurb for getSchema()
+                    # readerSchemaFile : /path/to/syslog.avsc
+                  }
+                }
+                
+                { extractAvroTree {} }
+                
+                {
+                  setValues {
+                    id : "@{/id}"
+                    user_screen_name : "@{/user_screen_name}"
+                    text : "@{/text}"
+                  }
+                }
+                
+                {
+                  sanitizeUnknownSolrFields {
+                    solrLocator : ${SOLR_LOCATOR}
+                  }
+                }  
+              ]
+            } 
+      
+            { 
+              commands : [
+                { 
+                  readJsonTestTweets {
+                    supportedMimeTypes : ["mytwittertest/json+delimited+length"]
+                  }
+                }
+                
+                {
+                  sanitizeUnknownSolrFields {
+                    solrLocator : ${SOLR_LOCATOR}
+                  }
+                }  
+              ]
+            } 
+      
+            # next top-level rule:      
+            {
+              commands : [ 
+                { logDebug { format : "hello solrcell" } }    
+                {
+                  # wrap SolrCell around an HTML Tika parser
+                  solrCell {
+                    solrLocator : ${SOLR_LOCATOR}
+                    # captureAttr : true # default is false
+                    capture : [
+                    
+                      # twitter feed schema
+                      user_friends_count
+                      user_location
+                      user_description
+                      user_statuses_count
+                      user_followers_count
+                      user_name
+                      user_screen_name
+                      created_at
+                      text
+                      retweet_count
+                      retweeted
+                      in_reply_to_user_id
+                      source
+                      in_reply_to_status_id
+                      media_url_https
+                      expanded_url
+                      
+                      # file metadata   
+                      file_download_url
+                      file_upload_url
+                      file_scheme
+                      file_host
+                      file_port
+                      file_path
+                      file_name
+                      file_length
+                      file_last_modified
+                      file_owner
+                      file_group
+                      file_permissions_user
+                      file_permissions_group
+                      file_permissions_other
+                      file_permissions_stickybit      
+                    ]
+
+                    fmap : { content : text, content-type : content_type } # rename "content" field to "text" fields
+                    dateFormats : [ "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd"] # various java.text.SimpleDateFormat
+                    # xpath : "/xhtml:html/xhtml:body/xhtml:div/descendant:node()"
+                    uprefix : "ignored_"
+                    lowernames : true
+                    # solrContentHandlerFactory : org.apache.solr.tika.TrimSolrContentHandlerFactory
+                    
+                    # Tika parsers to be registered. If multiple parsers support the same MIME type, 
+                    # the parser is chosen that is closest to the bottom in this list:
+                    parsers : [                    
+                      { parser : org.apache.tika.parser.asm.ClassParser }
+                      # { parser : org.apache.tika.parser.AutoDetectParser }                      
+                      # { parser : org.gagravarr.tika.OggParser, additionalSupportedMimeTypes : [audio/ogg] }
+                      { parser : org.gagravarr.tika.FlacParser }
+                      { parser : org.apache.tika.parser.audio.AudioParser }                      
+                      { parser : org.apache.tika.parser.audio.MidiParser }
+                      { parser : org.apache.tika.parser.crypto.Pkcs7Parser }
+                      { parser : org.apache.tika.parser.dwg.DWGParser }
+                      { parser : org.apache.tika.parser.epub.EpubParser }
+                      { parser : org.apache.tika.parser.executable.ExecutableParser }
+                      { parser : org.apache.tika.parser.feed.FeedParser }
+                      { parser : org.apache.tika.parser.font.AdobeFontMetricParser }
+                      { parser : org.apache.tika.parser.font.TrueTypeParser }
+                      { parser : org.apache.tika.parser.xml.XMLParser }                      
+                      { parser : org.apache.tika.parser.html.HtmlParser }
+                      { parser : org.apache.tika.parser.image.ImageParser }
+                      { parser : org.apache.tika.parser.image.PSDParser }
+                      { parser : org.apache.tika.parser.image.TiffParser }
+                      { parser : org.apache.tika.parser.iptc.IptcAnpaParser }
+                      { parser : org.apache.tika.parser.iwork.IWorkPackageParser }
+                      { parser : org.apache.tika.parser.jpeg.JpegParser }
+                      { parser : org.apache.tika.parser.mail.RFC822Parser }
+                      { parser : org.apache.tika.parser.mbox.MboxParser, additionalSupportedMimeTypes : [message/x-emlx] }
+                      { parser : org.apache.tika.parser.microsoft.OfficeParser }
+                      { parser : org.apache.tika.parser.microsoft.TNEFParser }
+                      { parser : org.apache.tika.parser.microsoft.ooxml.OOXMLParser }
+                      { parser : org.apache.tika.parser.mp3.Mp3Parser }
+                      { parser : org.apache.tika.parser.mp4.MP4Parser }
+                      { parser : org.apache.tika.parser.hdf.HDFParser }
+                      { parser : org.apache.tika.parser.netcdf.NetCDFParser }
+                      { parser : org.apache.tika.parser.odf.OpenDocumentParser }
+                      { parser : org.apache.tika.parser.pdf.PDFParser }
+                      { parser : org.apache.tika.parser.pkg.CompressorParser }
+                      { parser : org.apache.tika.parser.pkg.PackageParser }
+                      { parser : org.apache.tika.parser.rtf.RTFParser }
+                      { parser : org.apache.tika.parser.txt.TXTParser }
+                      { parser : org.apache.tika.parser.video.FLVParser }
+                      { parser : org.apache.tika.parser.xml.DcXMLParser }
+                      { parser : org.apache.tika.parser.xml.FictionBookParser }
+                      { parser : org.apache.tika.parser.chm.ChmParser }                          
+                      #{ parser : org.apache.tika.parser.AutoDetectParser }                          
+                    ] 
+                  }
+                }
+                
+                { generateUUID { field : ignored_base_id } }
+      
+                { 
+                  generateSolrSequenceKey {
+                    baseIdField: ignored_base_id
+                    solrLocator : ${SOLR_LOCATOR} 
+                  } 
+                }
+                
+              ]
+            }      
+          ]
+        }
+      }
+
+      { 
+        loadSolr {
+          solrLocator : ${SOLR_LOCATOR}
+        }
+      }
+      
+      { 
+        logDebug {
+          format : "My output record: {}"
+          args : ["@{}"]
+        }
+      } 
+      
+    ]
+  }
+]
diff --git a/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellJPGCompressed.conf b/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellJPGCompressed.conf
index 994e0ff..66e7d40 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellJPGCompressed.conf
+++ b/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellJPGCompressed.conf
@@ -1,135 +1,135 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# Application configuration file in HOCON format (Human-Optimized Config Object Notation). 
-# HOCON syntax is defined at http://github.com/typesafehub/config/blob/master/HOCON.md
-# and also used by Akka (http://www.akka.io) and Play (http://www.playframework.org/).
-# For more examples see http://doc.akka.io/docs/akka/2.1.2/general/configuration.html
-
-# morphline.conf example file
-# this is a comment
-// this is yet another comment
-
-morphlines : [
-  {
-    id : morphline1
-    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
-    
-    commands : [
-      { separateAttachments {} }
-      
-      # java command that doesn't do anything except for test compilation      
-      { 
-        java { 
-          imports : "import java.util.*;"
-          code: """
-            List tags = record.get("javaWithImports"); 
-            return child.process(record);
-                """ 
-        } 
-      }
-      
-      # java command that doesn't do anything except for test compilation      
-      { 
-        java { 
-          code: """
-            List tags = record.get("javaWithoutImports"); 
-            return child.process(record);
-                """ 
-        } 
-      }
-      
-      { 
-        # auto-detect MIME type if it isn't explicitly supplied
-        detectMimeType {
-          includeDefaultMimeTypes : true
-        }
-      }
-      
-      {
-        tryRules {
-          throwExceptionIfAllRulesFailed : true
-          rules : [      
-            # next top-level rule:      
-            {
-              commands : [ 
-                { logDebug { format : "hello unpack" } }    
-                { unpack {} }     
-                { callParentPipe {} } 
-              ]
-            }      
-      
-            {
-              commands : [ 
-                { logDebug { format : "hello decompress" } }    
-                { decompress {} }     
-                { callParentPipe {} } 
-              ]
-            }      
-      
-            # next top-level rule:      
-            {
-              commands : [ 
-                { logDebug { format : "hello solrcell" } }    
-                {
-                  # wrap SolrCell around a JPG Tika parser
-                  solrCell {
-                    solrLocator : ${SOLR_LOCATOR}
-                    captureAttr : true # default is false
-                    capture : [content, a, h1, h2] # extract some fields
-                    fmap : { exif_image_height : text, a : anchor, h1 : heading1 } # rename some fields
-                    dateFormats : [ "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd"] # various java.text.SimpleDateFormat
-                    xpath : "/xhtml:html/xhtml:body/xhtml:div/descendant:node()"
-                    uprefix : "ignored_"
-                    lowernames : true
-                    solrContentHandlerFactory : org.apache.solr.morphlines.cell.TrimSolrContentHandlerFactory
-                    parsers : [ # nested Tika parsers
-                      { parser : org.apache.tika.parser.jpeg.JpegParser }
-                    ] 
-                  }
-                }
-                
-                { logDebug { format : "solrcell output: {}", args : ["@{}"] } }                    
-              ]
-            }      
-          ]
-        }
-      }
-      
-      { generateUUID { field : ignored_base_id } }
-      
-      { 
-        generateSolrSequenceKey {
-          baseIdField: ignored_base_id
-          solrLocator : ${SOLR_LOCATOR} 
-        } 
-      }
-      
-      { 
-        loadSolr {
-          solrLocator : ${SOLR_LOCATOR}
-        }
-      }
-      
-      { 
-        logDebug {
-          format : "My output record: {}"
-          args : ["@{}"]
-        }
-      } 
-      
-    ]
-  }
-]
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Application configuration file in HOCON format (Human-Optimized Config Object Notation). 
+# HOCON syntax is defined at http://github.com/typesafehub/config/blob/master/HOCON.md
+# and also used by Akka (http://www.akka.io) and Play (http://www.playframework.org/).
+# For more examples see http://doc.akka.io/docs/akka/2.1.2/general/configuration.html
+
+# morphline.conf example file
+# this is a comment
+// this is yet another comment
+
+morphlines : [
+  {
+    id : morphline1
+    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
+    
+    commands : [
+      { separateAttachments {} }
+      
+      # java command that doesn't do anything except for test compilation      
+      { 
+        java { 
+          imports : "import java.util.*;"
+          code: """
+            List tags = record.get("javaWithImports"); 
+            return child.process(record);
+                """ 
+        } 
+      }
+      
+      # java command that doesn't do anything except for test compilation      
+      { 
+        java { 
+          code: """
+            List tags = record.get("javaWithoutImports"); 
+            return child.process(record);
+                """ 
+        } 
+      }
+      
+      { 
+        # auto-detect MIME type if it isn't explicitly supplied
+        detectMimeType {
+          includeDefaultMimeTypes : true
+        }
+      }
+      
+      {
+        tryRules {
+          throwExceptionIfAllRulesFailed : true
+          rules : [      
+            # next top-level rule:      
+            {
+              commands : [ 
+                { logDebug { format : "hello unpack" } }    
+                { unpack {} }     
+                { callParentPipe {} } 
+              ]
+            }      
+      
+            {
+              commands : [ 
+                { logDebug { format : "hello decompress" } }    
+                { decompress {} }     
+                { callParentPipe {} } 
+              ]
+            }      
+      
+            # next top-level rule:      
+            {
+              commands : [ 
+                { logDebug { format : "hello solrcell" } }    
+                {
+                  # wrap SolrCell around a JPG Tika parser
+                  solrCell {
+                    solrLocator : ${SOLR_LOCATOR}
+                    captureAttr : true # default is false
+                    capture : [content, a, h1, h2] # extract some fields
+                    fmap : { exif_image_height : text, a : anchor, h1 : heading1 } # rename some fields
+                    dateFormats : [ "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd"] # various java.text.SimpleDateFormat
+                    xpath : "/xhtml:html/xhtml:body/xhtml:div/descendant:node()"
+                    uprefix : "ignored_"
+                    lowernames : true
+                    solrContentHandlerFactory : org.apache.solr.morphlines.cell.TrimSolrContentHandlerFactory
+                    parsers : [ # nested Tika parsers
+                      { parser : org.apache.tika.parser.jpeg.JpegParser }
+                    ] 
+                  }
+                }
+                
+                { logDebug { format : "solrcell output: {}", args : ["@{}"] } }                    
+              ]
+            }      
+          ]
+        }
+      }
+      
+      { generateUUID { field : ignored_base_id } }
+      
+      { 
+        generateSolrSequenceKey {
+          baseIdField: ignored_base_id
+          solrLocator : ${SOLR_LOCATOR} 
+        } 
+      }
+      
+      { 
+        loadSolr {
+          solrLocator : ${SOLR_LOCATOR}
+        }
+      }
+      
+      { 
+        logDebug {
+          format : "My output record: {}"
+          args : ["@{}"]
+        }
+      } 
+      
+    ]
+  }
+]
diff --git a/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellXML.conf b/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellXML.conf
index 98923c4..43009bd 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellXML.conf
+++ b/solr/contrib/morphlines-core/src/test-files/test-morphlines/solrCellXML.conf
@@ -1,69 +1,69 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# Application configuration file in HOCON format (Human-Optimized Config Object Notation). 
-# HOCON syntax is defined at http://github.com/typesafehub/config/blob/master/HOCON.md
-# and also used by Akka (http://www.akka.io) and Play (http://www.playframework.org/).
-# For more examples see http://doc.akka.io/docs/akka/2.1.2/general/configuration.html
-
-# morphline.conf example file
-# this is a comment
-// this is yet another comment
-
-morphlines : [
-  {
-    id : morphline1
-    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
-    
-    commands : [
-      {
-        addValues { _attachment_mimetype : application/xml }
-        # alternatively, consider using detectMimeTypes command
-      }
-      
-      {
-        # wrap SolrCell around a JPG Tika parser
-        solrCell {        
-          solrLocator : ${SOLR_LOCATOR}
-          parsers : [ # nested Tika parsers
-            { parser : org.apache.tika.parser.xml.XMLParser }
-          ] 
-        }
-      }
-                
-      { 
-        generateSolrSequenceKey {
-          baseIdField: base_id
-          solrLocator : ${SOLR_LOCATOR} 
-        } 
-      }
-      
-      {
-        sanitizeUnknownSolrFields {
-          solrLocator : ${SOLR_LOCATOR}
-        }
-      }  
-
-      { logDebug { format : "solrcell output: {}", args : ["@{}"] } }                    
-      
-      { 
-        loadSolr {
-          solrLocator : ${SOLR_LOCATOR}
-        }
-      }
-      
-    ]
-  }
-]
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Application configuration file in HOCON format (Human-Optimized Config Object Notation). 
+# HOCON syntax is defined at http://github.com/typesafehub/config/blob/master/HOCON.md
+# and also used by Akka (http://www.akka.io) and Play (http://www.playframework.org/).
+# For more examples see http://doc.akka.io/docs/akka/2.1.2/general/configuration.html
+
+# morphline.conf example file
+# this is a comment
+// this is yet another comment
+
+morphlines : [
+  {
+    id : morphline1
+    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
+    
+    commands : [
+      {
+        addValues { _attachment_mimetype : application/xml }
+        # alternatively, consider using detectMimeTypes command
+      }
+      
+      {
+        # wrap SolrCell around a JPG Tika parser
+        solrCell {        
+          solrLocator : ${SOLR_LOCATOR}
+          parsers : [ # nested Tika parsers
+            { parser : org.apache.tika.parser.xml.XMLParser }
+          ] 
+        }
+      }
+                
+      { 
+        generateSolrSequenceKey {
+          baseIdField: base_id
+          solrLocator : ${SOLR_LOCATOR} 
+        } 
+      }
+      
+      {
+        sanitizeUnknownSolrFields {
+          solrLocator : ${SOLR_LOCATOR}
+        }
+      }  
+
+      { logDebug { format : "solrcell output: {}", args : ["@{}"] } }                    
+      
+      { 
+        loadSolr {
+          solrLocator : ${SOLR_LOCATOR}
+        }
+      }
+      
+    ]
+  }
+]
diff --git a/solr/contrib/morphlines-core/src/test-files/test-morphlines/tokenizeText.conf b/solr/contrib/morphlines-core/src/test-files/test-morphlines/tokenizeText.conf
index 9d8f786..9b62276 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-morphlines/tokenizeText.conf
+++ b/solr/contrib/morphlines-core/src/test-files/test-morphlines/tokenizeText.conf
@@ -1,34 +1,34 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-morphlines : [
-  {
-    id : morphline1
-    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
-    
-    commands : [                    
-      { 
-        tokenizeText {
-          inputField : message
-          outputField : tokens
-          solrFieldType : text_en
-          solrLocator : ${SOLR_LOCATOR}
-        }
-      }
-      
-      { logDebug { format : "output record {}", args : ["@{}"] } }    
-    ]
-  }
-]
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+morphlines : [
+  {
+    id : morphline1
+    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
+    
+    commands : [                    
+      { 
+        tokenizeText {
+          inputField : message
+          outputField : tokens
+          solrFieldType : text_en
+          solrLocator : ${SOLR_LOCATOR}
+        }
+      }
+      
+      { logDebug { format : "output record {}", args : ["@{}"] } }    
+    ]
+  }
+]
diff --git a/solr/contrib/morphlines-core/src/test-files/test-morphlines/tutorialReadAvroContainer.conf b/solr/contrib/morphlines-core/src/test-files/test-morphlines/tutorialReadAvroContainer.conf
index edcfde4..53bbbb7 100644
--- a/solr/contrib/morphlines-core/src/test-files/test-morphlines/tutorialReadAvroContainer.conf
+++ b/solr/contrib/morphlines-core/src/test-files/test-morphlines/tutorialReadAvroContainer.conf
@@ -1,140 +1,140 @@
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# Application configuration file in HOCON format (Human-Optimized Config Object Notation). 
-# HOCON syntax is defined at http://github.com/typesafehub/config/blob/master/HOCON.md
-# and also used by Akka (http://www.akka.io) and Play (http://www.playframework.org/).
-# For more examples see http://doc.akka.io/docs/akka/2.1.2/general/configuration.html
-
-# morphline.conf example file
-# this is a comment
-
-# Specify server locations in a SOLR_LOCATOR variable; used later in variable substitutions:
-SOLR_LOCATOR : {
-  # Name of solr collection
-  collection : collection1
-  
-  # ZooKeeper ensemble
-  zkHost : "127.0.0.1:2181/solr"
-  
-  # The maximum number of documents to send to Solr per network batch (throughput knob)
-  # batchSize : 1000
-}
-
-# Specify an array of one or more morphlines, each of which defines an ETL 
-# transformation chain. A morphline consists of one or more (potentially 
-# nested) commands. A morphline is a way to consume records (e.g. Flume events, 
-# HDFS files or blocks), turn them into a stream of records, and pipe the stream 
-# of records through a set of easily configurable transformations on it's way to 
-# Solr.
-morphlines : [
-  {
-    # Name used to identify a morphline. E.g. used if there are multiple morphlines in a 
-    # morphline config file
-    id : morphline1 
-    
-    # Import all morphline commands in these java packages and their subpackages.
-    # Other commands that may be present on the classpath are not visible to this morphline.
-    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
-    
-    commands : [                    
-      { 
-        # Parse Avro container file and emit a record for each avro object
-        readAvroContainer {
-          # Optionally, require the input record to match one of these MIME types:
-          # supportedMimeTypes : [avro/binary]
-          
-          # Optionally, use a custom Avro schema in JSON format inline:
-          # readerSchemaString : """<json can go here>"""
-          
-          # Optionally, use a custom Avro schema file in JSON format:
-          # readerSchemaFile : /path/to/syslog.avsc
-        }
-      } 
-      
-      { 
-        # Consume the output record of the previous command and pipe another record downstream.
-        #
-        # extractAvroPaths is a command that uses zero or more avro path expressions to extract 
-        # values from an Avro object. Each expression consists of a record output field name (on 
-        # the left side of the colon ':') as well as zero or more path steps (on the right hand 
-        # side), each path step separated by a '/' slash. Avro arrays are traversed with the '[]'
-        # notation.
-        #
-        # The result of a path expression is a list of objects, each of which is added to the 
-        # given record output field.
-        # 
-        # The path language supports all Avro concepts, including nested structures, records, 
-        # arrays, maps, unions, etc, as well as a flatten option that collects the primitives in 
-        # a subtree into a flat list.
-        extractAvroPaths {
-          flatten : false
-          paths : { 
-            id : /id            
-            text : /text      
-            user_friends_count : /user_friends_count
-            user_location : /user_location
-            user_description : /user_description
-            user_statuses_count : /user_statuses_count
-            user_followers_count : /user_followers_count
-            user_name : /user_name
-            user_screen_name : /user_screen_name
-            created_at : /created_at
-            retweet_count : /retweet_count
-            retweeted : /retweeted
-            in_reply_to_user_id : /in_reply_to_user_id
-            source : /source
-            in_reply_to_status_id : /in_reply_to_status_id
-            media_url_https : /media_url_https
-            expanded_url : /expanded_url
-          }
-        }
-      }
-      
-      # Consume the output record of the previous command and pipe another record downstream.
-      #
-      # convert timestamp field to native Solr timestamp format
-      # e.g. 2012-09-06T07:14:34Z to 2012-09-06T07:14:34.000Z
-      {
-        convertTimestamp {
-          field : created_at
-          inputFormats : ["yyyy-MM-dd'T'HH:mm:ss'Z'", "yyyy-MM-dd"]
-          inputTimezone : UTC
-#          outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSSZ"                                 
-          outputTimezone : America/Los_Angeles
-        }
-      }
-      
-      # Consume the output record of the previous command and pipe another record downstream.
-      #
-      # This command sanitizes record fields that are unknown to Solr schema.xml by deleting 
-      # them. Recall that Solr throws an exception on any attempt to load a document that 
-      # contains a field that isn't specified in schema.xml.
-      {
-        sanitizeUnknownSolrFields {
-          # Location from which to fetch Solr schema
-          solrLocator : ${SOLR_LOCATOR}
-        }
-      }  
-            
-      # log the record at DEBUG level to SLF4J
-      { logDebug { format : "output record: {}", args : ["@{}"] } }    
-      
-      # load the record into a Solr server or MapReduce Reducer.
-      { 
-        loadSolr {
-          solrLocator : ${SOLR_LOCATOR}
-        }
-      }
-    ]
-  }
-]
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Application configuration file in HOCON format (Human-Optimized Config Object Notation). 
+# HOCON syntax is defined at http://github.com/typesafehub/config/blob/master/HOCON.md
+# and also used by Akka (http://www.akka.io) and Play (http://www.playframework.org/).
+# For more examples see http://doc.akka.io/docs/akka/2.1.2/general/configuration.html
+
+# morphline.conf example file
+# this is a comment
+
+# Specify server locations in a SOLR_LOCATOR variable; used later in variable substitutions:
+SOLR_LOCATOR : {
+  # Name of solr collection
+  collection : collection1
+  
+  # ZooKeeper ensemble
+  zkHost : "127.0.0.1:2181/solr"
+  
+  # The maximum number of documents to send to Solr per network batch (throughput knob)
+  # batchSize : 1000
+}
+
+# Specify an array of one or more morphlines, each of which defines an ETL 
+# transformation chain. A morphline consists of one or more (potentially 
+# nested) commands. A morphline is a way to consume records (e.g. Flume events, 
+# HDFS files or blocks), turn them into a stream of records, and pipe the stream 
+# of records through a set of easily configurable transformations on it's way to 
+# Solr.
+morphlines : [
+  {
+    # Name used to identify a morphline. E.g. used if there are multiple morphlines in a 
+    # morphline config file
+    id : morphline1 
+    
+    # Import all morphline commands in these java packages and their subpackages.
+    # Other commands that may be present on the classpath are not visible to this morphline.
+    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
+    
+    commands : [                    
+      { 
+        # Parse Avro container file and emit a record for each avro object
+        readAvroContainer {
+          # Optionally, require the input record to match one of these MIME types:
+          # supportedMimeTypes : [avro/binary]
+          
+          # Optionally, use a custom Avro schema in JSON format inline:
+          # readerSchemaString : """<json can go here>"""
+          
+          # Optionally, use a custom Avro schema file in JSON format:
+          # readerSchemaFile : /path/to/syslog.avsc
+        }
+      } 
+      
+      { 
+        # Consume the output record of the previous command and pipe another record downstream.
+        #
+        # extractAvroPaths is a command that uses zero or more avro path expressions to extract 
+        # values from an Avro object. Each expression consists of a record output field name (on 
+        # the left side of the colon ':') as well as zero or more path steps (on the right hand 
+        # side), each path step separated by a '/' slash. Avro arrays are traversed with the '[]'
+        # notation.
+        #
+        # The result of a path expression is a list of objects, each of which is added to the 
+        # given record output field.
+        # 
+        # The path language supports all Avro concepts, including nested structures, records, 
+        # arrays, maps, unions, etc, as well as a flatten option that collects the primitives in 
+        # a subtree into a flat list.
+        extractAvroPaths {
+          flatten : false
+          paths : { 
+            id : /id            
+            text : /text      
+            user_friends_count : /user_friends_count
+            user_location : /user_location
+            user_description : /user_description
+            user_statuses_count : /user_statuses_count
+            user_followers_count : /user_followers_count
+            user_name : /user_name
+            user_screen_name : /user_screen_name
+            created_at : /created_at
+            retweet_count : /retweet_count
+            retweeted : /retweeted
+            in_reply_to_user_id : /in_reply_to_user_id
+            source : /source
+            in_reply_to_status_id : /in_reply_to_status_id
+            media_url_https : /media_url_https
+            expanded_url : /expanded_url
+          }
+        }
+      }
+      
+      # Consume the output record of the previous command and pipe another record downstream.
+      #
+      # convert timestamp field to native Solr timestamp format
+      # e.g. 2012-09-06T07:14:34Z to 2012-09-06T07:14:34.000Z
+      {
+        convertTimestamp {
+          field : created_at
+          inputFormats : ["yyyy-MM-dd'T'HH:mm:ss'Z'", "yyyy-MM-dd"]
+          inputTimezone : UTC
+#          outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSSZ"                                 
+          outputTimezone : America/Los_Angeles
+        }
+      }
+      
+      # Consume the output record of the previous command and pipe another record downstream.
+      #
+      # This command sanitizes record fields that are unknown to Solr schema.xml by deleting 
+      # them. Recall that Solr throws an exception on any attempt to load a document that 
+      # contains a field that isn't specified in schema.xml.
+      {
+        sanitizeUnknownSolrFields {
+          # Location from which to fetch Solr schema
+          solrLocator : ${SOLR_LOCATOR}
+        }
+      }  
+            
+      # log the record at DEBUG level to SLF4J
+      { logDebug { format : "output record: {}", args : ["@{}"] } }    
+      
+      # load the record into a Solr server or MapReduce Reducer.
+      { 
+        loadSolr {
+          solrLocator : ${SOLR_LOCATOR}
+        }
+      }
+    ]
+  }
+]

