GitDiffStart: 539cf28c330f8216397f9c1f9a903cd781828cd2 | Wed Nov 26 20:27:26 2014 +0000
diff --git a/lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers.java b/lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers.java
index 2a40e64..838243c 100644
--- a/lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers.java
+++ b/lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers.java
@@ -296,7 +296,7 @@ public class TestGraphTokenizers extends BaseTokenStreamTestCase {
   }
 
   public void testMockGraphTokenFilterRandom() throws Exception {
-    for(int iter=0;iter<10*RANDOM_MULTIPLIER;iter++) {
+    for(int iter=0;iter<3*RANDOM_MULTIPLIER;iter++) {
 
       if (VERBOSE) {
         System.out.println("\nTEST: iter=" + iter);
@@ -320,7 +320,7 @@ public class TestGraphTokenizers extends BaseTokenStreamTestCase {
 
   // Two MockGraphTokenFilters
   public void testDoubleMockGraphTokenFilterRandom() throws Exception {
-    for(int iter=0;iter<10*RANDOM_MULTIPLIER;iter++) {
+    for(int iter=0;iter<3*RANDOM_MULTIPLIER;iter++) {
 
       if (VERBOSE) {
         System.out.println("\nTEST: iter=" + iter);
@@ -344,7 +344,7 @@ public class TestGraphTokenizers extends BaseTokenStreamTestCase {
   }
 
   public void testMockGraphTokenFilterBeforeHolesRandom() throws Exception {
-    for(int iter=0;iter<10*RANDOM_MULTIPLIER;iter++) {
+    for(int iter=0;iter<3*RANDOM_MULTIPLIER;iter++) {
 
       if (VERBOSE) {
         System.out.println("\nTEST: iter=" + iter);
@@ -368,7 +368,7 @@ public class TestGraphTokenizers extends BaseTokenStreamTestCase {
   }
 
   public void testMockGraphTokenFilterAfterHolesRandom() throws Exception {
-    for(int iter=0;iter<10*RANDOM_MULTIPLIER;iter++) {
+    for(int iter=0;iter<3*RANDOM_MULTIPLIER;iter++) {
 
       if (VERBOSE) {
         System.out.println("\nTEST: iter=" + iter);
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestMultiDocValues.java b/lucene/core/src/test/org/apache/lucene/index/TestMultiDocValues.java
index c53824f..e335233 100644
--- a/lucene/core/src/test/org/apache/lucene/index/TestMultiDocValues.java
+++ b/lucene/core/src/test/org/apache/lucene/index/TestMultiDocValues.java
@@ -45,7 +45,7 @@ public class TestMultiDocValues extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);
 
-    int numDocs = atLeast(500);
+    int numDocs = TEST_NIGHTLY ? atLeast(500) : atLeast(50);
     for (int i = 0; i < numDocs; i++) {
       field.setLongValue(random().nextLong());
       iw.addDocument(doc);
@@ -79,7 +79,7 @@ public class TestMultiDocValues extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);
 
-    int numDocs = atLeast(500);
+    int numDocs = TEST_NIGHTLY ? atLeast(500) : atLeast(50);
     for (int i = 0; i < numDocs; i++) {
       BytesRef ref = new BytesRef(TestUtil.randomUnicodeString(random()));
       field.setBytesValue(ref);
@@ -116,7 +116,7 @@ public class TestMultiDocValues extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);
 
-    int numDocs = atLeast(500);
+    int numDocs = TEST_NIGHTLY ? atLeast(500) : atLeast(50);
     for (int i = 0; i < numDocs; i++) {
       BytesRef ref = new BytesRef(TestUtil.randomUnicodeString(random()));
       field.setBytesValue(ref);
@@ -161,7 +161,7 @@ public class TestMultiDocValues extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);
 
-    int numDocs = atLeast(500);
+    int numDocs = TEST_NIGHTLY ? atLeast(500) : atLeast(50);
     for (int i = 0; i < numDocs; i++) {
       BytesRef ref = new BytesRef(TestUtil.randomSimpleString(random(), 2));
       field.setBytesValue(ref);
@@ -199,7 +199,7 @@ public class TestMultiDocValues extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);
 
-    int numDocs = atLeast(500);
+    int numDocs = TEST_NIGHTLY ? atLeast(500) : atLeast(50);
     for (int i = 0; i < numDocs; i++) {
       Document doc = new Document();
       int numValues = random().nextInt(5);
@@ -261,7 +261,7 @@ public class TestMultiDocValues extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);
 
-    int numDocs = atLeast(500);
+    int numDocs = TEST_NIGHTLY ? atLeast(500) : atLeast(50);
     for (int i = 0; i < numDocs; i++) {
       Document doc = new Document();
       int numValues = random().nextInt(5);
@@ -322,7 +322,7 @@ public class TestMultiDocValues extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);
 
-    int numDocs = atLeast(500);
+    int numDocs = TEST_NIGHTLY ? atLeast(500) : atLeast(50);
     for (int i = 0; i < numDocs; i++) {
       Document doc = new Document();
       int numValues = random().nextInt(5);
@@ -373,7 +373,7 @@ public class TestMultiDocValues extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);
 
-    int numDocs = atLeast(500);
+    int numDocs = TEST_NIGHTLY ? atLeast(500) : atLeast(50);
     for (int i = 0; i < numDocs; i++) {
       Document doc = new Document();
       if (random().nextInt(4) >= 0) {

