GitDiffStart: a5b8a645c670cb849681fc3cb816030da15ef45f | Mon Dec 8 20:13:48 2014 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 782cdfe..dd397bc 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -299,6 +299,9 @@ API Changes
   IndexWriter.abortMerges and waitForMerges methods.  (Robert Muir,
   Mike McCandless)
 
+* LUCENE-6099: Add FilterDirectory.unwrap and
+  FilterDirectoryReader.unwrap (Simon Willnauer, Mike McCandless)
+
 Bug Fixes
 
 * LUCENE-5650: Enforce read-only access to any path outside the temporary
diff --git a/lucene/core/src/java/org/apache/lucene/index/FilterDirectoryReader.java b/lucene/core/src/java/org/apache/lucene/index/FilterDirectoryReader.java
index 2d312e1..4a4f5c4 100644
--- a/lucene/core/src/java/org/apache/lucene/index/FilterDirectoryReader.java
+++ b/lucene/core/src/java/org/apache/lucene/index/FilterDirectoryReader.java
@@ -33,6 +33,15 @@ import java.util.List;
  */
 public abstract class FilterDirectoryReader extends DirectoryReader {
 
+  /** Get the wrapped instance by <code>reader</code> as long as this reader is
+   *  an instance of {@link FilterDirectoryReader}.  */
+  public static DirectoryReader unwrap(DirectoryReader reader) {
+    while (reader instanceof FilterDirectoryReader) {
+      reader = ((FilterDirectoryReader) reader).in;
+    }
+    return reader;
+  }
+
   /**
    * Factory class passed to FilterDirectoryReader constructor that allows
    * subclasses to wrap the filtered DirectoryReader's subreaders.  You
@@ -125,4 +134,8 @@ public abstract class FilterDirectoryReader extends DirectoryReader {
     in.doClose();
   }
 
+  /** Returns the wrapped {@link DirectoryReader}. */
+  public DirectoryReader getDelegate() {
+    return in;
+  }
 }
diff --git a/lucene/core/src/java/org/apache/lucene/index/FilterLeafReader.java b/lucene/core/src/java/org/apache/lucene/index/FilterLeafReader.java
index fc18de7..47422a9 100644
--- a/lucene/core/src/java/org/apache/lucene/index/FilterLeafReader.java
+++ b/lucene/core/src/java/org/apache/lucene/index/FilterLeafReader.java
@@ -46,7 +46,7 @@ import org.apache.lucene.util.BytesRef;
 public class FilterLeafReader extends LeafReader {
 
   /** Get the wrapped instance by <code>reader</code> as long as this reader is
-   *  an intance of {@link FilterLeafReader}.  */
+   *  an instance of {@link FilterLeafReader}.  */
   public static LeafReader unwrap(LeafReader reader) {
     while (reader instanceof FilterLeafReader) {
       reader = ((FilterLeafReader) reader).in;
@@ -468,4 +468,9 @@ public class FilterLeafReader extends LeafReader {
     ensureOpen();
     in.checkIntegrity();
   }
+
+  /** Returns the wrapped {@link LeafReader}. */
+  public LeafReader getDelegate() {
+    return in;
+  }
 }
diff --git a/lucene/core/src/java/org/apache/lucene/store/FilterDirectory.java b/lucene/core/src/java/org/apache/lucene/store/FilterDirectory.java
index 414baa9..76c4ed7 100644
--- a/lucene/core/src/java/org/apache/lucene/store/FilterDirectory.java
+++ b/lucene/core/src/java/org/apache/lucene/store/FilterDirectory.java
@@ -31,6 +31,15 @@ import java.util.Collection;
  *  @lucene.internal */
 public class FilterDirectory extends Directory {
 
+  /** Get the wrapped instance by <code>dir</code> as long as this reader is
+   *  an instance of {@link FilterDirectory}.  */
+  public static Directory unwrap(Directory dir) {
+    while (dir instanceof FilterDirectory) {
+      dir = ((FilterDirectory) dir).in;
+    }
+    return dir;
+  }
+
   protected final Directory in;
 
   /** Sole constructor, typically called from sub-classes. */
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader.java b/lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader.java
index d12c849..16e27ff 100644
--- a/lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader.java
+++ b/lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader.java
@@ -192,4 +192,17 @@ public class TestFilterLeafReader extends LuceneTestCase {
     checkOverrideMethods(FilterLeafReader.FilterDocsAndPositionsEnum.class);
   }
 
+  public void testUnwrap() throws IOException {
+    Directory dir = newDirectory();
+    RandomIndexWriter w = new RandomIndexWriter(random(), dir);
+    w.addDocument(new Document());
+    DirectoryReader dr = w.getReader();
+    LeafReader r = dr.leaves().get(0).reader();
+    FilterLeafReader r2 = new FilterLeafReader(r);
+    assertEquals(r, r2.getDelegate());
+    assertEquals(r, FilterLeafReader.unwrap(r2));
+    w.close();
+    dr.close();
+    dir.close();
+  }
 }
diff --git a/lucene/core/src/test/org/apache/lucene/search/TestSearcherManager.java b/lucene/core/src/test/org/apache/lucene/search/TestSearcherManager.java
index 642f73a..2896645 100644
--- a/lucene/core/src/test/org/apache/lucene/search/TestSearcherManager.java
+++ b/lucene/core/src/test/org/apache/lucene/search/TestSearcherManager.java
@@ -462,7 +462,9 @@ public class TestSearcherManager extends ThreadedIndexingAndSearchingTestCase {
             new FilterDirectoryReader.SubReaderWrapper() {
               @Override
               public LeafReader wrap(LeafReader reader) {
-                return new MyFilterLeafReader(reader);
+                FilterLeafReader wrapped = new MyFilterLeafReader(reader);
+                assertEquals(reader, wrapped.getDelegate());
+                return wrapped;
               }
             });
     }
@@ -477,7 +479,12 @@ public class TestSearcherManager extends ThreadedIndexingAndSearchingTestCase {
   public void testCustomDirectoryReader() throws Exception {
     Directory dir = newDirectory();
     RandomIndexWriter w = new RandomIndexWriter(random(), dir);
-    DirectoryReader reader = new MyFilterDirectoryReader(w.getReader());
+    DirectoryReader nrtReader = w.getReader();
+
+    FilterDirectoryReader reader = new MyFilterDirectoryReader(nrtReader);
+    assertEquals(nrtReader, reader.getDelegate());
+    assertEquals(nrtReader, FilterDirectoryReader.unwrap(reader));
+
     SearcherManager mgr = new SearcherManager(reader, null);
     for(int i=0;i<10;i++) {
       w.addDocument(new Document());
diff --git a/lucene/core/src/test/org/apache/lucene/store/TestFilterDirectory.java b/lucene/core/src/test/org/apache/lucene/store/TestFilterDirectory.java
index 59c303c..b9fedce 100644
--- a/lucene/core/src/test/org/apache/lucene/store/TestFilterDirectory.java
+++ b/lucene/core/src/test/org/apache/lucene/store/TestFilterDirectory.java
@@ -17,6 +17,7 @@ package org.apache.lucene.store;
  * limitations under the License.
  */
 
+import java.io.IOException;
 import java.lang.reflect.Method;
 import java.util.HashSet;
 import java.util.Set;
@@ -39,5 +40,12 @@ public class TestFilterDirectory extends LuceneTestCase {
       }
     }
   }
-  
+
+  public void testUnwrap() throws IOException {
+    Directory dir = FSDirectory.open(createTempDir());
+    FilterDirectory dir2 = new FilterDirectory(dir);
+    assertEquals(dir, dir2.getDelegate());
+    assertEquals(dir, FilterDirectory.unwrap(dir2));
+    dir2.close();
+  }
 }

