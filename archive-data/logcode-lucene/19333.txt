GitDiffStart: e5cb88d92258c3139eb3c1c801631a993f00bbb3 | Sun Sep 20 15:30:58 2009 +0000
diff --git a/src/java/org/apache/solr/core/SolrCore.java b/src/java/org/apache/solr/core/SolrCore.java
index 8a6233b..3827ef9 100644
--- a/src/java/org/apache/solr/core/SolrCore.java
+++ b/src/java/org/apache/solr/core/SolrCore.java
@@ -574,8 +574,6 @@ public final class SolrCore implements SolrInfoMBean {
       // Finally tell anyone who wants to know
       resourceLoader.inform( resourceLoader );
       resourceLoader.inform( this );
-      //register any SolrInfoMBeans
-      resourceLoader.inform(infoRegistry);
       instance = this;   // set singleton for backwards compatibility
     } catch (IOException e) {
       throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
@@ -832,11 +830,7 @@ public final class SolrCore implements SolrInfoMBean {
   }
   private <T> void addIfNotPresent(Map<String ,T> registry, String name, Class<? extends  T> c){
     if(!registry.containsKey(name)){
-      T searchComp = (T) resourceLoader.newInstance(c.getName());
-      registry.put(name, searchComp);
-      if (searchComp instanceof SolrInfoMBean){
-        infoRegistry.put(((SolrInfoMBean)searchComp).getName(), (SolrInfoMBean)searchComp);
-      }
+      registry.put(name, (T) resourceLoader.newInstance(c.getName()));
     }
   }
   
diff --git a/src/java/org/apache/solr/core/SolrResourceLoader.java b/src/java/org/apache/solr/core/SolrResourceLoader.java
index cf644d8..84ab4d8 100644
--- a/src/java/org/apache/solr/core/SolrResourceLoader.java
+++ b/src/java/org/apache/solr/core/SolrResourceLoader.java
@@ -68,7 +68,6 @@ public class SolrResourceLoader implements ResourceLoader
   private String dataDir;
   
   private final List<SolrCoreAware> waitingForCore = new ArrayList<SolrCoreAware>();
-  private final List<SolrInfoMBean> infoMBeans = new ArrayList<SolrInfoMBean>();
   private final List<ResourceLoaderAware> waitingForResources = new ArrayList<ResourceLoaderAware>();
   private static final Charset UTF_8 = Charset.forName("UTF-8");
 
@@ -346,10 +345,6 @@ public class SolrResourceLoader implements ResourceLoader
       assertAwareCompatibility( ResourceLoaderAware.class, obj );
       waitingForResources.add( (ResourceLoaderAware)obj );
     }
-    if (obj instanceof SolrInfoMBean){
-      //TODO: Assert here?
-      infoMBeans.add((SolrInfoMBean) obj);
-    }
     return obj;
   }
 
@@ -406,10 +401,6 @@ public class SolrResourceLoader implements ResourceLoader
       assertAwareCompatibility( ResourceLoaderAware.class, obj );
       waitingForResources.add( (ResourceLoaderAware)obj );
     }
-    if (obj instanceof SolrInfoMBean){
-      //TODO: Assert here?
-      infoMBeans.add((SolrInfoMBean) obj);
-    }
     return obj;
   }
 
@@ -436,16 +427,6 @@ public class SolrResourceLoader implements ResourceLoader
     }
     waitingForResources.clear();
   }
-
-  /**
-   * Register any {@link org.apache.solr.core.SolrInfoMBean}s
-   * @param infoRegistry The Info Registry
-   */
-  public void inform(Map<String, SolrInfoMBean> infoRegistry) {
-    for (SolrInfoMBean bean : infoMBeans) {
-      infoRegistry.put(bean.getName(), bean);
-    }
-  }
   /**
    * Determines the solrhome from the environment.
    * Tries JNDI (java:comp/env/solr/home) then system property (solr.solr.home);
@@ -554,5 +535,4 @@ public class SolrResourceLoader implements ResourceLoader
     throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, builder.toString() );
   }
 
-
 }
diff --git a/src/test/org/apache/solr/core/SolrCoreTest.java b/src/test/org/apache/solr/core/SolrCoreTest.java
index 6d889aa..afb2b57 100755
--- a/src/test/org/apache/solr/core/SolrCoreTest.java
+++ b/src/test/org/apache/solr/core/SolrCoreTest.java
@@ -18,8 +18,6 @@
 package org.apache.solr.core;
 
 import org.apache.solr.handler.RequestHandlerBase;
-import org.apache.solr.handler.component.SpellCheckComponent;
-import org.apache.solr.handler.component.QueryComponent;
 import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.request.SolrQueryResponse;
 import org.apache.solr.request.SolrRequestHandler;
@@ -166,24 +164,6 @@ public class SolrCoreTest extends AbstractSolrTestCase {
     service.shutdown();
     assertTrue("Running for too long...", service.awaitTermination(60, TimeUnit.SECONDS));
   }
-
-  public void testInfoRegistry() throws Exception {
-    //TEst that SolrInfoMBeans are registered, including SearchComponents
-    SolrCore core = h.getCore();
-
-    Map<String, SolrInfoMBean> infoRegistry = core.getInfoRegistry();
-    assertTrue("infoRegistry Size: " + infoRegistry.size() + " is not greater than: " + 0, infoRegistry.size() > 0);
-    //try out some that we know are in the config
-    SolrInfoMBean bean = infoRegistry.get(SpellCheckComponent.class.getName());
-    assertNotNull("bean not registered", bean);
-    //try a default one
-    bean = infoRegistry.get(QueryComponent.class.getName());
-    assertNotNull("bean not registered", bean);
-    //try a Req Handler, which are stored by name, not clas
-    bean = infoRegistry.get("standard");
-    assertNotNull("bean not registered", bean);
-  }
-
 }
 
 

