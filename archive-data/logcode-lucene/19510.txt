GitDiffStart: 6c3d17a399eff760b768aa239ee94f44f6fb0d56 | Thu Aug 27 15:34:23 2009 +0000
diff --git a/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/HHMMSegmenter.java b/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/HHMMSegmenter.java
index 37994f8..b60abfa 100644
--- a/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/HHMMSegmenter.java
+++ b/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/HHMMSegmenter.java
@@ -176,7 +176,7 @@ public class HHMMSegmenter {
   /**
    * Get the character types for every character in a sentence.
    * 
-   * @see Utility#charType(char)
+   * @see Utility#getCharType(char)
    * @param sentence input sentence
    * @return array of character types corresponding to character positions in the sentence
    */
diff --git a/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer.java b/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer.java
index 7fa87f3..1281e47 100644
--- a/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer.java
+++ b/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer.java
@@ -179,10 +179,6 @@ public class QueryScorer implements Scorer {
   }
 
   /**
-   * @param query
-   * @param field
-   * @param tokenStream
-   * @param reader
    */
   private void init(Query query, String field, IndexReader reader, boolean expandMultiTermQuery) {
     this.reader = reader;
diff --git a/contrib/queryparser/src/java/org/apache/lucene/messages/NLS.java b/contrib/queryparser/src/java/org/apache/lucene/messages/NLS.java
index 4c7dda5..1cf9ab3 100644
--- a/contrib/queryparser/src/java/org/apache/lucene/messages/NLS.java
+++ b/contrib/queryparser/src/java/org/apache/lucene/messages/NLS.java
@@ -124,7 +124,6 @@ public class NLS {
   }
 
   /**
-   * @param bundleName
    * @param clazz
    */
   private static void load(Class<Object> clazz) {
diff --git a/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl.java b/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl.java
index e06f5fc..5288502 100644
--- a/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl.java
+++ b/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl.java
@@ -98,7 +98,7 @@ public class EscapeQuerySyntaxImpl implements EscapeQuerySyntax {
   /**
    * replace with ignore case
    * 
-   * @param stringOrig
+   * @param string
    *          string to get replaced
    * @param sequence1
    *          the old character sequence in lowercase
@@ -164,7 +164,7 @@ public class EscapeQuerySyntaxImpl implements EscapeQuerySyntax {
   /**
    * escape all tokens that are part of the parser syntax on a given string
    * 
-   * @param string
+   * @param str
    *          string to get replaced
    * @param locale
    *          locale to be used when performing string compares
diff --git a/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/processors/GroupQueryNodeProcessor.java b/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/processors/GroupQueryNodeProcessor.java
index 59d09c6..5b50634 100644
--- a/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/processors/GroupQueryNodeProcessor.java
+++ b/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/processors/GroupQueryNodeProcessor.java
@@ -106,8 +106,6 @@ public class GroupQueryNodeProcessor implements QueryNodeProcessor {
   }
 
   /**
-   * @param node
-   * @return
    */
   private QueryNode applyModifier(QueryNode node, QueryNode parent) {
 
diff --git a/src/java/org/apache/lucene/index/CheckIndex.java b/src/java/org/apache/lucene/index/CheckIndex.java
index 4400f80..4c7eaa2 100644
--- a/src/java/org/apache/lucene/index/CheckIndex.java
+++ b/src/java/org/apache/lucene/index/CheckIndex.java
@@ -99,9 +99,11 @@ public class CheckIndex {
     /** Directory index is in. */
     public Directory dir;
 
-    /** SegmentInfos instance containing only segments that
-     *  had no problems (this is used with the {@link
-     *  CheckIndex#fix} method to repair the index. */
+    /** 
+     * SegmentInfos instance containing only segments that
+     * had no problems (this is used with the {@link CheckIndex#fixIndex} 
+     * method to repair the index. 
+     */
     SegmentInfos newSegments;
 
     /** How many documents will be lost to bad segments. */
diff --git a/src/java/org/apache/lucene/index/IndexWriter.java b/src/java/org/apache/lucene/index/IndexWriter.java
index dfeac0c..4df50e6 100644
--- a/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/src/java/org/apache/lucene/index/IndexWriter.java
@@ -649,7 +649,6 @@ public class IndexWriter {
      * @see #release(SegmentReader)
      * @param info
      * @param doOpenStores
-     * @return 
      * @throws IOException
      */
     public synchronized SegmentReader get(SegmentInfo info, boolean doOpenStores) throws IOException {
@@ -664,7 +663,6 @@ public class IndexWriter {
      * @param doOpenStores
      * @param readBufferSize
      * @param termsIndexDivisor
-     * @return
      * @throws IOException
      */
     public synchronized SegmentReader get(SegmentInfo info, boolean doOpenStores, int readBufferSize, int termsIndexDivisor) throws IOException {
diff --git a/src/java/org/apache/lucene/index/RawPostingList.java b/src/java/org/apache/lucene/index/RawPostingList.java
index ff4f511..d2beea2 100644
--- a/src/java/org/apache/lucene/index/RawPostingList.java
+++ b/src/java/org/apache/lucene/index/RawPostingList.java
@@ -21,11 +21,11 @@ package org.apache.lucene.index;
 /** This is the base class for an in-memory posting list,
  *  keyed by a Token.  {@link TermsHash} maintains a hash
  *  table holding one instance of this per unique Token.
- *  Consumers of TermsHash (@link TermsHashConsumer} must
+ *  Consumers of TermsHash ({@link TermsHashConsumer}) must
  *  subclass this class with its own concrete class.
- *  {@link FreqProxTermsWriter.RawPostingList} is the
- *  subclass used for the freq/prox postings, and {@link
- *  TermVectorsTermsWriter.PostingList} is the subclass
+ *  FreqProxTermsWriter.PostingList is a private inner class used 
+ *  for the freq/prox postings, and 
+ *  TermVectorsTermsWriter.PostingList is a private inner class
  *  used to hold TermVectors postings. */
 
 abstract class RawPostingList {
diff --git a/src/java/org/apache/lucene/search/BooleanScorer.java b/src/java/org/apache/lucene/search/BooleanScorer.java
index 7e75d21..890d9d0 100644
--- a/src/java/org/apache/lucene/search/BooleanScorer.java
+++ b/src/java/org/apache/lucene/search/BooleanScorer.java
@@ -280,7 +280,7 @@ final class BooleanScorer extends Scorer {
     return false;
   }
 
-  /** @deprecated use {@link #score(Collector, int)} instead. */
+  /** @deprecated use {@link #score(Collector, int, int)} instead. */
   protected boolean score(HitCollector hc, int max) throws IOException {
     return score(new HitCollectorWrapper(hc), max, docID());
   }
diff --git a/src/java/org/apache/lucene/search/BooleanScorer2.java b/src/java/org/apache/lucene/search/BooleanScorer2.java
index ce9f78f..a83bdf3 100644
--- a/src/java/org/apache/lucene/search/BooleanScorer2.java
+++ b/src/java/org/apache/lucene/search/BooleanScorer2.java
@@ -300,7 +300,7 @@ class BooleanScorer2 extends Scorer {
    * {@link HitCollector#collect(int, float)}.
    * @param max Do not score documents past this.
    * @return true if more matching documents may remain.
-   * @deprecated use {@link #score(Collector, int)} instead.
+   * @deprecated use {@link #score(Collector, int, int)} instead.
    */
   protected boolean score(HitCollector hc, int max) throws IOException {
     return score(new HitCollectorWrapper(hc), max, docID());
diff --git a/src/java/org/apache/lucene/search/DisjunctionSumScorer.java b/src/java/org/apache/lucene/search/DisjunctionSumScorer.java
index 6c6238d..3b0b891 100644
--- a/src/java/org/apache/lucene/search/DisjunctionSumScorer.java
+++ b/src/java/org/apache/lucene/search/DisjunctionSumScorer.java
@@ -136,7 +136,7 @@ class DisjunctionSumScorer extends Scorer {
    * {@link HitCollector#collect(int, float)}.
    * @param max Do not score documents past this.
    * @return true if more matching documents may remain.
-   * @deprecated use {@link #score(Collector, int)} instead.
+   * @deprecated use {@link #score(Collector, int, int)} instead.
    */
   protected boolean score(HitCollector hc, int max) throws IOException {
     return score(new HitCollectorWrapper(hc), max, docID());
diff --git a/src/java/org/apache/lucene/search/TermScorer.java b/src/java/org/apache/lucene/search/TermScorer.java
index c61ec2b..fa26f3b 100644
--- a/src/java/org/apache/lucene/search/TermScorer.java
+++ b/src/java/org/apache/lucene/search/TermScorer.java
@@ -74,7 +74,7 @@ final class TermScorer extends Scorer {
     score(c, Integer.MAX_VALUE, nextDoc());
   }
 
-  /** @deprecated use {@link #score(Collector, int)} instead. */
+  /** @deprecated use {@link #score(Collector, int, int)} instead. */
   protected boolean score(HitCollector c, int end) throws IOException {
     return score(new HitCollectorWrapper(c), end, doc);
   }

