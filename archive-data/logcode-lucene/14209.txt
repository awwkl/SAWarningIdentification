GitDiffStart: 76ee67257da9ce4657efc9a29ffc486cab720c48 | Mon Dec 19 15:26:42 2011 +0000
diff --git a/modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java b/modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
index a190ce6..3f22c0e 100644
--- a/modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
+++ b/modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
@@ -20,6 +20,7 @@ package org.apache.lucene.benchmark.byTask;
 import java.io.Closeable;
 import java.io.File;
 import java.io.IOException;
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Locale;
 
@@ -28,6 +29,7 @@ import org.apache.lucene.benchmark.byTask.feeds.DocMaker;
 import org.apache.lucene.benchmark.byTask.feeds.FacetSource;
 import org.apache.lucene.benchmark.byTask.feeds.QueryMaker;
 import org.apache.lucene.benchmark.byTask.stats.Points;
+import org.apache.lucene.benchmark.byTask.tasks.PerfTask;
 import org.apache.lucene.benchmark.byTask.tasks.ReadTask;
 import org.apache.lucene.benchmark.byTask.tasks.SearchTask;
 import org.apache.lucene.benchmark.byTask.utils.Config;
@@ -94,6 +96,7 @@ public class PerfRunData implements Closeable {
   private Config config;
   private long startTimeMillis;
 
+  private final HashMap<String, Object> perfObjects = new HashMap<String, Object>();
   
   // constructor
   public PerfRunData (Config config) throws Exception {
@@ -129,6 +132,15 @@ public class PerfRunData implements Closeable {
     IOUtils.close(indexWriter, indexReader, directory, 
                   taxonomyWriter, taxonomyReader, taxonomyDir, 
                   docMaker, facetSource);
+    
+    // close all perf objects that are closeable.
+    ArrayList<Closeable> perfObjectsToClose = new ArrayList<Closeable>();
+    for (Object obj : perfObjects.values()) {
+      if (obj instanceof Closeable) {
+        perfObjectsToClose.add((Closeable) obj);
+      }
+    }
+    IOUtils.close(perfObjectsToClose);
   }
 
   // clean old stuff, reopen 
@@ -173,6 +185,20 @@ public class PerfRunData implements Closeable {
     return new RAMDirectory();
   }
   
+  /** Returns an object that was previously set by {@link #setPerfObject(String, Object)}. */
+  public synchronized Object getPerfObject(String key) {
+    return perfObjects.get(key);
+  }
+  
+  /**
+   * Sets an object that is required by {@link PerfTask}s, keyed by the given
+   * {@code key}. If the object implements {@link Closeable}, it will be closed
+   * by {@link #close()}.
+   */
+  public synchronized void setPerfObject(String key, Object obj) {
+    perfObjects.put(key, obj);
+  }
+  
   public long setStartTimeMillis() {
     startTimeMillis = System.currentTimeMillis();
     return startTimeMillis;

