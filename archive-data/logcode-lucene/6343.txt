GitDiffStart: 1c77c9e5e995305a97b72c781de6b609fdef61b6 | Thu May 1 10:52:08 2014 +0000
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing.java b/lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing.java
index 0b2c582..0f1fd63 100644
--- a/lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing.java
+++ b/lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing.java
@@ -43,7 +43,6 @@ import org.apache.lucene.util.LuceneTestCase;
  * Tests DocValues integration into IndexWriter
  * 
  */
-// TODO: fix all tests in here to ensure dv exceptions are non-aborting
 public class TestDocValuesIndexing extends LuceneTestCase {
   /*
    * - add test for multi segment case with deletes
@@ -119,10 +118,11 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     Directory d = newDirectory();
     RandomIndexWriter w = new RandomIndexWriter(random(), d);
     Document doc = new Document();
+    doc.add(new NumericDocValuesField("field", 17));
+    w.addDocument(doc);
+    
     // Index doc values are single-valued so we should not
     // be able to add same field more than once:
-    Field f;
-    doc.add(f = new NumericDocValuesField("field", 17));
     doc.add(new BinaryDocValuesField("field", new BytesRef("blah")));
     try {
       w.addDocument(doc);
@@ -131,10 +131,6 @@ public class TestDocValuesIndexing extends LuceneTestCase {
       // expected
     }
 
-    doc = new Document();
-    doc.add(f);
-    w.addDocument(doc);
-    w.forceMerge(1);
     DirectoryReader r = w.getReader();
     w.shutdown();
     assertEquals(17, FieldCache.DEFAULT.getInts(getOnlySegmentReader(r), "field", false).get(0));
@@ -146,10 +142,11 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     Directory d = newDirectory();
     RandomIndexWriter w = new RandomIndexWriter(random(), d);
     Document doc = new Document();
+    doc.add(new NumericDocValuesField("field", 17));
+    w.addDocument(doc);
+    
     // Index doc values are single-valued so we should not
     // be able to add same field more than once:
-    Field f = new NumericDocValuesField("field", 17);
-    doc.add(f);
     doc.add(new SortedDocValuesField("field", new BytesRef("hello")));
     try {
       w.addDocument(doc);
@@ -157,10 +154,6 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     } catch (IllegalArgumentException iae) {
       // expected
     }
-    doc = new Document();
-    doc.add(f);
-    w.addDocument(doc);
-    w.forceMerge(1);
     DirectoryReader r = w.getReader();
     assertEquals(17, getOnlySegmentReader(r).getNumericDocValues("field").get(0));
     r.close();
@@ -233,6 +226,8 @@ public class TestDocValuesIndexing extends LuceneTestCase {
   public void testMixedTypesSameDocument() throws Exception {
     Directory dir = newDirectory();
     IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));
+    w.addDocument(new Document());
+    
     Document doc = new Document();
     doc.add(new NumericDocValuesField("foo", 0));
     doc.add(new SortedDocValuesField("foo", new BytesRef("hello")));
@@ -241,6 +236,9 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     } catch (IllegalArgumentException iae) {
       // expected
     }
+    IndexReader ir = w.getReader();
+    assertEquals(1, ir.numDocs());
+    ir.close();
     w.shutdown();
     dir.close();
   }
@@ -260,6 +258,9 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     } catch (IllegalArgumentException iae) {
       // expected
     }
+    IndexReader ir = w.getReader();
+    assertEquals(1, ir.numDocs());
+    ir.close();
     w.shutdown();
     dir.close();
   }
@@ -274,6 +275,8 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     IndexWriter iwriter = new IndexWriter(directory, iwc);
     Document doc = new Document();
     doc.add(new SortedDocValuesField("dv", new BytesRef("foo!")));
+    iwriter.addDocument(doc);
+    
     doc.add(new SortedDocValuesField("dv", new BytesRef("bar!")));
     try {
       iwriter.addDocument(doc);
@@ -285,7 +288,9 @@ public class TestDocValuesIndexing extends LuceneTestCase {
         expected.printStackTrace(System.out);
       }
     }
-    
+    IndexReader ir = iwriter.getReader();
+    assertEquals(1, ir.numDocs());
+    ir.close();
     iwriter.shutdown();
     directory.close();
   }
@@ -300,6 +305,8 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     IndexWriter iwriter = new IndexWriter(directory, iwc);
     Document doc = new Document();
     doc.add(new BinaryDocValuesField("dv", new BytesRef("foo!")));
+    iwriter.addDocument(doc);
+    
     doc.add(new BinaryDocValuesField("dv", new BytesRef("bar!")));
     try {
       iwriter.addDocument(doc);
@@ -308,6 +315,10 @@ public class TestDocValuesIndexing extends LuceneTestCase {
       // expected
     }
     
+    IndexReader ir = iwriter.getReader();
+    assertEquals(1, ir.numDocs());
+    ir.close();
+    
     iwriter.shutdown();
     directory.close();
   }
@@ -322,6 +333,8 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     IndexWriter iwriter = new IndexWriter(directory, iwc);
     Document doc = new Document();
     doc.add(new NumericDocValuesField("dv", 1));
+    iwriter.addDocument(doc);
+    
     doc.add(new NumericDocValuesField("dv", 2));
     try {
       iwriter.addDocument(doc);
@@ -329,7 +342,9 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     } catch (IllegalArgumentException expected) {
       // expected
     }
-    
+    IndexReader ir = iwriter.getReader();
+    assertEquals(1, ir.numDocs());
+    ir.close();
     iwriter.shutdown();
     directory.close();
   }
@@ -343,6 +358,10 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     IndexWriter iwriter = new IndexWriter(directory, iwc);
     Document doc = new Document();
+    doc.add(new SortedDocValuesField("dv", new BytesRef("just fine")));
+    iwriter.addDocument(doc);
+    
+    doc = new Document();
     byte bytes[] = new byte[100000];
     BytesRef b = new BytesRef(bytes);
     random().nextBytes(bytes);
@@ -353,6 +372,9 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     } catch (IllegalArgumentException expected) {
       // expected
     }
+    IndexReader ir = iwriter.getReader();
+    assertEquals(1, ir.numDocs());
+    ir.close();
     iwriter.shutdown();
     directory.close();
   }
@@ -367,6 +389,10 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     iwc.setMergePolicy(newLogMergePolicy());
     IndexWriter iwriter = new IndexWriter(directory, iwc);
     Document doc = new Document();
+    doc.add(new SortedSetDocValuesField("dv", new BytesRef("just fine")));
+    iwriter.addDocument(doc);
+    
+    doc = new Document();
     byte bytes[] = new byte[100000];
     BytesRef b = new BytesRef(bytes);
     random().nextBytes(bytes);
@@ -377,6 +403,9 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     } catch (IllegalArgumentException expected) {
       // expected
     }
+    IndexReader ir = iwriter.getReader();
+    assertEquals(1, ir.numDocs());
+    ir.close();
     iwriter.shutdown();
     directory.close();
   }
@@ -534,6 +563,9 @@ public class TestDocValuesIndexing extends LuceneTestCase {
     } catch (IllegalArgumentException iae) {
       // expected
     }
+    IndexReader ir = writer.getReader();
+    assertEquals(1, ir.numDocs());
+    ir.close();
     writer.shutdown();
     dir.close();
   }

