GitDiffStart: 91c83248e6d79793ee45a5889776013bc7f77b62 | Wed Nov 22 14:38:56 2006 +0000
diff --git a/src/java/org/apache/solr/search/SolrIndexSearcher.java b/src/java/org/apache/solr/search/SolrIndexSearcher.java
index 6f2308d..060577d 100644
--- a/src/java/org/apache/solr/search/SolrIndexSearcher.java
+++ b/src/java/org/apache/solr/search/SolrIndexSearcher.java
@@ -774,7 +774,9 @@ public class SolrIndexSearcher extends Searcher implements SolrInfoMBean {
         public void collect(int doc, float score) {
           if (filt!=null && !filt.exists(doc)) return;
           if (numHits[0]++ < lastDocRequested || score >= minScore) {
-            // if docs are always delivered in order, we could use "score>minScore"
+            // TODO: if docs are always delivered in order, we could use "score>minScore"
+            // instead of "score>=minScore" and avoid tiebreaking scores
+            // in the priority queue.
             // but might BooleanScorer14 might still be used and deliver docs out-of-order?
             hq.insert(new ScoreDoc(doc, score));
             minScore = ((ScoreDoc)hq.top()).score;

