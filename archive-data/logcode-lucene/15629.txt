GitDiffStart: a26db5db69dc3716098d0d5c414194c97ef81818 | Fri Jun 3 16:41:28 2011 +0000
diff --git a/lucene/src/java/org/apache/lucene/index/MultiFieldsEnum.java b/lucene/src/java/org/apache/lucene/index/MultiFieldsEnum.java
index feaa617..02b52d7 100644
--- a/lucene/src/java/org/apache/lucene/index/MultiFieldsEnum.java
+++ b/lucene/src/java/org/apache/lucene/index/MultiFieldsEnum.java
@@ -149,38 +149,5 @@ public final  class MultiFieldsEnum extends FieldsEnum {
       return fieldsA.current.compareTo(fieldsB.current) < 0;
     }
   }
-
-//  @Override
-//  public DocValues docValues() throws IOException {
-//    final List<MultiDocValues.DocValuesIndex> docValuesIndex = new ArrayList<MultiDocValues.DocValuesIndex>();
-//    int docsUpto = 0;
-//    Type type = null;
-//    final int numEnums = enumWithSlices.length;
-//    for (int i = 0; i < numEnums; i++) {
-//      FieldsEnumWithSlice withSlice = enumWithSlices[i];
-//      Slice slice = withSlice.slice;
-//      final DocValues values = withSlice.fields.docValues();
-//      final int start = slice.start;
-//      final int length = slice.length;
-//      if (values != null && currentField.equals(withSlice.current)) {
-//        if (docsUpto != start) {
-//          type = values.type();
-//          docValuesIndex.add(new MultiDocValues.DocValuesIndex(
-//              new MultiDocValues.DummyDocValues(start, type), docsUpto, start
-//                  - docsUpto));
-//        }
-//        docValuesIndex.add(new MultiDocValues.DocValuesIndex(values, start,
-//            length));
-//        docsUpto = start + length;
-//
-//      } else if (i + 1 == numEnums && !docValuesIndex.isEmpty()) {
-//        docValuesIndex.add(new MultiDocValues.DocValuesIndex(
-//            new MultiDocValues.DummyDocValues(start, type), docsUpto, start
-//                - docsUpto));
-//      }
-//    }
-//    return docValuesIndex.isEmpty() ? null : docValues.reset(docValuesIndex
-//        .toArray(MultiDocValues.DocValuesIndex.EMPTY_ARRAY));
-//  }
 }
 

