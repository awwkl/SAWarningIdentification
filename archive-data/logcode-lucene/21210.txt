GitDiffStart: bf238a5743f3d0806356485d2b3f0f3de9ce0126 | Sun Aug 31 20:46:47 2008 +0000
diff --git a/contrib/analyzers/src/java/org/apache/lucene/analysis/shingle/ShingleMatrixFilter.java b/contrib/analyzers/src/java/org/apache/lucene/analysis/shingle/ShingleMatrixFilter.java
index feb59b1..fc33e17 100644
--- a/contrib/analyzers/src/java/org/apache/lucene/analysis/shingle/ShingleMatrixFilter.java
+++ b/contrib/analyzers/src/java/org/apache/lucene/analysis/shingle/ShingleMatrixFilter.java
@@ -35,7 +35,7 @@ import org.apache.lucene.index.Payload;
 
 
 /**
- * <p>A ShingleFilter constructs shingles (token n-grams) from a token stream.
+ * <p>A ShingleMatrixFilter constructs shingles (token n-grams) from a token stream.
  * In other words, it creates combinations of tokens as a single token.
  *
  * <p>For example, the sentence "please divide this sentence into shingles"
@@ -96,7 +96,7 @@ import org.apache.lucene.index.Payload;
  * or if each column contains a great number of rows.
  *
  * <p>The problem is that in order avoid producing duplicates
- * the filter needs to keep track of any shingle already produced and returned to the consumer
+ * the filter needs to keep track of any shingle already produced and returned to the consumer.
  *
  * There is a bit of resource management to handle this
  * but it would of course be much better if the filter was written
@@ -105,7 +105,6 @@ import org.apache.lucene.index.Payload;
  * <p>The filter also has basic support for calculating weights for the shingles
  * based on the weights of the tokens from the input stream, output shingle size, et c.
  * See {@link #calculateShingleWeight(org.apache.lucene.analysis.Token, java.util.List, int, java.util.List, java.util.List)}.
- *
  */
 public class ShingleMatrixFilter extends TokenStream {
 

