GitDiffStart: 03cbb8fd869ede0d867e3b60000d7df995a6512e | Wed May 9 23:32:13 2007 +0000
diff --git a/docs/fileformats.html b/docs/fileformats.html
index 069ffc2..58469b5 100644
--- a/docs/fileformats.html
+++ b/docs/fileformats.html
@@ -1326,30 +1326,22 @@ document.write("<text>Last Published:</text> " + document.lastModified);
 <a name="N104A9"></a><a name="Lock File"></a>
 <h3 class="boxed">Lock File</h3>
 <p>
-                    A write lock is used to indicate that another
-                    process is writing to the index. Note that this file is not
-                    stored in the index directory itself, but rather in the
-                    system's temporary directory, as indicated in the Java
-                    system property "java.io.tmpdir".
-                </p>
-<p>
                     The write lock, which is stored in the index
                     directory by default, is named "write.lock".  If
                     the lock directory is different from the index
                     directory then the write lock will be named
                     "XXXX-write.lock" where XXXX is a unique prefix
                     derived from the full path to the index directory.
-                    When this file is present, a process is currently
-                    adding documents to an index, or removing files
-                    from that index.  This lock file prevents several
-                    processes from attempting to modify an index at
-                    the same time.
+                    When this file is present, a writer is currently
+                    modifying the index (adding or removing
+                    documents).  This lock file ensures that only one
+                    writer is modifying the index at a time.
                 </p>
 <p>
                     Note that prior to version 2.1, Lucene also used a
                     commit lock. This was removed in 2.1.
                 </p>
-<a name="N104B8"></a><a name="Deletable File"></a>
+<a name="N104B5"></a><a name="Deletable File"></a>
 <h3 class="boxed">Deletable File</h3>
 <p>
                     Prior to Lucene 2.1 there was a file "deletable"
@@ -1358,7 +1350,7 @@ document.write("<text>Last Published:</text> " + document.lastModified);
                     the files that are deletable, instead, so no file
                     is written.
                 </p>
-<a name="N104C1"></a><a name="Compound Files"></a>
+<a name="N104BE"></a><a name="Compound Files"></a>
 <h3 class="boxed">Compound Files</h3>
 <p>Starting with Lucene 1.4 the compound file format became default. This
                     is simply a container for all files described in the next section
@@ -1378,14 +1370,14 @@ document.write("<text>Last Published:</text> " + document.lastModified);
 </div>
 
         
-<a name="N104E3"></a><a name="Per-Segment Files"></a>
+<a name="N104E0"></a><a name="Per-Segment Files"></a>
 <h2 class="boxed">Per-Segment Files</h2>
 <div class="section">
 <p>
                 The remaining files are all per-segment, and are
                 thus defined by suffix.
             </p>
-<a name="N104EB"></a><a name="Fields"></a>
+<a name="N104E8"></a><a name="Fields"></a>
 <h3 class="boxed">Fields</h3>
 <p>
                     
@@ -1604,7 +1596,7 @@ document.write("<text>Last Published:</text> " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N105A6"></a><a name="Term Dictionary"></a>
+<a name="N105A3"></a><a name="Term Dictionary"></a>
 <h3 class="boxed">Term Dictionary</h3>
 <p>
                     The term dictionary is represented as two files:
@@ -1781,7 +1773,7 @@ document.write("<text>Last Published:</text> " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N10620"></a><a name="Frequencies"></a>
+<a name="N1061D"></a><a name="Frequencies"></a>
 <h3 class="boxed">Frequencies</h3>
 <p>
                     The .frq file contains the lists of documents
@@ -1879,7 +1871,7 @@ document.write("<text>Last Published:</text> " + document.lastModified);
                     <sup>nd</sup>
                     starts.
                 </p>
-<a name="N10674"></a><a name="Positions"></a>
+<a name="N10671"></a><a name="Positions"></a>
 <h3 class="boxed">Positions</h3>
 <p>
                     The .prx file contains the lists of positions that
@@ -1945,7 +1937,7 @@ document.write("<text>Last Published:</text> " + document.lastModified);
                     Payload. If PayloadLength is not stored, then this Payload has the same
                     length as the Payload at the previous position.
                 </p>
-<a name="N106B0"></a><a name="Normalization Factors"></a>
+<a name="N106AD"></a><a name="Normalization Factors"></a>
 <h3 class="boxed">Normalization Factors</h3>
 <p>
                     
@@ -2049,7 +2041,7 @@ document.write("<text>Last Published:</text> " + document.lastModified);
 <b>2.1 and above:</b>
                     Separate norm files are created (when adequate) for both compound and non compound segments.
                 </p>
-<a name="N10719"></a><a name="Term Vectors"></a>
+<a name="N10716"></a><a name="Term Vectors"></a>
 <h3 class="boxed">Term Vectors</h3>
 <ol>
                     
@@ -2175,7 +2167,7 @@ document.write("<text>Last Published:</text> " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N107AC"></a><a name="Deleted Documents"></a>
+<a name="N107A9"></a><a name="Deleted Documents"></a>
 <h3 class="boxed">Deleted Documents</h3>
 <p>The .del file is
                     optional, and only exists when a segment contains deletions.
@@ -2247,7 +2239,7 @@ document.write("<text>Last Published:</text> " + document.lastModified);
 </div>
 
         
-<a name="N107EF"></a><a name="Limitations"></a>
+<a name="N107EC"></a><a name="Limitations"></a>
 <h2 class="boxed">Limitations</h2>
 <div class="section">
 <p>There
diff --git a/docs/fileformats.pdf b/docs/fileformats.pdf
index 008fb81..2dffef5 100644
--- a/docs/fileformats.pdf
+++ b/docs/fileformats.pdf
@@ -35,7 +35,7 @@ Table of contents
  7.4 Positions...................................................................................................................... 14
  7.5 Normalization Factors................................................................................................. 15
  7.6 Term Vectors............................................................................................................... 16
- 7.7 Deleted Documents..................................................................................................... 18
+ 7.7 Deleted Documents..................................................................................................... 17
 8 Limitations....................................................................................................................... 18
 
                                                                        Page 2
@@ -338,16 +338,12 @@ extension .nrm); if it is 0 then each field's norms are stored as separate .fN f
 
 6.2. Lock File
 
-A write lock is used to indicate that another process is writing to the index. Note that this file
-is not stored in the index directory itself, but rather in the system's temporary directory, as
-indicated in the Java system property "java.io.tmpdir".
-
 The write lock, which is stored in the index directory by default, is named "write.lock". If the
 lock directory is different from the index directory then the write lock will be named
 "XXXX-write.lock" where XXXX is a unique prefix derived from the full path to the index
-directory. When this file is present, a process is currently adding documents to an index, or
-removing files from that index. This lock file prevents several processes from attempting to
-modify an index at the same time.
+directory. When this file is present, a writer is currently modifying the index (adding or
+removing documents). This lock file ensures that only one writer is modifying the index at a
+time.
 
 Note that prior to version 2.1, Lucene also used a commit lock. This was removed in 2.1.
 
@@ -362,14 +358,17 @@ no file is written.
 Starting with Lucene 1.4 the compound file format became default. This is simply a container
 for all files described in the next section (except for the .del file).
 
+Compound (.cfs) --> FileCount, <DataOffset, FileName> FileCount , FileData FileCount
+
+FileCount --> VInt
+
+DataOffset --> Long
+
 Page 9
 
         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
-Compound (.cfs) --> FileCount, <DataOffset, FileName> FileCount , FileData FileCount
-FileCount --> VInt
-DataOffset --> Long
 FileName --> String
 FileData --> raw file data
 The raw file data is the data from the individual files named above.
@@ -397,16 +396,16 @@ Stored fields are represented by two files:
     FieldIndex (.fdx) --> <FieldValuesPosition> SegSize
     FieldValuesPosition --> Uint64
     This is used to find the location within the field data file of the fields of a particular
+    document. Because it contains fixed-length data, this file may be easily randomly
+    accessed. The position of document n 's field data is the Uint64 at n*8 in this file.
+2. The field data, or .fdt file.
+    This contains the stored fields of each document, as follows:
 
                                                                        Page 10
 
 Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
-    document. Because it contains fixed-length data, this file may be easily randomly
-    accessed. The position of document n 's field data is the Uint64 at n*8 in this file.
-2. The field data, or .fdt file.
-    This contains the stored fields of each document, as follows:
     FieldData (.fdt) --> <DocFieldData> SegSize
     DocFieldData --> FieldCount, <FieldNum, Bits, Value> FieldCount
     FieldCount --> VInt
@@ -434,18 +433,15 @@ The term dictionary is represented as two files:
 
     TermInfoFile (.tis)--> TIVersion, TermCount, IndexInterval, SkipInterval, TermInfos
     TIVersion --> UInt32
+    TermCount --> UInt64
+    IndexInterval --> UInt32
+    SkipInterval --> UInt32
 
 Page 11
 
          Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
-    TermCount --> UInt64
-
-    IndexInterval --> UInt32
-
-    SkipInterval --> UInt32
-
     TermInfos --> <TermInfo> TermCount
 
     TermInfo --> <Term, DocFreq, FreqDelta, ProxDelta, SkipDelta>
@@ -486,18 +482,18 @@ Page 11
 
     This contains every IndexInterval th entry from the .tis file, along with its location in the
     "tis" file. This is designed to be read entirely into memory and used to provide random
-
-                                                                       Page 12
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
     access to the "tis" file.
 
     The structure of this file is very similar to the .tis file, with the addition of one item per
     record, the IndexDelta.
 
     TermInfoIndex (.tii)--> TIVersion, IndexTermCount, IndexInterval, SkipInterval,
+
+                                                                       Page 12
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
     TermIndices
 
     TIVersion --> UInt32
@@ -540,16 +536,17 @@ DocDelta,Freq,DocSkip,PayloadLength,FreqSkip,ProxSkip --> VInt
 
 TermFreqs are ordered by term (the term is implicit, from the .tis file).
 
-Page 13
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 TermFreq entries are ordered by increasing document number.
 
 DocDelta determines both the document number and the frequency. In particular, DocDelta/2
 is the difference between this document number and the previous document number (or zero
 when this is the first document in a TermFreqs). When DocDelta is odd, the frequency is one.
+
+Page 13
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 When DocDelta is even, the frequency is read as another VInt.
 
 For example, the TermFreqs for a term which occurs once in document seven and three times
@@ -590,16 +587,17 @@ PositionDelta --> VInt
 
 PayloadLength --> VInt
 
-                                                                       Page 14
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 PayloadData --> bytePayloadLength
 
 TermPositions are ordered by term (the term is implicit, from the .tis file).
 
 Positions entries are ordered by increasing document number (the document number is
+
+                                                                       Page 14
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 implicit from the .frq file).
 
 PositionDelta is, if payloads are disabled for the term's field, the difference between the
@@ -642,14 +640,15 @@ NormsHeader has 4 bytes, last of which is the format version for this file, curr
 Each byte encodes a floating point value. Bits 0-2 contain the 3-bit mantissa, and bits 3-8
 contain the 5-bit exponent.
 
+These are converted to an IEEE single float value as follows:
+1. If the byte is zero, use a zero float.
+2. Otherwise, set the sign bit of the float to zero;
+
 Page 15
 
          Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
-These are converted to an IEEE single float value as follows:
-1. If the byte is zero, use a zero float.
-2. Otherwise, set the sign bit of the float to zero;
 3. add 48 to the exponent and use this as the float's exponent;
 4. map the mantissa to the high-order 3 bits of the float's mantissa; and
 5. set the low-order 21 bits of the float's mantissa to zero.
@@ -691,15 +690,15 @@ Term Vector support is an optional on a field by field basis. It consists of 4 f
 
     FieldNums --> <FieldNumDelta> NumFields
 
+    FieldNumDelta --> VInt
+
+    FieldPositions --> <FieldPosition> NumFields
+
                                                                        Page 16
 
 Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
-    FieldNumDelta --> VInt
-
-    FieldPositions --> <FieldPosition> NumFields
-
     FieldPosition --> VLong
 
     The .tvd file is used to map out the fields that have term vectors stored and where the
@@ -745,13 +744,13 @@ Copyright © 2006 The Apache Software Foundation. All rights reserved.
     ?? Offsets are stored as delta encoded VInts. The first VInt is the startOffset, the second
          is the endOffset.
 
+7.7. Deleted Documents
+
 Page 17
 
          Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
-7.7. Deleted Documents
-
 The .del file is optional, and only exists when a segment contains deletions.
 
 Although per-segment, this file is maintained exterior to compound segment files.
@@ -796,15 +795,9 @@ For example, if there are 8000 bits and only bits 10,12,32 are set, DGaps would
 There are a few places where these file formats limit the maximum number of terms and
 documents to a 32-bit quantity, or to approximately 4 billion. This is not today a problem,
 but, in the long term, probably will be. These should therefore be replaced with either UInt64
+values, or better yet, with VInt values which have no limit.
 
                                                                        Page 18
 
 Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
-values, or better yet, with VInt values which have no limit.
-
-Page 19
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 
\ No newline at end of file
diff --git a/src/site/src/documentation/content/xdocs/fileformats.xml b/src/site/src/documentation/content/xdocs/fileformats.xml
index 423fe32..47e368d 100644
--- a/src/site/src/documentation/content/xdocs/fileformats.xml
+++ b/src/site/src/documentation/content/xdocs/fileformats.xml
@@ -894,25 +894,16 @@
             <section id="Lock File"><title>Lock File</title>
 
                 <p>
-                    A write lock is used to indicate that another
-                    process is writing to the index. Note that this file is not
-                    stored in the index directory itself, but rather in the
-                    system's temporary directory, as indicated in the Java
-                    system property "java.io.tmpdir".
-                </p>
-
-                <p>
                     The write lock, which is stored in the index
                     directory by default, is named "write.lock".  If
                     the lock directory is different from the index
                     directory then the write lock will be named
                     "XXXX-write.lock" where XXXX is a unique prefix
                     derived from the full path to the index directory.
-                    When this file is present, a process is currently
-                    adding documents to an index, or removing files
-                    from that index.  This lock file prevents several
-                    processes from attempting to modify an index at
-                    the same time.
+                    When this file is present, a writer is currently
+                    modifying the index (adding or removing
+                    documents).  This lock file ensures that only one
+                    writer is modifying the index at a time.
                 </p>
 
                 <p>

