GitDiffStart: 57adb4371a3362a4ba909f3b0dc01d459e855adb | Mon Jan 16 00:00:50 2012 +0000
diff --git a/lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter.java b/lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter.java
index 4d7e083..86c68bc 100644
--- a/lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter.java
+++ b/lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter.java
@@ -156,7 +156,7 @@ public final class Lucene40PostingsWriter extends PostingsWriterBase {
     this.fieldInfo = fieldInfo;
     indexOptions = fieldInfo.indexOptions;
     if (indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {
-      throw new IllegalArgumentException("this codec cannot index offsets");
+      throw new UnsupportedOperationException("this codec cannot index offsets");
     }
         
     storePayloads = fieldInfo.storePayloads;
diff --git a/lucene/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.java b/lucene/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.java
index bfee7cf..c8c7d30 100644
--- a/lucene/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.java
+++ b/lucene/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.java
@@ -254,7 +254,7 @@ public class MemoryPostingsFormat extends PostingsFormat {
       @Override
       public TermsConsumer addField(FieldInfo field) {
         if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {
-          throw new IllegalArgumentException("this codec cannot index offsets");
+          throw new UnsupportedOperationException("this codec cannot index offsets");
         }
         if (VERBOSE) System.out.println("\naddField field=" + field.name);
         return new TermsWriter(out, field);
diff --git a/lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter.java b/lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter.java
index 692e0b4..d1c095a 100644
--- a/lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter.java
+++ b/lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsWriter.java
@@ -116,7 +116,7 @@ public final class PulsingPostingsWriter extends PostingsWriterBase {
   public void setField(FieldInfo fieldInfo) {
     this.indexOptions = fieldInfo.indexOptions;
     if (indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {
-      throw new IllegalArgumentException("this codec cannot index offsets: " + indexOptions);
+      throw new UnsupportedOperationException("this codec cannot index offsets: " + indexOptions);
     }
     if (DEBUG) System.out.println("PW field=" + fieldInfo.name + " indexOptions=" + indexOptions);
     storePayloads = fieldInfo.storePayloads;
diff --git a/lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsWriter.java b/lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsWriter.java
index 4b2c105..62e9a2f 100644
--- a/lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsWriter.java
+++ b/lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsWriter.java
@@ -189,7 +189,7 @@ public final class SepPostingsWriter extends PostingsWriterBase {
     this.fieldInfo = fieldInfo;
     this.indexOptions = fieldInfo.indexOptions;
     if (indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {
-      throw new IllegalArgumentException("this codec cannot index offsets");
+      throw new UnsupportedOperationException("this codec cannot index offsets");
     }
     skipListWriter.setIndexOptions(indexOptions);
     storePayloads = indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS && fieldInfo.storePayloads;
diff --git a/lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter.java b/lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter.java
index 2d0a3a3..45ccd05 100644
--- a/lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter.java
+++ b/lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter.java
@@ -89,7 +89,7 @@ class PreFlexFieldsWriter extends FieldsConsumer {
   public TermsConsumer addField(FieldInfo field) throws IOException {
     assert field.number != -1;
     if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {
-      throw new IllegalArgumentException("this codec cannot index offsets");
+      throw new UnsupportedOperationException("this codec cannot index offsets");
     }
     //System.out.println("w field=" + field.name + " storePayload=" + field.storePayloads + " number=" + field.number);
     return new PreFlexTermsWriter(field);
diff --git a/lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.java b/lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.java
index 65367c5..0d8f9a6 100644
--- a/lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.java
+++ b/lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.java
@@ -199,7 +199,7 @@ public class RAMOnlyPostingsFormat extends PostingsFormat {
     @Override
     public TermsConsumer addField(FieldInfo field) {
       if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {
-        throw new IllegalArgumentException("this codec cannot index offsets");
+        throw new UnsupportedOperationException("this codec cannot index offsets");
       }
       RAMField ramField = new RAMField(field.name);
       postings.fieldToTerms.put(field.name, ramField);

