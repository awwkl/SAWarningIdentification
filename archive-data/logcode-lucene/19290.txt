GitDiffStart: dc5f441fae224dcc4eba2b774fec099341d6b65f | Sat Sep 26 16:47:35 2009 +0000
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
index 58d3605..096905e 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
@@ -389,7 +389,7 @@ public class DataImporter {
     try {
       Date lastModified = sw.loadIndexStartTime();
       setLastIndexTime(lastModified);
-      if (command.equals("full-import")) {
+      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {
         doFullImport(sw, reqParams);
       } else if (command.equals(DELTA_IMPORT_CMD)) {
         doDeltaImport(sw, reqParams);
diff --git a/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java b/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java
index d97bd69..30c4022 100644
--- a/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java
+++ b/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java
@@ -132,6 +132,44 @@ public class TestDocBuilder {
   }
 
   @Test
+  public void testImportCommand() {
+    try {
+      DataImporter di = new DataImporter();
+      di.loadDataConfig(dc_singleEntity);
+      DataConfig cfg = di.getConfig();
+      DataConfig.Entity ent = cfg.document.entities.get(0);
+      List l = new ArrayList();
+      l.add(createMap("id", 1, "desc", "one"));
+      MockDataSource.setIterator("select * from x", l.iterator());
+      ent.dataSrc = new MockDataSource();
+      ent.isDocRoot = true;
+      DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap("command", "import"));
+      SolrWriterImpl swi = new SolrWriterImpl();
+      di.runCmd(rp, swi);
+      Assert.assertEquals(Boolean.FALSE, swi.deleteAllCalled);
+      Assert.assertEquals(Boolean.TRUE, swi.commitCalled);
+      Assert.assertEquals(1, swi.docs.size());
+      Assert.assertEquals(1, di.getDocBuilder().importStatistics.queryCount
+              .get());
+      Assert
+              .assertEquals(1, di.getDocBuilder().importStatistics.docCount.get());
+      Assert.assertEquals(1, di.getDocBuilder().importStatistics.rowsCount
+              .get());
+
+      for (int i = 0; i < l.size(); i++) {
+        Map<String, Object> map = (Map<String, Object>) l.get(i);
+        SolrInputDocument doc = swi.docs.get(i);
+        for (Map.Entry<String, Object> entry : map.entrySet()) {
+          Assert.assertEquals(entry.getValue(), doc.getFieldValue(entry
+                  .getKey()));
+        }
+      }
+    } finally {
+      MockDataSource.clearCache();
+    }
+  }
+
+  @Test
   public void singleEntityMultipleRows() {
     try {
       DataImporter di = new DataImporter();

