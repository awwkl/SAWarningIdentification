GitDiffStart: e9f65fe0f8d2cf6fecdf5b3ba08adc71c0bc16be | Tue May 24 15:45:52 2016 -0700
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 41b6559..db97fc6 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -327,6 +327,8 @@ Other Changes
 
 * SOLR-9159: New cloud based concurrent atomic update test (hossman)
 
+* SOLR-9119: several static methods in ValueSourceParser have been made private (hossman)
+
 ==================  6.0.1 ==================
 (No Changes)
 
diff --git a/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java b/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java
index 4a1a4b1..65a4d0d 100644
--- a/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java
+++ b/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java
@@ -91,25 +91,29 @@ public abstract class ValueSourceParser implements NamedListInitializedPlugin {
    */
   public abstract ValueSource parse(FunctionQParser fp) throws SyntaxError;
 
-  /* standard functions */
-  public static Map<String, ValueSourceParser> standardValueSourceParsers = new HashMap<>();
+  /** standard functions supported by default, filled in static class initialization */
+  private static final Map<String, ValueSourceParser> standardVSParsers = new HashMap<>();
+  
+  /** standard functions supported by default */
+  public static final Map<String, ValueSourceParser> standardValueSourceParsers
+    = Collections.unmodifiableMap(standardVSParsers);
 
   /** Adds a new parser for the name and returns any existing one that was overridden.
    *  This is not thread safe.
    */
-  public static ValueSourceParser addParser(String name, ValueSourceParser p) {
-    return standardValueSourceParsers.put(name, p);
+  private static ValueSourceParser addParser(String name, ValueSourceParser p) {
+    return standardVSParsers.put(name, p);
   }
 
   /** Adds a new parser for the name and returns any existing one that was overridden.
    *  This is not thread safe.
    */
-  public static ValueSourceParser addParser(NamedParser p) {
-    return standardValueSourceParsers.put(p.name(), p);
+  private static ValueSourceParser addParser(NamedParser p) {
+    return standardVSParsers.put(p.name(), p);
   }
 
   private static void alias(String source, String dest) {
-    standardValueSourceParsers.put(dest, standardValueSourceParsers.get(source));
+    standardVSParsers.put(dest, standardVSParsers.get(source));
   }
 
   static {

