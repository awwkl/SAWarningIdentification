GitDiffStart: 3430150819e36558a19794bb788f851b1259fafb | Wed Dec 23 22:36:16 2015 +0000
diff --git a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDimensionalReader.java b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDimensionalReader.java
index e58b9ac..fbbd6f2 100644
--- a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDimensionalReader.java
+++ b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDimensionalReader.java
@@ -24,6 +24,7 @@ import java.util.Map;
 
 import org.apache.lucene.codecs.DimensionalReader;
 import org.apache.lucene.index.CorruptIndexException;
+import org.apache.lucene.index.FieldInfo;
 import org.apache.lucene.index.IndexFileNames;
 import org.apache.lucene.index.SegmentReadState;
 import org.apache.lucene.store.BufferedChecksumIndexInput;
@@ -135,9 +136,18 @@ class SimpleTextDimensionalReader extends DimensionalReader {
   /** Finds all documents and points matching the provided visitor */
   @Override
   public void intersect(String field, IntersectVisitor visitor) throws IOException {
+    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(field);
+    if (fieldInfo == null) {
+      throw new IllegalArgumentException("field=\"" + field + "\" is unrecognized");
+    }
+    if (fieldInfo.getDimensionCount() == 0) {
+      throw new IllegalArgumentException("field=\"" + field + "\" did not index dimensional values");
+    }
     BKDReader bkdReader = readers.get(field);
     if (bkdReader == null) {
-      throw new IllegalArgumentException("field=\"" + field + "\" was not indexed with dimensional values");
+      // Schema ghost corner case!  This field did index dimensional values in the past, but
+      // now all docs having this dimensional field were deleted in this segment:
+      return;
     }
     bkdReader.intersect(visitor);
   }
diff --git a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDimensionalWriter.java b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDimensionalWriter.java
index 8bb1e19..c09b5b4 100644
--- a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDimensionalWriter.java
+++ b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDimensionalWriter.java
@@ -157,7 +157,11 @@ class SimpleTextDimensionalWriter extends DimensionalWriter {
           return Relation.CELL_CROSSES_QUERY;
         }
       });
-    indexFPs.put(fieldInfo.name, writer.finish(dataOut));
+
+    // We could have 0 points on merge since all docs with dimensional fields may be deleted:
+    if (writer.getPointCount() > 0) {
+      indexFPs.put(fieldInfo.name, writer.finish(dataOut));
+    }
   }
 
   private void write(IndexOutput out, String s) throws IOException {
diff --git a/lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60DimensionalWriter.java b/lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60DimensionalWriter.java
index 91b163a..58e9aa8 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60DimensionalWriter.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60DimensionalWriter.java
@@ -105,7 +105,7 @@ public class Lucene60DimensionalWriter extends DimensionalWriter implements Clos
           }
         });
 
-      // We could have 0 points since all docs with dimensional fields may be deleted:
+      // We could have 0 points on merge since all docs with dimensional fields may be deleted:
       if (writer.getPointCount() > 0) {
         indexFPs.put(fieldInfo.name, writer.finish(dataOut));
       }

