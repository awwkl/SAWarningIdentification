GitDiffStart: d845266cbeeb7558c32b76169563c84b48f2dd4c | Wed Dec 23 06:55:27 2009 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 7824b89..a096294 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -178,6 +178,8 @@ Other Changes
 * SOLR-1674: Improve analysis tests and cut over to new TokenStream API.
   (Robert Muir via Mark Miller)
 
+* SOLR-1661 : Remove adminCore from CoreContainer . removed deprecated methods setAdminCore(), getAdminCore() (noble)
+
 Build
 ----------------------
 
diff --git a/src/java/org/apache/solr/core/CoreContainer.java b/src/java/org/apache/solr/core/CoreContainer.java
index f19d951..d860567 100644
--- a/src/java/org/apache/solr/core/CoreContainer.java
+++ b/src/java/org/apache/solr/core/CoreContainer.java
@@ -63,8 +63,6 @@ public class CoreContainer
   protected String libDir = null;
   protected ClassLoader libLoader = null;
   protected SolrResourceLoader loader = null;
-  @Deprecated
-  protected java.lang.ref.WeakReference<SolrCore> adminCore = null;
   protected Properties containerProperties;
   protected Map<String ,IndexSchema> indexSchemaCache;
   protected String adminHandler;
@@ -202,7 +200,6 @@ public class CoreContainer
    * 
    * @param dir the home directory of all resources.
    * @param cfgis the configuration file InputStream
-   * @param configName
    * @throws ParserConfigurationException
    * @throws IOException
    * @throws SAXException
@@ -550,43 +547,7 @@ public class CoreContainer
     }
   }
 
-  /**
-   * Sets the preferred core used to handle MultiCore admin tasks.
-   */
-  @Deprecated
-  public void setAdminCore(SolrCore core) {
-    synchronized (cores) {
-      adminCore = new java.lang.ref.WeakReference<SolrCore>(core);
-    }
-  }
-
-  /**
-   * Ensures there is a valid core to handle MultiCore admin taks and
-   * increase its refcount.
-   * @see SolrCore#close() 
-   * @return the acquired admin core, null if no core is available
-   */
-  @Deprecated
-  public SolrCore getAdminCore() {
-    synchronized (cores) {
-      SolrCore core = adminCore != null ? adminCore.get() : null;
-      if (core != null && !core.isClosed()) {
-        core.open();
-      } else {
-        for (SolrCore c : cores.values()) {
-          if (c != null) {
-            core = c;
-            core.open();
-            setAdminCore(core);
-            break;
-          }
-        }
-      }
-      return core;
-    }
-  }
-
-  // ---------------- Multicore self related methods --------------- 
+  // ---------------- Multicore self related methods ---------------
   /** 
    * Creates a CoreAdminHandler for this MultiCore.
    * @return a CoreAdminHandler
diff --git a/src/java/org/apache/solr/core/SolrCore.java b/src/java/org/apache/solr/core/SolrCore.java
index dca3e14..bd43096 100644
--- a/src/java/org/apache/solr/core/SolrCore.java
+++ b/src/java/org/apache/solr/core/SolrCore.java
@@ -670,10 +670,7 @@ public final class SolrCore implements SolrInfoMBean {
    *   <li>All MBeans will be unregistered from MBeanServer if JMX was enabled
    *       </li>
    * </ul>
-   * <p>
-   * This method should always be called when the core is obtained through
-   * {@link CoreContainer#getCore} or {@link CoreContainer#getAdminCore}.
-   * </p>
+   * <p>   
    * <p>
    * The behavior of this method is determined by the result of decrementing
    * the core's reference count (A core is created with a refrence count of 1)...

