GitDiffStart: 18d21bd45591c5e1c9b36a5bdf8bdf82386ef6c4 | Thu Jun 14 23:54:23 2007 +0000
diff --git a/build.xml b/build.xml
index 1ad9a6d..de79a0f 100644
--- a/build.xml
+++ b/build.xml
@@ -107,6 +107,7 @@
              source="${java.compat.version}"
              debug="on"
              encoding="utf8"
+             sourcepath=""
              classpathref="@{classpathref}">
          <nested />
       </javac>
@@ -202,8 +203,11 @@
 
     <solr-javac destdir="${dest}/common"
                 classpathref="compile.classpath">
-      <src path="${src}/java" />
-      <include name="org/apache/solr/common/**" />
+      <src>
+        <dirset dir="${src}/java">
+          <include name="org/apache/solr/common/**" />
+        </dirset>
+      </src>
     </solr-javac>
   </target>
 
diff --git a/src/java/org/apache/solr/common/params/CommonParams.java b/src/java/org/apache/solr/common/params/CommonParams.java
index 5c1e2f6..794bf63 100755
--- a/src/java/org/apache/solr/common/params/CommonParams.java
+++ b/src/java/org/apache/solr/common/params/CommonParams.java
@@ -18,10 +18,8 @@
 package org.apache.solr.common.params;
 
 import org.apache.solr.common.util.NamedList;
-import org.apache.solr.core.SolrCore;
-
-
 
+import java.util.logging.Logger;
 
 /**
  * A collection on common params, both for Plugin initialization and
@@ -30,6 +28,8 @@ import org.apache.solr.core.SolrCore;
 @Deprecated
 public class CommonParams {
 
+  public static Logger log = Logger.getLogger(CommonParams.class.getName());
+  
   @Deprecated
   public static String FL = "fl";
   /** default query field */
@@ -95,7 +95,7 @@ public class CommonParams {
       if (tmp instanceof String) {
         fl = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + SolrParams.FL);
+        log.severe("init param is not a str: " + SolrParams.FL);
       }
     }
 
@@ -104,7 +104,7 @@ public class CommonParams {
       if (tmp instanceof String) {
         df = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + SolrParams.DF);
+        log.severe("init param is not a str: " + SolrParams.DF);
       }
     }
 
@@ -113,7 +113,7 @@ public class CommonParams {
       if (tmp instanceof String) {
         debugQuery = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + SolrParams.DEBUG_QUERY);
+        log.severe("init param is not a str: " + SolrParams.DEBUG_QUERY);
       }
     }
 
@@ -122,7 +122,7 @@ public class CommonParams {
       if (tmp instanceof String) {
         explainOther = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + SolrParams.EXPLAIN_OTHER);
+        log.severe("init param is not a str: " + SolrParams.EXPLAIN_OTHER);
       }
     }
 
diff --git a/src/java/org/apache/solr/common/params/DisMaxParams.java b/src/java/org/apache/solr/common/params/DisMaxParams.java
index af60f81..0382842 100755
--- a/src/java/org/apache/solr/common/params/DisMaxParams.java
+++ b/src/java/org/apache/solr/common/params/DisMaxParams.java
@@ -18,8 +18,8 @@
 package org.apache.solr.common.params;
 
 import org.apache.solr.common.util.NamedList;
-import org.apache.solr.core.SolrCore;
 
+import java.util.logging.Logger;
     
 
 /**
@@ -28,6 +28,8 @@ import org.apache.solr.core.SolrCore;
  */
 public class DisMaxParams extends CommonParams {
   
+  public static Logger log = Logger.getLogger(CommonParams.class.getName());
+
   /** query and init param for tiebreaker value */
   public static String TIE = "tie";
   /** query and init param for query fields */
@@ -130,7 +132,7 @@ public class DisMaxParams extends CommonParams {
       if (tmp instanceof Float) {
         tiebreaker = ((Float)tmp).floatValue();
       } else {
-        SolrCore.log.severe("init param is not a float: " + TIE);
+        log.severe("init param is not a float: " + TIE);
       }
     }
 
@@ -139,7 +141,7 @@ public class DisMaxParams extends CommonParams {
       if (tmp instanceof String) {
         qf = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + QF);
+        log.severe("init param is not a str: " + QF);
       }
     }
 
@@ -148,7 +150,7 @@ public class DisMaxParams extends CommonParams {
       if (tmp instanceof String) {
         pf = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + PF);
+        log.severe("init param is not a str: " + PF);
       }
     }
 
@@ -158,7 +160,7 @@ public class DisMaxParams extends CommonParams {
       if (tmp instanceof String) {
         mm = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + MM);
+        log.severe("init param is not a str: " + MM);
       }
     }
         
@@ -167,7 +169,7 @@ public class DisMaxParams extends CommonParams {
       if (tmp instanceof Integer) {
         pslop = ((Integer)tmp).intValue();
       } else {
-        SolrCore.log.severe("init param is not an int: " + PS);
+        log.severe("init param is not an int: " + PS);
       }
     }
 
@@ -176,7 +178,7 @@ public class DisMaxParams extends CommonParams {
       if (tmp instanceof String) {
         bq = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + BQ);
+        log.severe("init param is not a str: " + BQ);
       }
     }
  
@@ -185,7 +187,7 @@ public class DisMaxParams extends CommonParams {
       if (tmp instanceof String) {
         bf = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + BF);
+        log.severe("init param is not a str: " + BF);
       }
     }
  
@@ -194,7 +196,7 @@ public class DisMaxParams extends CommonParams {
       if (tmp instanceof String) {
         fq = tmp.toString();
       } else {
-        SolrCore.log.severe("init param is not a str: " + FQ);
+        log.severe("init param is not a str: " + FQ);
       }
     }
                 

