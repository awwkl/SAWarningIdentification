GitDiffStart: 0c7b18a9295a9a9f5fe3405de02f08fccddb2aea | Tue Dec 25 19:27:04 2001 +0000
diff --git a/src/java/org/apache/lucene/document/DateField.java b/src/java/org/apache/lucene/document/DateField.java
index 873f801..fca671b 100644
--- a/src/java/org/apache/lucene/document/DateField.java
+++ b/src/java/org/apache/lucene/document/DateField.java
@@ -60,7 +60,7 @@ import java.util.Date;
    * strings are structured so that lexicographic sorting orders by date.  This
    * makes them suitable for use as field values and search terms.  */
 public class DateField {
-  private DateField() {};
+  private DateField() {}
 
   // make date strings long enough to last a millenium
   private static int DATE_LEN = Long.toString(1000L*365*24*60*60*1000,
diff --git a/src/java/org/apache/lucene/index/IndexReader.java b/src/java/org/apache/lucene/index/IndexReader.java
index 9942b45..5a15e04 100644
--- a/src/java/org/apache/lucene/index/IndexReader.java
+++ b/src/java/org/apache/lucene/index/IndexReader.java
@@ -75,7 +75,7 @@ import org.apache.lucene.document.Document;
   rely on a given document having the same number between sessions. */
 
 abstract public class IndexReader {
-  protected IndexReader() {};
+  protected IndexReader() {}
 
   /** Returns an IndexReader reading the index in an FSDirectory in the named
   path. */
diff --git a/src/java/org/apache/lucene/index/TermDocs.java b/src/java/org/apache/lucene/index/TermDocs.java
index cb51068..ee1cd61 100644
--- a/src/java/org/apache/lucene/index/TermDocs.java
+++ b/src/java/org/apache/lucene/index/TermDocs.java
@@ -69,15 +69,15 @@ import org.apache.lucene.document.Document;
 public interface TermDocs {
   /** Returns the current document number.  <p> This is invalid until {@link
       #next()} is called for the first time.*/
-  public int doc();
+  int doc();
 
   /** Returns the frequency of the term within the current document.  <p> This
     is invalid until {@link #next()} is called for the first time.*/
-  public int freq();
+  int freq();
 
   /** Moves to the next pair in the enumeration.  <p> Returns true iff there is
     such a next pair in the enumeration. */
-  public boolean next() throws IOException;
+  boolean next() throws IOException;
 
   /** Attempts to read multiple entries from the enumeration, up to length of
    * <i>docs</i>.  Document numbers are stored in <i>docs</i>, and term
@@ -86,7 +86,7 @@ public interface TermDocs {
    *
    * <p>Returns the number of entries read.  Zero is only returned when the
    * stream has been exhausted.  */
-  public int read(int[] docs, int[] freqs) throws IOException;
+  int read(int[] docs, int[] freqs) throws IOException;
 
   /** Skips entries to the first beyond the current whose document number is
    * greater than or equal to <i>target</i>. <p>Returns true iff there is such
@@ -101,10 +101,10 @@ public interface TermDocs {
    * </pre>
    * Some implementations are considerably more efficient than that.
    */
-  public boolean skipTo(int target) throws IOException;
+  boolean skipTo(int target) throws IOException;
 
   /** Frees associated resources. */
-  public void close() throws IOException;
+  void close() throws IOException;
 }
 
 
diff --git a/src/java/org/apache/lucene/index/TermPositions.java b/src/java/org/apache/lucene/index/TermPositions.java
index 834f8f7..9834a77 100644
--- a/src/java/org/apache/lucene/index/TermPositions.java
+++ b/src/java/org/apache/lucene/index/TermPositions.java
@@ -71,5 +71,5 @@ public interface TermPositions extends TermDocs {
     without calling {@link #next()}<p> This is
     invalid until {@link #next()} is called for
     the first time.*/
-  public int nextPosition() throws IOException;
+  int nextPosition() throws IOException;
 }  

