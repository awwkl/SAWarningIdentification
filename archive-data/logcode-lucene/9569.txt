GitDiffStart: 398b80b6dec3aa225d59762dc2a78a4a28c4fee8 | Thu Jan 31 11:15:17 2013 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java b/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java
index 6b4eb2b..674756d 100644
--- a/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java
+++ b/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java
@@ -153,7 +153,7 @@ class Packed64 extends PackedInts.MutableImpl {
 
     // bulk get
     assert index % decoder.longValueCount() == 0;
-    int blockIndex = (int) ((long) index * bitsPerValue) >>> BLOCK_BITS;
+    int blockIndex = (int) (((long) index * bitsPerValue) >>> BLOCK_BITS);
     assert (((long)index * bitsPerValue) & MOD_MASK) == 0;
     final int iterations = len / decoder.longValueCount();
     decoder.decode(blocks, blockIndex, arr, off, iterations);
@@ -217,7 +217,7 @@ class Packed64 extends PackedInts.MutableImpl {
 
     // bulk set
     assert index % encoder.longValueCount() == 0;
-    int blockIndex = (int) ((long) index * bitsPerValue) >>> BLOCK_BITS;
+    int blockIndex = (int) (((long) index * bitsPerValue) >>> BLOCK_BITS);
     assert (((long)index * bitsPerValue) & MOD_MASK) == 0;
     final int iterations = len / encoder.longValueCount();
     encoder.encode(arr, off, blocks, blockIndex, iterations);
diff --git a/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java b/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
index 2a8ed01..d2b40fa 100644
--- a/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
+++ b/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
@@ -1138,7 +1138,9 @@ public class PackedInts {
       }
       while (remaining > 0) {
         final int written = dest.set(destPos, buf, 0, remaining);
+        destPos += written;
         remaining -= written;
+        System.arraycopy(buf, written, buf, 0, remaining);
       }
     }
   }

