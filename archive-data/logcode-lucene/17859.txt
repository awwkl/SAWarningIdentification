GitDiffStart: 8d8c162dc5aebf92b9a3ebdd5861553d164a6e9c | Tue Jun 1 15:47:03 2010 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index a18114f..60a1a1d 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -318,6 +318,9 @@ Bug Fixes
 * SOLR-1928: TermsComponent didn't correctly break ties for non-text
   fields sorted by count. (yonik)
 
+* SOLR-1936: The JSON response format needed to escape unicode code point
+  U+2028 - 'LINE SEPARATOR' (Robert Hofstra, yonik)
+
 
 Other Changes
 ----------------------
diff --git a/solr/src/java/org/apache/solr/response/JSONResponseWriter.java b/solr/src/java/org/apache/solr/response/JSONResponseWriter.java
index e9e8592..3c34243 100644
--- a/solr/src/java/org/apache/solr/response/JSONResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/JSONResponseWriter.java
@@ -613,7 +613,7 @@ class JSONWriter extends TextResponseWriter {
 
       for (int i=0; i<val.length(); i++) {
         char ch = val.charAt(i);
-        if ((ch > '#' && ch != '\\') || ch==' ') { // fast path
+        if ((ch > '#' && ch != '\\' && ch !=  '\u2028') || ch==' ') { // fast path
           writer.write(ch);
           continue;
         }
@@ -628,6 +628,7 @@ class JSONWriter extends TextResponseWriter {
           case '\t': writer.write('\\'); writer.write('t'); break;
           case '\b': writer.write('\\'); writer.write('b'); break;
           case '\f': writer.write('\\'); writer.write('f'); break;
+          case '\u2028': unicodeEscape(writer,ch); break;
           // case '/':
           default: {
             if (ch <= 0x1F) {

