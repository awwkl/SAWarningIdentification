GitDiffStart: d32a68961bfa57d6853d2e5e2d160d9c6cc651b9 | Wed Nov 5 15:41:08 2014 +0000
diff --git a/solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.java b/solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.java
index 45f244a..81bf221 100644
--- a/solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.java
+++ b/solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.java
@@ -394,6 +394,7 @@ public class JsonRecordReader {
             event = parser.nextEvent();
             if (event == STRING ||
                 event == LONG ||
+                event == NUMBER ||
                 event == BIGNUMBER ||
                 event == BOOLEAN ||
                 event == NULL) {
diff --git a/solr/solrj/src/test/org/apache/solr/common/util/TestJsonRecordReader.java b/solr/solrj/src/test/org/apache/solr/common/util/TestJsonRecordReader.java
index d884e86..2099241 100644
--- a/solr/solrj/src/test/org/apache/solr/common/util/TestJsonRecordReader.java
+++ b/solr/solrj/src/test/org/apache/solr/common/util/TestJsonRecordReader.java
@@ -180,7 +180,7 @@ public class TestJsonRecordReader  extends SolrTestCaseJ4 {
     records = streamer.getAllRecords(new StringReader(json));
     assertEquals(2, records.size());
     for (Map<String, Object> record : records) {
-      assertEquals(6,record.size());
+      assertEquals(6, record.size());
       assertTrue(record.containsKey("subject"));
       assertTrue(record.containsKey("test"));
       assertTrue(record.containsKey("marks"));
@@ -203,4 +203,24 @@ public class TestJsonRecordReader  extends SolrTestCaseJ4 {
 
   }
 
+  public void testNestedJsonWithFloats() throws Exception {
+
+    String json = "{\n" +
+        "        \"a_string\" : \"abc\",\n" +
+        "        \"a_num\" : 2.0,\n" +
+        "        \"a\" : {\n" +
+        "                        \"b\" : [\n" +
+        "                                {\"id\":\"1\", \"title\" : \"test1\"},\n" +
+        "                                {\"id\":\"2\", \"title\" : \"test2\"}\n" +
+        "                        ]\n" +
+        "                }\n" +
+        "}\n";
+
+    JsonRecordReader streamer;
+    List<Map<String, Object>> records;
+
+    streamer = JsonRecordReader.getInst("/a/b", Collections.singletonList("title_s:/a/b/title"));
+    records = streamer.getAllRecords(new StringReader(json));
+    assertEquals(2, records.size());
+  }
 }

