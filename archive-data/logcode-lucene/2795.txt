GitDiffStart: 6d5b236dea1a85fea38f85eca0d1f0d2fc39cfc0 | Tue Sep 1 09:32:44 2015 +0000
diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil.java b/lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil.java
index 2245b69..e27dba3 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil.java
@@ -256,19 +256,26 @@ public class AutomatonTestUtil {
       return ArrayUtil.toIntArray(soFar);
     }
   }
+
+  private static Automaton randomSingleAutomaton(Random random) {
+    while (true) {
+      try {
+        Automaton a1 = new RegExp(AutomatonTestUtil.randomRegexp(random), RegExp.NONE).toAutomaton();
+        if (random.nextBoolean()) {
+          a1 = Operations.complement(a1, DEFAULT_MAX_DETERMINIZED_STATES);
+        }
+        return a1;
+      } catch (TooComplexToDeterminizeException tctde) {
+        // This can (rarely) happen if the random regexp is too hard; just try again...
+      }
+    }
+  }
   
   /** return a random NFA/DFA for testing */
   public static Automaton randomAutomaton(Random random) {
     // get two random Automata from regexps
-    Automaton a1 = new RegExp(AutomatonTestUtil.randomRegexp(random), RegExp.NONE).toAutomaton();
-    if (random.nextBoolean()) {
-      a1 = Operations.complement(a1, DEFAULT_MAX_DETERMINIZED_STATES);
-    }
-    
-    Automaton a2 = new RegExp(AutomatonTestUtil.randomRegexp(random), RegExp.NONE).toAutomaton();
-    if (random.nextBoolean()) {
-      a2 = Operations.complement(a2, DEFAULT_MAX_DETERMINIZED_STATES);
-    }
+    Automaton a1 = randomSingleAutomaton(random);
+    Automaton a2 = randomSingleAutomaton(random);
 
     // combine them in random ways
     switch (random.nextInt(4)) {

