GitDiffStart: 6c72ae4a02eabf4c72b1f1d8685879b429e2ad23 | Wed May 4 17:25:29 2011 +0000
diff --git a/lucene/docs/fileformats.html b/lucene/docs/fileformats.html
index f4528c7..88fe07f 100644
--- a/lucene/docs/fileformats.html
+++ b/lucene/docs/fileformats.html
@@ -425,6 +425,9 @@ document.write("Last Published: " + document.lastModified);
 <p>
             In version 3.1, segments records the code version
             that created them. See LUCENE-2720 for details.
+            
+            Additionally segments track explicitly whether or
+            not they have term vectors. See LUCENE-2811 for details.
            </p>
 </div>
 
@@ -1508,7 +1511,7 @@ document.write("Last Published: " + document.lastModified);
 <b>3.1</b>
                     Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegVersion, SegName, SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile, NumField,
                     NormGen<sup>NumField</sup>,
-                    IsCompoundFile, DeletionCount, HasProx, Diagnostics&gt;<sup>SegCount</sup>, CommitUserData, Checksum
+                    IsCompoundFile, DeletionCount, HasProx, Diagnostics, HasVectors&gt;<sup>SegCount</sup>, CommitUserData, Checksum
                 </p>
 <p>
                     Format, NameCounter, SegCount, SegSize, NumField,
@@ -1525,7 +1528,7 @@ document.write("Last Published: " + document.lastModified);
 		</p>
 <p>
                     IsCompoundFile, HasSingleNormFile,
-                    DocStoreIsCompoundFile, HasProx --&gt; Int8
+                    DocStoreIsCompoundFile, HasProx, HasVectors --&gt; Int8
                 </p>
 <p>
 		    CommitUserData --&gt; Map&lt;String,String&gt;
@@ -1634,7 +1637,10 @@ document.write("Last Published: " + document.lastModified);
 		    Lucene version, OS, Java version, why the segment
 		    was created (merge, flush, addIndexes), etc.
                 </p>
-<a name="N105CD"></a><a name="Lock File"></a>
+<p> HasVectors is 1 if this segment stores term vectors,
+            else it's 0.
+                </p>
+<a name="N105D0"></a><a name="Lock File"></a>
 <h3 class="boxed">Lock File</h3>
 <p>
                     The write lock, which is stored in the index
@@ -1648,14 +1654,14 @@ document.write("Last Published: " + document.lastModified);
                     documents).  This lock file ensures that only one
                     writer is modifying the index at a time.
                 </p>
-<a name="N105D6"></a><a name="Deletable File"></a>
+<a name="N105D9"></a><a name="Deletable File"></a>
 <h3 class="boxed">Deletable File</h3>
 <p>
                     A writer dynamically computes
                     the files that are deletable, instead, so no file
                     is written.
                 </p>
-<a name="N105DF"></a><a name="Compound Files"></a>
+<a name="N105E2"></a><a name="Compound Files"></a>
 <h3 class="boxed">Compound Files</h3>
 <p>Starting with Lucene 1.4 the compound file format became default. This
                     is simply a container for all files described in the next section
@@ -1682,14 +1688,14 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N10607"></a><a name="Per-Segment Files"></a>
+<a name="N1060A"></a><a name="Per-Segment Files"></a>
 <h2 class="boxed">Per-Segment Files</h2>
 <div class="section">
 <p>
                 The remaining files are all per-segment, and are
                 thus defined by suffix.
             </p>
-<a name="N1060F"></a><a name="Fields"></a>
+<a name="N10612"></a><a name="Fields"></a>
 <h3 class="boxed">Fields</h3>
 <p>
                     
@@ -1883,7 +1889,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N106B6"></a><a name="Term Dictionary"></a>
+<a name="N106B9"></a><a name="Term Dictionary"></a>
 <h3 class="boxed">Term Dictionary</h3>
 <p>
                     The term dictionary is represented as two files:
@@ -2075,7 +2081,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N1073A"></a><a name="Frequencies"></a>
+<a name="N1073D"></a><a name="Frequencies"></a>
 <h3 class="boxed">Frequencies</h3>
 <p>
                     The .frq file contains the lists of documents
@@ -2203,7 +2209,7 @@ document.write("Last Published: " + document.lastModified);
                    entry in level-1. In the example has entry 15 on level 1 a pointer to entry 15 on level 0 and entry 31 on level 1 a pointer
                    to entry 31 on level 0.                   
                 </p>
-<a name="N107C2"></a><a name="Positions"></a>
+<a name="N107C5"></a><a name="Positions"></a>
 <h3 class="boxed">Positions</h3>
 <p>
                     The .prx file contains the lists of positions that
@@ -2273,7 +2279,7 @@ document.write("Last Published: " + document.lastModified);
                     Payload. If PayloadLength is not stored, then this Payload has the same
                     length as the Payload at the previous position.
                 </p>
-<a name="N107FE"></a><a name="Normalization Factors"></a>
+<a name="N10801"></a><a name="Normalization Factors"></a>
 <h3 class="boxed">Normalization Factors</h3>
 <p>There's a single .nrm file containing all norms:
                 </p>
@@ -2353,7 +2359,7 @@ document.write("Last Published: " + document.lastModified);
                 </p>
 <p>Separate norm files are created (when adequate) for both compound and non compound segments.
                 </p>
-<a name="N1084F"></a><a name="Term Vectors"></a>
+<a name="N10852"></a><a name="Term Vectors"></a>
 <h3 class="boxed">Term Vectors</h3>
 <p>
 		  Term Vector support is an optional on a field by
@@ -2489,7 +2495,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N108EB"></a><a name="Deleted Documents"></a>
+<a name="N108EE"></a><a name="Deleted Documents"></a>
 <h3 class="boxed">Deleted Documents</h3>
 <p>The .del file is
                     optional, and only exists when a segment contains deletions.
@@ -2553,7 +2559,7 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N10925"></a><a name="Limitations"></a>
+<a name="N10928"></a><a name="Limitations"></a>
 <h2 class="boxed">Limitations</h2>
 <div class="section">
 <p>
diff --git a/lucene/docs/fileformats.pdf b/lucene/docs/fileformats.pdf
index 4873eea..366927b 100644
--- a/lucene/docs/fileformats.pdf
+++ b/lucene/docs/fileformats.pdf
@@ -33,7 +33,7 @@ Table of contents
  9.1 Fields........................................................................................................................... 12
  9.2 Term Dictionary.......................................................................................................... 14
  9.3 Frequencies..................................................................................................................16
- 9.4 Positions...................................................................................................................... 17
+ 9.4 Positions...................................................................................................................... 18
  9.5 Normalization Factors................................................................................................. 18
  9.6 Term Vectors............................................................................................................... 19
  9.7 Deleted Documents..................................................................................................... 21
@@ -93,7 +93,8 @@ Page 3
 Apache Lucene - Index File Formats
 
 In version 3.1, segments records the code version that created them. See LUCENE-2720 for
-details.
+details. Additionally segments track explicitly whether or not they have term vectors. See
+LUCENE-2811 for details.
 
 2. Definitions
 
@@ -388,7 +389,7 @@ recorded as Int64, written twice.
 3.1 Segments --> Format, Version, NameCounter, SegCount, <SegVersion, SegName,
 SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile],
 HasSingleNormFile, NumField, NormGenNumField, IsCompoundFile, DeletionCount,
-HasProx, Diagnostics>SegCount, CommitUserData, Checksum
+HasProx, Diagnostics, HasVectors>SegCount, CommitUserData, Checksum
 
 Format, NameCounter, SegCount, SegSize, NumField, DocStoreOffset, DeletionCount -->
 Int32
@@ -399,7 +400,8 @@ SegVersion, SegName, DocStoreSegment --> String
 
 Diagnostics --> Map<String,String>
 
-IsCompoundFile, HasSingleNormFile, DocStoreIsCompoundFile, HasProx --> Int8
+IsCompoundFile, HasSingleNormFile, DocStoreIsCompoundFile, HasProx, HasVectors -->
+Int8
 
 CommitUserData --> Map<String,String>
 
@@ -464,17 +466,19 @@ The Diagnostics Map is privately written by IndexWriter, as a debugging aid, for
 segment it creates. It includes metadata like the current Lucene version, OS, Java version,
 why the segment was created (merge, flush, addIndexes), etc.
 
+HasVectors is 1 if this segment stores term vectors, else it's 0.
+
 8.2. Lock File
 
 The write lock, which is stored in the index directory by default, is named "write.lock". If the
-lock directory is different from the index directory then the write lock will be named
-"XXXX-write.lock" where XXXX is a unique prefix derived from the full path to the index
 
 Page 11
 
          Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+lock directory is different from the index directory then the write lock will be named
+"XXXX-write.lock" where XXXX is a unique prefix derived from the full path to the index
 directory. When this file is present, a writer is currently modifying the index (adding or
 removing documents). This lock file ensures that only one writer is modifying the index at a
 time.
@@ -504,14 +508,16 @@ The remaining files are all per-segment, and are thus defined by suffix.
 Field Info
 Field names are stored in the field info file, with suffix .fnm.
 FieldInfos (.fnm) --> FNMVersion,FieldsCount, <FieldName, FieldBits> FieldsCount
-FNMVersion, FieldsCount --> VInt
-FieldName --> String
 
                                                                        Page 12
 
 Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+FNMVersion, FieldsCount --> VInt
+
+FieldName --> String
+
 FieldBits --> Byte
 
 ?? The low-order bit is one for indexed fields, and zero for non-indexed fields.
@@ -555,15 +561,14 @@ Stored fields are represented by two files:
 
     FieldNum --> VInt
 
-    Bits --> Byte
-
-    ?? low order bit is one for tokenized fields
-
 Page 13
 
          Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+    Bits --> Byte
+
+    ?? low order bit is one for tokenized fields
     ?? second bit is one for fields containing binary data
     ?? third bit is one for fields with compression option enabled (if compression is enabled,
 
@@ -607,14 +612,14 @@ The term dictionary is represented as two files:
     character code) by the term's field name, and within that lexicographically (by UTF16
     character code) by the term's text.
 
-    TIVersion names the version of the format of this file and is equal to
-    TermInfosWriter.FORMAT_CURRENT.
-
                                                                        Page 14
 
 Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+    TIVersion names the version of the format of this file and is equal to
+    TermInfosWriter.FORMAT_CURRENT.
+
     Term text prefixes are shared. The PrefixLength is the number of initial characters from
     the previous term which must be pre-pended to a term's suffix in order to form the term's
     text. Thus, if the previous term's text was "bone" and the term is "boy", the PrefixLength
@@ -657,15 +662,15 @@ Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 
     SkipInterval --> UInt32
 
-    TermIndices --> <TermInfo, IndexDelta> IndexTermCount
-
-    IndexDelta --> VLong
-
 Page 15
 
          Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+    TermIndices --> <TermInfo, IndexDelta> IndexTermCount
+
+    IndexDelta --> VLong
+
     IndexDelta determines the position of this term's TermInfo within the .tis file. In
     particular, it is the difference between the position of this term's entry in that file and the
     position of the previous term's entry.
@@ -708,15 +713,16 @@ TermFreq entries are ordered by increasing document number.
 DocDelta: if omitTf is false, this determines both the document number and the frequency. In
 particular, DocDelta/2 is the difference between this document number and the previous
 document number (or zero when this is the first document in a TermFreqs). When DocDelta
-is odd, the frequency is one. When DocDelta is even, the frequency is read as another VInt. If
-omitTf is true, DocDelta contains the gap (not multiplied by 2) between document numbers
-and no frequency information is stored.
 
                                                                        Page 16
 
 Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+is odd, the frequency is one. When DocDelta is even, the frequency is read as another VInt. If
+omitTf is true, DocDelta contains the gap (not multiplied by 2) between document numbers
+and no frequency information is stored.
+
 For example, the TermFreqs for a term which occurs once in document seven and three times
 in document eleven, with omitTf false, would be the following sequence of VInts:
 
@@ -755,16 +761,15 @@ The SkipData entries on all upper levels > 0 contain a SkipChildLevelPointer ref
 corresponding SkipData entry in level-1. In the example has entry 15 on level 1 a pointer to
 entry 15 on level 0 and entry 31 on level 1 a pointer to entry 31 on level 0.
 
-9.4. Positions
-
-The .prx file contains the lists of positions that each term occurs at within documents. Note
-that fields with omitTf true do not store anything into this file, and if all fields in the index
-
 Page 17
 
          Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+9.4. Positions
+
+The .prx file contains the lists of positions that each term occurs at within documents. Note
+that fields with omitTf true do not store anything into this file, and if all fields in the index
 have omitTf true then the .prx file will not exist.
 
 ProxFile (.prx) --> <TermPositions> TermCount
@@ -807,15 +812,15 @@ stored, then this Payload has the same length as the Payload at the previous pos
 
 There's a single .nrm file containing all norms:
 
-AllNorms (.nrm) --> NormsHeader,<Norms> NumFieldsWithNorms
-
-Norms --> <Byte> SegSize
-
                                                                        Page 18
 
 Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+AllNorms (.nrm) --> NormsHeader,<Norms> NumFieldsWithNorms
+
+Norms --> <Byte> SegSize
+
 NormsHeader --> 'N','R','M',Version
 
 Version --> Byte
@@ -856,14 +861,13 @@ Term Vector support is an optional on a field by field basis. It consists of 3 f
     FieldPosition --> UInt64 (offset in the .tvf file)
 2. The Document or .tvd file.
 
-    This contains, for each document, the number of fields, a list of the fields with term
-    vector info and finally a list of pointers to the field information in the .tvf (Term Vector
-
 Page 19
 
          Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+    This contains, for each document, the number of fields, a list of the fields with term
+    vector info and finally a list of pointers to the field information in the .tvf (Term Vector
     Fields) file.
     Document (.tvd) --> TVDVersion<NumFields, FieldNums, FieldPositions> NumDocs
     TVDVersion --> Int (TermVectorsReader.FORMAT_CURRENT)
@@ -889,21 +893,23 @@ Page 19
     Positions --> <VInt>TermFreq
     Offsets --> <VInt, VInt>TermFreq
     Notes:
-    ?? Position/Offset byte stores whether this term vector has position or offset information
 
                                                                        Page 20
 
 Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+    ?? Position/Offset byte stores whether this term vector has position or offset information
          stored.
-    ?? Term text prefixes are shared. The PrefixLength is the number of initial characters
 
+    ?? Term text prefixes are shared. The PrefixLength is the number of initial characters
          from the previous term which must be pre-pended to a term's suffix in order to form
          the term's text. Thus, if the previous term's text was "bone" and the term is "boy", the
          PrefixLength is two and the suffix is "y".
+
     ?? Positions are stored as delta encoded VInts. This means we only store the difference
          of the current position from the last position
+
     ?? Offsets are stored as delta encoded VInts. The first VInt is the startOffset, the second
          is the endOffset.
 
@@ -941,13 +947,12 @@ DGaps represents sparse bit-vectors more efficiently than Bits. It is made of DG
 indexes of nonzero bytes in Bits, and the nonzero bytes themselves. The number of nonzero
 bytes in Bits (NonzeroBytesCount) is not stored.
 
-For example, if there are 8000 bits and only bits 10,12,32 are set, DGaps would be used:
-
 Page 21
 
          Copyright Â© 2006 The Apache Software Foundation. All rights reserved.
                                                                                                                 Apache Lucene - Index File Formats
 
+For example, if there are 8000 bits and only bits 10,12,32 are set, DGaps would be used:
 (VInt) 1 , (byte) 20 , (VInt) 3 , (Byte) 1
 
 10. Limitations
diff --git a/lucene/src/site/src/documentation/content/xdocs/fileformats.xml b/lucene/src/site/src/documentation/content/xdocs/fileformats.xml
index eacbc16..17ca534 100644
--- a/lucene/src/site/src/documentation/content/xdocs/fileformats.xml
+++ b/lucene/src/site/src/documentation/content/xdocs/fileformats.xml
@@ -90,6 +90,9 @@
         <p>
             In version 3.1, segments records the code version
             that created them. See LUCENE-2720 for details.
+            
+            Additionally segments track explicitly whether or
+            not they have term vectors. See LUCENE-2811 for details.
            </p>
         </section>
 
@@ -935,7 +938,7 @@
                     <b>3.1</b>
                     Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegVersion, SegName, SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile, NumField,
                     NormGen<sup>NumField</sup>,
-                    IsCompoundFile, DeletionCount, HasProx, Diagnostics&gt;<sup>SegCount</sup>, CommitUserData, Checksum
+                    IsCompoundFile, DeletionCount, HasProx, Diagnostics, HasVectors&gt;<sup>SegCount</sup>, CommitUserData, Checksum
                 </p>
 
                 <p>
@@ -957,7 +960,7 @@
 
                 <p>
                     IsCompoundFile, HasSingleNormFile,
-                    DocStoreIsCompoundFile, HasProx --&gt; Int8
+                    DocStoreIsCompoundFile, HasProx, HasVectors --&gt; Int8
                 </p>
 
 		<p>
@@ -1083,6 +1086,10 @@
 		    Lucene version, OS, Java version, why the segment
 		    was created (merge, flush, addIndexes), etc.
                 </p>
+         
+        <p> HasVectors is 1 if this segment stores term vectors,
+            else it's 0.
+                </p>
 
             </section>
 

