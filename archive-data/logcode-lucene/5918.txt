GitDiffStart: 5f22d328a4a244ed5fa2f582be3b57060d56a34c | Fri Jun 27 12:14:57 2014 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index dfbd4a7..f313881 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -96,6 +96,8 @@ New Features
 
 * SOLR-6069: The 'clusterstatus' API should return 'roles' information. (shalin)
 
+* SOLR-6044: The 'clusterstatus' API should return live_nodes as well. (shalin)
+
 Bug Fixes
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java b/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java
index 4ce1601..3dee8a3 100644
--- a/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java
+++ b/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java
@@ -693,7 +693,7 @@ public class OverseerCollectionProcessor implements Runnable, ClosableThread {
     }
 
     Map roles = null;
-    if(zkStateReader.getZkClient().exists(ZkStateReader.ROLES, true)){
+    if (zkStateReader.getZkClient().exists(ZkStateReader.ROLES, true)) {
       roles = (Map) ZkStateReader.fromJSON(zkStateReader.getZkClient().getData(ZkStateReader.ROLES, null, null, true));
     }
 
@@ -763,6 +763,10 @@ public class OverseerCollectionProcessor implements Runnable, ClosableThread {
       clusterStatus.add("roles", roles);
     }
 
+    // add live_nodes
+    List<String> liveNodes = zkStateReader.getZkClient().getChildren(ZkStateReader.LIVE_NODES_ZKNODE, null, true);
+    clusterStatus.add("live_nodes", liveNodes);
+
     results.add("cluster", clusterStatus);
   }
 
diff --git a/solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI.java b/solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI.java
index ce14c2e..2b80f0f 100644
--- a/solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI.java
+++ b/solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI.java
@@ -146,6 +146,9 @@ public class TestCollectionAPI extends AbstractFullDistribZkTestBase {
       assertNotNull(collections.get(COLLECTION_NAME1));
       assertEquals(4, collections.size());
 
+      List<String> liveNodes = (List<String>) cluster.get("live_nodes");
+      assertNotNull("Live nodes should not be null", liveNodes);
+      assertFalse(liveNodes.isEmpty());
     } finally {
       //remove collections
       client.shutdown();

