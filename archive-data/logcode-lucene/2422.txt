GitDiffStart: d07124ef6f90f7cb89173a2aa687473804e1e8bd | Wed Nov 18 07:50:02 2015 +0000
diff --git a/dev-tools/idea/.idea/libraries/JUnit.xml b/dev-tools/idea/.idea/libraries/JUnit.xml
index 9df5872..f851c84 100644
--- a/dev-tools/idea/.idea/libraries/JUnit.xml
+++ b/dev-tools/idea/.idea/libraries/JUnit.xml
@@ -2,7 +2,7 @@
   <library name="JUnit">
     <CLASSES>
       <root url="jar://$PROJECT_DIR$/lucene/test-framework/lib/junit-4.10.jar!/" />
-      <root url="jar://$PROJECT_DIR$/lucene/test-framework/lib/randomizedtesting-runner-2.2.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/lucene/test-framework/lib/randomizedtesting-runner-2.3.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 928b614..9639ecd 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -294,6 +294,8 @@ Bug Fixes
 
 Other
 
+* LUCENE-6899: Upgrade randomizedtesting to 2.3.1. (Dawid Weiss)
+
 * LUCENE-6478: Test execution can hang with java.security.debug. (Dawid Weiss)
 
 * LUCENE-6862: Upgrade of RandomizedRunner to version 2.2.0. (Dawid Weiss)
diff --git a/lucene/ivy-versions.properties b/lucene/ivy-versions.properties
index 59ed470..5ad2450 100644
--- a/lucene/ivy-versions.properties
+++ b/lucene/ivy-versions.properties
@@ -7,7 +7,7 @@
 /cglib/cglib-nodep = 2.2
 /com.adobe.xmp/xmpcore = 5.1.2
 
-com.carrotsearch.randomizedtesting.version = 2.2.0
+com.carrotsearch.randomizedtesting.version = 2.3.1
 /com.carrotsearch.randomizedtesting/junit4-ant = ${com.carrotsearch.randomizedtesting.version}
 /com.carrotsearch.randomizedtesting/randomizedtesting-runner = ${com.carrotsearch.randomizedtesting.version}
 
diff --git a/lucene/licenses/junit4-ant-2.2.0.jar.sha1 b/lucene/licenses/junit4-ant-2.2.0.jar.sha1
deleted file mode 100644
index 1290d64..0000000
--- a/lucene/licenses/junit4-ant-2.2.0.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-0d401c9c729deccd5db8a5df3102eb18793c2224
diff --git a/lucene/licenses/junit4-ant-2.3.1.jar.sha1 b/lucene/licenses/junit4-ant-2.3.1.jar.sha1
new file mode 100644
index 0000000..1f2dadf
--- /dev/null
+++ b/lucene/licenses/junit4-ant-2.3.1.jar.sha1
@@ -0,0 +1 @@
+054cdf1533c6362812605dab2a984494930108d6
diff --git a/lucene/licenses/randomizedtesting-runner-2.2.0.jar.sha1 b/lucene/licenses/randomizedtesting-runner-2.2.0.jar.sha1
deleted file mode 100644
index b23b23f..0000000
--- a/lucene/licenses/randomizedtesting-runner-2.2.0.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-60de504132241be049564a3a34fd7dcc296e2ef0
diff --git a/lucene/licenses/randomizedtesting-runner-2.3.1.jar.sha1 b/lucene/licenses/randomizedtesting-runner-2.3.1.jar.sha1
new file mode 100644
index 0000000..da4334d
--- /dev/null
+++ b/lucene/licenses/randomizedtesting-runner-2.3.1.jar.sha1
@@ -0,0 +1 @@
+a6e5446a14e44802b91983b3e5c2d56e1d1c424a
diff --git a/lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest.java b/lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest.java
index 109ba20..9046b3b 100644
--- a/lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest.java
+++ b/lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest.java
@@ -22,7 +22,6 @@ import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
-import com.carrotsearch.randomizedtesting.annotations.Name;
 import com.carrotsearch.randomizedtesting.annotations.ParametersFactory;
 import com.spatial4j.core.context.SpatialContext;
 import com.spatial4j.core.shape.Point;
@@ -41,8 +40,7 @@ import org.apache.lucene.spatial.vector.PointVectorStrategy;
 import org.junit.Test;
 
 public class DistanceStrategyTest extends StrategyTestCase {
-
-  @ParametersFactory
+  @ParametersFactory(argumentFormatting = "strategy=%s")
   public static Iterable<Object[]> parameters() {
     List<Object[]> ctorArgs = new ArrayList<>();
 
@@ -52,46 +50,29 @@ public class DistanceStrategyTest extends StrategyTestCase {
 
     grid = new QuadPrefixTree(ctx,25);
     strategy = new RecursivePrefixTreeStrategy(grid, "recursive_quad");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     grid = new GeohashPrefixTree(ctx,12);
     strategy = new TermQueryPrefixTreeStrategy(grid, "termquery_geohash");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     grid = new PackedQuadPrefixTree(ctx,25);
     strategy = new RecursivePrefixTreeStrategy(grid, "recursive_packedquad");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     strategy = new PointVectorStrategy(ctx, "pointvector");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     strategy = new BBoxStrategy(ctx, "bbox");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     strategy = new SerializedDVStrategy(ctx, "serialized");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     return ctorArgs;
   }
 
-  // this is a hack for clover!
-  static class Param {
-    SpatialStrategy strategy;
-
-    Param(SpatialStrategy strategy) {
-      this.strategy = strategy;
-    }
-
-    @Override
-    public String toString() {
-      return strategy.getFieldName();
-    }
-  }
-
-//  private String fieldName;
-
-  public DistanceStrategyTest(@Name("strategy") Param param) {
-    SpatialStrategy strategy = param.strategy;
+  public DistanceStrategyTest(String suiteName, SpatialStrategy strategy) {
     this.ctx = strategy.getSpatialContext();
     this.strategy = strategy;
   }
diff --git a/lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test.java b/lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test.java
index 3356fb6..bd2f9ba 100644
--- a/lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test.java
+++ b/lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test.java
@@ -22,7 +22,6 @@ import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 
-import com.carrotsearch.randomizedtesting.annotations.Name;
 import com.carrotsearch.randomizedtesting.annotations.ParametersFactory;
 import com.spatial4j.core.context.SpatialContext;
 import com.spatial4j.core.distance.DistanceUtils;
@@ -44,7 +43,7 @@ import org.junit.Test;
  */
 public class PortedSolr3Test extends StrategyTestCase {
 
-  @ParametersFactory
+  @ParametersFactory(argumentFormatting = "strategy=%s")
   public static Iterable<Object[]> parameters() {
     List<Object[]> ctorArgs = new ArrayList<>();
 
@@ -54,36 +53,23 @@ public class PortedSolr3Test extends StrategyTestCase {
 
     grid = new GeohashPrefixTree(ctx,12);
     strategy = new RecursivePrefixTreeStrategy(grid, "recursive_geohash");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     grid = new QuadPrefixTree(ctx,25);
     strategy = new RecursivePrefixTreeStrategy(grid, "recursive_quad");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     grid = new GeohashPrefixTree(ctx,12);
     strategy = new TermQueryPrefixTreeStrategy(grid, "termquery_geohash");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     strategy = new PointVectorStrategy(ctx, "pointvector");
-    ctorArgs.add(new Object[]{new Param(strategy)});
+    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});
 
     return ctorArgs;
   }
-  
-  // this is a hack for clover! (otherwise strategy.toString() used as file name)
-  static class Param {
-    SpatialStrategy strategy;
-
-    Param(SpatialStrategy strategy) { this.strategy = strategy; }
-    
-    @Override
-    public String toString() { return strategy.getFieldName(); }
-  }
-
-//  private String fieldName;
 
-  public PortedSolr3Test(@Name("strategy") Param param) {
-    SpatialStrategy strategy = param.strategy;
+  public PortedSolr3Test(String suiteName, SpatialStrategy strategy) {
     this.ctx = strategy.getSpatialContext();
     this.strategy = strategy;
   }
diff --git a/solr/licenses/junit4-ant-2.2.0.jar.sha1 b/solr/licenses/junit4-ant-2.2.0.jar.sha1
deleted file mode 100644
index 1290d64..0000000
--- a/solr/licenses/junit4-ant-2.2.0.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-0d401c9c729deccd5db8a5df3102eb18793c2224
diff --git a/solr/licenses/junit4-ant-2.3.1.jar.sha1 b/solr/licenses/junit4-ant-2.3.1.jar.sha1
new file mode 100644
index 0000000..1f2dadf
--- /dev/null
+++ b/solr/licenses/junit4-ant-2.3.1.jar.sha1
@@ -0,0 +1 @@
+054cdf1533c6362812605dab2a984494930108d6
diff --git a/solr/licenses/randomizedtesting-runner-2.2.0.jar.sha1 b/solr/licenses/randomizedtesting-runner-2.2.0.jar.sha1
deleted file mode 100644
index b23b23f..0000000
--- a/solr/licenses/randomizedtesting-runner-2.2.0.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-60de504132241be049564a3a34fd7dcc296e2ef0
diff --git a/solr/licenses/randomizedtesting-runner-2.3.1.jar.sha1 b/solr/licenses/randomizedtesting-runner-2.3.1.jar.sha1
new file mode 100644
index 0000000..da4334d
--- /dev/null
+++ b/solr/licenses/randomizedtesting-runner-2.3.1.jar.sha1
@@ -0,0 +1 @@
+a6e5446a14e44802b91983b3e5c2d56e1d1c424a

