GitDiffStart: 919a3881d00e1e1a361193ee382c326c1a41b9c1 | Mon Feb 26 19:42:21 2007 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 77181d6..ae368e1 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -167,6 +167,12 @@ Bug Fixes
     attempt is made to use the solr.home dir.
     (Ryan McKinley via hossman)
 
+ 6. SOLR-173: Bug fix to SolrDispatchFilter to reduce "too many open
+    files" problem was that SolrDispatchFilter was not closing requests
+    when finished.  Also modified ResponseWriters to only fetch a Searcher
+    reference if necessary for writing out DocLists.
+    (Ryan McKinley via hossman)
+ 
 Other Changes
  1. Updated to Lucene 2.1
 
diff --git a/example/exampledocs/post.sh b/example/exampledocs/post.sh
index 1efe954..ee5fdbe 100755
--- a/example/exampledocs/post.sh
+++ b/example/exampledocs/post.sh
@@ -24,5 +24,5 @@ for f in $FILES; do
 done
 
 #send the commit command to make sure all the changes are flushed and visible
-curl $URL --data-binary '<commit/>'
+curl $URL --data-binary '<commit/>' -H 'Content-type:text/xml; charset=utf-8'
 echo
diff --git a/src/java/org/apache/solr/request/JSONResponseWriter.java b/src/java/org/apache/solr/request/JSONResponseWriter.java
index 8f7fd5a..a00f426 100644
--- a/src/java/org/apache/solr/request/JSONResponseWriter.java
+++ b/src/java/org/apache/solr/request/JSONResponseWriter.java
@@ -23,6 +23,7 @@ import org.apache.solr.schema.SchemaField;
 import org.apache.solr.schema.TextField;
 import org.apache.solr.search.DocIterator;
 import org.apache.solr.search.DocList;
+import org.apache.solr.search.SolrIndexSearcher;
 import org.apache.solr.util.NamedList;
 import org.apache.solr.util.SimpleOrderedMap;
 
@@ -427,6 +428,7 @@ class JSONWriter extends TextResponseWriter {
     incLevel();
     boolean first=true;
 
+    SolrIndexSearcher searcher = req.getSearcher();
     DocIterator iterator = ids.iterator();
     for (int i=0; i<sz; i++) {
       int id = iterator.nextDoc();
diff --git a/src/java/org/apache/solr/request/TextResponseWriter.java b/src/java/org/apache/solr/request/TextResponseWriter.java
index d1d3672..67f9acd 100644
--- a/src/java/org/apache/solr/request/TextResponseWriter.java
+++ b/src/java/org/apache/solr/request/TextResponseWriter.java
@@ -39,7 +39,6 @@ public abstract class TextResponseWriter {
   
   protected final Writer writer;
   protected final IndexSchema schema;
-  protected final SolrIndexSearcher searcher;
   protected final SolrQueryRequest req;
   protected final SolrQueryResponse rsp;
 
@@ -53,7 +52,6 @@ public abstract class TextResponseWriter {
   public TextResponseWriter(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) {
     this.writer = writer;
     this.schema = req.getSchema();
-    this.searcher = req.getSearcher();
     this.req = req;
     this.rsp = rsp;
     String indent = req.getParam("indent");
diff --git a/src/java/org/apache/solr/request/XMLWriter.java b/src/java/org/apache/solr/request/XMLWriter.java
index d439a3c..c140d7e 100644
--- a/src/java/org/apache/solr/request/XMLWriter.java
+++ b/src/java/org/apache/solr/request/XMLWriter.java
@@ -82,7 +82,7 @@ final public class XMLWriter {
     // and to encapsulate writer, schema, and searcher so
     // they don't have to be passed around in every function.
     //
-    XMLWriter xw = new XMLWriter(writer, req.getSchema(), req.getSearcher(), ver);
+    XMLWriter xw = new XMLWriter(writer, req.getSchema(), req, ver);
     xw.defaultFieldList = rsp.getReturnFields();
 
     String indent = req.getParam("indent");
@@ -135,7 +135,7 @@ final public class XMLWriter {
 
   private final Writer writer;
   private final IndexSchema schema; // needed to write fields of docs
-  private final SolrIndexSearcher searcher;  // needed to retrieve docs
+  private final SolrQueryRequest request; // the request
 
   private int level;
   private boolean defaultIndent=false;
@@ -159,10 +159,11 @@ final public class XMLWriter {
   private final Calendar cal = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
   private final StringBuilder sb = new StringBuilder();
 
-  public XMLWriter(Writer writer, IndexSchema schema, SolrIndexSearcher searcher, String version) {
+  public XMLWriter(Writer writer, IndexSchema schema, SolrQueryRequest req, String version) {
     this.writer = writer;
     this.schema = schema;
-    this.searcher = searcher;
+    this.request = req;
+    
     float ver = version==null? CURRENT_VERSION : Float.parseFloat(version);
     this.version = (int)(ver*1000);
   }
@@ -357,6 +358,7 @@ final public class XMLWriter {
     }
 
     incLevel();
+    SolrIndexSearcher searcher = request.getSearcher();
     DocIterator iterator = ids.iterator();
     for (int i=0; i<sz; i++) {
       int id = iterator.nextDoc();
diff --git a/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java b/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java
index 96b5b18..fdebcd8 100644
--- a/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java
+++ b/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter.java
@@ -74,6 +74,7 @@ public class SolrDispatchFilter implements Filter
   public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException 
   {
     if( request instanceof HttpServletRequest) {
+      SolrQueryRequest solrReq = null;
       HttpServletRequest req = (HttpServletRequest)request;
       try {
         String path = req.getServletPath();    
@@ -91,7 +92,6 @@ public class SolrDispatchFilter implements Filter
           path = path.substring( 0, idx );
         }
         
-        SolrQueryRequest solrReq = null;
         SolrRequestHandler handler = core.getRequestHandler( path );
         if( handler == null && handleSelect ) {
           if( "/select".equals( path ) || "/select/".equals( path ) ) {
@@ -126,6 +126,11 @@ public class SolrDispatchFilter implements Filter
         sendError( (HttpServletResponse)response, ex );
         return;
       }
+      finally {
+        if( solrReq != null ) {
+          solrReq.close();
+        }
+      }
     }
     
     // Otherwise let the webapp handle the request

