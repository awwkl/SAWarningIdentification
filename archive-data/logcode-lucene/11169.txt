GitDiffStart: 1517b16cf4033e9a5e3f5bbfe3c131076705d748 | Mon Sep 10 19:08:41 2012 +0000
diff --git a/solr/build.xml b/solr/build.xml
index 29953ff..6a00518 100644
--- a/solr/build.xml
+++ b/solr/build.xml
@@ -552,7 +552,7 @@
   <target name="javadocs-lint" depends="javadocs">
     <check-broken-links dir="build/docs"/>
     <!-- TODO: add missing package.htmls and bump this to level=package -->
-    <!-- <check-missing-javadocs dir="build/docs" level="none"/> -->
+    <check-missing-javadocs dir="build/docs" level="none"/>
   </target>
  
   <!-- install-maven-tasks is *not* a useless dependency. do not remove -->
diff --git a/solr/core/src/java/org/apache/solr/core/SolrCore.java b/solr/core/src/java/org/apache/solr/core/SolrCore.java
index ea90a6e..993217d 100644
--- a/solr/core/src/java/org/apache/solr/core/SolrCore.java
+++ b/solr/core/src/java/org/apache/solr/core/SolrCore.java
@@ -826,7 +826,7 @@ public final class SolrCore implements SolrInfoMBean {
    * <p>   
    * <p>
    * The behavior of this method is determined by the result of decrementing
-   * the core's reference count (A core is created with a refrence count of 1)...
+   * the core's reference count (A core is created with a reference count of 1)...
    * </p>
    * <ul>
    *   <li>If reference count is > 0, the usage count is decreased by 1 and no
@@ -991,14 +991,14 @@ public final class SolrCore implements SolrInfoMBean {
   }
 
   /**
-   * Returns an unmodifieable Map containing the registered handlers of the specified type.
+   * Returns an unmodifiable Map containing the registered handlers of the specified type.
    */
   public Map<String,SolrRequestHandler> getRequestHandlers(Class clazz) {
     return reqHandlers.getAll(clazz);
   }
   
   /**
-   * Returns an unmodifieable Map containing the registered handlers
+   * Returns an unmodifiable Map containing the registered handlers
    */
   public Map<String,SolrRequestHandler> getRequestHandlers() {
     return reqHandlers.getRequestHandlers();
@@ -1016,8 +1016,8 @@ public final class SolrCore implements SolrInfoMBean {
    *   http://${host}:${port}/${context}/select?qt=${handlerName}
    * </pre>  
    * 
-   * Handlers <em>must</em> be initalized before getting registered.  Registered
-   * handlers can immediatly accept requests.
+   * Handlers <em>must</em> be initialized before getting registered.  Registered
+   * handlers can immediately accept requests.
    * 
    * This call is thread safe.
    *  
@@ -1203,7 +1203,7 @@ public final class SolrCore implements SolrInfoMBean {
   }
 
 
-  /** Opens a new searcher and returns a RefCounted<SolrIndexSearcher> with it's reference incremented.
+  /** Opens a new searcher and returns a RefCounted&lt;SolrIndexSearcher&gt; with it's reference incremented.
    *
    * "realtime" means that we need to open quickly for a realtime view of the index, hence don't do any
    * autowarming and add to the _realtimeSearchers queue rather than the _searchers queue (so it won't
@@ -1212,7 +1212,7 @@ public final class SolrCore implements SolrInfoMBean {
    *
    * realtimeSearcher is updated to the latest opened searcher, regardless of the value of "realtime".
    *
-   * This method aquires openSearcherLock - do not call with searckLock held!
+   * This method acquires openSearcherLock - do not call with searckLock held!
    */
   public RefCounted<SolrIndexSearcher> openNewSearcher(boolean updateHandlerReopens, boolean realtime) {
     SolrIndexSearcher tmp;
@@ -1984,7 +1984,7 @@ public final class SolrCore implements SolrInfoMBean {
   /**
    *
    * @param registry The map to which the instance should be added to. The key is the name attribute
-   * @param type The type of the Plugin. These should be standard ones registerd by type.getName() in SolrConfig
+   * @param type The type of the Plugin. These should be standard ones registered by type.getName() in SolrConfig
    * @return     The default if any
    */
   public <T> T initPlugins(Map<String, T> registry, Class<T> type) {
diff --git a/solr/core/src/java/org/apache/solr/response/XMLWriter.java b/solr/core/src/java/org/apache/solr/response/XMLWriter.java
index f453646..daf776f 100644
--- a/solr/core/src/java/org/apache/solr/response/XMLWriter.java
+++ b/solr/core/src/java/org/apache/solr/response/XMLWriter.java
@@ -45,7 +45,7 @@ public class XMLWriter extends TextResponseWriter {
   private static final char[] XML_STYLESHEET="<?xml-stylesheet type=\"text/xsl\" href=\"".toCharArray();
   private static final char[] XML_STYLESHEET_END="\"?>\n".toCharArray();
 
-  /***
+  /*
   private static final char[] XML_START2_SCHEMA=(
   "<response xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
   +" xsi:noNamespaceSchemaLocation=\"http://pi.cnet.com/cnet-search/response.xsd\">\n"
@@ -90,7 +90,7 @@ public class XMLWriter extends TextResponseWriter {
       writer.write(XML_STYLESHEET_END);
     }
 
-    /***
+    /*
     String noSchema = req.getParams().get("noSchema");
     // todo - change when schema becomes available?
     if (false && noSchema == null)
@@ -180,7 +180,7 @@ public class XMLWriter extends TextResponseWriter {
 
   /**
    * The SolrDocument should already have multivalued fields implemented as
-   * Collections -- this will not rewrite to <arr>
+   * Collections -- this will not rewrite to &lt;arr&gt;
    */ 
   @Override
   public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {
diff --git a/solr/core/src/java/org/apache/solr/search/DocIterator.java b/solr/core/src/java/org/apache/solr/search/DocIterator.java
index 9c85867..08e5835 100644
--- a/solr/core/src/java/org/apache/solr/search/DocIterator.java
+++ b/solr/core/src/java/org/apache/solr/search/DocIterator.java
@@ -34,9 +34,8 @@ public interface DocIterator extends Iterator<Integer> {
   //public boolean hasNext();
 
   /**
-   * Returns the next document id if hasNext()==true
+   * Returns the next document id if <code>hasNext()==true</code>
    *
-   * <code>
    * This method is equivalent to <code>next()</code>, but avoids the creation
    * of an Integer Object.
    * @see #next()
diff --git a/solr/core/src/java/org/apache/solr/search/FunctionQParser.java b/solr/core/src/java/org/apache/solr/search/FunctionQParser.java
index 1c68e3f..cf6443a 100755
--- a/solr/core/src/java/org/apache/solr/search/FunctionQParser.java
+++ b/solr/core/src/java/org/apache/solr/search/FunctionQParser.java
@@ -213,7 +213,7 @@ public class FunctionQParser extends QParser {
    * Parse a list of ValueSource.  Must be the final set of arguments
    * to a ValueSource.
    * 
-   * @return List<ValueSource>
+   * @return List&lt;ValueSource&gt;
    * @throws ParseException
    */
   public List<ValueSource> parseValueSourceList() throws ParseException {
diff --git a/solr/core/src/java/org/apache/solr/search/QueryParsing.java b/solr/core/src/java/org/apache/solr/search/QueryParsing.java
index 2d149ca..ce483cf 100644
--- a/solr/core/src/java/org/apache/solr/search/QueryParsing.java
+++ b/solr/core/src/java/org/apache/solr/search/QueryParsing.java
@@ -226,9 +226,9 @@ public class QueryParsing {
    * <p>
    * The form of the sort specification string currently parsed is:
    * </p>
-   * <pre>>
+   * <pre>
    * SortSpec ::= SingleSort [, SingleSort]*
-   * SingleSort ::= <fieldname> SortDirection
+   * SingleSort ::= &lt;fieldname&gt; SortDirection
    * SortDirection ::= top | desc | bottom | asc
    * </pre>
    * Examples:

