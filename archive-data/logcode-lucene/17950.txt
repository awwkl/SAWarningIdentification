GitDiffStart: 1e1296e6f89f3d3fe1ec2faaa0a0b34fd2935a7c | Thu May 6 13:08:59 2010 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 2099c4f..c67dc66 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -163,9 +163,6 @@ New features
   applications that have many unique terms, since it reduces how often
   a new segment must be flushed given a fixed RAM buffer size.
 
-* LUCENE-2398: Improve tests to work better from IDEs such as Eclipse.
-  (Paolo Castagna via Robert Muir)
-
 ======================= Lucene 3.x (not yet released) =======================
 
 Changes in backwards compatibility policy
@@ -217,6 +214,17 @@ Changes in backwards compatibility policy
   of incrementToken(), tokenStream(), and reusableTokenStream().
   (Uwe Schindler, Robert Muir)
 
+* LUCENE-2316: Directory.fileLength contract was clarified - it returns the
+  actual file's length if the file exists, and throws FileNotFoundException
+  otherwise. Returning length=0 for a non-existent file is no longer allowed. If
+  you relied on that, make sure to catch the exception. (Shai Erera)
+  
+* LUCENE-2386: IndexWriter no longer performs an empty commit upon new index
+  creation. Previously, if you passed an empty Directory and set OpenMode to
+  CREATE*, IndexWriter would make a first empty commit. If you need that 
+  behavior you can call writer.commit()/close() immediately after you create it.
+  (Shai Erera, Mike McCandless)
+  
 Changes in runtime behavior
 
 * LUCENE-1923: Made IndexReader.toString() produce something
@@ -225,6 +233,10 @@ Changes in runtime behavior
 * LUCENE-2179: CharArraySet.clear() is now functional.
   (Robert Muir, Uwe Schindler)
 
+* LUCENE-2421: NativeFSLockFactory does not throw LockReleaseFailedException if 
+  it cannot delete the lock file, since obtaining the lock does not fail if the 
+  file is there. (Shai Erera)
+
 API Changes
 
 * LUCENE-2076: Rename FSDirectory.getFile -> getDirectory.  (George
@@ -306,6 +318,12 @@ API Changes
   expressions).
   (Uwe Schindler, Robert Muir)
 
+* LUCENE-2402: IndexWriter.deleteUnusedFiles now deletes unreferenced commit
+  points too. If you use an IndexDeletionPolicy which holds onto index commits
+  (such as SnapshotDeletionPolicy), you can call this method to remove those
+  commit points when they are not needed anymore (instead of waiting for the 
+  next commit). (Shai Erera)
+  
 Bug fixes
 
 * LUCENE-2119: Don't throw NegativeArraySizeException if you pass
@@ -360,7 +378,12 @@ Bug fixes
 * LUCENE-2387: Don't hang onto Fieldables from the last doc indexed,
   in IndexWriter, nor the Reader in Tokenizer after close is
   called.  (Ruben Laguna, Uwe Schindler, Mike McCandless)
- 
+  
+* LUCENE-2417: IndexCommit did not implement hashCode() and equals() 
+  consitently. Now they both take Directory and version into consideration. In
+  addition, all of IndexComnmit methods which threw 
+  UnsupportedOperationException are now abstract. (Shai Erera)
+
 New features
 
 * LUCENE-2128: Parallelized fetching document frequencies during weight
@@ -428,6 +451,10 @@ New features
 * LUCENE-2074: Make StandardTokenizer fit for Unicode 4.0, if the
   matchVersion parameter is Version.LUCENE_31. (Uwe Schindler)
 
+* LUCENE-2385: Moved NoDeletionPolicy from benchmark to core. NoDeletionPolicy
+  can be used to prevent commits from ever getting deleted from the index.
+  (Shai Erera)
+  
 Optimizations
 
 * LUCENE-2075: Terms dict cache is now shared across threads instead
@@ -509,6 +536,12 @@ Build
 * LUCENE-2074: Regenerating StandardTokenizerImpl files now needs
   JFlex 1.5 (currently only available on SVN). (Uwe Schindler)
 
+* LUCENE-1709: Tests are now parallelized by default (except for benchmark). You
+  can force them to run sequentially by passing -Drunsequential=1 on the command
+  line. The number of threads that are spwaned per CPU defaults to '1'. If you 
+  wish to change that, you can run the tests with -DthreadsPerProcessor=[num].
+  (Robert Muir, Shai Erera, Peter Kofler) 
+
 Test Cases
 
 * LUCENE-2037 Allow Junit4 tests in our envrionment (Erick Erickson
@@ -543,6 +576,9 @@ Test Cases
   access to "real" files from the test folder itsself, can use
   LuceneTestCase(J4).getDataFile().  (Uwe Schindler)
 
+* LUCENE-2398: Improve tests to work better from IDEs such as Eclipse.
+  (Paolo Castagna via Robert Muir)
+
 ================== Release 2.9.2 / 3.0.1 2010-02-26 ====================
 
 Changes in backwards compatibility policy
diff --git a/lucene/contrib/CHANGES.txt b/lucene/contrib/CHANGES.txt
index 8cd3d8a..0345833 100644
--- a/lucene/contrib/CHANGES.txt
+++ b/lucene/contrib/CHANGES.txt
@@ -2,32 +2,6 @@ Lucene contrib change Log
 
 ======================= Trunk (not yet released) =======================
   
-New features
-
- * LUCENE-2399: Add ICUNormalizer2Filter, which normalizes tokens with ICU's
-   Normalizer2. This allows for efficient combinations of normalization and custom 
-   mappings in addition to standard normalization, and normalization combined
-   with unicode case folding.  (Robert Muir)
-
- * LUCENE-1343: Add ICUFoldingFilter, a replacement for ASCIIFoldingFilter that
-   does a more thorough job of normalizing unicode text for search.
-   (Robert Haschart, Robert Muir)
-
- * LUCENE-2409: Add ICUTransformFilter, which transforms text in a context
-   sensitive way, either from ICU built-in rules (such as Traditional-Simplified),
-   or from rules you write yourself.  (Robert Muir)
-
- * LUCENE-2414: Add ICUTokenizer, a tailorable tokenizer that implements Unicode
-   Text Segmentation. This tokenizer is useful for documents or collections with
-   multiple languages.  The default configuration includes special support for
-   Thai, Lao, Myanmar, and Khmer.  (Robert Muir, Uwe Schindler)
-
-Build
-
- * LUCENE-2399: Upgrade contrib/icu's ICU jar file to ICU 4.4.  (Robert Muir)
-
-Optimizations
-
 ======================= Lucene 3.x (not yet released) =======================
 
 Changes in backwards compatibility policy
@@ -47,6 +21,10 @@ Changes in backwards compatibility policy
  * LUCENE-2226: Moved contrib/snowball functionality into contrib/analyzers.
    Be sure to remove any old obselete lucene-snowball jar files from your
    classpath!  (Robert Muir)
+   
+ * LUCENE-2323: Moved contrib/wikipedia functionality into contrib/analyzers.
+   Additionally the package was changed from org.apache.lucene.wikipedia.analysis
+   to org.apache.lucene.analysis.wikipedia.  (Robert Muir)
     
 Changes in runtime behavior
 
@@ -148,6 +126,27 @@ New features
    the ability to override any stemmer with a custom dictionary map.
    (Robert Muir, Uwe Schindler, Simon Willnauer)
 
+ * LUCENE-2399: Add ICUNormalizer2Filter, which normalizes tokens with ICU's
+   Normalizer2. This allows for efficient combinations of normalization and custom
+   mappings in addition to standard normalization, and normalization combined
+   with unicode case folding.  (Robert Muir)
+
+ * LUCENE-1343: Add ICUFoldingFilter, a replacement for ASCIIFoldingFilter that
+   does a more thorough job of normalizing unicode text for search.
+   (Robert Haschart, Robert Muir)
+
+ * LUCENE-2409: Add ICUTransformFilter, which transforms text in a context
+   sensitive way, either from ICU built-in rules (such as Traditional-Simplified),
+   or from rules you write yourself.  (Robert Muir)
+
+ * LUCENE-2414: Add ICUTokenizer, a tailorable tokenizer that implements Unicode
+   Text Segmentation. This tokenizer is useful for documents or collections with
+   multiple languages.  The default configuration includes special support for
+   Thai, Lao, Myanmar, and Khmer.  (Robert Muir, Uwe Schindler)
+
+ * LUCENE-2298: Add analyzers/stempel, an algorithmic stemmer with support for
+   the Polish language.  (Andrzej Bialecki via Robert Muir)
+
  * LUCENE-2400: ShingleFilter was changed to don't output all-filler shingles and 
    unigrams, and uses a more performant algorithm to build grams using a linked list
    of AttributeSource.cloneAttributes() instances and the new copyTo() method.
@@ -160,13 +159,17 @@ Build
    (Steven Rowe, Robert Muir)
 
  * LUCENE-2323: Moved contrib/regex into contrib/queries. Moved the
-   queryparsers under contrib/misc into contrib/queryparser. Moved
-   contrib/fast-vector-highlighter into contrib/highlighter.  (Robert Muir)
+   queryparsers under contrib/misc and contrib/surround into contrib/queryparser. 
+   Moved contrib/fast-vector-highlighter into contrib/highlighter. 
+   Moved ChainedFilter from contrib/misc to contrib/queries. contrib/spatial now
+   depends on contrib/queries instead of contrib/misc.  (Robert Muir)
    
  * LUCENE-2333: Fix failures during contrib builds, when classes in
    core were changed without ant clean. This fix also optimizes the
    dependency management between contribs by a new ANT macro.
    (Uwe Schindler, Shai Erera)
+
+ * LUCENE-2399: Upgrade contrib/icu's ICU jar file to ICU 4.4.  (Robert Muir)
    
 Optimizations
 
diff --git a/modules/analysis/CHANGES.txt b/modules/analysis/CHANGES.txt
index 84eed7c..66ecd67 100644
--- a/modules/analysis/CHANGES.txt
+++ b/modules/analysis/CHANGES.txt
@@ -2,11 +2,6 @@ Analysis Module Change Log
 
 ======================= Trunk (not yet released) =======================
 
-Bug fixes
-
- * LUCENE-2404: Fix bugs with position increment and empty tokens in ThaiWordFilter.
-   For matchVersion >= 3.1 the filter also no longer lowercases.  (Uwe Schindler)
-
 API Changes
 
  * LUCENE-2413: Deprecated PatternAnalyzer in common/miscellaneous, in favor 
@@ -47,13 +42,6 @@ New Features
     - o.a.l.analysis.MappingCharFilter -> o.a.l.analysis.charfilter.MappingCharFilter
     - o.a.l.analysis.NormalizeCharMap -> o.a.l.analysis.charfilter.NormalizeCharMap
     ... (in progress)
-    
- * LUCENE-2413: Consolidated all contrib analyzers into common. 
-   - o.a.l.wikipedia.analysis -> o.a.l.analysis.wikipedia
-   ... (in progress)
-
- * LUCENE-2298: Add stempel, an algorithmic stemmer with support for
-   the Polish language.  (Andrzej Bialecki via Robert Muir)
 
 Build
 

