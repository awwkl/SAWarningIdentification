GitDiffStart: 391119f20780f417821256f5c30b2751f514f27b | Fri Nov 7 19:36:35 2008 +0000
diff --git a/src/java/org/apache/lucene/analysis/KeywordTokenizer.java b/src/java/org/apache/lucene/analysis/KeywordTokenizer.java
index 910473c..5b1cbf5 100644
--- a/src/java/org/apache/lucene/analysis/KeywordTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/KeywordTokenizer.java
@@ -53,6 +53,9 @@ public class KeywordTokenizer extends Tokenizer {
           buffer = reusableToken.resizeTermBuffer(1+buffer.length);
       }
       reusableToken.setTermLength(upto);
+      reusableToken.setStartOffset(0);
+      reusableToken.setEndOffset(upto);
+      
       return reusableToken;
     }
     return null;
diff --git a/src/test/org/apache/lucene/analysis/TestKeywordAnalyzer.java b/src/test/org/apache/lucene/analysis/TestKeywordAnalyzer.java
index c943e28..afcef02 100644
--- a/src/test/org/apache/lucene/analysis/TestKeywordAnalyzer.java
+++ b/src/test/org/apache/lucene/analysis/TestKeywordAnalyzer.java
@@ -17,6 +17,8 @@ package org.apache.lucene.analysis;
  * limitations under the License.
  */
 
+import java.io.StringReader;
+
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.index.IndexReader;
@@ -82,4 +84,13 @@ public class TestKeywordAnalyzer extends LuceneTestCase {
     td = reader.termDocs(new Term("partnum", "Q37"));
     assertTrue(td.next());
   }
+
+  // LUCENE-1441
+  public void testOffsets() throws Exception {
+    TokenStream stream = new KeywordAnalyzer().tokenStream("field", new StringReader("abcd"));
+    Token token = new Token();
+    assertTrue(stream.next(token) != null);
+    assertEquals(0, token.startOffset);
+    assertEquals(4, token.endOffset);
+  }
 }

