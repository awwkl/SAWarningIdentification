GitDiffStart: 4238a840262f2a4cda85563bd445267543d5a2fa | Wed Apr 14 13:25:10 2010 +0000
diff --git a/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java b/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java
index 15fbe64..c03ec3b 100644
--- a/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java
+++ b/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java
@@ -69,7 +69,7 @@ public class CartesianPolyFilterBuilder {
     double longUpperRight = upperRight.getLng();
     double longLowerLeft = lowerLeft.getLng();
 
-    CartesianTierPlotter ctp = new CartesianTierPlotter( miles, projector, tierPrefix, minTier, maxTier );
+    CartesianTierPlotter ctp = new CartesianTierPlotter( CartesianTierPlotter.bestFit(miles, minTier, maxTier), projector, tierPrefix);
     Shape shape = new Shape(ctp.getTierLevelId());
 
     if (longUpperRight < longLowerLeft) { // Box cross the 180 meridian
diff --git a/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java b/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java
index 2ff01ab..2e325ab 100644
--- a/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java
+++ b/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java
@@ -50,10 +50,6 @@ public class CartesianTierPlotter {
     setTierVerticalPosDivider();
   }
 
-  public CartesianTierPlotter(double radius, IProjector projector,
-      String fieldPrefix, int minTier, int maxTier) {
-    this(CartesianTierPlotter.bestFit(radius, minTier, maxTier), projector, fieldPrefix);
-  }
   
   private void setTierLength (){
     this.tierLength = (int) Math.pow(2 , this.tierLevel);
@@ -144,15 +140,15 @@ public class CartesianTierPlotter {
    *  Distances less than a mile return 15, finer granularity is
    *  in accurate
    */
-  static public int bestFit(double range) {
+  public static int bestFit(double range) {
     return bestFit(range, DEFALT_MIN_TIER, DEFALT_MAX_TIER, DistanceUnits.MILES);
   }
   
-  static public int bestFit(double range, int minTier, int maxTier) {
+  public static int bestFit(double range, int minTier, int maxTier) {
     return bestFit(range, minTier, maxTier, DistanceUnits.MILES);
   }
 
-  static public int bestFit(double range, int minTier, int maxTier, DistanceUnits distanceUnit) {
+  public static int bestFit(double range, int minTier, int maxTier, DistanceUnits distanceUnit) {
     double times = distanceUnit.earthCircumference() / (2.0d * range);
 
     int bestFit = (int) Math.ceil(log2(times));
diff --git a/solr/src/test/org/apache/solr/schema/PolyFieldTest.java b/solr/src/test/org/apache/solr/schema/PolyFieldTest.java
index bb79698..4153104 100644
--- a/solr/src/test/org/apache/solr/schema/PolyFieldTest.java
+++ b/solr/src/test/org/apache/solr/schema/PolyFieldTest.java
@@ -215,7 +215,7 @@ public class PolyFieldTest extends SolrTestCaseJ4 {
       }
     }
 
-    assertQ(req("fl", "*,score", "q", qry.toString()),
+    assertQ(req("fl", "*,score", "indent", "true", "q", qry.toString()),
             "//*[@numFound='1']");
     clearIndex();
   }

