GitDiffStart: 2ec25eb81a83fd7cd49491eaec2391837da64638 | Tue Jul 13 16:17:10 2010 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 24f5f35..94fae92 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -419,6 +419,10 @@ Bug fixes
   MultiTermsEnum.docs/AndPositionsEnum.  (Robert Muir, Mike
   McCandless)
 
+* LUCENE-2536: IndexWriter.rollback was failing to properly rollback
+  buffered deletions against segments that were flushed (Mark Harwood
+  via Mike McCandless)
+
 New features
 
 * LUCENE-2128: Parallelized fetching document frequencies during weight
diff --git a/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java b/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java
index 523f932..1a61cfc 100644
--- a/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java
+++ b/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java
@@ -42,7 +42,6 @@ import org.apache.lucene.store.RAMFile;
 import org.apache.lucene.util.ArrayUtil;
 import org.apache.lucene.util.Constants;
 import org.apache.lucene.util.ThreadInterruptedException;
-import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.RamUsageEstimator;
 
 /**
@@ -509,6 +508,7 @@ final class DocumentsWriter {
         }
 
         deletesInRAM.clear();
+        deletesFlushed.clear();
 
         openFiles.clear();
 
diff --git a/lucene/src/test/org/apache/lucene/index/TestRollback.java b/lucene/src/test/org/apache/lucene/index/TestRollback.java
new file mode 100644
index 0000000..e5243e6
--- /dev/null
+++ b/lucene/src/test/org/apache/lucene/index/TestRollback.java
@@ -0,0 +1,60 @@
+package org.apache.lucene.index;
+
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.lucene.analysis.MockAnalyzer;
+import org.apache.lucene.document.Document;
+import org.apache.lucene.document.Field;
+import org.apache.lucene.document.Field.Index;
+import org.apache.lucene.document.Field.Store;
+import org.apache.lucene.store.Directory;
+import org.apache.lucene.store.MockRAMDirectory;
+import org.apache.lucene.util.LuceneTestCase;
+
+public class TestRollback extends LuceneTestCase {
+
+  // LUCENE-2536
+  public void testRollbackIntegrityWithBufferFlush() throws Exception {
+    Directory dir = new MockRAMDirectory();
+    RandomIndexWriter rw = new RandomIndexWriter(newRandom(), dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));
+    for (int i = 0; i < 5; i++) {
+      Document doc = new Document();
+      doc.add(new Field("pk", Integer.toString(i), Store.YES, Index.ANALYZED_NO_NORMS));
+      rw.addDocument(doc);
+    }
+    rw.close();
+
+    // If buffer size is small enough to cause a flush, errors ensue...
+    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setOpenMode(IndexWriterConfig.OpenMode.APPEND));
+
+    Term pkTerm = new Term("pk", "");
+    for (int i = 0; i < 3; i++) {
+      Document doc = new Document();
+      String value = Integer.toString(i);
+      doc.add(new Field("pk", value, Store.YES, Index.ANALYZED_NO_NORMS));
+      doc.add(new Field("text", "foo", Store.YES, Index.ANALYZED_NO_NORMS));
+      w.updateDocument(pkTerm.createTerm(value), doc);
+    }
+    w.rollback();
+
+    IndexReader r = IndexReader.open(dir, true);
+    assertEquals("index should contain same number of docs post rollback", 5, r.numDocs());
+    r.close();
+    dir.close();
+  }
+}

