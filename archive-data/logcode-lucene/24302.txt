GitDiffStart: 3b44de80e662df40686a9fc2b64b8ad00f193e5c | Wed Apr 27 01:39:17 2005 +0000
diff --git a/src/java/org/apache/lucene/search/MultiSearcher.java b/src/java/org/apache/lucene/search/MultiSearcher.java
index d9e75e4..2e59ad9 100644
--- a/src/java/org/apache/lucene/search/MultiSearcher.java
+++ b/src/java/org/apache/lucene/search/MultiSearcher.java
@@ -268,6 +268,8 @@ public class MultiSearcher extends Searcher {
   }
 
   /**
+   * Create weight in multiple index scenario.
+   * 
    * Distributed query processing is done in the following steps:
    * 1. rewrite query
    * 2. extract necessary terms
diff --git a/src/java/org/apache/lucene/search/ParallelMultiSearcher.java b/src/java/org/apache/lucene/search/ParallelMultiSearcher.java
index 8eccb96..ed6c0e4 100644
--- a/src/java/org/apache/lucene/search/ParallelMultiSearcher.java
+++ b/src/java/org/apache/lucene/search/ParallelMultiSearcher.java
@@ -152,11 +152,11 @@ public class ParallelMultiSearcher extends MultiSearcher {
    * Searcher#search(Query)}) is usually more efficient, as it skips
    * non-high-scoring hits.
    *
-   * @param query to match documents
+   * @param weight to match documents
    * @param filter if non-null, a bitset used to eliminate some documents
    * @param results to receive hits
    * 
-   * TODO: parallelize this one too
+   * @todo parallelize this one too
    */
   public void search(Weight weight, Filter filter, final HitCollector results)
     throws IOException {

