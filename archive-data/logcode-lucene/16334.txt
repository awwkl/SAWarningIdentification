GitDiffStart: 9a735f65e633f689a4eeb1e056ef8ae5aa27629c | Sun Feb 20 19:06:43 2011 +0000
diff --git a/lucene/docs/demo.html b/lucene/docs/demo.html
index e01c163..30e2a54 100644
--- a/lucene/docs/demo.html
+++ b/lucene/docs/demo.html
@@ -324,7 +324,7 @@ Once you've gotten this far you're probably itching to go.  Let's <b>build an in
 you've set your CLASSPATH correctly, just type:
 
 <pre>
-    java org.apache.lucene.demo.IndexFiles {full-path-to-lucene}/src
+    java org.apache.lucene.demo.IndexFiles -docs {path-to-lucene}/src
 </pre>
 
 This will produce a subdirectory called <span class="codefrag">index</span> which will contain an index of all of the
diff --git a/lucene/docs/demo.pdf b/lucene/docs/demo.pdf
index 729f0a3..e636408 100644
--- a/lucene/docs/demo.pdf
+++ b/lucene/docs/demo.pdf
@@ -46,7 +46,7 @@ Put all three of these files in your Java CLASSPATH.
 
 Once you've gotten this far you're probably itching to go. Let's build an index! Assuming
 you've set your CLASSPATH correctly, just type: java org.apache.lucene.demo.IndexFiles
-{full-path-to-lucene}/src This will produce a subdirectory called index which will contain
+-docs {path-to-lucene}/src This will produce a subdirectory called index which will contain
 an index of all of the Lucene source code.
 
 To search the index type: java org.apache.lucene.demo.SearchFiles You'll be prompted for a
diff --git a/lucene/docs/demo2.html b/lucene/docs/demo2.html
index 0939ad2..0beef3d 100644
--- a/lucene/docs/demo2.html
+++ b/lucene/docs/demo2.html
@@ -374,18 +374,14 @@ to the searcher.  Note that it's also possible to programmatically construct a r
 <a href="api/core/org/apache/lucene/search/Query.html">Query</a> object without using the query
 parser.  The query parser just enables decoding the <a href="queryparsersyntax.html">Lucene query
 syntax</a> into the corresponding <a href="api/core/org/apache/lucene/search/Query.html">Query</a>
-object. Search can be executed in two different ways:
+object.
 </p>
-<ul>
-
-<li>Streaming: A <a href="api/core/org/apache/lucene/search/Collector.html">Collector</a> subclass
-simply prints out the document ID and score for each matching document.</li>
-
-<li>Paging: Using the <span class="codefrag">IndexSearcher.search(query,n)</span> method that returns 
-<a href="api/core/org/apache/lucene/search/TopDocs.html">TopDocs</a> with max <span class="codefrag">n</span> hits,
-the search results are printed in pages, sorted by score (i.e. relevance).</li>
+<p>
 
-</ul>
+<span class="codefrag">SearchFiles</span> uses the <span class="codefrag">IndexSearcher.search(query,n)</span> method that returns
+<a href="api/core/org/apache/lucene/search/TopDocs.html">TopDocs</a> with max <span class="codefrag">n</span> hits.
+The results are printed in pages, sorted by score (i.e. relevance).
+</p>
 </div>
 
 </div>
diff --git a/lucene/docs/demo2.pdf b/lucene/docs/demo2.pdf
index 3361b60..e60932a 100644
--- a/lucene/docs/demo2.pdf
+++ b/lucene/docs/demo2.pdf
@@ -98,22 +98,12 @@ the documents are interpreted: finding word boundaries, downcasing, and removing
 words like 'a', 'an' and 'the'. The Query object contains the results from the QueryParser
 which is passed to the searcher. Note that it's also possible to programmatically construct a
 rich Query object without using the query parser. The query parser just enables decoding the
-Lucene query syntax into the corresponding Query object. Search can be executed in two
-different ways:
+Lucene query syntax into the corresponding Query object.
 
-?? Streaming: A Collector subclass simply prints out the document ID and score for each
-    matching document.
+SearchFiles uses the IndexSearcher.search(query,n) method that returns
+TopDocs with max n hits. The results are printed in pages, sorted by score (i.e. relevance).
 
 Page 3
 
         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-                                                                                          Apache Lucene - Basic Demo Sources Walk-through
-
-?? Paging: Using the IndexSearcher.search(query,n) method that returns
-    TopDocs with max n hits, the search results are printed in pages, sorted by score (i.e.
-    relevance).
-
-                                                                       Page 4
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
 
\ No newline at end of file

