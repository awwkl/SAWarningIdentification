GitDiffStart: 3aacbf9f9100c213f00fd525f606a6cc82d95c68 | Wed Oct 16 19:16:17 2013 +0000
diff --git a/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java b/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java
index f6ae912..7278745 100644
--- a/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java
+++ b/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java
@@ -561,6 +561,11 @@ public class OverseerCollectionProcessor implements Runnable, ClosableThread {
           throw new SolrException(ErrorCode.BAD_REQUEST,
               "The split.key: " + splitKey + " has a hash range that is exactly equal to hash range of shard: " + slice);
         }
+        for (DocRouter.Range subRange : subRanges) {
+          if (subRange.min == subRange.max) {
+            throw new SolrException(ErrorCode.BAD_REQUEST, "The split.key: " + splitKey + " must be a compositeId");
+          }
+        }
         log.info("Partitioning parent shard " + slice + " range: " + parentSlice.getRange() + " yields: " + subRanges);
         rangesStr = "";
         for (int i = 0; i < subRanges.size(); i++) {
diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/CompositeIdRouter.java b/solr/solrj/src/java/org/apache/solr/common/cloud/CompositeIdRouter.java
index 3f3b9af..ab94a26 100644
--- a/solr/solrj/src/java/org/apache/solr/common/cloud/CompositeIdRouter.java
+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/CompositeIdRouter.java
@@ -96,7 +96,8 @@ public class CompositeIdRouter extends HashBasedRouter {
   public Range keyHashRange(String routeKey) {
     int idx = routeKey.indexOf(separator);
     if (idx < 0) {
-      throw new IllegalArgumentException("Route key must be a composite id");
+      int hash = sliceHash(routeKey, null, null, null);
+      return new Range(hash, hash);
     }
     String part1 = routeKey.substring(0, idx);
     int commaIdx = part1.indexOf(bitsSeparator);

