GitDiffStart: 05bff1833f2bfba27058ed9298d2358e5c80f753 | Thu Dec 4 11:06:59 2008 +0000
diff --git a/contrib/contrib-build.xml b/contrib/contrib-build.xml
index ff53a9b..8e3ba9b 100644
--- a/contrib/contrib-build.xml
+++ b/contrib/contrib-build.xml
@@ -61,7 +61,7 @@
   </target>
 
   
-  <target name="init" depends="common.init,build-lucene"/>
+  <target name="init" depends="common.init,build-lucene,build-lucene-tests"/>
   <target name="compile-test" depends="init" if="contrib.has.tests">
     <antcall target="common.compile-test" inheritRefs="true" />
   </target>
diff --git a/contrib/queries/src/test/org/apache/lucene/search/trie/TestTrieUtils.java b/contrib/queries/src/test/org/apache/lucene/search/trie/TestTrieUtils.java
index 21059bd..c3b04f5 100644
--- a/contrib/queries/src/test/org/apache/lucene/search/trie/TestTrieUtils.java
+++ b/contrib/queries/src/test/org/apache/lucene/search/trie/TestTrieUtils.java
@@ -81,6 +81,7 @@ public class TestTrieUtils extends LuceneTestCase {
 		for (int i=0; i<vals.length; i++) {
 			trieVals[i]=variant.longToTrieCoded(vals[i]);
 			assertEquals( "Back and forth conversion should return same value", vals[i], variant.trieCodedToLong(trieVals[i]) );
+			assertEquals( "Automatic back conversion with encoding detection should return same value", vals[i], TrieUtils.trieCodedToLongAuto(trieVals[i]) );
 		}
 		
 		// check sort order (trieVals should be ascending)
@@ -112,6 +113,7 @@ public class TestTrieUtils extends LuceneTestCase {
 		for (int i=0; i<vals.length; i++) {
 			trieVals[i]=variant.doubleToTrieCoded(vals[i]);
 			assertTrue( "Back and forth conversion should return same value", vals[i]==variant.trieCodedToDouble(trieVals[i]) );
+			assertTrue( "Automatic back conversion with encoding detection should return same value", vals[i]==TrieUtils.trieCodedToDoubleAuto(trieVals[i]) );
 		}
 		
 		// check sort order (trieVals should be ascending)
@@ -145,6 +147,7 @@ public class TestTrieUtils extends LuceneTestCase {
 		for (int i=0; i<vals.length; i++) {
 			trieVals[i]=variant.dateToTrieCoded(vals[i]);
 			assertEquals( "Back and forth conversion should return same value", vals[i], variant.trieCodedToDate(trieVals[i]) );
+			assertEquals( "Automatic back conversion with encoding detection should return same value", vals[i], TrieUtils.trieCodedToDateAuto(trieVals[i]) );
 		}
 		
 		// check sort order (trieVals should be ascending)

