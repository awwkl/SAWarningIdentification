GitDiffStart: 9cb55ddb17771ebd359391d73efb0ea1b0ddc78a | Mon Jun 18 08:28:58 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java b/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java
index e89ad5e..6be5510 100644
--- a/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java
+++ b/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java
@@ -140,7 +140,7 @@ abstract class Packed64SingleBlock extends PackedInts.MutableImpl {
 
   @Override
   public int get(int index, long[] arr, int off, int len) {
-    assert len > 0;
+    assert len > 0 : "len must be > 0 (got " + len + ")";
     assert index >= 0 && index < valueCount;
     len = Math.min(len, valueCount - index);
     assert off + len <= arr.length;
@@ -192,7 +192,7 @@ abstract class Packed64SingleBlock extends PackedInts.MutableImpl {
 
   @Override
   public int set(int index, long[] arr, int off, int len) {
-    assert len > 0;
+    assert len > 0 : "len must be > 0 (got " + len + ")";
     assert index >= 0 && index < valueCount;
     len = Math.min(len, valueCount - index);
     assert off + len <= arr.length;
diff --git a/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java b/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
index 583ba43..f993a9b 100644
--- a/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
+++ b/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
@@ -244,6 +244,7 @@ public class PackedInts {
     }
 
     public int get(int index, long[] arr, int off, int len) {
+      assert len > 0 : "len must be > 0 (got " + len + ")";
       assert index >= 0 && index < valueCount;
       assert off + len <= arr.length;
 
@@ -263,7 +264,7 @@ public class PackedInts {
     }
 
     public int set(int index, long[] arr, int off, int len) {
-      assert len > 0;
+      assert len > 0 : "len must be > 0 (got " + len + ")";
       assert index >= 0 && index < valueCount;
       len = Math.min(len, valueCount - index);
       assert off + len <= arr.length;
diff --git a/lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts.java b/lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts.java
index 1d9189d..6ea803d 100644
--- a/lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts.java
+++ b/lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts.java
@@ -445,7 +445,7 @@ public class TestPackedInts extends LuceneTestCase {
   public void testBulkGet() {
     final int valueCount = 1111;
     final int index = random().nextInt(valueCount);
-    final int len = random().nextInt(valueCount * 2);
+    final int len = _TestUtil.nextInt(random(), 1, valueCount * 2);
     final int off = random().nextInt(77);
 
     for (int bpv = 1; bpv <= 64; ++bpv) {
@@ -479,7 +479,7 @@ public class TestPackedInts extends LuceneTestCase {
   public void testBulkSet() {
     final int valueCount = 1111;
     final int index = random().nextInt(valueCount);
-    final int len = random().nextInt(valueCount * 2);
+    final int len = _TestUtil.nextInt(random(), 1, valueCount * 2);
     final int off = random().nextInt(77);
     long[] arr = new long[off+len];
 

