GitDiffStart: 561723eca6eb1299a9ed7f1521aec48f52673df7 | Sun Jul 17 05:30:50 2011 +0000
diff --git a/lucene/src/java/org/apache/lucene/index/DocInverterPerField.java b/lucene/src/java/org/apache/lucene/index/DocInverterPerField.java
index 3ac444d..2c0294e 100644
--- a/lucene/src/java/org/apache/lucene/index/DocInverterPerField.java
+++ b/lucene/src/java/org/apache/lucene/index/DocInverterPerField.java
@@ -78,7 +78,7 @@ final class DocInverterPerField extends DocFieldConsumerPerField {
       if (field.isIndexed() && doInvert) {
         
         if (i > 0)
-          fieldState.position += docState.analyzer.getPositionIncrementGap(fieldInfo.name);
+          fieldState.position += docState.analyzer == null ? 0 : docState.analyzer.getPositionIncrementGap(fieldInfo.name);
 
         if (!field.isTokenized()) {		  // un-tokenized field
           String stringValue = field.stringValue();
@@ -188,7 +188,7 @@ final class DocInverterPerField extends DocFieldConsumerPerField {
           }
         }
 
-        fieldState.offset += docState.analyzer.getOffsetGap(field);
+        fieldState.offset += docState.analyzer == null ? 0 : docState.analyzer.getOffsetGap(field);
         fieldState.boost *= field.getBoost();
       }
 
diff --git a/modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker.java b/modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker.java
index 2df2fab..90a11eb 100755
--- a/modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker.java
+++ b/modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker.java
@@ -115,17 +115,6 @@ public class SpellChecker implements java.io.Closeable {
 
   private StringDistance sd;
   private Comparator<SuggestWord> comparator;
-  
-  /** we don't need to actually analyze any content:
-   *  all fields are indexed NOT_ANALYZED, but docsinverter
-   *  needs this for the offset gap!
-   */
-  private static Analyzer noAnalyzer = new Analyzer() {
-    @Override
-    public TokenStream tokenStream(String fieldName, Reader reader) {
-      return null;
-    }
-  };
 
   /**
    * Use the given directory as a spell checker index. The directory
@@ -182,7 +171,7 @@ public class SpellChecker implements java.io.Closeable {
       if (!IndexReader.indexExists(spellIndexDir)) {
           IndexWriter writer = new IndexWriter(spellIndexDir,
             new IndexWriterConfig(Version.LUCENE_CURRENT,
-                noAnalyzer));
+                null));
           writer.close();
       }
       swapSearcher(spellIndexDir);
@@ -480,7 +469,7 @@ public class SpellChecker implements java.io.Closeable {
       final Directory dir = this.spellIndex;
       final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(
           Version.LUCENE_CURRENT,
-          noAnalyzer)
+          null)
           .setOpenMode(OpenMode.CREATE));
       writer.close();
       swapSearcher(dir);
@@ -517,7 +506,7 @@ public class SpellChecker implements java.io.Closeable {
     synchronized (modifyCurrentIndexLock) {
       ensureOpen();
       final Directory dir = this.spellIndex;
-      final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_CURRENT, noAnalyzer).setRAMBufferSizeMB(ramMB));
+      final IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_CURRENT, null).setRAMBufferSizeMB(ramMB));
       ((TieredMergePolicy) writer.getConfig().getMergePolicy()).setMaxMergeAtOnce(mergeFactor);
       IndexSearcher indexSearcher = obtainSearcher();
       final List<TermsEnum> termsEnums = new ArrayList<TermsEnum>();

