GitDiffStart: 907cd33672d985b1263df3fa4e4715c7d790e1f0 | Thu Jul 22 09:08:01 2010 +0000
diff --git a/lucene/src/test/org/apache/lucene/util/automaton/TestDeterminizeLexicon.java b/lucene/src/test/org/apache/lucene/util/automaton/TestDeterminizeLexicon.java
index 2a5ec6c..31eddd3 100644
--- a/lucene/src/test/org/apache/lucene/util/automaton/TestDeterminizeLexicon.java
+++ b/lucene/src/test/org/apache/lucene/util/automaton/TestDeterminizeLexicon.java
@@ -35,7 +35,7 @@ public class TestDeterminizeLexicon extends LuceneTestCase {
   private List<String> terms = new ArrayList<String>();
   private Random random;
   
-  public void testLexicon() {
+  public void testLexicon() throws Exception {
     random = newRandom();
     for (int i = 0; i < 3*_TestUtil.getRandomMultiplier(); i++) {
       automata.clear();
@@ -49,7 +49,7 @@ public class TestDeterminizeLexicon extends LuceneTestCase {
     }
   }
   
-  public void assertLexicon() {
+  public void assertLexicon() throws Exception {
     Collections.shuffle(automata, random);
     final Automaton lex = BasicOperations.union(automata);
     lex.determinize();
@@ -59,8 +59,8 @@ public class TestDeterminizeLexicon extends LuceneTestCase {
     }
     final ByteRunAutomaton lexByte = new ByteRunAutomaton(lex);
     for (String s : terms) {
-      BytesRef termByte = new BytesRef(s);
-      assertTrue(lexByte.run(termByte.bytes, 0, termByte.length));
+      byte bytes[] = s.getBytes("UTF-8");
+      assertTrue(lexByte.run(bytes, 0, bytes.length));
     }
   }
 }
diff --git a/lucene/src/test/org/apache/lucene/util/automaton/TestUTF32ToUTF8.java b/lucene/src/test/org/apache/lucene/util/automaton/TestUTF32ToUTF8.java
index a275b26..5ddedf7 100644
--- a/lucene/src/test/org/apache/lucene/util/automaton/TestUTF32ToUTF8.java
+++ b/lucene/src/test/org/apache/lucene/util/automaton/TestUTF32ToUTF8.java
@@ -193,8 +193,8 @@ public class TestUTF32ToUTF8 extends LuceneTestCase {
           throw e;
         }
       }
-      BytesRef bytesRef = new BytesRef(string);
-      assertEquals(cra.run(string), bra.run(bytesRef.bytes, 0, bytesRef.length));
+      byte bytes[] = string.getBytes("UTF-8");
+      assertEquals(cra.run(string), bra.run(bytes, 0, bytes.length));
     }
   }
 }

