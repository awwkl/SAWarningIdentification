GitDiffStart: 2e3329b331125303dc59fe1624ffd8f41ab10039 | Sun Oct 3 20:14:52 2010 +0000
diff --git a/solr/common-build.xml b/solr/common-build.xml
index 0987982..de0aaca 100644
--- a/solr/common-build.xml
+++ b/solr/common-build.xml
@@ -346,6 +346,10 @@
           bottom="Copyright &amp;copy; ${year} Apache Software Foundation.  All Rights Reserved.">
         <tag name="todo" description="To Do:"/>
         <tag name="uml.property" description="UML Property:"/>
+        <tag name="lucene.experimental" 
+      	description="WARNING: This API is experimental and might change in incompatible ways in the next release."/>
+        <tag name="lucene.internal"
+        description="NOTE: This API is for Lucene internal purposes only and might change in incompatible ways in the next release."/>
       	<link offline="true" packagelistLoc="${build.javadoc}"/>
         <link href="${javadoc.link.java}"/>
         <link href="${javadoc.link.junit}"/>
diff --git a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer.java b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer.java
index 2271a2e..065fe7c 100644
--- a/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer.java
+++ b/solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer.java
@@ -31,7 +31,7 @@ import java.util.Map;
  * in case you don't need this HTML anyway.
  *
  * @version $Id$
- * @see org.apache.solr.analysis.HTMLStripCharFilter
+ * @see HTMLStripCharFilter
  * @since solr 1.4
  */
 public class HTMLStripTransformer extends Transformer {
diff --git a/solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java b/solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java
index ea99c0a..ec9614f 100644
--- a/solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java
+++ b/solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory.java
@@ -57,7 +57,8 @@ abstract class BaseTokenStreamFactory {
     return args;
   }
   
-  /** this method can be called in the {@link #create} method,
+  /** this method can be called in the {@link TokenizerFactory#create(java.io.Reader)} 
+   * or {@link TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,
    * to inform user, that for this factory a {@link #luceneMatchVersion} is required */
   protected final void assureMatchVersion() {
     if (luceneMatchVersion == null) {
diff --git a/solr/src/java/org/apache/solr/analysis/BufferedTokenStream.java b/solr/src/java/org/apache/solr/analysis/BufferedTokenStream.java
index 5ad44b3..0633aa9 100644
--- a/solr/src/java/org/apache/solr/analysis/BufferedTokenStream.java
+++ b/solr/src/java/org/apache/solr/analysis/BufferedTokenStream.java
@@ -64,7 +64,7 @@ import java.util.LinkedList;
  * example above, the subclass must clone the additional "A" it creates.
  * 
  * @deprecated This class does not support custom attributes. Extend TokenFilter instead,
- * using {@link AttributeSource#captureState()} and {@link AttributeSource#restoreState()}
+ * using {@link AttributeSource#captureState()} and {@link AttributeSource#restoreState(State)}
  * which support all attributes.
  */
 @Deprecated
diff --git a/solr/src/java/org/apache/solr/highlight/SolrFragmentsBuilder.java b/solr/src/java/org/apache/solr/highlight/SolrFragmentsBuilder.java
index 0b4a5fb..e5d00c6 100644
--- a/solr/src/java/org/apache/solr/highlight/SolrFragmentsBuilder.java
+++ b/solr/src/java/org/apache/solr/highlight/SolrFragmentsBuilder.java
@@ -34,7 +34,6 @@ public abstract class SolrFragmentsBuilder extends HighlightingPluginBase
   /**
    * Return a {@link org.apache.lucene.search.vectorhighlight.FragmentsBuilder} appropriate for this field.
    * 
-   * @param fieldName The name of the field
    * @param params The params controlling Highlighting
    * @return An appropriate {@link org.apache.lucene.search.vectorhighlight.FragmentsBuilder}.
    */
diff --git a/solr/src/java/org/apache/solr/response/GenericBinaryResponseWriter.java b/solr/src/java/org/apache/solr/response/GenericBinaryResponseWriter.java
index 47dbb5c..1ce707c 100644
--- a/solr/src/java/org/apache/solr/response/GenericBinaryResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/GenericBinaryResponseWriter.java
@@ -25,6 +25,8 @@ import org.apache.solr.common.SolrDocumentList;
 import org.apache.solr.common.SolrInputDocument;
 import org.apache.solr.request.SolrQueryRequest;
 
+import org.apache.solr.response.BaseResponseWriter.SingleResponseWriter; // javadocs
+
 /**
  * 
  * 
diff --git a/solr/src/java/org/apache/solr/response/GenericTextResponseWriter.java b/solr/src/java/org/apache/solr/response/GenericTextResponseWriter.java
index 35ee473..0b911b9 100644
--- a/solr/src/java/org/apache/solr/response/GenericTextResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/GenericTextResponseWriter.java
@@ -24,6 +24,8 @@ import org.apache.solr.common.SolrDocumentList;
 import org.apache.solr.common.SolrInputDocument;
 import org.apache.solr.request.SolrQueryRequest;
 
+import org.apache.solr.response.BaseResponseWriter.SingleResponseWriter; // javadocs
+
 /**
  * 
  * 
@@ -46,7 +48,7 @@ public abstract class GenericTextResponseWriter extends BaseResponseWriter
    * {@link #getSingleResponseWriter(Writer, SolrQueryRequest, SolrQueryResponse)}
    * .
    * 
-   * @param out
+   * @param writer
    *          The {@link Writer} to write the text output to.
    * @param request
    *          The provided {@link SolrQueryRequest}.
diff --git a/solr/src/java/org/apache/solr/response/XMLWriter.java b/solr/src/java/org/apache/solr/response/XMLWriter.java
index 7c77fde..6a4fc0e 100644
--- a/solr/src/java/org/apache/solr/response/XMLWriter.java
+++ b/solr/src/java/org/apache/solr/response/XMLWriter.java
@@ -635,7 +635,7 @@ final public class XMLWriter {
    * @param name
    * @param map
    * @throws IOException
-   * @see http://lucene.apache.org/solr/api/org/apache/solr/response/SolrQueryResponse.html#returnable_data
+   * @see SolrQueryResponse Note on Returnable Data
    */
   public void writeMap(String name, Map<Object,Object> map) throws IOException {
     int sz = map.size();
diff --git a/solr/src/java/org/apache/solr/search/SpatialFilterQParser.java b/solr/src/java/org/apache/solr/search/SpatialFilterQParser.java
index 9de1e6d..0b42a4d 100644
--- a/solr/src/java/org/apache/solr/search/SpatialFilterQParser.java
+++ b/solr/src/java/org/apache/solr/search/SpatialFilterQParser.java
@@ -33,7 +33,7 @@ import org.apache.solr.schema.SpatialQueryable;
 
 
 /**
- * @see {@link SpatialFilterQParserPlugin}
+ * @see SpatialFilterQParserPlugin
  */
 public class SpatialFilterQParser extends QParser {
   boolean bbox;  // do bounding box only
diff --git a/solr/src/java/org/apache/solr/search/function/DocFreqValueSource.java b/solr/src/java/org/apache/solr/search/function/DocFreqValueSource.java
index 66a0f20..793e8ad 100755
--- a/solr/src/java/org/apache/solr/search/function/DocFreqValueSource.java
+++ b/solr/src/java/org/apache/solr/search/function/DocFreqValueSource.java
@@ -215,7 +215,7 @@ abstract class IntDocValues extends DocValues {
 
 /**
  * <code>DocFreqValueSource</code> returns the number of documents containing the term.
- * @internal
+ * @lucene.internal
  */
 public class DocFreqValueSource extends ValueSource {
   protected String field;
diff --git a/solr/src/java/org/apache/solr/search/function/IDFValueSource.java b/solr/src/java/org/apache/solr/search/function/IDFValueSource.java
index 2fc2ff0..863ff86 100755
--- a/solr/src/java/org/apache/solr/search/function/IDFValueSource.java
+++ b/solr/src/java/org/apache/solr/search/function/IDFValueSource.java
@@ -29,7 +29,7 @@ import org.apache.solr.util.ByteUtils;
 import java.io.IOException;
 import java.util.Map;
 
-/** @internal */
+/** @lucene.internal */
 public class IDFValueSource extends DocFreqValueSource {
   public IDFValueSource(String field, String val, String indexedField, BytesRef indexedBytes) {
     super(field, val, indexedField, indexedBytes);
diff --git a/solr/src/java/org/apache/solr/spelling/suggest/tst/TernaryTreeNode.java b/solr/src/java/org/apache/solr/spelling/suggest/tst/TernaryTreeNode.java
index 61df16d..22f1f24 100644
--- a/solr/src/java/org/apache/solr/spelling/suggest/tst/TernaryTreeNode.java
+++ b/solr/src/java/org/apache/solr/spelling/suggest/tst/TernaryTreeNode.java
@@ -2,20 +2,24 @@ package org.apache.solr.spelling.suggest.tst;
 
 /**
  * The class creates a TST node.
- * @variable splitchar the character stored by a node.
- * @variable loKid a reference object to the node containing character smaller than
- * this node's character.
- * @variable eqKid a reference object to the node containg character next to this
- * node's character as occuring in the inserted token.
- * @variable hiKid a reference object to the node containing character higher than
- * this node's character.
- * @variable token used by leaf nodes to store the complete tokens to be added to 
- * suggest list while auto-completing the prefix.
  */
 
 public class TernaryTreeNode {
+  /** the character stored by a node. */
 	char splitchar;
-	TernaryTreeNode loKid, eqKid, hiKid;
+	/** a reference object to the node containing character smaller than this node's character. */
+	TernaryTreeNode loKid;
+	/** 
+	 *  a reference object to the node containing character next to this node's character as 
+	 *  occurring in the inserted token.
+	 */
+	TernaryTreeNode eqKid;
+	/** a reference object to the node containing character higher than this node's character. */
+	TernaryTreeNode hiKid;
+	/** 
+	 * used by leaf nodes to store the complete tokens to be added to suggest list while 
+	 * auto-completing the prefix.
+	 */
 	String token;
 	Object val;
 }

