GitDiffStart: c13c9548d1fd64b6736eb9b8f891ada785d2066e | Fri Jun 16 17:48:49 2006 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 52cc4b8..c961896 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -18,6 +18,8 @@ New Features
 10. copyField accepts dynamicfield-like names as the source.
     (Darren Erik Vengroff via yonik, SOLR-21)
 11. new DocSet.andNot(), DocSet.andNotSize() (yonik)
+12. Ability to store term vectors. (Note: standard request handler does
+    not currently do anything with term vectors) (Mike Klaas via yonik, SOLR-23)
      
 Changes in runtime behavior
  1. classes reorganized into different packages, package names changed to Apache
diff --git a/src/java/org/apache/solr/schema/FieldType.java b/src/java/org/apache/solr/schema/FieldType.java
index c0140aa..1c1f703 100644
--- a/src/java/org/apache/solr/schema/FieldType.java
+++ b/src/java/org/apache/solr/schema/FieldType.java
@@ -170,10 +170,22 @@ public abstract class FieldType extends FieldProperties {
       throw new SolrException(500, "Error while creating field '" + field + "' from value '" + externalVal + "'", e, false);
     }
     if (val==null) return null;
+
+    Field.TermVector ftv = Field.TermVector.NO;
+    if (field.storeTermPositions() && field.storeTermOffsets())
+      ftv = Field.TermVector.WITH_POSITIONS_OFFSETS;
+    else if (field.storeTermPositions())
+      ftv = Field.TermVector.WITH_POSITIONS;
+    else if (field.storeTermOffsets())
+      ftv = Field.TermVector.WITH_OFFSETS;            
+    else if (field.storeTermVector())
+      ftv = Field.TermVector.YES;
+
     Field f =  new Field(field.getName(),val,
-            field.stored() ? Field.Store.YES : Field.Store.NO ,
-            field.indexed() ? (isTokenized() ? Field.Index.TOKENIZED : Field.Index.UN_TOKENIZED)
-                    : Field.Index.NO);
+        field.stored() ? Field.Store.YES : Field.Store.NO ,
+        field.indexed() ? (isTokenized() ? Field.Index.TOKENIZED : 
+                           Field.Index.UN_TOKENIZED) : Field.Index.NO,
+        ftv);
     f.setOmitNorms(field.omitNorms());
     f.setBoost(boost);
     return f;
diff --git a/src/test/org/apache/solr/BasicFunctionalityTest.java b/src/test/org/apache/solr/BasicFunctionalityTest.java
index ade06dc..e4d0ed6 100644
--- a/src/test/org/apache/solr/BasicFunctionalityTest.java
+++ b/src/test/org/apache/solr/BasicFunctionalityTest.java
@@ -16,10 +16,13 @@
 
 package org.apache.solr;
 
+import org.apache.lucene.document.Field;
 import org.apache.solr.request.*;
 import org.apache.solr.util.*;
+import org.apache.solr.schema.*;
 import org.w3c.dom.Document;
 
+
 import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.parsers.DocumentBuilder;
 import java.io.IOException;
@@ -197,6 +200,40 @@ public class BasicFunctionalityTest extends AbstractSolrTestCase {
             );
   }
 
+  public void testTermVectorFields() {
+    
+    IndexSchema ischema = new IndexSchema(getSchemaFile());
+    SchemaField f; // Solr field type
+    Field luf; // Lucene field
+
+    f = ischema.getField("test_basictv");
+    luf = f.createField("test", 0f);
+    assertTrue(f.storeTermVector());
+    assertTrue(luf.isTermVectorStored());
+
+    f = ischema.getField("test_notv");
+    luf = f.createField("test", 0f);
+    assertTrue(!f.storeTermVector());
+    assertTrue(!luf.isTermVectorStored());    
+
+    f = ischema.getField("test_postv");
+    luf = f.createField("test", 0f);
+    assertTrue(f.storeTermVector() && f.storeTermPositions());
+    assertTrue(luf.isStorePositionWithTermVector());
+
+    f = ischema.getField("test_offtv");
+    luf = f.createField("test", 0f);
+    assertTrue(f.storeTermVector() && f.storeTermOffsets());
+    assertTrue(luf.isStoreOffsetWithTermVector());
+
+    f = ischema.getField("test_posofftv");
+    luf = f.createField("test", 0f);
+    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());
+    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());
+
+  }
+      
+            
 
 //   /** this doesn't work, but if it did, this is how we'd test it. */
 //   public void testOverwriteFalse() {
diff --git a/src/test/test-files/solr/conf/schema.xml b/src/test/test-files/solr/conf/schema.xml
index 479dc1d..7216014 100644
--- a/src/test/test-files/solr/conf/schema.xml
+++ b/src/test/test-files/solr/conf/schema.xml
@@ -270,6 +270,14 @@
    <field name="sind" type="string" indexed="true" stored="false"/>
    <field name="sindsto" type="string" indexed="true" stored="true"/>
 
+   <!-- test combinations of term vector settings -->
+   <field name="test_basictv" type="text" termVectors="true"/>
+   <field name="test_notv" type="text" termVectors="false"/>
+   <field name="test_postv" type="text" termVectors="true" termPositions="true"/>
+   <field name="test_offtv" type="text" termVectors="true" termOffsets="true"/>
+   <field name="test_posofftv" type="text" termVectors="true" 
+     termPositions="true" termOffsets="true"/>
+
    <!-- fields to test individual tokenizers and tokenfilters -->
    <field name="teststop" type="teststop" indexed="true" stored="true"/>
    <field name="lowertok" type="lowertok" indexed="true" stored="true"/>

