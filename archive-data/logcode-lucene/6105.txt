GitDiffStart: 36c9276bba28756425769de61671fb71dc1fbbe3 | Wed May 28 20:52:24 2014 +0000
diff --git a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java
index a8d9a7d..fcc2f2f 100644
--- a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java
+++ b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java
@@ -84,7 +84,7 @@ import java.util.Map;
   * expand.fq=type:child (optional, overrides the main filter queries)<br/>
   * expand.field=field (mandatory if the not used with the CollapsingQParserPlugin)<br/>
   **/
-    
+
 public class ExpandComponent extends SearchComponent implements PluginInfoInitialized, SolrCoreAware {
   public static final String COMPONENT_NAME = "expand";
   private PluginInfo info = PluginInfo.EMPTY_INFO;
@@ -205,6 +205,8 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia
     }
 
     Collector collector = null;
+    if (sort != null)
+      sort = sort.rewrite(searcher);
     GroupExpandCollector groupExpandCollector = new GroupExpandCollector(values, groupBits, collapsedSet, limit, sort);
     SolrIndexSearcher.ProcessedFilter pfilter = searcher.getProcessedFilter(null, newFilters);
     if(pfilter.postFilter != null) {
@@ -326,14 +328,14 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia
         leafCollectors.put(entry.key, entry.value.getLeafCollector(context));
       }
       return new LeafCollector() {
-        
+
         @Override
         public void setScorer(Scorer scorer) throws IOException {
           for (ObjectCursor<LeafCollector> c : leafCollectors.values()) {
             c.value.setScorer(scorer);
           }
         }
-        
+
         @Override
         public void collect(int docId) throws IOException {
           int doc = docId+docBase;
@@ -343,7 +345,7 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia
             c.collect(docId);
           }
         }
-        
+
         @Override
         public boolean acceptsDocsOutOfOrder() {
           return false;
diff --git a/solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent.java b/solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent.java
index ea55c78..4d1b3a0 100644
--- a/solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent.java
+++ b/solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent.java
@@ -114,7 +114,7 @@ public class TestExpandComponent extends SolrTestCaseJ4 {
     params.add("defType", "edismax");
     params.add("bf", "field(test_ti)");
     params.add("expand", "true");
-    params.add("expand.sort", "test_tl desc");
+    params.add("expand.sort", "test_tl desc, sub(1,1) asc");//the "sub()" just testing function queries
     assertQ(req(params), "*[count(/response/result/doc)=2]",
         "*[count(/response/lst[@name='expanded']/result)=2]",
         "/response/result/doc[1]/float[@name='id'][.='2.0']",

