GitDiffStart: dd0c69cac5ea05b180b4be1f742168408463d606 | Tue Mar 31 22:44:11 2015 +0000
diff --git a/lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java
index 2366d88..cf6911f 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java
@@ -332,7 +332,7 @@ public abstract class ThreadedIndexingAndSearchingTestCase extends LuceneTestCas
             if (VERBOSE) {
               System.out.println(Thread.currentThread().getName() + ": launch search thread");
             }
-            while (System.currentTimeMillis() < stopTimeMS) {
+            while (System.currentTimeMillis() < stopTimeMS && !failed.get()) {
               try {
                 final IndexSearcher s = getCurrentSearcher();
                 try {
@@ -403,8 +403,8 @@ public abstract class ThreadedIndexingAndSearchingTestCase extends LuceneTestCas
       searchThreads[thread].start();
     }
 
-    for(int thread=0;thread<searchThreads.length;thread++) {
-      searchThreads[thread].join();
+    for(Thread thread : searchThreads) {
+      thread.join();
     }
 
     if (VERBOSE) {
@@ -535,8 +535,8 @@ public abstract class ThreadedIndexingAndSearchingTestCase extends LuceneTestCas
       System.out.println("TEST: all searching done [" + (System.currentTimeMillis()-t0) + " ms]");
     }
     
-    for(int thread=0;thread<indexThreads.length;thread++) {
-      indexThreads[thread].join();
+    for(Thread thread : indexThreads) {
+      thread.join();
     }
 
     if (VERBOSE) {

