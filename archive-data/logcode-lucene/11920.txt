GitDiffStart: cf53015824dfb4354787aefd7312c9d28e56d056 | Wed Jul 11 20:54:36 2012 +0000
diff --git a/lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest.java b/lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest.java
index ffff5f9..47c7d70 100644
--- a/lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest.java
+++ b/lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest.java
@@ -78,7 +78,7 @@ public class UIMABaseAnalyzerTest extends BaseTokenStreamTestCase {
     // try the search over the first doc
     DirectoryReader directoryReader = DirectoryReader.open(dir);
     IndexSearcher indexSearcher = new IndexSearcher(directoryReader);
-    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);
+    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);
     assertTrue(result.totalHits > 0);
     Document d = indexSearcher.doc(result.scoreDocs[0].doc);
     assertNotNull(d);
@@ -99,7 +99,7 @@ public class UIMABaseAnalyzerTest extends BaseTokenStreamTestCase {
     directoryReader.close();
     directoryReader = DirectoryReader.open(dir);
     indexSearcher = new IndexSearcher(directoryReader);
-    result = indexSearcher.search(new MatchAllDocsQuery(), 10);
+    result = indexSearcher.search(new MatchAllDocsQuery(), 2);
     Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);
     assertNotNull(d1);
     assertNotNull(d1.getField("title"));
@@ -109,7 +109,7 @@ public class UIMABaseAnalyzerTest extends BaseTokenStreamTestCase {
 
     // do a matchalldocs query to retrieve both docs
     indexSearcher = new IndexSearcher(directoryReader);
-    result = indexSearcher.search(new MatchAllDocsQuery(), 10);
+    result = indexSearcher.search(new MatchAllDocsQuery(), 2);
     assertEquals(2, result.totalHits);
     writer.close();
     indexSearcher.getIndexReader().close();
@@ -119,7 +119,7 @@ public class UIMABaseAnalyzerTest extends BaseTokenStreamTestCase {
   @Test
   public void testRandomStrings() throws Exception {
     checkRandomData(random(), new UIMABaseAnalyzer("/uima/TestAggregateSentenceAE.xml", "org.apache.lucene.uima.ts.TokenAnnotation"),
-        1000 * RANDOM_MULTIPLIER);
+        100 * RANDOM_MULTIPLIER);
   }
 
 }
diff --git a/lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMATypeAwareAnalyzerTest.java b/lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMATypeAwareAnalyzerTest.java
index 931e18f..16444e3 100644
--- a/lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMATypeAwareAnalyzerTest.java
+++ b/lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMATypeAwareAnalyzerTest.java
@@ -21,7 +21,6 @@ import org.apache.lucene.analysis.BaseTokenStreamTestCase;
 import org.apache.lucene.analysis.TokenStream;
 import org.junit.After;
 import org.junit.Before;
-import org.junit.Ignore;
 import org.junit.Test;
 
 import java.io.StringReader;
@@ -60,10 +59,9 @@ public class UIMATypeAwareAnalyzerTest extends BaseTokenStreamTestCase {
   }
 
   @Test
-  @Ignore("Where is TestAggregatedSentenceAE.xml")
   public void testRandomStrings() throws Exception {
     checkRandomData(random(), new UIMATypeAwareAnalyzer("/uima/TestAggregateSentenceAE.xml",
-        "org.apache.lucene.uima.ts.TokenAnnotation", "pos"), 1000 * RANDOM_MULTIPLIER);
+        "org.apache.lucene.uima.ts.TokenAnnotation", "pos"), 100 * RANDOM_MULTIPLIER);
   }
 
 }

