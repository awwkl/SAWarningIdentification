GitDiffStart: dda052df44f70478f2f2bba26bfcbe9ec0e6de75 | Fri Nov 9 18:39:05 2012 +0000
diff --git a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.java b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.java
index 272feef..674572b 100644
--- a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.java
+++ b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.java
@@ -290,6 +290,8 @@ public class SimpleTextSimpleDocValuesFormat extends SimpleDocValuesFormat {
         case FIXED_INTS_16:
         case FIXED_INTS_32:
         case FIXED_INTS_64:
+        case FLOAT_64:
+        case FLOAT_32:
           readLine();
           assert startsWith(MINVALUE);
           field.minValue = Integer.parseInt(stripPrefix(MINVALUE));
@@ -299,7 +301,7 @@ public class SimpleTextSimpleDocValuesFormat extends SimpleDocValuesFormat {
           data.seek(data.getFilePointer() + (1+field.pattern.length()) * maxDoc);
           break;
         default:
-          break;
+          throw new AssertionError();
         }
         field.dataStartFilePointer = data.getFilePointer();
       }
diff --git a/lucene/core/src/java/org/apache/lucene/codecs/SimpleDVConsumer.java b/lucene/core/src/java/org/apache/lucene/codecs/SimpleDVConsumer.java
index 260ba7c..626c2c8 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/SimpleDVConsumer.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/SimpleDVConsumer.java
@@ -45,12 +45,28 @@ public abstract class SimpleDVConsumer implements Closeable {
         mergeState.fieldInfo = field;
         // nocommit: switch on 3 types: NUMBER, BYTES, SORTED
         DocValues.Type type = field.getDocValuesType();
-        if (type == DocValues.Type.VAR_INTS) {
-          mergeNumericField(mergeState);
-        } else if (type == DocValues.Type.BYTES_VAR_STRAIGHT) {
-          mergeBinaryField(mergeState);
-        } else if (type == DocValues.Type.BYTES_VAR_SORTED) {
-          mergeSortedField(mergeState);
+        switch(type) {
+          case VAR_INTS:
+          case FIXED_INTS_8:
+          case FIXED_INTS_16:
+          case FIXED_INTS_32:
+          case FIXED_INTS_64:
+          case FLOAT_64:
+          case FLOAT_32:
+            mergeNumericField(mergeState);
+            break;
+          case BYTES_VAR_SORTED:
+          case BYTES_FIXED_SORTED:
+          case BYTES_VAR_DEREF:
+          case BYTES_FIXED_DEREF:
+            mergeSortedField(mergeState);
+            break;
+          case BYTES_VAR_STRAIGHT:
+          case BYTES_FIXED_STRAIGHT:
+            mergeBinaryField(mergeState);
+            break;
+          default:
+            throw new AssertionError();
         }
       }
     }

