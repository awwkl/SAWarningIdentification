GitDiffStart: 3bbc27fc6405fe8c52d93b9c10b6635f82e5e52e | Wed Mar 28 07:33:55 2012 +0000
diff --git a/dev-tools/maven/solr/core/pom.xml.template b/dev-tools/maven/solr/core/pom.xml.template
index d7c8500..75fe98d 100644
--- a/dev-tools/maven/solr/core/pom.xml.template
+++ b/dev-tools/maven/solr/core/pom.xml.template
@@ -88,6 +88,11 @@
     </dependency>
     <dependency>
       <groupId>org.apache.lucene</groupId>
+      <artifactId>lucene-analyzers-morfologik</artifactId>
+      <version>${project.version}</version>
+    </dependency>
+    <dependency>
+      <groupId>org.apache.lucene</groupId>
       <artifactId>lucene-analyzers-phonetic</artifactId>
       <version>${project.version}</version>
     </dependency>
diff --git a/lucene/contrib/contrib-build.xml b/lucene/contrib/contrib-build.xml
index a9b0b70..1e973f1 100644
--- a/lucene/contrib/contrib-build.xml
+++ b/lucene/contrib/contrib-build.xml
@@ -163,16 +163,31 @@
   </target>
 
   <property name="analyzers-uima.jar" value="${common.dir}/../modules/analysis/build/uima/lucene-analyzers-uima-${version}.jar"/>
-    <target name="check-analyzers-uima-uptodate" unless="analyzers-uima.uptodate">
-      <module-uptodate name="analysis/uima" jarfile="${analyzers-uima.jar}" property="analyzers-uima.uptodate"/>
-    </target>
-    <target name="jar-analyzers-uima" unless="analyzers-uima.uptodate" depends="check-analyzers-uima-uptodate">
-    	<ant dir="${common.dir}/../modules/analysis/uima" target="jar-core" inheritAll="false">
-        <propertyset refid="uptodate.and.compiled.properties"/>
-      </ant>
+  <target name="check-analyzers-uima-uptodate" unless="analyzers-uima.uptodate">
+    <module-uptodate name="analysis/uima" jarfile="${analyzers-uima.jar}" property="analyzers-uima.uptodate"/>
+  </target>
+  <target name="jar-analyzers-uima" unless="analyzers-uima.uptodate" depends="check-analyzers-uima-uptodate">
+    <ant dir="${common.dir}/../modules/analysis/uima" target="jar-core" inheritAll="false">
+      <propertyset refid="uptodate.and.compiled.properties"/>
+    </ant>
     <property name="analyzers-uima.uptodate" value="true"/>
   </target>
 
+  <property name="analyzers-morfologik.jar" value="${common.dir}/../modules/analysis/build/morfologik/lucene-analyzers-morfologik-${version}.jar"/>
+  <fileset id="analyzers-morfologik.fileset" dir="${common.dir}/../modules/analysis">
+    <include name="build/morfologik/lucene-analyzers-morfologik-${version}.jar" />
+    <include name="morfologik/lib/*.jar" />
+  </fileset>
+  <target name="check-analyzers-morfologik-uptodate" unless="analyzers-morfologik.uptodate">
+    <module-uptodate name="analysis/morfologik" jarfile="${analyzers-morfologik.jar}" property="analyzers-morfologik.uptodate"/>
+  </target>
+  <target name="jar-analyzers-morfologik" unless="analyzers-morfologik.uptodate" depends="check-analyzers-morfologik-uptodate">
+    <ant dir="${common.dir}/../modules/analysis/morfologik" target="jar-core" inheritAll="false">
+      <propertyset refid="uptodate.and.compiled.properties"/>
+    </ant>
+    <property name="analyzers-morfologik.uptodate" value="true"/>
+  </target>
+
   <property name="grouping.jar" value="${common.dir}/../modules/grouping/build/lucene-grouping-${version}.jar"/>
   <target name="check-grouping-uptodate" unless="grouping.uptodate">
     <module-uptodate name="grouping" jarfile="${grouping.jar}" property="grouping.uptodate"/>
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index f7e12d8..5c68e75 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -1,4 +1,4 @@
-ï»¿ï»¿                      Apache Solr Release Notes
+ï»?                      Apache Solr Release Notes
 
 Introduction
 ------------
@@ -74,6 +74,9 @@ Detailed Change List
 New Features
 ----------------------
 
+* SOLR-3272: Solr filter factory for MorfologikFilter (Polish lemmatisation).
+  (Rafa? Ku? via Dawid Weiss, Steven Rowe, Uwe Schindler).
+
 * SOLR-571: The autowarmCount for LRUCaches (LRUCache and FastLRUCache) now 
   supports "percentages" which get evaluated  relative the current size of 
   the cache when warming happens. 
diff --git a/solr/common-build.xml b/solr/common-build.xml
index 2b3314c..d7078ce 100644
--- a/solr/common-build.xml
+++ b/solr/common-build.xml
@@ -133,7 +133,7 @@
   </target>
 
   <target name="prep-lucene-jars" 
-  	      depends="jar-lucene-core, jar-analyzers-phonetic, jar-analyzers-kuromoji, jar-suggest, jar-highlighter, jar-memory,
+  	      depends="jar-lucene-core, jar-analyzers-phonetic, jar-analyzers-kuromoji, jar-analyzers-morfologik, jar-suggest, jar-highlighter, jar-memory,
   	               jar-misc, jar-spatial, jar-grouping, jar-queries, jar-queryparser">
   	  <property name="solr.deps.compiled" value="true"/>
   </target>
@@ -157,6 +157,7 @@
       <fileset file="${memory.jar}" />
       <fileset file="${misc.jar}" />
       <fileset file="${spatial.jar}" />
+      <fileset refid="analyzers-morfologik.fileset" />
     </copy>
     </sequential>
   </target>
diff --git a/solr/contrib/analysis-extras/build.xml b/solr/contrib/analysis-extras/build.xml
index c6d2fdc..2a814c7 100644
--- a/solr/contrib/analysis-extras/build.xml
+++ b/solr/contrib/analysis-extras/build.xml
@@ -29,19 +29,21 @@
   	<pathelement path="${analyzers-icu.jar}"/>
   	<pathelement path="${analyzers-smartcn.jar}"/>
   	<pathelement path="${analyzers-stempel.jar}"/>
+  	<fileset refid="analyzers-morfologik.fileset" />
     <path refid="solr.base.classpath"/>
   </path>
 
   <target name="module-jars-to-solr"
-          depends="jar-analyzers-icu, jar-analyzers-smartcn, jar-analyzers-stempel">
+          depends="jar-analyzers-icu, jar-analyzers-smartcn, jar-analyzers-stempel, jar-analyzers-morfologik">
     <mkdir dir="${build.dir}/lucene-libs"/>
     <copy todir="${build.dir}/lucene-libs" preservelastmodified="true" flatten="true" failonerror="true" overwrite="true">
       <fileset file="${analyzers-icu.jar}"/>
       <fileset file="${analyzers-smartcn.jar}"/>
       <fileset file="${analyzers-stempel.jar}"/>
+      <fileset refid="analyzers-morfologik.fileset" />
     </copy>
   </target>
 
-  <target name="compile-core" depends="jar-analyzers-icu, jar-analyzers-smartcn, jar-analyzers-stempel, solr-contrib-build.compile-core"/>
+  <target name="compile-core" depends="jar-analyzers-icu, jar-analyzers-smartcn, jar-analyzers-stempel, jar-analyzers-morfologik, solr-contrib-build.compile-core"/>
   <target name="dist" depends="module-jars-to-solr, common-solr.dist"/>
 </project>
diff --git a/solr/contrib/analysis-extras/src/java/org/apache/solr/analysis/MorfologikFilterFactory.java b/solr/contrib/analysis-extras/src/java/org/apache/solr/analysis/MorfologikFilterFactory.java
new file mode 100644
index 0000000..0f449b9
--- /dev/null
+++ b/solr/contrib/analysis-extras/src/java/org/apache/solr/analysis/MorfologikFilterFactory.java
@@ -0,0 +1,81 @@
+package org.apache.solr.analysis;
+
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+import java.util.Arrays;
+import java.util.Locale;
+import java.util.Map;
+
+import morfologik.stemming.PolishStemmer.DICTIONARY;
+
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.morfologik.MorfologikFilter;
+
+/**
+ * Filter factory for {@link MorfologikFilter}.
+ * <pre class="prettyprint">
+ * &lt;fieldType name="text_polish" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.MorfologikFilterFactory" dictionary="MORFOLOGIK" /&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * 
+ * <p>Any of Morfologik dictionaries can be used, these are at the moment:
+ * <code>MORFOLOGIK</code> (Morfologik's original dictionary),
+ * <code>MORFEUSZ</code> (Morfeusz-SIAT),
+ * <code>COMBINED</code> (both of the dictionaries above, combined).
+ * 
+ * @see <a href="http://morfologik.blogspot.com/">Morfologik web site</a>
+ */
+public class MorfologikFilterFactory extends BaseTokenFilterFactory {
+  /** Dictionary. */
+  private DICTIONARY dictionary = DICTIONARY.MORFOLOGIK;
+  
+  /** Schema attribute. */
+  public static final String DICTIONARY_SCHEMA_ATTRIBUTE = "dictionary";
+  
+  /**
+   * {@inheritDoc}
+   */
+  @Override
+  public TokenStream create(TokenStream ts) {
+    return new MorfologikFilter(ts, dictionary, luceneMatchVersion);
+  }
+
+  /**
+   * {@inheritDoc}
+   */
+  @Override
+  public void init(Map<String,String> args) {
+    super.init(args);
+    String dictionaryName = args.get(DICTIONARY_SCHEMA_ATTRIBUTE);
+    if (dictionaryName != null && !dictionaryName.isEmpty()) {
+      try {
+        DICTIONARY dictionary = DICTIONARY.valueOf(dictionaryName.toUpperCase(Locale.ENGLISH));
+        assert dictionary != null;
+        this.dictionary = dictionary;
+      } catch (IllegalArgumentException e) {
+        throw new IllegalArgumentException("The " + DICTIONARY_SCHEMA_ATTRIBUTE + " attribute accepts the "
+            + "following constants: " + Arrays.toString(DICTIONARY.values()) + ", this value is invalid: "  
+            + dictionaryName);
+      }
+    }
+  }
+}
diff --git a/solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory.java b/solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory.java
new file mode 100644
index 0000000..f01cc82
--- /dev/null
+++ b/solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory.java
@@ -0,0 +1,45 @@
+package org.apache.solr.analysis;
+
+import java.io.StringReader;
+import java.util.HashMap;
+import java.util.Map;
+
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.core.WhitespaceTokenizer;
+import org.apache.solr.schema.IndexSchema;
+
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * Test for {@link MorfologikFilterFactory}.
+ */
+public class TestMorfologikFilterFactory extends BaseTokenTestCase {
+  public void testCreateDictionary() throws Exception {
+    StringReader reader = new StringReader("rowery bilety");
+    Map<String,String> initParams = new HashMap<String,String>();
+    initParams.put(IndexSchema.LUCENE_MATCH_VERSION_PARAM,
+        DEFAULT_VERSION.toString());
+    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,
+        "morfologik");
+    MorfologikFilterFactory factory = new MorfologikFilterFactory();
+    factory.init(initParams);
+    TokenStream ts = factory.create(new WhitespaceTokenizer(DEFAULT_VERSION,
+        reader));
+    assertTokenStreamContents(ts, new String[] {"rower", "bilet"});
+  }
+}

