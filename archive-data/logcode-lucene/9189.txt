GitDiffStart: 4609e9017f6c2db31f9dae800a3d2161c0e0e675 | Fri Mar 15 00:04:22 2013 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 7d17f68..624a493 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -113,6 +113,8 @@ Other Changes
 
 * SOLR-4317: SolrTestCaseJ4: Can't avoid "collection1" convention (Tricia Jenkins, via Erick Erickson)
 
+* SOLR-4571: SolrZkClient#setData should return Stat object. (Mark Miller)
+
 ==================  4.2.0 ==================
 
 Versions of Major Components
diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java b/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java
index 77df7bb..59cb15b 100644
--- a/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java
+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java
@@ -24,7 +24,6 @@ import java.io.StringWriter;
 import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
 import java.util.List;
-import java.util.concurrent.TimeoutException;
 import java.util.concurrent.atomic.AtomicLong;
 
 import javax.xml.transform.OutputKeys;
@@ -40,10 +39,10 @@ import org.apache.solr.common.cloud.ZkClientConnectionStrategy.ZkUpdate;
 import org.apache.zookeeper.CreateMode;
 import org.apache.zookeeper.KeeperException;
 import org.apache.zookeeper.KeeperException.NoNodeException;
+import org.apache.zookeeper.KeeperException.NodeExistsException;
 import org.apache.zookeeper.Watcher;
 import org.apache.zookeeper.ZooDefs;
 import org.apache.zookeeper.ZooKeeper;
-import org.apache.zookeeper.KeeperException.NodeExistsException;
 import org.apache.zookeeper.data.ACL;
 import org.apache.zookeeper.data.Stat;
 import org.slf4j.Logger;
@@ -448,9 +447,9 @@ public class SolrZkClient {
   /**
    * Write data to ZooKeeper.
    */
-  public void setData(String path, byte[] data, boolean retryOnConnLoss) throws KeeperException,
+  public Stat setData(String path, byte[] data, boolean retryOnConnLoss) throws KeeperException,
       InterruptedException {
-    setData(path, data, -1, retryOnConnLoss);
+    return setData(path, data, -1, retryOnConnLoss);
   }
 
   /**
@@ -459,14 +458,14 @@ public class SolrZkClient {
    * @param path path to upload file to e.g. /solr/conf/solrconfig.xml
    * @param file path to file to be uploaded
    */
-  public void setData(String path, File file, boolean retryOnConnLoss) throws IOException,
+  public Stat setData(String path, File file, boolean retryOnConnLoss) throws IOException,
       KeeperException, InterruptedException {
     if (log.isInfoEnabled()) {
       log.info("Write to ZooKeepeer " + file.getAbsolutePath() + " to " + path);
     }
 
     String data = FileUtils.readFileToString(file);
-    setData(path, data.getBytes("UTF-8"), retryOnConnLoss);
+    return setData(path, data.getBytes("UTF-8"), retryOnConnLoss);
   }
 
   /**

