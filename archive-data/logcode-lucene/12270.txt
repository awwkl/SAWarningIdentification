GitDiffStart: 2b2140b2aa20027c438afae60560e0729668ff91 | Tue Jun 5 18:45:00 2012 +0000
diff --git a/lucene/core/src/test/org/apache/lucene/search/TestSearcherManager.java b/lucene/core/src/test/org/apache/lucene/search/TestSearcherManager.java
index 2c2812c..ef4c389 100644
--- a/lucene/core/src/test/org/apache/lucene/search/TestSearcherManager.java
+++ b/lucene/core/src/test/org/apache/lucene/search/TestSearcherManager.java
@@ -91,8 +91,8 @@ public class TestSearcherManager extends ThreadedIndexingAndSearchingTestCase {
       writer.commit();
       mgr = new SearcherManager(dir, factory);
       isNRT = false;
+      assertMergedSegmentsWarmed = false;
     }
-    
 
     lifetimeMGR = new SearcherLifetimeManager();
   }
diff --git a/lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java
index cc52cd3..cb76e5c 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java
@@ -344,7 +344,7 @@ public abstract class ThreadedIndexingAndSearchingTestCase extends LuceneTestCas
                     String source = diagnostics.get("source");
                     assertNotNull(source);
                     if (source.equals("merge")) {
-                      assertTrue("sub reader " + sub + " wasn't warmed", warmed.containsKey(((SegmentReader) sub).core));
+                      assertTrue("sub reader " + sub + " wasn't warmed: " + warmed, !assertMergedSegmentsWarmed || warmed.containsKey(((SegmentReader) sub).core));
                     }
                   }
                   if (s.getIndexReader().numDocs() > 0) {
@@ -418,6 +418,8 @@ public abstract class ThreadedIndexingAndSearchingTestCase extends LuceneTestCas
   protected void doClose() throws Exception {
   }
 
+  protected boolean assertMergedSegmentsWarmed = true;
+
   private final Map<SegmentCoreReaders,Boolean> warmed = new WeakHashMap<SegmentCoreReaders,Boolean>();
 
   public void runTest(String testName) throws Exception {

