GitDiffStart: 53e4c9dc02b4bae539e9ad36bc31410da6361e71 | Thu Mar 1 10:21:16 2007 +0000
diff --git a/src/java/org/apache/lucene/search/ScoreDocComparator.java b/src/java/org/apache/lucene/search/ScoreDocComparator.java
index 12dc2e2..c7fd433 100644
--- a/src/java/org/apache/lucene/search/ScoreDocComparator.java
+++ b/src/java/org/apache/lucene/search/ScoreDocComparator.java
@@ -44,7 +44,6 @@ public interface ScoreDocComparator {
 		}
 	};
 
-
 	/** Special comparator for sorting hits according to index order (document number). */
 	static final ScoreDocComparator INDEXORDER = new ScoreDocComparator() {
 		public int compare (ScoreDoc i, ScoreDoc j) {
@@ -60,35 +59,39 @@ public interface ScoreDocComparator {
 		}
 	};
 
-
 	/**
 	 * Compares two ScoreDoc objects and returns a result indicating their
 	 * sort order.
 	 * @param i First ScoreDoc
 	 * @param j Second ScoreDoc
-	 * @return <code>-1</code> if <code>i</code> should come before <code>j</code><br><code>1</code> if <code>i</code> should come after <code>j</code><br><code>0</code> if they are equal
+	 * @return <code>-1</code> if <code>i</code> should come before <code>j</code><br>
+     *         <code>1</code> if <code>i</code> should come after <code>j</code><br>
+     *         <code>0</code> if they are equal
 	 * @see java.util.Comparator
 	 */
 	int compare (ScoreDoc i, ScoreDoc j);
 
-
 	/**
 	 * Returns the value used to sort the given document.  The
 	 * object returned must implement the java.io.Serializable
-	 * interface.  This is used by multisearchers to determine how to collate results from their searchers.
+	 * interface.  This is used by multisearchers to determine how
+     * to collate results from their searchers.
 	 * @see FieldDoc
 	 * @param i Document
 	 * @return Serializable object
 	 */
 	Comparable sortValue (ScoreDoc i);
 
-
 	/**
-	 * Returns the type of sort.  Should return <code>SortField.SCORE</code>, <code>SortField.DOC</code>, <code>SortField.STRING</code>, <code>SortField.INTEGER</code>, 
-	 * <code>SortField.FLOAT</code> or <code>SortField.CUSTOM</code>.  It is not valid to return <code>SortField.AUTO</code>.
-	 * This is used by multisearchers to determine how to collate results from their searchers.
+	 * Returns the type of sort.  Should return <code>SortField.SCORE</code>,
+     * <code>SortField.DOC</code>, <code>SortField.STRING</code>,
+     * <code>SortField.INTEGER</code>, <code>SortField.FLOAT</code> or
+     * <code>SortField.CUSTOM</code>.  It is not valid to return
+     * <code>SortField.AUTO</code>.
+     * This is used by multisearchers to determine how to collate results
+     * from their searchers.
 	 * @return One of the constants in SortField.
 	 * @see SortField
 	 */
 	int sortType();
-}
\ No newline at end of file
+}

