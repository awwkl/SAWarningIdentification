GitDiffStart: 6722080cfce19666fd892aa5ad0bb87324aa0b1a | Tue Aug 28 16:16:38 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java b/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
index 665a87a..ed1e26b 100644
--- a/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
+++ b/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
@@ -61,7 +61,7 @@ public class DisjunctionMaxQuery extends Query implements Iterable<Query> {
 
   /**
    * Creates a new DisjunctionMaxQuery
-   * @param disjuncts a Collection&lt;Query&gt; of all the disjuncts to add
+   * @param disjuncts a {@code Collection<Query>} of all the disjuncts to add
    * @param tieBreakerMultiplier   the weight to give to each matching non-maximum disjunct
    */
   public DisjunctionMaxQuery(Collection<Query> disjuncts, float tieBreakerMultiplier) {
@@ -77,14 +77,14 @@ public class DisjunctionMaxQuery extends Query implements Iterable<Query> {
   }
 
   /** Add a collection of disjuncts to this disjunction
-   * via Iterable&lt;Query&gt;
+   * via {@code Iterable<Query>}
    * @param disjuncts a collection of queries to add as disjuncts.
    */
   public void add(Collection<Query> disjuncts) {
     this.disjuncts.addAll(disjuncts);
   }
 
-  /** @return An Iterator&lt;Query&gt; over the disjuncts */
+  /** @return An {@code Iterator<Query>} over the disjuncts */
   public Iterator<Query> iterator() {
     return disjuncts.iterator();
   }

