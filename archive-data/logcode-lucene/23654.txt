GitDiffStart: 9c011b1b33e32be46df488e332bc56a0d9703507 | Wed Jun 21 21:11:53 2006 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 43889c5..e270cdb 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -56,6 +56,10 @@ Bug fixes
     a non-empty segment file to be re-used, causing index corruption.
     (Andy Hind via Yonik Seeley)
 
+10. LUCENE-610: Simple syntax change to allow compilation with ecj : 
+    disambiguate inner class scorer's use of doc() in BooleanScorer2.
+    (DM Smith via Yonik Seeley)
+
 Optimizations
 
   1. LUCENE-586: TermDocs.skipTo() is now more efficient for multi-segment
diff --git a/src/java/org/apache/lucene/search/BooleanScorer2.java b/src/java/org/apache/lucene/search/BooleanScorer2.java
index e8e293e..28f392e 100644
--- a/src/java/org/apache/lucene/search/BooleanScorer2.java
+++ b/src/java/org/apache/lucene/search/BooleanScorer2.java
@@ -130,8 +130,8 @@ class BooleanScorer2 extends Scorer {
       this.scorer = scorer;
     }
     public float score() throws IOException {
-      if (doc() > lastScoredDoc) {
-        lastScoredDoc = doc();
+      if (this.doc() > lastScoredDoc) {
+        lastScoredDoc = this.doc();
         coordinator.nrMatchers++;
       }
       return scorer.score();
@@ -157,8 +157,8 @@ class BooleanScorer2 extends Scorer {
     return new DisjunctionSumScorer(scorers, minMrShouldMatch) {
       private int lastScoredDoc = -1;
       public float score() throws IOException {
-        if (doc() > lastScoredDoc) {
-          lastScoredDoc = doc();
+        if (this.doc() > lastScoredDoc) {
+          lastScoredDoc = this.doc();
           coordinator.nrMatchers += super.nrMatchers;
         }
         return super.score();
@@ -175,8 +175,8 @@ class BooleanScorer2 extends Scorer {
       private int lastScoredDoc = -1;
 
       public float score() throws IOException {
-        if (doc() > lastScoredDoc) {
-          lastScoredDoc = doc();
+        if (this.doc() > lastScoredDoc) {
+          lastScoredDoc = this.doc();
           coordinator.nrMatchers += requiredNrMatchers;
         }
         // All scorers match, so defaultSimilarity super.score() always has 1 as

