GitDiffStart: 882d6ec9c42f89f99dc83154718b0225b251bfb5 | Thu Sep 13 11:32:19 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/index/CompositeReader.java b/lucene/core/src/java/org/apache/lucene/index/CompositeReader.java
index 53f4ee9..47f4522 100644
--- a/lucene/core/src/java/org/apache/lucene/index/CompositeReader.java
+++ b/lucene/core/src/java/org/apache/lucene/index/CompositeReader.java
@@ -22,12 +22,13 @@ import java.util.List;
 import org.apache.lucene.search.SearcherManager; // javadocs
 import org.apache.lucene.store.*;
 
-/** Instances of this reader type can only
-  be used to get stored fields from the underlying AtomicReaders,
-  but it is not possible to directly retrieve postings. To do that, get
-  the sub-readers via {@link #getSequentialSubReaders}.
-  Alternatively, you can mimic an {@link AtomicReader} (with a serious slowdown),
-  by wrapping composite readers with {@link SlowCompositeReaderWrapper}.
+/**
+ Instances of this reader type can only
+ be used to get stored fields from the underlying AtomicReaders,
+ but it is not possible to directly retrieve postings. To do that, get
+ the {@link AtomicReaderContext} for all sub-readers via {@link #leaves}.
+ Alternatively, you can mimic an {@link AtomicReader} (with a serious slowdown),
+ by wrapping composite readers with {@link SlowCompositeReaderWrapper}.
  
  <p>IndexReader instances for indexes on disk are usually constructed
  with a call to one of the static <code>DirectoryReader.open()</code> methods,

