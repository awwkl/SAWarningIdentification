GitDiffStart: d631ef1a1c8e623b584647304f94e1150b95bfa2 | Tue Apr 26 12:18:30 2011 +0000
diff --git a/lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool.java b/lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool.java
index a8c86de..cb02b28 100644
--- a/lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool.java
+++ b/lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool.java
@@ -204,6 +204,7 @@ public abstract class DocumentsWriterPerThreadPool {
    * Returns an iterator providing access to all {@link ThreadState}
    * instances. 
    */
+  // TODO: new Iterator per indexed doc is overkill...?
   public Iterator<ThreadState> getAllPerThreadsIterator() {
     return getPerThreadsIterator(this.perThreads.length);
   }
@@ -217,6 +218,7 @@ public abstract class DocumentsWriterPerThreadPool {
    * has been called.
    * 
    */
+  // TODO: new Iterator per indexed doc is overkill...?
   public Iterator<ThreadState> getActivePerThreadsIterator() {
     return getPerThreadsIterator(numThreadStatesActive);
   }
@@ -246,6 +248,7 @@ public abstract class DocumentsWriterPerThreadPool {
    */
   protected ThreadState minContendedThreadState() {
     ThreadState minThreadState = null;
+    // TODO: new Iterator per indexed doc is overkill...?
     final Iterator<ThreadState> it = getActivePerThreadsIterator();
     while (it.hasNext()) {
       final ThreadState state = it.next();

