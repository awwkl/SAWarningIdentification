GitDiffStart: 64f8a1ffaf93a78f5c856fb8aaa77739ad684f32 | Sun Nov 6 13:52:58 2011 +0000
diff --git a/lucene/contrib/misc/src/java/org/apache/lucene/index/NRTManager.java b/lucene/contrib/misc/src/java/org/apache/lucene/index/NRTManager.java
index 9dc69a6..86cfcb8 100644
--- a/lucene/contrib/misc/src/java/org/apache/lucene/index/NRTManager.java
+++ b/lucene/contrib/misc/src/java/org/apache/lucene/index/NRTManager.java
@@ -222,6 +222,10 @@ public class NRTManager implements Closeable {
    */
   public SearcherManager waitForGeneration(long targetGen, boolean requireDeletes, long time, TimeUnit unit) {
     try {
+      final long curGen = indexingGen.get();
+      if (targetGen > curGen) {
+        throw new IllegalArgumentException("targetGen=" + targetGen + " was never returned by this NRTManager instance (current gen=" + curGen + ")");
+      }
       reopenLock.lockInterruptibly();
       try {
         if (targetGen > getCurrentSearchingGen(requireDeletes)) {
diff --git a/lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager.java b/lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager.java
index c35d823..7c3a121 100644
--- a/lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager.java
+++ b/lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager.java
@@ -223,12 +223,16 @@ public class TestNRTManager extends ThreadedIndexingAndSearchingTestCase {
 
   @Override
   protected IndexSearcher getCurrentSearcher() throws Exception {
-    return nrt.getSearcherManager(false).acquire();
+    // Test doesn't assert deletions until the end, so we
+    // can randomize whether dels must be applied
+    return nrt.getSearcherManager(random.nextBoolean()).acquire();
   }
 
   @Override
   protected void releaseSearcher(IndexSearcher s) throws Exception {
-    nrt.getSearcherManager(false).release(s);
+    // Test doesn't assert deletions until the end, so we
+    // can randomize whether dels must be applied
+    nrt.getSearcherManager(random.nextBoolean()).release(s);
   }
 
   @Override
diff --git a/lucene/contrib/misc/src/test/org/apache/lucene/search/TestSearcherManager.java b/lucene/contrib/misc/src/test/org/apache/lucene/search/TestSearcherManager.java
index f86a20d..b0af612 100644
--- a/lucene/contrib/misc/src/test/org/apache/lucene/search/TestSearcherManager.java
+++ b/lucene/contrib/misc/src/test/org/apache/lucene/search/TestSearcherManager.java
@@ -74,6 +74,9 @@ public class TestSearcherManager extends ThreadedIndexingAndSearchingTestCase {
       }
     };
     if (random.nextBoolean()) {
+      // TODO: can we randomize the applyAllDeletes?  But
+      // somehow for final searcher we must apply
+      // deletes...
       mgr = new SearcherManager(writer, true, warmer, es);
       isNRT = true;
     } else {
diff --git a/lucene/src/test-framework/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java b/lucene/src/test-framework/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java
index 8d3fb5b..f26b233 100644
--- a/lucene/src/test-framework/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java
+++ b/lucene/src/test-framework/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase.java
@@ -477,7 +477,7 @@ public abstract class ThreadedIndexingAndSearchingTestCase extends LuceneTestCas
         }
       }
       });
-    
+
     writer = new IndexWriter(dir, conf);
     if (VERBOSE) {
       writer.setInfoStream(System.out);
@@ -525,6 +525,9 @@ public abstract class ThreadedIndexingAndSearchingTestCase extends LuceneTestCas
     if (VERBOSE) {
       System.out.println("TEST: finalSearcher=" + s);
     }
+
+    assertFalse(failed.get());
+
     boolean doFail = false;
 
     // Verify: make sure delIDs are in fact deleted:

