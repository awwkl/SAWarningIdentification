GitDiffStart: 0a8fc36864e1e3c34e1d59c19316453a41cf082d | Thu Sep 5 20:58:17 2013 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/codecs/PostingsWriterBase.java b/lucene/core/src/java/org/apache/lucene/codecs/PostingsWriterBase.java
index e03ee73..e110710 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/PostingsWriterBase.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/PostingsWriterBase.java
@@ -69,19 +69,20 @@ public abstract class PostingsWriterBase extends PostingsConsumer implements Clo
    * current term is delta encoded according to latest term. 
    * Usually elements in {@code longs} are file pointers, so each one always 
    * increases when a new term is consumed. {@code out} is used to write generic
-   * bytes, which are not monotonical.
+   * bytes, which are not monotonic.
    *
-   * NOTE: sometimes long[] might contain values that doesn't make sense, e.g. 
-   * the pointer to postings list may not be defined, if it is designed to inline 
-   * some postings data in term dictionary.  For this the postings side should 
-   * always use the last file pointer, so that each element in metadata long[] is 
-   * still monotonic.
+   * NOTE: sometimes long[] might contain "don't care" values that are unused, e.g. 
+   * the pointer to postings list may not be defined for some terms but is defined
+   * for others, if it is designed to inline  some postings data in term dictionary.
+   * In this case, the postings writer should always use the last value, so that each
+   * element in metadata long[] remains monotonic.
    */
   public abstract void encodeTerm(long[] longs, DataOutput out, FieldInfo fieldInfo, BlockTermState state, boolean absolute) throws IOException;
 
   /** 
-   * Return the fixed length of long[] metadata (which is fixed per field),
-   * called when the writing switches to another field. */
+   * Sets the current field for writing, and returns the
+   * fixed length of long[] metadata (which is fixed per
+   * field), called when the writing switches to another field. */
   // TODO: better name?
   public abstract int setField(FieldInfo fieldInfo);
 

