GitDiffStart: 6312c370905c11418a2348cbf66ac6e64ace11be | Fri Sep 21 03:03:03 2012 +0000
diff --git a/lucene/build.xml b/lucene/build.xml
index 3236338..e1e3ebb 100644
--- a/lucene/build.xml
+++ b/lucene/build.xml
@@ -228,39 +228,39 @@
   <target name="documentation-lint" depends="documentation">
     <sequential>
       <check-broken-links dir="build/docs"/>
-      <!-- TODO: change this level=class -->
-      <check-missing-javadocs dir="build/docs" level="package"/>
+      <!-- TODO: change this level=method -->
+      <check-missing-javadocs dir="build/docs" level="class"/>
       <!-- too many classes to fix overall to just enable
-           the above to be level="class" right now, but we
+           the above to be level="method" right now, but we
            can prevent the modules that don't have problems
            from getting any worse -->
-      <check-missing-javadocs dir="build/docs/analyzers-common" level="class"/>
+      <!-- analyzers-common: problems -->
       <check-missing-javadocs dir="build/docs/analyzers-icu" level="method"/>
-      <check-missing-javadocs dir="build/docs/analyzers-kuromoji" level="class"/>
+      <!-- analyzers-kuromoji: problems -->
       <check-missing-javadocs dir="build/docs/analyzers-morfologik" level="method"/>
       <check-missing-javadocs dir="build/docs/analyzers-phonetic" level="method"/>
-      <check-missing-javadocs dir="build/docs/analyzers-smartcn" level="class"/>
+      <!-- analyzers-smartcn: problems -->
       <check-missing-javadocs dir="build/docs/analyzers-stempel" level="method"/>
-      <check-missing-javadocs dir="build/docs/analyzers-uima" level="class"/>
-      <check-missing-javadocs dir="build/docs/benchmark" level="class"/>
+      <!-- analyzers-uima: problems -->
+      <!-- benchmark: problems -->
       <check-missing-javadocs dir="build/docs/classification" level="method"/>
-      <check-missing-javadocs dir="build/docs/codecs" level="class"/>
-      <check-missing-javadocs dir="build/docs/core" level="class"/>
+      <!-- codecs: problems -->
+      <!-- core: problems -->
       <check-missing-javadocs dir="build/docs/demo" level="method"/>
-      <check-missing-javadocs dir="build/docs/facet" level="class"/>
-      <check-missing-javadocs dir="build/docs/grouping" level="class"/>
-      <check-missing-javadocs dir="build/docs/highlighter" level="class"/>
+      <!-- facet: problems -->
+      <!-- grouping: problems -->
+      <!-- highlighter: problems -->
       <check-missing-javadocs dir="build/docs/join" level="method"/>
       <check-missing-javadocs dir="build/docs/memory" level="method"/>
-      <check-missing-javadocs dir="build/docs/misc" level="class"/>
-      <check-missing-javadocs dir="build/docs/queries" level="class"/>
+      <!-- misc: problems -->
+      <!-- queries: problems -->
       <!-- queryparser: problems -->
-      <check-missing-javadocs dir="build/docs/sandbox" level="class"/>
-      <check-missing-javadocs dir="build/docs/spatial" level="class"/>
-      <check-missing-javadocs dir="build/docs/suggest" level="class"/>
-      <check-missing-javadocs dir="build/docs/test-framework" level="class"/>
+      <!-- sandbox: problems -->
+      <!-- spatial: problems -->
+      <!-- suggest: problems -->
+      <!-- test-framework: problems -->
 
-      <!-- too much to fix for now, but enforce full javadocs for key packages -->
+      <!-- too much to fix core/ for now, but enforce full javadocs for key packages -->
       <check-missing-javadocs dir="build/docs/core/org/apache/lucene/analysis" level="method"/>
       <check-missing-javadocs dir="build/docs/core/org/apache/lucene/document" level="method"/>
       <check-missing-javadocs dir="build/docs/core/org/apache/lucene/search/similarities" level="method"/>
diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/BasicQueryFactory.java b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/BasicQueryFactory.java
index c5c6e39..3d4d39b 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/BasicQueryFactory.java
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/BasicQueryFactory.java
@@ -29,6 +29,7 @@ import org.apache.lucene.index.Term;
 import org.apache.lucene.search.TermQuery;
 import org.apache.lucene.search.spans.SpanTermQuery;
 
+/** Factory for creating basic term queries */
 public class BasicQueryFactory {
   public BasicQueryFactory(int maxBasicQueries) {
     this.maxBasicQueries = maxBasicQueries;
diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/ComposedQuery.java b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/ComposedQuery.java
index dbaee65..1ec65c8 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/ComposedQuery.java
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/ComposedQuery.java
@@ -22,6 +22,7 @@ import java.util.Iterator;
 
 import org.apache.lucene.search.Query;
 
+/** Base class for composite queries (such as AND/OR/NOT) */
 public abstract class ComposedQuery extends SrndQuery { 
   
   public ComposedQuery(List<SrndQuery> qs, boolean operatorInfix, String opName) {
diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery.java b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery.java
index ce1e1fb..6c1164d 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery.java
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery.java
@@ -26,6 +26,7 @@ import org.apache.lucene.search.Query;
 import org.apache.lucene.search.spans.SpanNearQuery;
 import org.apache.lucene.search.spans.SpanQuery;
 
+/** Factory for NEAR queries */
 public class DistanceQuery extends ComposedQuery implements DistanceSubQuery {
   public DistanceQuery(
       List<SrndQuery> queries,
diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndQuery.java b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndQuery.java
index e9e0b94..c3ac462 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndQuery.java
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndQuery.java
@@ -20,6 +20,7 @@ import org.apache.lucene.search.BooleanClause;
 import org.apache.lucene.search.BooleanQuery;
 import org.apache.lucene.search.Query;
 
+/** Lowest level base class for surround queries */
 public abstract class SrndQuery implements Cloneable {
   public SrndQuery() {}
   
diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndTruncQuery.java b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndTruncQuery.java
index e2c9738..e78a997 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndTruncQuery.java
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndTruncQuery.java
@@ -29,7 +29,9 @@ import java.io.IOException;
 import java.util.regex.Pattern;
 import java.util.regex.Matcher;
 
-
+/**
+ * Query that matches wildcards
+ */
 public class SrndTruncQuery extends SimpleTerm {
   public SrndTruncQuery(String truncated, char unlimited, char mask) {
     super(false); /* not quoted */

