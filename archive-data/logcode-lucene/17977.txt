GitDiffStart: ae2a28599d9fe49ff845a40931eb81944d48cf37 | Tue May 4 06:35:52 2010 +0000
diff --git a/lucene/src/java/org/apache/lucene/util/automaton/Automaton.java b/lucene/src/java/org/apache/lucene/util/automaton/Automaton.java
index 71192f7..ff55589 100644
--- a/lucene/src/java/org/apache/lucene/util/automaton/Automaton.java
+++ b/lucene/src/java/org/apache/lucene/util/automaton/Automaton.java
@@ -425,7 +425,7 @@ public class Automaton implements Serializable, Cloneable {
       }
     }
     // map<state, set<state>>
-    Set<State> map[] = new Set[states.length];
+    @SuppressWarnings("unchecked") Set<State> map[] = new Set[states.length];
     for (int i = 0; i < map.length; i++)
       map[i] = new HashSet<State>();
     for (State s : states) {
diff --git a/lucene/src/java/org/apache/lucene/util/automaton/BasicOperations.java b/lucene/src/java/org/apache/lucene/util/automaton/BasicOperations.java
index 337ec17..551f70b 100644
--- a/lucene/src/java/org/apache/lucene/util/automaton/BasicOperations.java
+++ b/lucene/src/java/org/apache/lucene/util/automaton/BasicOperations.java
@@ -914,7 +914,7 @@ final public class BasicOperations {
       // Breadth-first search, from accept states,
       // backwards:
       while(!q.isEmpty()) {
-        final State s = q.pop();
+        final State s = q.removeFirst();
         List<ArrivingTransition> arriving = allArriving.get(s);
         if (arriving != null) {
           for(ArrivingTransition at : arriving) {

