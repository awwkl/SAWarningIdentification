GitDiffStart: 6416f8bad3abb2564cc47866d79a03c2428d0ec6 | Wed Jun 24 15:28:23 2015 +0000
diff --git a/solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java b/solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java
index 9dc22ea..3075d34 100644
--- a/solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java
+++ b/solr/core/src/java/org/apache/solr/response/transform/DocTransformer.java
@@ -63,15 +63,15 @@ public abstract class DocTransformer {
   public abstract void transform(SolrDocument doc, int docid) throws IOException;
 
   /**
-   * When a transformer needs access to fields that are not automaticaly derived from the
+   * When a transformer needs access to fields that are not automatically derived from the
    * input fields names, this option lets us explicitly say the field names that we hope
-   * will be in the SolrDocument.  These fields will be requestd from the 
+   * will be in the SolrDocument.  These fields will be requested from the
    * {@link SolrIndexSearcher} but may or may not be returned in the final
    * {@link QueryResponseWriter}
    * 
-   * @return a list of extra lucene fields
+   * @return a set of extra lucene fields
    */
-  public String[] getExtraRequestFields() {
+  public Set<String> getExtraRequestFields() {
     return null;
   }
   
diff --git a/solr/core/src/java/org/apache/solr/search/SolrReturnFields.java b/solr/core/src/java/org/apache/solr/search/SolrReturnFields.java
index 0307910..e9d394c 100644
--- a/solr/core/src/java/org/apache/solr/search/SolrReturnFields.java
+++ b/solr/core/src/java/org/apache/solr/search/SolrReturnFields.java
@@ -265,7 +265,7 @@ public class SolrReturnFields extends ReturnFields {
             DocTransformer t = factory.create(disp, augmenterParams, req);
             if(t!=null) {
               if(!_wantsAllFields) {
-                String[] extra = t.getExtraRequestFields();
+                Set<String> extra = t.getExtraRequestFields();
                 if(extra!=null) {
                   for(String f : extra) {
                     fields.add(f); // also request this field from IndexSearcher
diff --git a/solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.java b/solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.java
index 397e94c..a236546 100644
--- a/solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.java
+++ b/solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.java
@@ -18,7 +18,11 @@ package org.apache.solr.response;
  */
 
 import java.io.IOException;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.Set;
 
+import com.google.common.collect.ImmutableSet;
 import org.apache.lucene.document.StoredField;
 import org.apache.lucene.index.IndexableField;
 import org.apache.lucene.index.StorableField;
@@ -75,10 +79,10 @@ public class TestCustomDocTransformer extends SolrTestCaseJ4 {
   public static class CustomTransformerFactory extends TransformerFactory {
     @Override
     public DocTransformer create(String field, SolrParams params, SolrQueryRequest req) {
-      String[] extra = null;
+      Set<String> extra = null;
       String ext = params.get("extra");
       if(ext!=null) {
-        extra = Strings.split(ext, ',');
+        extra = new HashSet<>(Arrays.asList(Strings.split(ext,',')));
       }
       return new CustomTransformer(field, extra);
     }
@@ -86,10 +90,10 @@ public class TestCustomDocTransformer extends SolrTestCaseJ4 {
   
   public static class CustomTransformer extends DocTransformer {
     final String name;
-    final String[] extra;
+    final Set<String> extra;
     final StringBuilder str = new StringBuilder();
     
-    public CustomTransformer(String name, String[] extra) {
+    public CustomTransformer(String name, Set<String> extra) {
       this.name = name;
       this.extra = extra;
     }
@@ -100,7 +104,7 @@ public class TestCustomDocTransformer extends SolrTestCaseJ4 {
     }
 
     @Override
-    public String[] getExtraRequestFields() {
+    public Set<String> getExtraRequestFields() {
       return extra;
     }
 

