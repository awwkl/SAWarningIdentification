GitDiffStart: 8bf2fda5bdd2338263549580fc92c6f91b57180c | Sun Jan 18 18:24:14 2009 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 4d23b31..0a0464c 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,4 +1,4 @@
-ï»¿ï»¿Lucene Change Log
+ï»¿ï»¿ï»?ucene Change Log
 $Id$
 
 ======================= Trunk (not yet released) =======================
@@ -141,6 +141,9 @@ Optimizations
  3. LUCENE-1484: Remove synchronization of IndexReader.document() by
     using CloseableThreadLocal internally.  (Jason Rutherglen via Mike
     McCandless).
+    
+ 4. LUCENE-1224: Short circuit FuzzyQuery.rewrite when input token length 
+    is small compared to minSimilarity. (Timo Nentwig, Mark Miller)
 
 Documentation
 
diff --git a/src/java/org/apache/lucene/search/FuzzyQuery.java b/src/java/org/apache/lucene/search/FuzzyQuery.java
index 44a74b8..c355ad2 100644
--- a/src/java/org/apache/lucene/search/FuzzyQuery.java
+++ b/src/java/org/apache/lucene/search/FuzzyQuery.java
@@ -34,6 +34,7 @@ public class FuzzyQuery extends MultiTermQuery {
   
   private float minimumSimilarity;
   private int prefixLength;
+  private boolean termLongEnough = false;
   
   /**
    * Create a new FuzzyQuery that will match terms with a similarity 
@@ -61,6 +62,10 @@ public class FuzzyQuery extends MultiTermQuery {
     if (prefixLength < 0)
       throw new IllegalArgumentException("prefixLength < 0");
     
+    if (term.text().length() > 1.0f / (1.0f - minimumSimilarity)) {
+      this.termLongEnough = true;
+    }
+    
     this.minimumSimilarity = minimumSimilarity;
     this.prefixLength = prefixLength;
   }
@@ -105,6 +110,10 @@ public class FuzzyQuery extends MultiTermQuery {
   }
   
   public Query rewrite(IndexReader reader) throws IOException {
+    if(!termLongEnough) {  // can't match
+      return new BooleanQuery();
+    }
+
     FilteredTermEnum enumerator = getEnum(reader);
     int maxClauseCount = BooleanQuery.getMaxClauseCount();
     ScoreTermQueue stQueue = new ScoreTermQueue(maxClauseCount);
diff --git a/src/test/org/apache/lucene/search/TestFuzzyQuery.java b/src/test/org/apache/lucene/search/TestFuzzyQuery.java
index aee3b8a..868199a 100644
--- a/src/test/org/apache/lucene/search/TestFuzzyQuery.java
+++ b/src/test/org/apache/lucene/search/TestFuzzyQuery.java
@@ -249,6 +249,38 @@ public class TestFuzzyQuery extends LuceneTestCase {
     directory.close();
   }
   
+  public void testTokenLengthOpt() throws IOException {
+    RAMDirectory directory = new RAMDirectory();
+    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(),
+        true, IndexWriter.MaxFieldLength.LIMITED);
+    addDoc("12345678911", writer);
+    addDoc("segment", writer);
+    writer.optimize();
+    writer.close();
+    IndexSearcher searcher = new IndexSearcher(directory);
+
+    Query query;
+    // term not over 10 chars, so optimization shortcuts
+    query = new FuzzyQuery(new Term("field", "1234569"), 0.9f);
+    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;
+    assertEquals(0, hits.length);
+
+    // 10 chars, so no optimization
+    query = new FuzzyQuery(new Term("field", "1234567891"), 0.9f);
+    hits = searcher.search(query, null, 1000).scoreDocs;
+    assertEquals(0, hits.length);
+    
+    // over 10 chars, so no optimization
+    query = new FuzzyQuery(new Term("field", "12345678911"), 0.9f);
+    hits = searcher.search(query, null, 1000).scoreDocs;
+    assertEquals(1, hits.length);
+
+    // over 10 chars, no match
+    query = new FuzzyQuery(new Term("field", "sdfsdfsdfsdf"), 0.9f);
+    hits = searcher.search(query, null, 1000).scoreDocs;
+    assertEquals(0, hits.length);
+  }
+  
   private void addDoc(String text, IndexWriter writer) throws IOException {
     Document doc = new Document();
     doc.add(new Field("field", text, Field.Store.YES, Field.Index.ANALYZED));

