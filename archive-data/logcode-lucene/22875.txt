GitDiffStart: ab763bbdae0f92f5393aa1344d1ff9afd7f7326e | Tue Mar 13 06:54:03 2007 +0000
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/package.html b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/package.html
index 7f9baae..eeb31bf 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/package.html
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/package.html
@@ -128,8 +128,8 @@ documents should be added to it one by one but not faster than 20 docs a minute,
 and, in parallel with this,
 some N queries should be searched against that index,
 again, no more than 2 queries a second.
-You can have the searches all share an index searcher,
-or have them each open its own searcher and close it afterwords.
+You can have the searches all share an index reader,
+or have them each open its own reader and close it afterwords.
 </p>
 
 <p>
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask.java
index 1b4cded..d9ae0d0 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask.java
@@ -32,7 +32,11 @@ import org.apache.lucene.store.Directory;
  * Read index (abstract) task.
  * Sub classes implement withSearch(), withWarm(), withTraverse() and withRetrieve()
  * methods to configure the actual action.
- * Other side effects: none.
+ * 
+ * <p>Note: All ReadTasks reuse the reader if it is already open. 
+ * Otherwise a reader is opened at start and closed at the end.
+ *  
+ * <p>Other side effects: none.
  */
 public abstract class ReadTask extends PerfTask {
 
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTask.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTask.java
index beee752..fb9ade9 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTask.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTask.java
@@ -22,6 +22,9 @@ import org.apache.lucene.benchmark.byTask.feeds.QueryMaker;
 
 /**
  * Search task.
+ * 
+ * <p>Note: This task reuses the reader if it is already open. 
+ * Otherwise a reader is opened at start and closed at the end.
  */
 public class SearchTask extends ReadTask {
 
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTravRetTask.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTravRetTask.java
index 5329546..e4c08f1 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTravRetTask.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTravRetTask.java
@@ -22,6 +22,9 @@ import org.apache.lucene.benchmark.byTask.feeds.QueryMaker;
 
 /**
  * Search and Travrese and Retrieve docs task.
+ * 
+ * <p>Note: This task reuses the reader if it is already open. 
+ * Otherwise a reader is opened at start and closed at the end.
  */
 public class SearchTravRetTask extends ReadTask {
 
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTravTask.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTravTask.java
index c69368b..c24ba81 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTravTask.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchTravTask.java
@@ -22,6 +22,9 @@ import org.apache.lucene.benchmark.byTask.feeds.QueryMaker;
 
 /**
  * Search and Travrese task.
+ * 
+ * <p>Note: This task reuses the reader if it is already open. 
+ * Otherwise a reader is opened at start and closed at the end.
  */
 public class SearchTravTask extends ReadTask {
 
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence.java
index d1bf821..f4e3d6a 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence.java
@@ -205,8 +205,7 @@ public class TaskSequence extends PerfTask {
   }
 
   /**
-   * Execute child tasks in a way that they do not reprt their time separately.
-   * Current implementation if child tasks has child tasks of their own, those are not affected by this call. 
+   * Execute child tasks in a way that they do not report their time separately.
    */
   public void setNoChildReport() {
     letChildReport  = false;
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WarmTask.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WarmTask.java
index e915cce..5e8dc4c 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WarmTask.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WarmTask.java
@@ -22,6 +22,9 @@ import org.apache.lucene.benchmark.byTask.feeds.QueryMaker;
 
 /**
  * Warm reader task.
+ * 
+ * <p>Note: This task reuses the reader if it is already open. 
+ * Otherwise a reader is opened at start and closed at the end.
  */
 public class WarmTask extends ReadTask {
 

