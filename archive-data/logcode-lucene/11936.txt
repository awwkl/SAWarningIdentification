GitDiffStart: 524fa2d4f6cc6db50b95686bec4bc8c50ab3f013 | Tue Jul 10 20:04:33 2012 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 5a779fe..712bf50 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -43,6 +43,10 @@ Bug Fixes
   so that it works correctly with Analyzers that produce binary non-UTF-8 terms
   such as CollationAnalyzer. (Nattapong Sirilappanich via Robert Muir) 
 
+* LUCENE-4209: Fix FSTCompletionLookup to close its sorter, so that it won't
+  leave temp files behind in /tmp. Fix SortedTermFreqIteratorWrapper to not
+  leave temp files behind in /tmp on Windows.  (Uwe Schindler, Robert Muir)
+
 Build
 
 * LUCENE-4094: Support overriding file.encoding on forked test JVMs
diff --git a/lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper.java b/lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper.java
index 40b1c27..004fa0e 100644
--- a/lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper.java
+++ b/lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper.java
@@ -128,13 +128,13 @@ public class SortedTermFreqIteratorWrapper implements TermFreqIterator {
   }
   
   private void close() throws IOException {
+    IOUtils.close(reader);
     if (tempInput != null) {
       tempInput.delete();
     }
     if (tempSorted != null) {
       tempSorted.delete();
     }
-    IOUtils.close(reader);
   }
   
   private final static class BytesOnlyComparator implements Comparator<BytesRef> {
diff --git a/lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup.java b/lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup.java
index 84bdacb..862d9cb 100644
--- a/lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup.java
+++ b/lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup.java
@@ -150,6 +150,7 @@ public class FSTCompletionLookup extends Lookup {
 
     Sort.ByteSequencesWriter writer = new Sort.ByteSequencesWriter(tempInput);
     Sort.ByteSequencesReader reader = null;
+    ExternalRefSorter sorter = null;
 
     // Push floats up front before sequences to sort them. For now, assume they are non-negative.
     // If negative floats are allowed some trickery needs to be done to find their byte order.
@@ -175,7 +176,7 @@ public class FSTCompletionLookup extends Lookup {
       SortInfo info = new Sort().sort(tempInput, tempSorted);
       tempInput.delete();
       FSTCompletionBuilder builder = new FSTCompletionBuilder(
-          buckets, new ExternalRefSorter(new Sort()), sharedTailLength);
+          buckets, sorter = new ExternalRefSorter(new Sort()), sharedTailLength);
 
       final int inputLines = info.lines;
       reader = new Sort.ByteSequencesReader(tempSorted);
@@ -215,9 +216,9 @@ public class FSTCompletionLookup extends Lookup {
       success = true;
     } finally {
       if (success) 
-        IOUtils.close(reader, writer);
+        IOUtils.close(reader, writer, sorter);
       else 
-        IOUtils.closeWhileHandlingException(reader, writer);
+        IOUtils.closeWhileHandlingException(reader, writer, sorter);
 
       tempInput.delete();
       tempSorted.delete();
diff --git a/lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/BytesRefSortersTest.java b/lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/BytesRefSortersTest.java
index 554f349..02bc730 100644
--- a/lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/BytesRefSortersTest.java
+++ b/lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/BytesRefSortersTest.java
@@ -25,7 +25,9 @@ import org.junit.Test;
 public class BytesRefSortersTest extends LuceneTestCase {
   @Test
   public void testExternalRefSorter() throws Exception {
-    check(new ExternalRefSorter(new Sort()));
+    ExternalRefSorter s = new ExternalRefSorter(new Sort());
+    check(s);
+    s.close();
   }
 
   @Test
diff --git a/lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST.java b/lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST.java
index 79f0be9..a63c3b7 100644
--- a/lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST.java
+++ b/lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST.java
@@ -56,5 +56,6 @@ public class LargeInputFST {
     File fstFile = new File("completion.fst");
     System.out.println("Done. Writing automaton: " + fstFile.getAbsolutePath());
     completion.getFST().save(fstFile);
+    sorter.close();
   }
 }

