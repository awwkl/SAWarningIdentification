GitDiffStart: 170bdc33a3afccf451047ff765be090c2040b1ac | Thu May 5 22:46:09 2005 +0000
diff --git a/src/test/org/apache/lucene/search/CheckHits.java b/src/test/org/apache/lucene/search/CheckHits.java
index e883fa5..985f1aa 100644
--- a/src/test/org/apache/lucene/search/CheckHits.java
+++ b/src/test/org/apache/lucene/search/CheckHits.java
@@ -44,15 +44,15 @@ public class CheckHits {
       actual.add(new Integer(hits.id(i)));
     }
 
-    testCase.assertEquals(query.toString(defaultFieldName), correct, actual);
+    TestCase.assertEquals(query.toString(defaultFieldName), correct, actual);
   }
 
   /** Tests that a Hits has an expected order of documents */
   public static void checkDocIds(String mes, int[] results, Hits hits, TestCase testCase)
   throws IOException {
-    testCase.assertEquals(mes + " nr of hits", results.length, hits.length());
+    TestCase.assertEquals(mes + " nr of hits", results.length, hits.length());
     for (int i = 0; i < results.length; i++) {
-      testCase.assertEquals(mes + " doc nrs for hit " + i, results[i], hits.id(i));
+      TestCase.assertEquals(mes + " doc nrs for hit " + i, results[i], hits.id(i));
     }
   }
 
@@ -73,7 +73,7 @@ public class CheckHits {
     final float scoreTolerance = 1.0e-7f;
     for (int i = 0; i < results.length; i++) {
       if (Math.abs(hits1.score(i) -  hits2.score(i)) > scoreTolerance) {
-        testCase.fail("Hit " + i + ", doc nrs " + hits1.id(i) + " and " + hits2.id(i)
+        TestCase.fail("Hit " + i + ", doc nrs " + hits1.id(i) + " and " + hits2.id(i)
                       + "\nunequal scores: " + hits1.score(i)
                       + "\n           and: " + hits2.score(i)
                       + "\nfor query:" + query.toString());

