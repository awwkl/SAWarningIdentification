GitDiffStart: ee0eeb2d77dceb4c2b22652e03dfbce8e22e9c09 | Wed Mar 19 03:52:09 2014 +0000
diff --git a/solr/core/src/test/org/apache/solr/cloud/hdfs/StressHdfsTest.java b/solr/core/src/test/org/apache/solr/cloud/hdfs/StressHdfsTest.java
index 232536d..7e4f72a 100644
--- a/solr/core/src/test/org/apache/solr/cloud/hdfs/StressHdfsTest.java
+++ b/solr/core/src/test/org/apache/solr/cloud/hdfs/StressHdfsTest.java
@@ -100,28 +100,34 @@ public class StressHdfsTest extends BasicDistributedZkTest {
     }
 
     if (testRestartIntoSafeMode) {
-      createCollection(DELETE_DATA_DIR_COLLECTION, 1, 1, 1);
-      
-      waitForRecoveriesToFinish(DELETE_DATA_DIR_COLLECTION, false);
-      
-      ChaosMonkey.stop(jettys.get(0));
-      
-      // enter safe mode and restart a node
-      NameNodeAdapter.enterSafeMode(dfsCluster.getNameNode(), false);
-      
-      int rnd = LuceneTestCase.random().nextInt(10000);
       Timer timer = new Timer();
-      timer.schedule(new TimerTask() {
-        
-        @Override
-        public void run() {
-          NameNodeAdapter.leaveSafeMode(dfsCluster.getNameNode());
-        }
-      }, rnd);
-      
-      ChaosMonkey.start(jettys.get(0));
       
-      waitForRecoveriesToFinish(DELETE_DATA_DIR_COLLECTION, false);
+      try {
+        createCollection(DELETE_DATA_DIR_COLLECTION, 1, 1, 1);
+        
+        waitForRecoveriesToFinish(DELETE_DATA_DIR_COLLECTION, false);
+        
+        ChaosMonkey.stop(jettys.get(0));
+        
+        // enter safe mode and restart a node
+        NameNodeAdapter.enterSafeMode(dfsCluster.getNameNode(), false);
+        
+        int rnd = LuceneTestCase.random().nextInt(10000);
+        
+        timer.schedule(new TimerTask() {
+          
+          @Override
+          public void run() {
+            NameNodeAdapter.leaveSafeMode(dfsCluster.getNameNode());
+          }
+        }, rnd);
+        
+        ChaosMonkey.start(jettys.get(0));
+        
+        waitForRecoveriesToFinish(DELETE_DATA_DIR_COLLECTION, false);
+      } finally {
+        timer.cancel();
+      }
     }
   }
 

