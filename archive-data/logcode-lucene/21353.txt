GitDiffStart: 78ffc2800f8b41e0286b35fc64fed7b6564601da | Thu Aug 7 11:51:18 2008 +0000
diff --git a/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java b/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
index 57392136..cb5b8b9 100644
--- a/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
+++ b/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
@@ -48,7 +48,7 @@ public class DisjunctionMaxQuery extends Query {
   private float tieBreakerMultiplier = 0.0f;
 
   /** Creates a new empty DisjunctionMaxQuery.  Use add() to add the subqueries.
-   * @param tieBreakerMultiplier this score of each non-maximum disjunct for a document is multiplied by this weight
+   * @param tieBreakerMultiplier the score of each non-maximum disjunct for a document is multiplied by this weight
    *        and added into the final score.  If non-zero, the value should be small, on the order of 0.1, which says that
    *        10 occurrences of word in a lower-scored field that is also in a higher scored field is just as good as a unique
    *        word in the lower scored field (i.e., one that is not in any higher scored field.

