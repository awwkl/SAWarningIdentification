GitDiffStart: 22f068248d655e05155f6cc44bdd0ad117eeb7ec | Wed Jul 17 22:11:34 2002 +0000
diff --git a/build.xml b/build.xml
index e77fd25..360853a 100644
--- a/build.xml
+++ b/build.xml
@@ -112,7 +112,7 @@
       <classpath refid="classpath"/>
     </javac>
 
-    <rmic classname="org.apache.lucene.search.RemoteSearchableImpl"
+    <rmic classname="org.apache.lucene.search.RemoteSearchable"
           base="${build.classes}">
       <classpath refid="classpath"/>
     </rmic>
diff --git a/src/java/org/apache/lucene/search/RemoteSearchable.java b/src/java/org/apache/lucene/search/RemoteSearchable.java
new file mode 100644
index 0000000..5059c9f
--- /dev/null
+++ b/src/java/org/apache/lucene/search/RemoteSearchable.java
@@ -0,0 +1,120 @@
+package org.apache.lucene.search;
+
+/* ====================================================================
+ * The Apache Software License, Version 1.1
+ *
+ * Copyright (c) 2001 The Apache Software Foundation.  All rights
+ * reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * 3. The end-user documentation included with the redistribution,
+ *    if any, must include the following acknowledgment:
+ *       "This product includes software developed by the
+ *        Apache Software Foundation (http://www.apache.org/)."
+ *    Alternately, this acknowledgment may appear in the software itself,
+ *    if and wherever such third-party acknowledgments normally appear.
+ *
+ * 4. The names "Apache" and "Apache Software Foundation" and
+ *    "Apache Lucene" must not be used to endorse or promote products
+ *    derived from this software without prior written permission. For
+ *    written permission, please contact apache@apache.org.
+ *
+ * 5. Products derived from this software may not be called "Apache",
+ *    "Apache Lucene", nor may "Apache" appear in their name, without
+ *    prior written permission of the Apache Software Foundation.
+ *
+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ * ====================================================================
+ *
+ * This software consists of voluntary contributions made by many
+ * individuals on behalf of the Apache Software Foundation.  For more
+ * information on the Apache Software Foundation, please see
+ * <http://www.apache.org/>.
+ */
+
+import java.io.IOException;
+import org.apache.lucene.document.Document;
+import org.apache.lucene.index.Term;
+import org.apache.lucene.index.IndexReader;
+
+import java.rmi.Naming;
+import java.rmi.RemoteException;
+import java.rmi.RMISecurityManager;
+import java.rmi.server.UnicastRemoteObject;
+
+/** A remote searchable implementation. */
+public class RemoteSearchable
+  extends UnicastRemoteObject
+  implements Searchable {
+  
+  private Searchable local;
+  
+  /** Constructs and exports a remote searcher. */
+  public RemoteSearchable(Searchable local) throws RemoteException {
+    super();
+    this.local = local;
+  }
+  
+  public void search(Query query, Filter filter, HitCollector results)
+    throws IOException {
+    local.search(query, filter, results);
+  }
+  
+  public void close() throws IOException {
+    local.close();
+  }
+
+  public int docFreq(Term term) throws IOException {
+    return local.docFreq(term);
+  }
+
+  public int maxDoc() throws IOException {
+    return local.maxDoc();
+  }
+
+  public TopDocs search(Query query, Filter filter, int n) throws IOException {
+    return local.search(query, filter, n);
+  }
+
+  public Document doc(int i) throws IOException {
+    return local.doc(i);
+  }
+
+  /** Exports a searcher for the index in args[0] named
+   * "//localhost/Searchable". */
+  public static void main(String args[]) throws Exception {
+    // create and install a security manager
+    if (System.getSecurityManager() == null) {
+      System.setSecurityManager(new RMISecurityManager());
+    }
+    
+    Searchable local = new IndexSearcher(args[0]);
+    RemoteSearchable impl = new RemoteSearchable(local);
+      
+    // bind the implementation to "Searchable"
+    Naming.rebind("//localhost/Searchable", impl);
+  }
+
+}
diff --git a/src/java/org/apache/lucene/search/RemoteSearchableImpl.java b/src/java/org/apache/lucene/search/RemoteSearchableImpl.java
deleted file mode 100644
index e609579..0000000
--- a/src/java/org/apache/lucene/search/RemoteSearchableImpl.java
+++ /dev/null
@@ -1,120 +0,0 @@
-package org.apache.lucene.search;
-
-/* ====================================================================
- * The Apache Software License, Version 1.1
- *
- * Copyright (c) 2001 The Apache Software Foundation.  All rights
- * reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- *
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in
- *    the documentation and/or other materials provided with the
- *    distribution.
- *
- * 3. The end-user documentation included with the redistribution,
- *    if any, must include the following acknowledgment:
- *       "This product includes software developed by the
- *        Apache Software Foundation (http://www.apache.org/)."
- *    Alternately, this acknowledgment may appear in the software itself,
- *    if and wherever such third-party acknowledgments normally appear.
- *
- * 4. The names "Apache" and "Apache Software Foundation" and
- *    "Apache Lucene" must not be used to endorse or promote products
- *    derived from this software without prior written permission. For
- *    written permission, please contact apache@apache.org.
- *
- * 5. Products derived from this software may not be called "Apache",
- *    "Apache Lucene", nor may "Apache" appear in their name, without
- *    prior written permission of the Apache Software Foundation.
- *
- * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
- * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
- * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
- * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
- * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
- * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
- * SUCH DAMAGE.
- * ====================================================================
- *
- * This software consists of voluntary contributions made by many
- * individuals on behalf of the Apache Software Foundation.  For more
- * information on the Apache Software Foundation, please see
- * <http://www.apache.org/>.
- */
-
-import java.io.IOException;
-import org.apache.lucene.document.Document;
-import org.apache.lucene.index.Term;
-import org.apache.lucene.index.IndexReader;
-
-import java.rmi.Naming;
-import java.rmi.RemoteException;
-import java.rmi.RMISecurityManager;
-import java.rmi.server.UnicastRemoteObject;
-
-/** A remote searchable implementation. */
-public class RemoteSearchableImpl
-  extends UnicastRemoteObject
-  implements Searchable {
-  
-  private Searchable local;
-  
-  /** Constructs and exports a remote searcher. */
-  public RemoteSearchableImpl(Searchable local) throws RemoteException {
-    super();
-    this.local = local;
-  }
-  
-  public void search(Query query, Filter filter, HitCollector results)
-    throws IOException {
-    local.search(query, filter, results);
-  }
-  
-  public void close() throws IOException {
-    local.close();
-  }
-
-  public int docFreq(Term term) throws IOException {
-    return local.docFreq(term);
-  }
-
-  public int maxDoc() throws IOException {
-    return local.maxDoc();
-  }
-
-  public TopDocs search(Query query, Filter filter, int n) throws IOException {
-    return local.search(query, filter, n);
-  }
-
-  public Document doc(int i) throws IOException {
-    return local.doc(i);
-  }
-
-  /** Exports a searcher for the index in args[0] named
-   * "//localhost/Searchable". */
-  public static void main(String args[]) throws Exception {
-    // create and install a security manager
-    if (System.getSecurityManager() == null) {
-      System.setSecurityManager(new RMISecurityManager());
-    }
-    
-    Searchable local = new IndexSearcher(args[0]);
-    RemoteSearchableImpl impl = new RemoteSearchableImpl(local);
-      
-    // bind the implementation to "Searchable"
-    Naming.rebind("//localhost/Searchable", impl);
-  }
-
-}
diff --git a/src/java/org/apache/lucene/search/Searchable.java b/src/java/org/apache/lucene/search/Searchable.java
index 2a73264..0c2ff72 100644
--- a/src/java/org/apache/lucene/search/Searchable.java
+++ b/src/java/org/apache/lucene/search/Searchable.java
@@ -59,7 +59,11 @@ import org.apache.lucene.document.Document;
 import org.apache.lucene.index.Term;
 import org.apache.lucene.index.IndexReader;
 
-/** The interface for search implementations. */
+/** The interface for search implementations.
+ *
+ * <p>Implementations provide search over a single index, over multiple
+ * indices, and over indices on remote servers.
+ */
 public interface Searchable extends java.rmi.Remote {
   /** Lower-level search API.
    *
diff --git a/src/java/org/apache/lucene/search/Searcher.java b/src/java/org/apache/lucene/search/Searcher.java
index ec68c33..a1283e4 100644
--- a/src/java/org/apache/lucene/search/Searcher.java
+++ b/src/java/org/apache/lucene/search/Searcher.java
@@ -59,10 +59,8 @@ import org.apache.lucene.document.Document;
 import org.apache.lucene.index.Term;
 import org.apache.lucene.index.IndexReader;
 
-/** The abstract base class for search implementations.
- *
- * <p>Subclasses implement search over a single index, over multiple indices,
- * and over indices on remote servers.
+/** An abstract base class for search implementations.
+ * Implements some common utility methods.
  */
 public abstract class Searcher implements Searchable {
 
diff --git a/src/test/org/apache/lucene/search/TestRemoteSearchable.java b/src/test/org/apache/lucene/search/TestRemoteSearchable.java
index 9a302e7..189064a 100644
--- a/src/test/org/apache/lucene/search/TestRemoteSearchable.java
+++ b/src/test/org/apache/lucene/search/TestRemoteSearchable.java
@@ -60,8 +60,6 @@ import java.rmi.registry.LocateRegistry;
 
 import junit.framework.TestCase;
 
-import org.apache.lucene.search.IndexSearcher;
-import org.apache.lucene.search.MultiSearcher;
 import org.apache.lucene.index.Term;
 import org.apache.lucene.index.IndexWriter;
 import org.apache.lucene.store.RAMDirectory;
@@ -87,7 +85,7 @@ public class TestRemoteSearchable extends TestCase {
     // publish it
     LocateRegistry.createRegistry(1099);
     Searchable local = new IndexSearcher(indexStore);
-    RemoteSearchableImpl impl = new RemoteSearchableImpl(local);
+    RemoteSearchable impl = new RemoteSearchable(local);
     Naming.rebind("//localhost/Searchable", impl);
   }
 

