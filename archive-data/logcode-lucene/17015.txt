GitDiffStart: f6f1961e46f34f7e9d6100998726b149c2793a99 | Wed Nov 3 23:15:01 2010 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 4a11676..4f459c3 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -380,7 +380,10 @@ Changes in backwards compatibility policy
   CREATE*, IndexWriter would make a first empty commit. If you need that 
   behavior you can call writer.commit()/close() immediately after you create it.
   (Shai Erera, Mike McCandless)
-  
+
+* LUCENE-2733: Removed public constructors of utility classes with only static
+  methods to prevent instantiation.  (Uwe Schindler)
+
 Changes in runtime behavior
 
 * LUCENE-1923: Made IndexReader.toString() produce something
diff --git a/lucene/src/java/org/apache/lucene/util/BitUtil.java b/lucene/src/java/org/apache/lucene/util/BitUtil.java
index 9ee5835..d72001a 100644
--- a/lucene/src/java/org/apache/lucene/util/BitUtil.java
+++ b/lucene/src/java/org/apache/lucene/util/BitUtil.java
@@ -20,7 +20,9 @@ package org.apache.lucene.util; // from org.apache.solr.util rev 555343
 /**  A variety of high efficiency bit twiddling routines.
  * @lucene.internal
  */
-public class BitUtil {
+public final class BitUtil {
+
+  private BitUtil() {} // no instance
 
   /** Returns the number of bits set in the long */
   public static int pop(long x) {
diff --git a/lucene/src/java/org/apache/lucene/util/CodecUtil.java b/lucene/src/java/org/apache/lucene/util/CodecUtil.java
index 1ee912e..93aa5dc 100644
--- a/lucene/src/java/org/apache/lucene/util/CodecUtil.java
+++ b/lucene/src/java/org/apache/lucene/util/CodecUtil.java
@@ -31,6 +31,8 @@ import java.io.IOException;
  */
 
 public final class CodecUtil {
+  private CodecUtil() {} // no instance
+
   private final static int CODEC_MAGIC = 0x3fd76c17;
 
   public static IndexOutput writeHeader(IndexOutput out, String codec, int version)
diff --git a/lucene/src/java/org/apache/lucene/util/English.java b/lucene/src/java/org/apache/lucene/util/English.java
index 28eda70..21da4d1 100644
--- a/lucene/src/java/org/apache/lucene/util/English.java
+++ b/lucene/src/java/org/apache/lucene/util/English.java
@@ -20,7 +20,9 @@ package org.apache.lucene.util;
 /**
  * @lucene.internal
  */ 
-public class English {
+public final class English {
+
+  private English() {} // no instance
 
   public static String longToEnglish(long i) {
     StringBuilder result = new StringBuilder();
diff --git a/lucene/src/java/org/apache/lucene/util/IOUtils.java b/lucene/src/java/org/apache/lucene/util/IOUtils.java
index d42a5f9..f03d302 100644
--- a/lucene/src/java/org/apache/lucene/util/IOUtils.java
+++ b/lucene/src/java/org/apache/lucene/util/IOUtils.java
@@ -21,7 +21,10 @@ import java.io.Closeable;
 import java.io.IOException;
 
 /** @lucene.internal */
-public class IOUtils {
+public final class IOUtils {
+
+  private IOUtils() {} // no instance
+
   /**
    * <p>Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions. Some of the <tt>Closeable</tt>s
    * may be null, they are ignored. After everything is closed, method either throws <tt>priorException</tt>,
diff --git a/lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools.java b/lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools.java
index d42c308..8950cc8 100644
--- a/lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools.java
+++ b/lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools.java
@@ -53,7 +53,7 @@ import java.nio.ByteBuffer;
  *
  * @lucene.experimental
  */
-public class IndexableBinaryStringTools {
+public final class IndexableBinaryStringTools {
 
   private static final CodingCase[] CODING_CASES = {
     // CodingCase(int initialShift, int finalShift)
diff --git a/lucene/src/java/org/apache/lucene/util/ReaderUtil.java b/lucene/src/java/org/apache/lucene/util/ReaderUtil.java
index 7d971e9..430fc9b 100644
--- a/lucene/src/java/org/apache/lucene/util/ReaderUtil.java
+++ b/lucene/src/java/org/apache/lucene/util/ReaderUtil.java
@@ -28,7 +28,9 @@ import org.apache.lucene.index.IndexReader;
  *
  * @lucene.internal
  */
-public class ReaderUtil {
+public final class ReaderUtil {
+
+  private ReaderUtil() {} // no instance
 
   public static class Slice {
     public static final Slice[] EMPTY_ARRAY = new Slice[0];
diff --git a/lucene/src/java/org/apache/lucene/util/ToStringUtils.java b/lucene/src/java/org/apache/lucene/util/ToStringUtils.java
index 030c5cc..2f1d06b 100644
--- a/lucene/src/java/org/apache/lucene/util/ToStringUtils.java
+++ b/lucene/src/java/org/apache/lucene/util/ToStringUtils.java
@@ -20,7 +20,10 @@ package org.apache.lucene.util;
 /**
  * Helper methods to ease implementing {@link Object#toString()}.
  */
-public class ToStringUtils {
+public final class ToStringUtils {
+
+  private ToStringUtils() {} // no instance
+
   /**
    * for printing boost only if not 1.0
    */
diff --git a/lucene/src/java/org/apache/lucene/util/UnicodeUtil.java b/lucene/src/java/org/apache/lucene/util/UnicodeUtil.java
index 9a12020..32268ac 100644
--- a/lucene/src/java/org/apache/lucene/util/UnicodeUtil.java
+++ b/lucene/src/java/org/apache/lucene/util/UnicodeUtil.java
@@ -93,7 +93,9 @@ package org.apache.lucene.util;
  * @lucene.internal
  */
 
-final public class UnicodeUtil {
+public final class UnicodeUtil {
+
+  private UnicodeUtil() {} // no instance
 
   public static final int UNI_SUR_HIGH_START = 0xD800;
   public static final int UNI_SUR_HIGH_END = 0xDBFF;

