GitDiffStart: 93e96f688e4066194cf42534b99d40b0a3b15f10 | Mon Mar 21 14:10:17 2016 -0400
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 3c49ba9..8fc2156 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -55,6 +55,9 @@ New Features
 Bug Fixes
 ----------------------
 
+* SOLR-8857: HdfsUpdateLog does not use configured or new default number of version buckets and is
+  hard coded to 256. (Mark Miller, yonik, Gregory Chanan)
+
 Optimizations
 ----------------------
 * SOLR-8722: Don't force a full ZkStateReader refresh on every Overseer operation.
diff --git a/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java b/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java
index aa66391..bdb1d82 100644
--- a/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java
+++ b/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java
@@ -97,19 +97,12 @@ public class HdfsUpdateLog extends UpdateLog {
   
   @Override
   public void init(PluginInfo info) {
-    dataDir = (String) info.initArgs.get("dir");
-    
-    defaultSyncLevel = SyncLevel.getSyncLevel((String) info.initArgs
-        .get("syncLevel"));
-
-    numRecordsToKeep = objToInt(info.initArgs.get("numRecordsToKeep"), 100);
-    maxNumLogsToKeep = objToInt(info.initArgs.get("maxNumLogsToKeep"), 10);
+    super.init(info);
     
     tlogDfsReplication = (Integer) info.initArgs.get( "tlogDfsReplication");
     if (tlogDfsReplication == null) tlogDfsReplication = 3;
 
-    log.info("Initializing HdfsUpdateLog: dataDir={} defaultSyncLevel={} numRecordsToKeep={} maxNumLogsToKeep={} tlogDfsReplication={}",
-        dataDir, defaultSyncLevel, numRecordsToKeep, maxNumLogsToKeep, tlogDfsReplication);
+    log.info("Initializing HdfsUpdateLog: tlogDfsReplication={}", tlogDfsReplication);
   }
 
   private Configuration getConf() {
@@ -231,7 +224,7 @@ public class HdfsUpdateLog extends UpdateLog {
     }
     
     try {
-      versionInfo = new VersionInfo(this, 256);
+      versionInfo = new VersionInfo(this, numVersionBuckets);
     } catch (SolrException e) {
       log.error("Unable to use updateLog: " + e.getMessage(), e);
       throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,

