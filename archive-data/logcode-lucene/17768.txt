GitDiffStart: 18d21f9f116096fb3f809f3b1e7fbb234bb33dd1 | Thu Jun 24 10:24:15 2010 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index ca45818..cb7cfa9 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -389,6 +389,10 @@ Bug fixes
   a prior (corrupt) index missing its segments_N file.  (Mike
   McCandless)
 
+* LUCENE-2142 (correct fix): FieldCacheImpl.getStringIndex no longer
+  throws an exception when term count exceeds doc count.
+  (Mike McCandless, Uwe Schindler)
+
 New features
 
 * LUCENE-2128: Parallelized fetching document frequencies during weight
diff --git a/lucene/src/test/org/apache/lucene/search/TestSort.java b/lucene/src/test/org/apache/lucene/search/TestSort.java
index e664c88..3e3ae72 100644
--- a/lucene/src/test/org/apache/lucene/search/TestSort.java
+++ b/lucene/src/test/org/apache/lucene/search/TestSort.java
@@ -1039,4 +1039,23 @@ public class TestSort extends LuceneTestCase implements Serializable {
     dir.close();
   }
 
+  public void testLUCENE2142() throws IOException {
+    RAMDirectory indexStore = new RAMDirectory ();
+    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(
+        TEST_VERSION_CURRENT, new MockAnalyzer()));
+    for (int i=0; i<5; i++) {
+        Document doc = new Document();
+        doc.add (new Field ("string", "a"+i, Field.Store.NO, Field.Index.NOT_ANALYZED));
+        doc.add (new Field ("string", "b"+i, Field.Store.NO, Field.Index.NOT_ANALYZED));
+        writer.addDocument (doc);
+    }
+    writer.optimize(); // enforce one segment to have a higher unique term count in all cases
+    writer.close();
+    sort.setSort(
+        new SortField("string", SortField.STRING),
+        SortField.FIELD_DOC );
+    // this should not throw AIOOBE or RuntimeEx
+    new IndexSearcher (indexStore, true).search(new MatchAllDocsQuery(), null, 500, sort);
+  }
+
 }

