GitDiffStart: ede163802d733f1a1fb36c85c34cc9a983c3a1fc | Tue Oct 21 18:24:23 2003 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index abddcbe..5f633a2 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -52,6 +52,9 @@ $Id$
     stop most OutOfMemoryExceptions by prefix, wildcard and fuzzy
     queries which run amok. (cutting)
 
+13. Add new method: IndexReader.undeleteAll().  This undeletes all
+    deleted documents which still remain in the index. (cutting)
+
 
 1.3 RC1
 
diff --git a/src/java/org/apache/lucene/index/FilterIndexReader.java b/src/java/org/apache/lucene/index/FilterIndexReader.java
index ce33830..54baede 100644
--- a/src/java/org/apache/lucene/index/FilterIndexReader.java
+++ b/src/java/org/apache/lucene/index/FilterIndexReader.java
@@ -124,6 +124,7 @@ public class FilterIndexReader extends IndexReader {
 
   public boolean isDeleted(int n) { return in.isDeleted(n); }
   public boolean hasDeletions() { return in.hasDeletions(); }
+  public void undeleteAll() throws IOException { in.undeleteAll(); }
 
   public byte[] norms(String f) throws IOException { return in.norms(f); }
 
diff --git a/src/java/org/apache/lucene/index/IndexReader.java b/src/java/org/apache/lucene/index/IndexReader.java
index 7bd1fbe..82f870e 100644
--- a/src/java/org/apache/lucene/index/IndexReader.java
+++ b/src/java/org/apache/lucene/index/IndexReader.java
@@ -318,6 +318,9 @@ public abstract class IndexReader {
     return n;
   }
 
+  /** Undeletes all documents currently marked as deleted in this index.*/
+  public abstract void undeleteAll() throws IOException;
+
   /**
    * Closes files associated with this index.
    * Also saves any new deletions to disk.
diff --git a/src/java/org/apache/lucene/index/SegmentReader.java b/src/java/org/apache/lucene/index/SegmentReader.java
index c885d02..1370325 100644
--- a/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/src/java/org/apache/lucene/index/SegmentReader.java
@@ -185,6 +185,23 @@ final class SegmentReader extends IndexReader {
     deletedDocs.set(docNum);
   }
 
+  public void undeleteAll() throws IOException {
+    synchronized (directory()) {		  // in- & inter-process sync
+      new Lock.With(directory().makeLock(IndexWriter.COMMIT_LOCK_NAME),
+                    IndexWriter.COMMIT_LOCK_TIMEOUT) {
+        public Object doBody() throws IOException {
+          if (directory().fileExists(segment + ".del")) {
+            directory().deleteFile(segment + ".del");
+          }
+          return null;
+        }
+      };
+      deletedDocs = null;
+      deletedDocsDirty = false;
+    }
+  }
+
+
   final Vector files() throws IOException {
     Vector files = new Vector(16);
     final String ext[] = new String[] {
diff --git a/src/java/org/apache/lucene/index/SegmentsReader.java b/src/java/org/apache/lucene/index/SegmentsReader.java
index 5291f1e..6f2b82f 100644
--- a/src/java/org/apache/lucene/index/SegmentsReader.java
+++ b/src/java/org/apache/lucene/index/SegmentsReader.java
@@ -125,6 +125,11 @@ final class SegmentsReader extends IndexReader
     hasDeletions = true;
   }
 
+  public void undeleteAll() throws IOException {
+    for (int i = 0; i < readers.length; i++)
+      readers[i].undeleteAll();
+  }
+
   private final int readerIndex(int n) {	  // find reader for doc n:
     int lo = 0;					  // search starts array
     int hi = readers.length - 1;                  // for first element less

