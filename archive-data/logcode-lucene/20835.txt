GitDiffStart: 71c18d5b3cda1611f2790d4be31a3778eb4e17c2 | Thu Dec 11 08:25:38 2008 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 0c75570..701d71d 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -106,7 +106,9 @@ New Features
 22. SOLR-781: Distributed search ability to sort field.facet values
     lexicographically.  facet.sort values "true" and "false" are
     also deprecated and replaced with "count" and "lex".
-    (Lars Kotthoff via yonik
+    (Lars Kotthoff via yonik)
+
+23. SOLR-886: DataImportHandler should rollback when an import fails or it is aborted (shalin)
 
 Optimizations
 ----------------------
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
index 4b0b221..5563188 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
@@ -319,6 +319,7 @@ public class DataImporter {
         cumulativeStatistics.add(docBuilder.importStatistics);
     } catch (Throwable t) {
       LOG.error("Full Import failed", t);
+      docBuilder.rollback();
     } finally {
       setStatus(Status.IDLE);
       config.clearCaches();
@@ -342,6 +343,7 @@ public class DataImporter {
         cumulativeStatistics.add(docBuilder.importStatistics);
     } catch (Throwable t) {
       LOG.error("Delta Import Failed", t);
+      docBuilder.rollback();
     } finally {
       setStatus(Status.IDLE);
       config.clearCaches();
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
index fa8443f..8bbfc09 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
@@ -139,8 +139,8 @@ public class DocBuilder {
     if (stop.get()) {
       if (DataImporter.ABORT_CMD.equals(requestParameters.command)) {
         // Dont commit if aborted using command=abort
-        statusMessages.put("Aborted", DataImporter.DATE_TIME_FORMAT
-                .format(new Date()));
+        statusMessages.put("Aborted", DataImporter.DATE_TIME_FORMAT.format(new Date()));
+        rollback();
       } else if (requestParameters.commit) {
         // Debug mode, commit if commit=true was specified
         commit();
@@ -170,6 +170,12 @@ public class DocBuilder {
 
   }
 
+  void rollback() {
+    writer.rollback();
+    statusMessages.put("", "Indexing failed. Rolled back all changes.");
+    addStatusMessage("Rolledback");
+  }
+
   @SuppressWarnings("unchecked")
   private void doFullDump() {
     addStatusMessage("Full Dump Started");
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java
index 44a4355..7b93acf 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SolrWriter.java
@@ -20,6 +20,7 @@ import org.apache.solr.common.SolrInputDocument;
 import org.apache.solr.update.AddUpdateCommand;
 import org.apache.solr.update.CommitUpdateCommand;
 import org.apache.solr.update.DeleteUpdateCommand;
+import org.apache.solr.update.RollbackUpdateCommand;
 import org.apache.solr.update.processor.UpdateRequestProcessor;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -177,8 +178,17 @@ public class SolrWriter {
     try {
       CommitUpdateCommand commit = new CommitUpdateCommand(optimize);
       processor.processCommit(commit);
-    } catch (Exception e) {
-      log.error("Exception while solr commit.", e);
+    } catch (Throwable t) {
+      log.error("Exception while solr commit.", t);
+    }
+  }
+
+  public void rollback()  {
+    try {
+      RollbackUpdateCommand rollback = new RollbackUpdateCommand();
+      processor.processRollback(rollback);
+    } catch (Throwable t) {
+      log.error("Exception while solr rollback.", t);
     }
   }
 

