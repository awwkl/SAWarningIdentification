GitDiffStart: d66dd2f9f06402e9c582f19e73e017bd7da72ec4 | Wed Jan 20 12:54:57 2016 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index eff9174..5746d44 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -152,6 +152,9 @@ API Changes
 * LUCENE-6980: Default applyAllDeletes to true when opening
   near-real-time readers (Mike McCandless)
 
+* LUCENE-6981: SpanQuery.getTermContexts() helper methods are now public, and
+  SpanScorer has a public getSpans() method. (Alan Woodward)
+
 Optimizations
 
 * LUCENE-6951: Improve GeoPointInPolygonQuery using point orientation based
diff --git a/lucene/core/src/java/org/apache/lucene/search/spans/SpanQuery.java b/lucene/core/src/java/org/apache/lucene/search/spans/SpanQuery.java
index d8be5af..62af21a 100644
--- a/lucene/core/src/java/org/apache/lucene/search/spans/SpanQuery.java
+++ b/lucene/core/src/java/org/apache/lucene/search/spans/SpanQuery.java
@@ -17,16 +17,16 @@ package org.apache.lucene.search.spans;
  * limitations under the License.
  */
 
-import org.apache.lucene.index.Term;
-import org.apache.lucene.index.TermContext;
-import org.apache.lucene.search.IndexSearcher;
-import org.apache.lucene.search.Query;
-
 import java.io.IOException;
 import java.util.Collection;
 import java.util.Map;
 import java.util.TreeMap;
 
+import org.apache.lucene.index.Term;
+import org.apache.lucene.index.TermContext;
+import org.apache.lucene.search.IndexSearcher;
+import org.apache.lucene.search.Query;
+
 /** Base class for span-based queries. */
 public abstract class SpanQuery extends Query {
 
@@ -42,7 +42,7 @@ public abstract class SpanQuery extends Query {
    * Build a map of terms to termcontexts, for use in constructing SpanWeights
    * @lucene.internal
    */
-  protected static Map<Term, TermContext> getTermContexts(SpanWeight... weights) {
+  public static Map<Term, TermContext> getTermContexts(SpanWeight... weights) {
     Map<Term, TermContext> terms = new TreeMap<>();
     for (SpanWeight w : weights) {
       w.extractTermContexts(terms);
@@ -54,7 +54,7 @@ public abstract class SpanQuery extends Query {
    * Build a map of terms to termcontexts, for use in constructing SpanWeights
    * @lucene.internal
    */
-  protected static Map<Term, TermContext> getTermContexts(Collection<SpanWeight> weights) {
+  public static Map<Term, TermContext> getTermContexts(Collection<SpanWeight> weights) {
     Map<Term, TermContext> terms = new TreeMap<>();
     for (SpanWeight w : weights) {
       w.extractTermContexts(terms);
diff --git a/lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java b/lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java
index bc29838..5a43140 100644
--- a/lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java
+++ b/lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java
@@ -47,6 +47,11 @@ public class SpanScorer extends Scorer {
     this.docScorer = docScorer;
   }
 
+  /** return the Spans for this Scorer **/
+  public Spans getSpans() {
+    return spans;
+  }
+
   @Override
   public int docID() {
     return spans.docID();

