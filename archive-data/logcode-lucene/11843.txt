GitDiffStart: 47541d03bc4530ea9090eb3164df06b93db39ec0 | Thu Jul 19 21:28:11 2012 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 2db8205..faa7e83 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -112,6 +112,8 @@ Bug Fixes
   file name using the "config" attribute prevented the override file from being
   used. (Ryan Zezeski, hossman)
 
+* SOLR-3642: Correct broken check for multivalued fields in stats.facet
+  (Yandong Yao, hossman)
 
 Other Changes
 ----------------------
diff --git a/solr/core/src/java/org/apache/solr/handler/component/StatsComponent.java b/solr/core/src/java/org/apache/solr/handler/component/StatsComponent.java
index c4f6882..d0a5d25 100644
--- a/solr/core/src/java/org/apache/solr/handler/component/StatsComponent.java
+++ b/solr/core/src/java/org/apache/solr/handler/component/StatsComponent.java
@@ -256,13 +256,12 @@ class SimpleStats {
     FieldCache.DocTermsIndex facetTermsIndex;
     for( String facetField : facet ) {
       SchemaField fsf = searcher.getSchema().getField(facetField);
-      FieldType facetFieldType = fsf.getType();
 
-      if (facetFieldType.isTokenized() || facetFieldType.isMultiValued()) {
+      if ( fsf.multiValued()) {
         throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
-          "Stats can only facet on single-valued fields, not: " + facetField
-          + "[" + facetFieldType + "]");
-        }
+          "Stats can only facet on single-valued fields, not: " + facetField );
+      }
+
       try {
         facetTermsIndex = FieldCache.DEFAULT.getTermsIndex(searcher.getAtomicReader(), facetField);
       }
diff --git a/solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java b/solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java
index cb62e95..f801edf 100644
--- a/solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java
+++ b/solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java
@@ -27,6 +27,10 @@ import java.text.SimpleDateFormat;
 import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.params.MapSolrParams;
 import org.apache.solr.common.params.StatsParams;
+
+import org.apache.solr.schema.IndexSchema;
+import org.apache.solr.schema.SchemaField;
+
 import org.apache.solr.core.SolrCore;
 import org.apache.solr.request.LocalSolrQueryRequest;
 import org.apache.solr.request.SolrQueryRequest;
@@ -340,4 +344,25 @@ public class StatsComponentTest extends AbstractSolrTestCase {
     assertQ("test string statistics values", req,
         "//null[@name='active_dt'][.='']");
   }
+
+  public void testStatsFacetMultivaluedErrorHandling() throws Exception {
+    SolrCore core = h.getCore();
+    SchemaField foo_ss = core.getSchema().getField("foo_ss");
+
+    assertU(adoc("id", "1", "active_i", "1", "foo_ss", "aa" ));
+    assertU(adoc("id", "2", "active_i", "1", "foo_ss", "bb" ));
+    assertU(adoc("id", "3", "active_i", "5", "foo_ss", "aa" ));
+    assertU(commit());
+
+    assertTrue("schema no longer satisfies test requirements: foo_ss no longer multivalued", foo_ss.multiValued());
+    assertTrue("schema no longer satisfies test requirements: foo_ss's fieldtype no longer single valued", ! foo_ss.getType().isMultiValued());
+    
+    assertQEx("no failure trying to get stats facet on foo_ss",
+              req("q", "*:*", 
+                  "stats", "true",
+                  "stats.field", "active_i",
+                  "stats.facet", "foo_ss"),
+              400);
+
+  }
 }

