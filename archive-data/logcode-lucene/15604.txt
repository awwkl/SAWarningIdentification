GitDiffStart: f4da02857f725330549130147de32e7ec794778b | Sun Jun 5 14:34:20 2011 +0000
diff --git a/lucene/src/java/org/apache/lucene/index/codecs/CodecProvider.java b/lucene/src/java/org/apache/lucene/index/codecs/CodecProvider.java
index 04c70bc..cfc9c45 100644
--- a/lucene/src/java/org/apache/lucene/index/codecs/CodecProvider.java
+++ b/lucene/src/java/org/apache/lucene/index/codecs/CodecProvider.java
@@ -181,26 +181,4 @@ public class CodecProvider {
   public synchronized void setDefaultFieldCodec(String codec) {
     defaultFieldCodec = codec;
   }
-  
-  /**
-   * Registers all codecs from the given provider including the field to codec
-   * mapping and the default field codec.
-   * <p>
-   * NOTE: This method will pass any codec from the given codec to
-   * {@link #register(Codec)} and sets fiels codecs via
-   * {@link #setFieldCodec(String, String)}.
-   * @return this
-   */
-  public CodecProvider copyFrom(CodecProvider other) {
-    final Collection<Codec> values = other.codecs.values();
-    for (Codec codec : values) {
-      register(codec);
-    }
-    final Set<Entry<String, String>> entrySet = other.perFieldMap.entrySet();
-    for (Entry<String, String> entry : entrySet) {
-      setFieldCodec(entry.getKey(), entry.getValue());
-    }
-    setDefaultFieldCodec(other.getDefaultFieldCodec());
-    return this;
-  }
 }
diff --git a/lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.java b/lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.java
index 9362e15..ea1f891 100644
--- a/lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.java
+++ b/lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.java
@@ -65,14 +65,6 @@ public class RandomIndexWriter implements Closeable {
       // called from different threads; else test failures may
       // not be reproducible from the original seed
       this.r = new Random(r.nextInt());
-
-      if (r.nextBoolean()) {
-        if (LuceneTestCase.VERBOSE) {
-          System.out.println("NOTE: RIW ctor is setting new CodecProvider().copyFrom");
-        }
-        // Just to test CP.copyFrom:
-        conf.setCodecProvider(new CodecProvider().copyFrom(conf.getCodecProvider()));
-      }
     }
 
     @Override

