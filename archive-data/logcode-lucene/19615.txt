GitDiffStart: 0d663ab490ae531aebef6a70279d849860606ffa | Sun Aug 23 01:18:52 2009 +0000
diff --git a/docs/fileformats.html b/docs/fileformats.html
index 7c54e53..7c3cb07 100644
--- a/docs/fileformats.html
+++ b/docs/fileformats.html
@@ -281,6 +281,9 @@ document.write("Last Published: " + document.lastModified);
 <a href="#File Naming">File Naming</a>
 </li>
 <li>
+<a href="#file-names">Summary of File Extensions</a>
+</li>
+<li>
 <a href="#Primitive Types">Primitive Types</a>
 <ul class="minitoc">
 <li>
@@ -360,7 +363,7 @@ document.write("Last Published: " + document.lastModified);
 </ul>
 </div>
         
-<a name="N10016"></a><a name="Index File Formats"></a>
+<a name="N1000C"></a><a name="Index File Formats"></a>
 <h2 class="boxed">Index File Formats</h2>
 <div class="section">
 <p>
@@ -413,7 +416,7 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N10035"></a><a name="Definitions"></a>
+<a name="N1002B"></a><a name="Definitions"></a>
 <h2 class="boxed">Definitions</h2>
 <div class="section">
 <p>
@@ -454,7 +457,7 @@ document.write("Last Published: " + document.lastModified);
                 strings, the first naming the field, and the second naming text
                 within the field.
             </p>
-<a name="N10055"></a><a name="Inverted Indexing"></a>
+<a name="N1004B"></a><a name="Inverted Indexing"></a>
 <h3 class="boxed">Inverted Indexing</h3>
 <p>
                     The index stores statistics about terms in order
@@ -464,7 +467,7 @@ document.write("Last Published: " + document.lastModified);
                     it.  This is the inverse of the natural relationship, in which
                     documents list terms.
                 </p>
-<a name="N10061"></a><a name="Types of Fields"></a>
+<a name="N10057"></a><a name="Types of Fields"></a>
 <h3 class="boxed">Types of Fields</h3>
 <p>
                     In Lucene, fields may be <i>stored</i>, in which
@@ -478,7 +481,7 @@ document.write("Last Published: " + document.lastModified);
                     to be indexed literally.
                 </p>
 <p>See the <a href="http://lucene.apache.org/java/docs/api/org/apache/lucene/document/Field.html">Field</a> java docs for more information on Fields.</p>
-<a name="N1007E"></a><a name="Segments"></a>
+<a name="N10074"></a><a name="Segments"></a>
 <h3 class="boxed">Segments</h3>
 <p>
                     Lucene indexes may be composed of multiple sub-indexes, or
@@ -504,7 +507,7 @@ document.write("Last Published: " + document.lastModified);
                     Searches may involve multiple segments and/or multiple indexes, each
                     index potentially composed of a set of segments.
                 </p>
-<a name="N1009C"></a><a name="Document Numbers"></a>
+<a name="N10092"></a><a name="Document Numbers"></a>
 <h3 class="boxed">Document Numbers</h3>
 <p>
                     Internally, Lucene refers to documents by an integer <i>document
@@ -559,7 +562,7 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N100C3"></a><a name="Overview"></a>
+<a name="N100B9"></a><a name="Overview"></a>
 <h2 class="boxed">Overview</h2>
 <div class="section">
 <p>
@@ -658,7 +661,7 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N10106"></a><a name="File Naming"></a>
+<a name="N100FC"></a><a name="File Naming"></a>
 <h2 class="boxed">File Naming</h2>
 <div class="section">
 <p>
@@ -684,12 +687,153 @@ document.write("Last Published: " + document.lastModified);
                 form.
             </p>
 </div>
+      
+<a name="N1010B"></a><a name="file-names"></a>
+<h2 class="boxed">Summary of File Extensions</h2>
+<div class="section">
+<p>The following table summarizes the names and extensions of the files in Lucene:
+          <table class="ForrestTable" cellspacing="1" cellpadding="4">
+            
+<tr>
+              
+<th>Name</th>
+              <th>Extension</th>
+              <th>Brief Description</th>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#Segments File">Segments File</a></td>
+              <td>segments.gen, segments_N</td>
+              <td>Stores information about segments</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#Lock File">Lock File</a></td>
+              <td>write.lock</td>
+              <td>The Write lock prevents multiple IndexWriters from writing to the same file.</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#Compound Files">Compound File</a></td>
+              <td>.cfs</td>
+              <td>An optional "virtual" file consisting of all the other index files for systems
+              that frequently run out of file handles.</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#Fields">Fields</a></td>
+              <td>.fnm</td>
+              <td>Stores information about the fields</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#field_index">Field Index</a></td>
+              <td>.fdx</td>
+              <td>Contains pointers to field data</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#field_data">Field Data</a></td>
+              <td>.fdt</td>
+              <td>The stored fields for documents</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#tis">Term Infos</a></td>
+              <td>.tis</td>
+              <td>Part of the term dictionary, stores term info</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#tii">Term Info Index</a></td>
+              <td>.tii</td>
+              <td>The index into the Term Infos file</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#Frequencies">Frequencies</a></td>
+              <td>.frq</td>
+              <td>Contains the list of docs which contain each term along with frequency</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#Positions">Positions</a></td>
+              <td>.prx</td>
+              <td>Stores position information about where a term occurs in the index</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#Normalization Factors">Norms</a></td>
+              <td>.nrm (pre 2.1: .f[0-9]*)</td>
+              <td>Encodes length and boost factors for docs and fields</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#tvx">Term Vector Index</a></td>
+              <td>.tvx</td>
+              <td>Stores offset into the document data file</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#tvd">Term Vector Documents</a></td>
+              <td>.tvd</td>
+              <td>Contains information about each document that has term vectors</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#tvf">Term Vector Fields</a></td>
+              <td>.tvf</td>
+              <td>The field level info about term vectors</td>
+            
+</tr>
+            
+<tr>
+              
+<td><a href="#Deleted Documents">Deleted Documents</a></td>
+              <td>.del</td>
+              <td>Info about what files are deleted</td>
+            
+</tr>
+          
+</table>
+
+        
+</p>
+</div>
 
         
-<a name="N10115"></a><a name="Primitive Types"></a>
+<a name="N101F5"></a><a name="Primitive Types"></a>
 <h2 class="boxed">Primitive Types</h2>
 <div class="section">
-<a name="N1011A"></a><a name="Byte"></a>
+<a name="N101FA"></a><a name="Byte"></a>
 <h3 class="boxed">Byte</h3>
 <p>
                     The most primitive type
@@ -697,7 +841,7 @@ document.write("Last Published: " + document.lastModified);
                     other data types are defined as sequences
                     of bytes, so file formats are byte-order independent.
                 </p>
-<a name="N10123"></a><a name="UInt32"></a>
+<a name="N10203"></a><a name="UInt32"></a>
 <h3 class="boxed">UInt32</h3>
 <p>
                     32-bit unsigned integers are written as four
@@ -707,7 +851,7 @@ document.write("Last Published: " + document.lastModified);
                     UInt32    --&gt; &lt;Byte&gt;<sup>4</sup>
                 
 </p>
-<a name="N10132"></a><a name="Uint64"></a>
+<a name="N10212"></a><a name="Uint64"></a>
 <h3 class="boxed">Uint64</h3>
 <p>
                     64-bit unsigned integers are written as eight
@@ -716,7 +860,7 @@ document.write("Last Published: " + document.lastModified);
 <p>UInt64    --&gt; &lt;Byte&gt;<sup>8</sup>
                 
 </p>
-<a name="N10141"></a><a name="VInt"></a>
+<a name="N10221"></a><a name="VInt"></a>
 <h3 class="boxed">VInt</h3>
 <p>
                     A variable-length format for positive integers is
@@ -1266,13 +1410,13 @@ document.write("Last Published: " + document.lastModified);
                     This provides compression while still being
                     efficient to decode.
                 </p>
-<a name="N10426"></a><a name="Chars"></a>
+<a name="N10506"></a><a name="Chars"></a>
 <h3 class="boxed">Chars</h3>
 <p>
                     Lucene writes unicode
                     character sequences as UTF-8 encoded bytes.
                 </p>
-<a name="N1042F"></a><a name="String"></a>
+<a name="N1050F"></a><a name="String"></a>
 <h3 class="boxed">String</h3>
 <p>
 		    Lucene writes strings as UTF-8 encoded bytes.
@@ -1285,10 +1429,10 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N1043C"></a><a name="Compound Types"></a>
+<a name="N1051C"></a><a name="Compound Types"></a>
 <h2 class="boxed">Compound Types</h2>
 <div class="section">
-<a name="N10441"></a><a name="MapStringString"></a>
+<a name="N10521"></a><a name="MapStringString"></a>
 <h3 class="boxed">Map&lt;String,String&gt;</h3>
 <p>
 		    In a couple places Lucene stores a Map
@@ -1301,13 +1445,13 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N10451"></a><a name="Per-Index Files"></a>
+<a name="N10531"></a><a name="Per-Index Files"></a>
 <h2 class="boxed">Per-Index Files</h2>
 <div class="section">
 <p>
                 The files in this section exist one-per-index.
             </p>
-<a name="N10459"></a><a name="Segments File"></a>
+<a name="N10539"></a><a name="Segments File"></a>
 <h3 class="boxed">Segments File</h3>
 <p>
                     The active segments in the index are stored in the
@@ -1504,7 +1648,7 @@ document.write("Last Published: " + document.lastModified);
 		    Lucene version, OS, Java version, why the segment
 		    was created (merge, flush, addIndexes), etc.
                 </p>
-<a name="N1050B"></a><a name="Lock File"></a>
+<a name="N105EB"></a><a name="Lock File"></a>
 <h3 class="boxed">Lock File</h3>
 <p>
                     The write lock, which is stored in the index
@@ -1522,7 +1666,7 @@ document.write("Last Published: " + document.lastModified);
                     Note that prior to version 2.1, Lucene also used a
                     commit lock. This was removed in 2.1.
                 </p>
-<a name="N10517"></a><a name="Deletable File"></a>
+<a name="N105F7"></a><a name="Deletable File"></a>
 <h3 class="boxed">Deletable File</h3>
 <p>
                     Prior to Lucene 2.1 there was a file "deletable"
@@ -1531,7 +1675,7 @@ document.write("Last Published: " + document.lastModified);
                     the files that are deletable, instead, so no file
                     is written.
                 </p>
-<a name="N10520"></a><a name="Compound Files"></a>
+<a name="N10600"></a><a name="Compound Files"></a>
 <h3 class="boxed">Compound Files</h3>
 <p>Starting with Lucene 1.4 the compound file format became default. This
                     is simply a container for all files described in the next section
@@ -1558,14 +1702,14 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N10548"></a><a name="Per-Segment Files"></a>
+<a name="N10628"></a><a name="Per-Segment Files"></a>
 <h2 class="boxed">Per-Segment Files</h2>
 <div class="section">
 <p>
                 The remaining files are all per-segment, and are
                 thus defined by suffix.
             </p>
-<a name="N10550"></a><a name="Fields"></a>
+<a name="N10630"></a><a name="Fields"></a>
 <h3 class="boxed">Fields</h3>
 <p>
                     
@@ -1652,6 +1796,7 @@ document.write("Last Published: " + document.lastModified);
 <ol>
                     
 <li>
+<a name="field_index"></a>
                         
 <p>
                             The field index, or .fdx file.
@@ -1695,6 +1840,7 @@ document.write("Last Published: " + document.lastModified);
 <li>
                         
 <p>
+<a name="field_data"></a>
                             The field data, or .fdt file.
 
                         </p>
@@ -1787,7 +1933,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N1060E"></a><a name="Term Dictionary"></a>
+<a name="N106F2"></a><a name="Term Dictionary"></a>
 <h3 class="boxed">Term Dictionary</h3>
 <p>
                     The term dictionary is represented as two files:
@@ -1795,6 +1941,7 @@ document.write("Last Published: " + document.lastModified);
 <ol>
                     
 <li>
+<a name="tis"></a>
                         
 <p>
                             The term infos, or tis file.
@@ -1908,6 +2055,7 @@ document.write("Last Published: " + document.lastModified);
 <li>
                         
 <p>
+<a name="tii"></a>
                             The term info index, or .tii file.
                         </p>
 
@@ -1977,7 +2125,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N1068E"></a><a name="Frequencies"></a>
+<a name="N10776"></a><a name="Frequencies"></a>
 <h3 class="boxed">Frequencies</h3>
 <p>
                     The .frq file contains the lists of documents
@@ -2105,7 +2253,7 @@ document.write("Last Published: " + document.lastModified);
                    entry in level-1. In the example has entry 15 on level 1 a pointer to entry 15 on level 0 and entry 31 on level 1 a pointer
                    to entry 31 on level 0.                   
                 </p>
-<a name="N10716"></a><a name="Positions"></a>
+<a name="N107FE"></a><a name="Positions"></a>
 <h3 class="boxed">Positions</h3>
 <p>
                     The .prx file contains the lists of positions that
@@ -2175,7 +2323,7 @@ document.write("Last Published: " + document.lastModified);
                     Payload. If PayloadLength is not stored, then this Payload has the same
                     length as the Payload at the previous position.
                 </p>
-<a name="N10752"></a><a name="Normalization Factors"></a>
+<a name="N1083A"></a><a name="Normalization Factors"></a>
 <h3 class="boxed">Normalization Factors</h3>
 <p>
                     
@@ -2279,7 +2427,7 @@ document.write("Last Published: " + document.lastModified);
 <b>2.1 and above:</b>
                     Separate norm files are created (when adequate) for both compound and non compound segments.
                 </p>
-<a name="N107BB"></a><a name="Term Vectors"></a>
+<a name="N108A3"></a><a name="Term Vectors"></a>
 <h3 class="boxed">Term Vectors</h3>
 <p>
 		  Term Vector support is an optional on a field by
@@ -2288,6 +2436,7 @@ document.write("Last Published: " + document.lastModified);
 <ol>
                     
 <li>
+<a name="tvx"></a>
                         
 <p>The Document Index or .tvx file.</p>
                         
@@ -2312,6 +2461,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                     
 <li>
+<a name="tvd"></a>
                         
 <p>The Document or .tvd file.</p>
                         
@@ -2349,6 +2499,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                     
 <li>
+<a name="tvf"></a>
                         
 <p>The Field or .tvf file.</p>
                         
@@ -2412,7 +2563,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N10851"></a><a name="Deleted Documents"></a>
+<a name="N1093F"></a><a name="Deleted Documents"></a>
 <h3 class="boxed">Deleted Documents</h3>
 <p>The .del file is
                     optional, and only exists when a segment contains deletions.
@@ -2484,7 +2635,7 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N10894"></a><a name="Limitations"></a>
+<a name="N10982"></a><a name="Limitations"></a>
 <h2 class="boxed">Limitations</h2>
 <div class="section">
 <p>
diff --git a/docs/fileformats.pdf b/docs/fileformats.pdf
index eb2a10f..fb92330 100644
--- a/docs/fileformats.pdf
+++ b/docs/fileformats.pdf
@@ -1,7 +1,5 @@
 Apache Lucene - Index File Formats
 
-by Doug Cutting
-
 Table of contents
 
    1 Index File Formats............................................................................................................. 3
@@ -12,33 +10,34 @@ Table of contents
     2.4 Document Numbers.......................................................................................................4
    3 Overview............................................................................................................................5
    4 File Naming....................................................................................................................... 6
-   5 Primitive Types.................................................................................................................. 6
-    5.1 Byte................................................................................................................................6
-    5.2 UInt32............................................................................................................................6
-    5.3 Uint64............................................................................................................................ 6
-    5.4 VInt................................................................................................................................6
-    5.5 Chars..............................................................................................................................7
-    5.6 String............................................................................................................................. 7
-   6 Compound Types............................................................................................................... 8
-    6.1 Map<String,String>.......................................................................................................8
-   7 Per-Index Files................................................................................................................... 8
-    7.1 Segments File................................................................................................................ 8
-    7.2 Lock File......................................................................................................................10
-    7.3 Deletable File...............................................................................................................11
-    7.4 Compound Files...........................................................................................................11
+   5 Summary of File Extensions.............................................................................................. 6
+   6 Primitive Types.................................................................................................................. 7
+    6.1 Byte................................................................................................................................7
+    6.2 UInt32............................................................................................................................7
+    6.3 Uint64............................................................................................................................ 7
+    6.4 VInt................................................................................................................................7
+    6.5 Chars..............................................................................................................................8
+    6.6 String............................................................................................................................. 9
+   7 Compound Types............................................................................................................... 9
+    7.1 Map<String,String>.......................................................................................................9
+   8 Per-Index Files................................................................................................................... 9
+    8.1 Segments File................................................................................................................ 9
+    8.2 Lock File......................................................................................................................11
+    8.3 Deletable File...............................................................................................................12
+    8.4 Compound Files...........................................................................................................12
+   9 Per-Segment Files............................................................................................................ 12
 
                    Copyright © 2006 The Apache Software Foundation. All rights reserved.
                                                                                                             Apache Lucene - Index File Formats
 
-8 Per-Segment Files............................................................................................................ 11
- 8.1 Fields........................................................................................................................... 11
- 8.2 Term Dictionary.......................................................................................................... 13
- 8.3 Frequencies..................................................................................................................15
- 8.4 Positions...................................................................................................................... 16
- 8.5 Normalization Factors................................................................................................. 17
- 8.6 Term Vectors............................................................................................................... 18
- 8.7 Deleted Documents..................................................................................................... 20
-9 Limitations....................................................................................................................... 21
+ 9.1 Fields........................................................................................................................... 12
+ 9.2 Term Dictionary.......................................................................................................... 14
+ 9.3 Frequencies..................................................................................................................16
+ 9.4 Positions...................................................................................................................... 18
+ 9.5 Normalization Factors................................................................................................. 18
+ 9.6 Term Vectors............................................................................................................... 19
+ 9.7 Deleted Documents..................................................................................................... 21
+10 Limitations..................................................................................................................... 22
 
                                                                        Page 2
 
@@ -181,7 +180,7 @@ Details on each of these are provided in subsequent sections.
 Page 5
 
         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
+                                             Apache Lucene - Index File Formats
 
 4. File Naming
 
@@ -199,41 +198,96 @@ never before used filename. This is achieved using a simple generations approach
 example, the first segments file is segments_1, then segments_2, etc. The generation is a
 sequential long integer represented in alpha-numeric (base 36) form.
 
-5. Primitive Types
+5. Summary of File Extensions
+
+The following table summarizes the names and extensions of the files in Lucene:
+
+             Name              Extension     Brief Description
+
+Segments File      segments.gen, segments_N  Stores information about
+                                             segments
+
+Lock File          write.lock                The Write lock prevents
+                                             multiple IndexWriters from
+                                             writing to the same file.
+
+Compound File      .cfs                      An optional "virtual" file
+                                             consisting of all the other index
+                                             files for systems that frequently
+                                             run out of file handles.
+
+Fields             .fnm                      Stores information about the
+                                             fields
+
+Field Index        .fdx                      Contains pointers to field data
+
+Field Data         .fdt                      The stored fields for documents
+
+Term Infos         .tis                      Part of the term dictionary,
+                                             stores term info
+
+Term Info Index    .tii                      The index into the Term Infos
+                                             file
+
+                                                                                    Page 6
 
-5.1. Byte
+             Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
+Frequencies                         .frq                      Contains the list of docs which
+                                                              contain each term along with
+Positions                           .prx                      frequency
+
+Norms                               .nrm (pre 2.1: .f[0-9]*)  Stores position information
+Term Vector Index                   .tvx                      about where a term occurs in
+Term Vector Documents               .tvd                      the index
+
+Term Vector Fields                  .tvf                      Encodes length and boost
+Deleted Documents                   .del                      factors for docs and fields
+
+                                                              Stores offset into the document
+                                                              data file
+
+                                                              Contains information about
+                                                              each document that has term
+                                                              vectors
 
+                                                              The field level info about term
+                                                              vectors
+
+                                                              Info about what files are
+                                                              deleted
+
+6. Primitive Types
+
+6.1. Byte
 The most primitive type is an eight-bit byte. Files are accessed as sequences of bytes. All
 other data types are defined as sequences of bytes, so file formats are byte-order independent.
 
-5.2. UInt32
-
+6.2. UInt32
 32-bit unsigned integers are written as four bytes, high-order bytes first.
-
 UInt32 --> <Byte>4
 
-5.3. Uint64
-
+6.3. Uint64
 64-bit unsigned integers are written as eight bytes, high-order bytes first.
-
 UInt64 --> <Byte>8
 
-5.4. VInt
+6.4. VInt
+
+Page 7
+
+        Copyright © 2006 The Apache Software Foundation. All rights reserved.
+                                                                  Apache Lucene - Index File Formats
 
 A variable-length format for positive integers is defined where the high-order bit of each byte
 indicates whether more bytes remain to be read. The low-order seven bits are appended as
 increasingly more significant bits in the resulting integer value. Thus values from zero to 127
 may be stored in a single byte, values from 128 to 16,383 may be stored in two bytes, and so
-
-                                                                       Page 6
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 on.
+
 VInt Encoding Example
 
-Value                  First byte   Second byte                    Third byte
+Value       First byte  Second byte                               Third byte
 
 0 00000000
 
@@ -245,52 +299,53 @@ Value                  First byte   Second byte                    Third byte
 
 127 01111111
 
-128                    10000000     00000001
+128         10000000    00000001
 
-129                    10000001     00000001
+129         10000001    00000001
 
-130                    10000010     00000001
+130         10000010    00000001
 
 ...
 
-16,383                 11111111     01111111
+16,383      11111111    01111111
 
-16,384                 10000000     10000000                       00000001
+16,384      10000000    10000000                                  00000001
 
-16,385                 10000001     10000000                       00000001
+16,385      10000001    10000000                                  00000001
 
  ...
 
 This provides compression while still being efficient to decode.
 
-5.5. Chars
-Lucene writes unicode character sequences as UTF-8 encoded bytes.
+6.5. Chars
 
-5.6. String
+                                                                                   Page 8
 
-Page 7
-
-             Copyright © 2006 The Apache Software Foundation. All rights reserved.
+            Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+Lucene writes unicode character sequences as UTF-8 encoded bytes.
+
+6.6. String
+
 Lucene writes strings as UTF-8 encoded bytes. First the length, in bytes, is written as a VInt,
 followed by the bytes.
 
 String --> VInt, Chars
 
-6. Compound Types
+7. Compound Types
 
-6.1. Map<String,String>
+7.1. Map<String,String>
 
 In a couple places Lucene stores a Map String->String.
 
 Map<String,String> --> Count<String,String>Count
 
-7. Per-Index Files
+8. Per-Index Files
 
 The files in this section exist one-per-index.
 
-7.1. Segments File
+8.1. Segments File
 
 The active segments in the index are stored in the segment info file, segments_N. There may
 be one or more segments_N files in the index; however, the one with the largest generation is
@@ -311,16 +366,16 @@ SegCount
 
 2.1 and above: Segments --> Format, Version, NameCounter, SegCount, <SegName,
 SegSize, DelGen, HasSingleNormFile, NumField, NormGenNumField,
-IsCompoundFile>SegCount
 
-2.3: Segments --> Format, Version, NameCounter, SegCount, <SegName, SegSize, DelGen,
-DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile,
-
-                                                                       Page 8
+Page 9
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
+        Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+IsCompoundFile>SegCount
+
+2.3: Segments --> Format, Version, NameCounter, SegCount, <SegName, SegSize, DelGen,
+DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile,
 NumField, NormGenNumField, IsCompoundFile>SegCount
 
 2.4 and above: Segments --> Format, Version, NameCounter, SegCount, <SegName,
@@ -364,15 +419,14 @@ DelGen is the generation count of the separate deletes file. If this is -1, ther
 deletes. If it is 0, this is a pre-2.1 segment and you must check filesystem for the existence of
 _X.del. Anything above zero means there are separate deletes (_X_N.del).
 
-NumField is the size of the array for NormGen, or -1 if there are no NormGens stored.
-
-NormGen records the generation of the separate norms files. If NumField is -1, there are no
-
-Page 9
+                                                                       Page 10
 
-        Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+NumField is the size of the array for NormGen, or -1 if there are no NormGens stored.
+
+NormGen records the generation of the separate norms files. If NumField is -1, there are no
 normGens stored and they are all assumed to be 0 when the segment file was written pre-2.1
 and all assumed to be -1 when the segments file is 2.1 or above. The generation then has the
 same meaning as delGen (above).
@@ -409,28 +463,28 @@ The Diagnostics Map is privately written by IndexWriter, as a debugging aid, for
 segment it creates. It includes metadata like the current Lucene version, OS, Java version,
 why the segment was created (merge, flush, addIndexes), etc.
 
-7.2. Lock File
+8.2. Lock File
 
 The write lock, which is stored in the index directory by default, is named "write.lock". If the
 lock directory is different from the index directory then the write lock will be named
 "XXXX-write.lock" where XXXX is a unique prefix derived from the full path to the index
-directory. When this file is present, a writer is currently modifying the index (adding or
-removing documents). This lock file ensures that only one writer is modifying the index at a
 
-                                                                       Page 10
+Page 11
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+directory. When this file is present, a writer is currently modifying the index (adding or
+removing documents). This lock file ensures that only one writer is modifying the index at a
 time.
 Note that prior to version 2.1, Lucene also used a commit lock. This was removed in 2.1.
 
-7.3. Deletable File
+8.3. Deletable File
 Prior to Lucene 2.1 there was a file "deletable" that contained details about files that need to
 be deleted. As of 2.1, a writer dynamically computes the files that are deletable, instead, so
 no file is written.
 
-7.4. Compound Files
+8.4. Compound Files
 Starting with Lucene 1.4 the compound file format became default. This is simply a container
 for all files described in the next section (except for the .del file).
 Compound (.cfs) --> FileCount, <DataOffset, FileName> FileCount , FileData FileCount
@@ -444,21 +498,21 @@ in a single set of files for more than one segment. When compound file is enable
 shared files will be added into a single compound file (same format as above) but with the
 extension .cfx.
 
-8. Per-Segment Files
+9. Per-Segment Files
 
 The remaining files are all per-segment, and are thus defined by suffix.
 
-8.1. Fields
+9.1. Fields
 Field Info
 Field names are stored in the field info file, with suffix .fnm.
-FieldInfos (.fnm) --> FNMVersion,FieldsCount, <FieldName, FieldBits> FieldsCount
-FNMVersion, FieldsCount --> VInt
 
-Page 11
+                                                                       Page 12
 
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+FieldInfos (.fnm) --> FNMVersion,FieldsCount, <FieldName, FieldBits> FieldsCount
+FNMVersion, FieldsCount --> VInt
 FieldName --> String
 FieldBits --> Byte
 
@@ -485,17 +539,16 @@ Stored fields are represented by two files:
     Lucene <= 1.4:
     Bits --> Byte
     Value --> String
-    Only the low-order bit of Bits is used. It is one for tokenized fields, and zero for
-    non-tokenized fields.
-    Lucene >= 1.9:
 
-                                                                       Page 12
+Page 13
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+    Only the low-order bit of Bits is used. It is one for tokenized fields, and zero for
+    non-tokenized fields.
+    Lucene >= 1.9:
     Bits --> Byte
-
     ?? low order bit is one for tokenized fields
     ?? second bit is one for fields containing binary data
     ?? third bit is one for fields with compression option enabled (if compression is enabled,
@@ -503,49 +556,36 @@ Copyright © 2006 The Apache Software Foundation. All rights reserved.
          the algorithm used is ZLIB)
 
     Value --> String | BinaryValue (depending on Bits)
-
     BinaryValue --> ValueSize, <Byte>^ValueSize
-
     ValueSize --> VInt
 
-8.2. Term Dictionary
-
+9.2. Term Dictionary
 The term dictionary is represented as two files:
 1. The term infos, or tis file.
 
     TermInfoFile (.tis)--> TIVersion, TermCount, IndexInterval, SkipInterval,
     MaxSkipLevels, TermInfos
-
     TIVersion --> UInt32
-
     TermCount --> UInt64
-
     IndexInterval --> UInt32
-
     SkipInterval --> UInt32
-
     MaxSkipLevels --> UInt32
-
     TermInfos --> <TermInfo> TermCount
-
     TermInfo --> <Term, DocFreq, FreqDelta, ProxDelta, SkipDelta>
-
     Term --> <PrefixLength, Suffix, FieldNum>
-
     Suffix --> String
-
     PrefixLength, DocFreq, FreqDelta, ProxDelta, SkipDelta
     --> VInt
 
+                                                                       Page 14
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
     This file is sorted by Term. Terms are ordered first lexicographically (by UTF16
     character code) by the term's field name, and within that lexicographically (by UTF16
     character code) by the term's text.
 
-Page 13
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
     TIVersion names the version of the format of this file and is -2 in Lucene 1.4.
 
     Term text prefixes are shared. The PrefixLength is the number of initial characters from
@@ -588,14 +628,14 @@ Page 13
 
     IndexInterval --> UInt32
 
-    SkipInterval --> UInt32
+Page 15
 
-    TermIndices --> <TermInfo, IndexDelta> IndexTermCount
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
 
-                                                                       Page 14
+    SkipInterval --> UInt32
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
+    TermIndices --> <TermInfo, IndexDelta> IndexTermCount
 
     IndexDelta --> VLong
 
@@ -613,7 +653,7 @@ Copyright © 2006 The Apache Software Foundation. All rights reserved.
     larger indexes but greater acceleration. See format of .frq file for more information about
     skip levels.
 
-8.3. Frequencies
+9.3. Frequencies
 
 The .frq file contains the lists of documents which contain each term, along with the
 frequency of the term in that document (if omitTf is false).
@@ -639,16 +679,16 @@ TermFreqs are ordered by term (the term is implicit, from the .tis file).
 TermFreq entries are ordered by increasing document number.
 
 DocDelta: if omitTf is false, this determines both the document number and the frequency. In
-particular, DocDelta/2 is the difference between this document number and the previous
-document number (or zero when this is the first document in a TermFreqs). When DocDelta
-is odd, the frequency is one. When DocDelta is even, the frequency is read as another VInt. If
-omitTf is true, DocDelta contains the gap (not multiplied by 2) between document numbers
 
-Page 15
+                                                                       Page 16
 
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+particular, DocDelta/2 is the difference between this document number and the previous
+document number (or zero when this is the first document in a TermFreqs). When DocDelta
+is odd, the frequency is one. When DocDelta is even, the frequency is read as another VInt. If
+omitTf is true, DocDelta contains the gap (not multiplied by 2) between document numbers
 and no frequency information is stored.
 
 For example, the TermFreqs for a term which occurs once in document seven and three times
@@ -689,15 +729,14 @@ The SkipData entries on all upper levels > 0 contain a SkipChildLevelPointer ref
 corresponding SkipData entry in level-1. In the example has entry 15 on level 1 a pointer to
 entry 15 on level 0 and entry 31 on level 1 a pointer to entry 31 on level 0.
 
-8.4. Positions
-
-The .prx file contains the lists of positions that each term occurs at within documents. Note
-
-                                                                       Page 16
+Page 17
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+9.4. Positions
+
+The .prx file contains the lists of positions that each term occurs at within documents. Note
 that fields with omitTf true do not store anything into this file, and if all fields in the index
 have omitTf true then the .prx file will not exist.
 
@@ -737,19 +776,20 @@ PayloadData is metadata associated with the current term position. If PayloadLen
 at the current position, then it indicates the length of this Payload. If PayloadLength is not
 stored, then this Payload has the same length as the Payload at the previous position.
 
-8.5. Normalization Factors
+9.5. Normalization Factors
 
 Pre-2.1: There's a norm file for each indexed field with a byte for each document. The
+
+                                                                       Page 18
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 .f[0-9]* file contains, for each document, a byte that encodes a value that is multiplied into
 the score for hits on that field:
 
 Norms (.f[0-9]*) --> <Byte> SegSize
 
-Page 17
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 2.1 and above: There's a single .nrm file containing all norms:
 
 AllNorms (.nrm) --> NormsHeader,<Norms> NumFieldsWithNorms
@@ -781,7 +821,7 @@ Pre-2.1: Separate norm files are created only for compound segments.
 2.1 and above: Separate norm files are created (when adequate) for both compound and non
 compound segments.
 
-8.6. Term Vectors
+9.6. Term Vectors
 
 Term Vector support is an optional on a field by field basis. It consists of 3 files.
 1. The Document Index or .tvx file.
@@ -789,20 +829,16 @@ Term Vector support is an optional on a field by field basis. It consists of 3 f
     For each document, this stores the offset into the document data (.tvd) and field data (.tvf)
     files.
 
-    DocumentIndex (.tvx) --> TVXVersion<DocumentPosition,FieldPosition> NumDocs
-
-    TVXVersion --> Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)
-
-    DocumentPosition --> UInt64 (offset in the .tvd file)
-
-                                                                       Page 18
+Page 19
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+    DocumentIndex (.tvx) --> TVXVersion<DocumentPosition,FieldPosition> NumDocs
+    TVXVersion --> Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)
+    DocumentPosition --> UInt64 (offset in the .tvd file)
     FieldPosition --> UInt64 (offset in the .tvf file)
 2. The Document or .tvd file.
-
     This contains, for each document, the number of fields, a list of the fields with term
     vector info and finally a list of pointers to the field information in the .tvf (Term Vector
     Fields) file.
@@ -825,15 +861,18 @@ Copyright © 2006 The Apache Software Foundation. All rights reserved.
     TermFreqs --> <TermText, TermFreq, Positions?, Offsets?> NumTerms
     TermText --> <PrefixLength, Suffix>
     PrefixLength --> VInt
-    Suffix --> String
-    TermFreq --> VInt
-    Positions --> <VInt>TermFreq
 
-Page 19
+                                                                       Page 20
 
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
+    Suffix --> String
+
+    TermFreq --> VInt
+
+    Positions --> <VInt>TermFreq
+
     Offsets --> <VInt, VInt>TermFreq
 
     Notes:
@@ -850,7 +889,7 @@ Page 19
     ?? Offsets are stored as delta encoded VInts. The first VInt is the startOffset, the second
          is the endOffset.
 
-8.7. Deleted Documents
+9.7. Deleted Documents
 
 The .del file is optional, and only exists when a segment contains deletions.
 
@@ -876,36 +915,39 @@ excluded.
 
 ByteCount indicates the number of bytes in Bits. It is typically (SegSize/8)+1.
 
+Page 21
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+                                                                                                                Apache Lucene - Index File Formats
+
 BitCount indicates the number of bits that are currently set in Bits.
 
 Bits contains one bit for each document indexed. When the bit corresponding to a document
 number is set, that document is marked as deleted. Bit ordering is from least to most
 significant. Thus, if Bits contains two bytes, 0x00 and 0x02, then document 9 is marked as
-
-                                                                       Page 20
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 deleted.
+
 DGaps represents sparse bit-vectors more efficiently than Bits. It is made of DGaps on
 indexes of nonzero bytes in Bits, and the nonzero bytes themselves. The number of nonzero
 bytes in Bits (NonzeroBytesCount) is not stored.
+
 For example, if there are 8000 bits and only bits 10,12,32 are set, DGaps would be used:
+
 (VInt) 1 , (byte) 20 , (VInt) 3 , (Byte) 1
 
-9. Limitations
+10. Limitations
 
 When referring to term numbers, Lucene's current implementation uses a Java int, which
 means the maximum number of unique terms in any single index segment is 2,147,483,648.
 This is technically not a limitation of the index file format, just of Lucene's current
 implementation.
+
 Similarly, Lucene uses a Java int to refer to document numbers, and the index file format
 uses an Int32 on-disk to store document numbers. This is a limitation of both the index file
 format and the current implementation. Eventually these should be replaced with either
 UInt64 values, or better yet, VInt values which have no limit.
 
-Page 21
+                                                                       Page 22
 
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
 
\ No newline at end of file
diff --git a/docs/lucene-sandbox/index.html b/docs/lucene-sandbox/index.html
index e075c44..906e469 100644
--- a/docs/lucene-sandbox/index.html
+++ b/docs/lucene-sandbox/index.html
@@ -168,7 +168,7 @@ document.write("Last Published: " + document.lastModified);
 <a href="../api/contrib-queries/index.html">Queries</a>
 </div>
 <div class="menuitem">
-<a href="../api/contrib-queryparser/index.html">QueryParser</a>
+<a href="../api/contrib-queryparser/index.html">Query Parser Framework</a>
 </div>
 <div class="menuitem">
 <a href="../api/contrib-regex/index.html">Regex</a>
diff --git a/docs/skin/basic.css b/docs/skin/basic.css
index 4ed58b9..eb24c32 100644
--- a/docs/skin/basic.css
+++ b/docs/skin/basic.css
@@ -163,4 +163,4 @@ p {
 .codefrag {
   font-family: "Courier New", Courier, monospace;
   font-size: 110%;
-}
+}
\ No newline at end of file
diff --git a/docs/skin/images/rc-b-l-15-1body-2menu-3menu.png b/docs/skin/images/rc-b-l-15-1body-2menu-3menu.png
index cdb460a..dd790d3 100644
Binary files a/docs/skin/images/rc-b-l-15-1body-2menu-3menu.png and b/docs/skin/images/rc-b-l-15-1body-2menu-3menu.png differ
diff --git a/docs/skin/images/rc-b-r-15-1body-2menu-3menu.png b/docs/skin/images/rc-b-r-15-1body-2menu-3menu.png
index 3eff254..790f43f 100644
Binary files a/docs/skin/images/rc-b-r-15-1body-2menu-3menu.png and b/docs/skin/images/rc-b-r-15-1body-2menu-3menu.png differ
diff --git a/docs/skin/images/rc-b-r-5-1header-2tab-selected-3tab-selected.png b/docs/skin/images/rc-b-r-5-1header-2tab-selected-3tab-selected.png
index b175f27..1987c0a 100644
Binary files a/docs/skin/images/rc-b-r-5-1header-2tab-selected-3tab-selected.png and b/docs/skin/images/rc-b-r-5-1header-2tab-selected-3tab-selected.png differ
diff --git a/docs/skin/images/rc-t-l-5-1header-2searchbox-3searchbox.png b/docs/skin/images/rc-t-l-5-1header-2searchbox-3searchbox.png
index e9f4440..b69812a 100644
Binary files a/docs/skin/images/rc-t-l-5-1header-2searchbox-3searchbox.png and b/docs/skin/images/rc-t-l-5-1header-2searchbox-3searchbox.png differ
diff --git a/docs/skin/images/rc-t-l-5-1header-2tab-selected-3tab-selected.png b/docs/skin/images/rc-t-l-5-1header-2tab-selected-3tab-selected.png
index f1e015b..07e5ebe 100644
Binary files a/docs/skin/images/rc-t-l-5-1header-2tab-selected-3tab-selected.png and b/docs/skin/images/rc-t-l-5-1header-2tab-selected-3tab-selected.png differ
diff --git a/docs/skin/images/rc-t-l-5-1header-2tab-unselected-3tab-unselected.png b/docs/skin/images/rc-t-l-5-1header-2tab-unselected-3tab-unselected.png
index e9f4440..b69812a 100644
Binary files a/docs/skin/images/rc-t-l-5-1header-2tab-unselected-3tab-unselected.png and b/docs/skin/images/rc-t-l-5-1header-2tab-unselected-3tab-unselected.png differ
diff --git a/docs/skin/images/rc-t-r-15-1body-2menu-3menu.png b/docs/skin/images/rc-t-r-15-1body-2menu-3menu.png
index 29388b5..5e44a80 100644
Binary files a/docs/skin/images/rc-t-r-15-1body-2menu-3menu.png and b/docs/skin/images/rc-t-r-15-1body-2menu-3menu.png differ
diff --git a/docs/skin/images/rc-t-r-5-1header-2searchbox-3searchbox.png b/docs/skin/images/rc-t-r-5-1header-2searchbox-3searchbox.png
index 944ed73..cbaea9c 100644
Binary files a/docs/skin/images/rc-t-r-5-1header-2searchbox-3searchbox.png and b/docs/skin/images/rc-t-r-5-1header-2searchbox-3searchbox.png differ
diff --git a/docs/skin/images/rc-t-r-5-1header-2tab-selected-3tab-selected.png b/docs/skin/images/rc-t-r-5-1header-2tab-selected-3tab-selected.png
index c4d4a8c..6fe87de 100644
Binary files a/docs/skin/images/rc-t-r-5-1header-2tab-selected-3tab-selected.png and b/docs/skin/images/rc-t-r-5-1header-2tab-selected-3tab-selected.png differ
diff --git a/docs/skin/images/rc-t-r-5-1header-2tab-unselected-3tab-unselected.png b/docs/skin/images/rc-t-r-5-1header-2tab-unselected-3tab-unselected.png
index 944ed73..cbaea9c 100644
Binary files a/docs/skin/images/rc-t-r-5-1header-2tab-unselected-3tab-unselected.png and b/docs/skin/images/rc-t-r-5-1header-2tab-unselected-3tab-unselected.png differ
diff --git a/docs/skin/print.css b/docs/skin/print.css
index 8916b9f..aaa9931 100644
--- a/docs/skin/print.css
+++ b/docs/skin/print.css
@@ -51,4 +51,4 @@ a:link, a:visited {
 
 acronym {
   border: 0;
-}
+}
\ No newline at end of file
diff --git a/docs/skin/profile.css b/docs/skin/profile.css
index ca72cdb..2ed9554 100644
--- a/docs/skin/profile.css
+++ b/docs/skin/profile.css
@@ -172,4 +172,4 @@ a:hover { color:#6587ff}
     }
       
     
-  
+  
\ No newline at end of file
diff --git a/docs/skin/screen.css b/docs/skin/screen.css
index aa8c457..c6084f8 100644
--- a/docs/skin/screen.css
+++ b/docs/skin/screen.css
@@ -584,4 +584,4 @@ p.instruction {
   list-style-image: url('../images/instruction_arrow.png');
   list-style-position: outside;
   margin-left: 2em;
-} 
+} 
\ No newline at end of file
diff --git a/src/site/src/documentation/content/xdocs/fileformats.xml b/src/site/src/documentation/content/xdocs/fileformats.xml
index 43f8337..2db4d78 100644
--- a/src/site/src/documentation/content/xdocs/fileformats.xml
+++ b/src/site/src/documentation/content/xdocs/fileformats.xml
@@ -7,12 +7,6 @@
         </title>
     </header>
 
-    <properties>
-        <authors>
-            <person email="cutting@apache.org" name="Doug Cutting"/>
-        </authors>
-    </properties>
-
     <body>
         <section id="Index File Formats"><title>Index File Formats</title>
 
@@ -312,6 +306,94 @@
             </p>
 
         </section>
+      <section id="file-names"><title>Summary of File Extensions</title>
+        <p>The following table summarizes the names and extensions of the files in Lucene:
+          <table>
+            <tr>
+              <th>Name</th>
+              <th>Extension</th>
+              <th>Brief Description</th>
+            </tr>
+            <tr>
+              <td><a href="#Segments File">Segments File</a></td>
+              <td>segments.gen, segments_N</td>
+              <td>Stores information about segments</td>
+            </tr>
+            <tr>
+              <td><a href="#Lock File">Lock File</a></td>
+              <td>write.lock</td>
+              <td>The Write lock prevents multiple IndexWriters from writing to the same file.</td>
+            </tr>
+            <tr>
+              <td><a href="#Compound Files">Compound File</a></td>
+              <td>.cfs</td>
+              <td>An optional "virtual" file consisting of all the other index files for systems
+              that frequently run out of file handles.</td>
+            </tr>
+            <tr>
+              <td><a href="#Fields">Fields</a></td>
+              <td>.fnm</td>
+              <td>Stores information about the fields</td>
+            </tr>
+            <tr>
+              <td><a href="#field_index">Field Index</a></td>
+              <td>.fdx</td>
+              <td>Contains pointers to field data</td>
+            </tr>
+            <tr>
+              <td><a href="#field_data">Field Data</a></td>
+              <td>.fdt</td>
+              <td>The stored fields for documents</td>
+            </tr>
+            <tr>
+              <td><a href="#tis">Term Infos</a></td>
+              <td>.tis</td>
+              <td>Part of the term dictionary, stores term info</td>
+            </tr>
+            <tr>
+              <td><a href="#tii">Term Info Index</a></td>
+              <td>.tii</td>
+              <td>The index into the Term Infos file</td>
+            </tr>
+            <tr>
+              <td><a href="#Frequencies">Frequencies</a></td>
+              <td>.frq</td>
+              <td>Contains the list of docs which contain each term along with frequency</td>
+            </tr>
+            <tr>
+              <td><a href="#Positions">Positions</a></td>
+              <td>.prx</td>
+              <td>Stores position information about where a term occurs in the index</td>
+            </tr>
+            <tr>
+              <td><a href="#Normalization Factors">Norms</a></td>
+              <td>.nrm (pre 2.1: .f[0-9]*)</td>
+              <td>Encodes length and boost factors for docs and fields</td>
+            </tr>
+            <tr>
+              <td><a href="#tvx">Term Vector Index</a></td>
+              <td>.tvx</td>
+              <td>Stores offset into the document data file</td>
+            </tr>
+            <tr>
+              <td><a href="#tvd">Term Vector Documents</a></td>
+              <td>.tvd</td>
+              <td>Contains information about each document that has term vectors</td>
+            </tr>
+            <tr>
+              <td><a href="#tvf">Term Vector Fields</a></td>
+              <td>.tvf</td>
+              <td>The field level info about term vectors</td>
+            </tr>
+            <tr>
+              <td><a href="#Deleted Documents">Deleted Documents</a></td>
+              <td>.del</td>
+              <td>Info about what files are deleted</td>
+            </tr>
+          </table>
+
+        </p>
+      </section>
 
         <section id="Primitive Types"><title>Primitive Types</title>
 
@@ -1145,7 +1227,7 @@
                 </p>
 
                 <ol>
-                    <li>
+                    <li><a name="field_index"/>
                         <p>
                             The field index, or .fdx file.
                         </p>
@@ -1179,7 +1261,7 @@
                         </p>
                     </li>
                     <li>
-                        <p>
+                        <p><a name="field_data"/>
                             The field data, or .fdt file.
 
                         </p>
@@ -1251,7 +1333,7 @@
                     The term dictionary is represented as two files:
                 </p>
                 <ol>
-                    <li>
+                    <li><a name="tis"/>
                         <p>
                             The term infos, or tis file.
                         </p>
@@ -1340,7 +1422,7 @@
                         </p>
                     </li>
                     <li>
-                        <p>
+                        <p><a name="tii"/>
                             The term info index, or .tii file.
                         </p>
 
@@ -1679,7 +1761,7 @@
                   field basis. It consists of 3 files.
                 </p>
                 <ol>
-                    <li>
+                    <li><a name="tvx"/>
                         <p>The Document Index or .tvx file.</p>
                         <p>For each document, this stores the offset
                            into the document data (.tvd) and field
@@ -1694,7 +1776,7 @@
                         <p>FieldPosition --&gt; UInt64 (offset in the
                         .tvf file)</p>
                     </li>
-                    <li>
+                    <li><a name="tvd"/>
                         <p>The Document or .tvd file.</p>
                         <p>This contains, for each document, the number of fields, a list of the fields with
                             term vector info and finally a list of pointers to the field information in the .tvf
@@ -1716,7 +1798,7 @@
                         <p>The .tvd file is used to map out the fields that have term vectors stored and
                             where the field information is in the .tvf file.</p>
                     </li>
-                    <li>
+                    <li><a name="tvf"/>
                         <p>The Field or .tvf file.</p>
                         <p>This file contains, for each field that has a term vector stored, a list of
                             the terms, their frequencies and, optionally, position and offest information.</p>

