GitDiffStart: 77041bf7ab014fd6cd19170fdee9f51b41647c0e | Fri Sep 19 15:25:59 2008 +0000
diff --git a/client/java/solrj/CHANGES.txt b/client/java/solrj/CHANGES.txt
index 9524dbf..69e06cb 100644
--- a/client/java/solrj/CHANGES.txt
+++ b/client/java/solrj/CHANGES.txt
@@ -28,6 +28,10 @@ Bug Fixes
  1. SOLR-778: SolrQuery#getFacetMinCount() returns value of facet limit
               (Kohei Taketa via shalin)
 
+ 2. SOLR-779: SolrQuery#setHighlightRequireFieldMatch() should be renamed to
+    SolrQuery#getHighlightRequireFieldMatch()
+    (Kohei Taketa, Lars Kotthoff via koji)
+
 Documentation
 ----------------------
 
diff --git a/client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java b/client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java
index 50e8f7b..d420860 100644
--- a/client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java
+++ b/client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java
@@ -261,7 +261,7 @@ public class SolrQuery extends ModifiableSolrParams
     return this;
   }
 
-  public boolean setHighlightRequireFieldMatch() {
+  public boolean getHighlightRequireFieldMatch() {
     return this.getBool(HighlightParams.FIELD_MATCH, false);
   }
 
diff --git a/client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java b/client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java
index 006e0ea..b817ad3 100644
--- a/client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java
+++ b/client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java
@@ -96,4 +96,22 @@ public class SolrQueryTest extends TestCase {
     q.setFacetSort(false);
     assertFalse("expected set value to be false", q.getFacetSort());
   }
+
+  public void testSettersGetters() {
+      SolrQuery q = new SolrQuery("foo");
+      assertEquals(10, q.setFacetLimit(10).getFacetLimit());
+      assertEquals(10, q.setFacetMinCount(10).getFacetMinCount());
+      assertEquals(true, q.setFacetSort(true).getFacetSort());
+      assertEquals(10, q.setHighlightSnippets(10).getHighlightSnippets());
+      assertEquals(10, q.setHighlightFragsize(10).getHighlightFragsize());
+      assertEquals(true, q.setHighlightRequireFieldMatch(true).getHighlightRequireFieldMatch());
+      assertEquals("foo", q.setHighlightSimplePre("foo").getHighlightSimplePre());
+      assertEquals("foo", q.setHighlightSimplePost("foo").getHighlightSimplePost());
+      assertEquals(true, q.setHighlight(true).getHighlight());
+      assertEquals("foo", q.setQuery("foo").getQuery());
+      assertEquals(10, q.setRows(10).getRows().intValue());
+      assertEquals(10, q.setStart(10).getStart().intValue());
+      assertEquals("foo", q.setQueryType("foo").getQueryType());
+      assertEquals(10, q.setTimeAllowed(10).getTimeAllowed().intValue());
+  }
 }

