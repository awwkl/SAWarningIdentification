GitDiffStart: abbd3f0e4d68adb7bb20c5c5f4972341129fb16c | Mon Oct 18 13:50:07 2010 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 49b9770..7810612 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -525,6 +525,8 @@ Bug Fixes
 
 * SOLR-2139: Wrong cast from string to float (Igor Rodionov via koji)
 
+* SOLR-2157 Suggester should return alpha-sorted results when onlyMorePopular=false (ab)
+
 Other Changes
 ----------------------
 
diff --git a/solr/src/java/org/apache/solr/spelling/suggest/Lookup.java b/solr/src/java/org/apache/solr/spelling/suggest/Lookup.java
index 6eec6ce..e61c600 100644
--- a/solr/src/java/org/apache/solr/spelling/suggest/Lookup.java
+++ b/solr/src/java/org/apache/solr/spelling/suggest/Lookup.java
@@ -16,7 +16,7 @@ public abstract class Lookup {
   /**
    * Result of a lookup.
    */
-  public static final class LookupResult {
+  public static final class LookupResult implements Comparable<LookupResult> {
     String key;
     float value;
     
@@ -28,6 +28,11 @@ public abstract class Lookup {
     public String toString() {
       return key + "/" + value;
     }
+
+    /** Compare alphabetically. */
+    public int compareTo(LookupResult o) {
+      return this.key.compareTo(o.key);
+    }
   }
   
   public static final class LookupPriorityQueue extends PriorityQueue<LookupResult> {
diff --git a/solr/src/java/org/apache/solr/spelling/suggest/Suggester.java b/solr/src/java/org/apache/solr/spelling/suggest/Suggester.java
index 62398e8..dce4aa9 100644
--- a/solr/src/java/org/apache/solr/spelling/suggest/Suggester.java
+++ b/solr/src/java/org/apache/solr/spelling/suggest/Suggester.java
@@ -21,6 +21,7 @@ import java.io.File;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.UnsupportedEncodingException;
+import java.util.Collections;
 import java.util.List;
 
 import org.apache.lucene.analysis.Token;
@@ -166,6 +167,9 @@ public class Suggester extends SolrSpellChecker {
       if (suggestions == null) {
         continue;
       }
+      if (!options.onlyMorePopular) {
+        Collections.sort(suggestions);
+      }
       for (LookupResult lr : suggestions) {
         res.add(t, lr.key, ((Number)lr.value).intValue());
       }

