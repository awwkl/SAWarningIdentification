GitDiffStart: 2514521b5506760f81a4c23b0685769e4eefea88 | Thu Feb 11 04:19:15 2016 -0500
diff --git a/dev-tools/scripts/addVersion.py b/dev-tools/scripts/addVersion.py
index 0da761e..6eaf517 100644
--- a/dev-tools/scripts/addVersion.py
+++ b/dev-tools/scripts/addVersion.py
@@ -168,8 +168,7 @@ def check_solr_version_tests():
 def read_config():
   parser = argparse.ArgumentParser(description='Add a new version')
   parser.add_argument('version', type=Version.parse)
-  parser.add_argument('-c', '--changeid', type=int, help='SVN ChangeId for downstream version change to merge')
-  parser.add_argument('-r', '--downstream-repo', help='Path to downstream checkout for given changeid')
+  parser.add_argument('-c', '--changeid', type=str, help='SVN ChangeId for downstream version change to merge')
   c = parser.parse_args()
 
   c.branch_type = find_branch_type()
@@ -177,10 +176,6 @@ def read_config():
                       c.version.is_minor_release() and c.branch_type == 'stable' or \
                       c.branch_type == 'major'
 
-  if bool(c.changeid) != bool(c.downstream_repo):
-    parser.error('--changeid and --upstream-repo must be used together')
-  if not c.changeid and not c.matching_branch:
-    parser.error('Must use --changeid for forward porting bugfix release version to other branches')
   if c.changeid and c.matching_branch:
     parser.error('Cannot use --changeid on branch that new version will originate on')
   if c.changeid and c.version.is_major_release():
@@ -191,9 +186,6 @@ def read_config():
 def main():
   c = read_config() 
 
-  if c.changeid:
-    merge_change(c.changeid, c.downstream_repo)  
-
   print('\nAdding new version %s' % c.version)
   update_changes('lucene/CHANGES.txt', c.version)
   update_changes('solr/CHANGES.txt', c.version)
diff --git a/dev-tools/scripts/scriptutil.py b/dev-tools/scripts/scriptutil.py
index 71ade7a..6a3bcab 100644
--- a/dev-tools/scripts/scriptutil.py
+++ b/dev-tools/scripts/scriptutil.py
@@ -117,11 +117,6 @@ version_prop_re = re.compile('version\.base=(.*)')
 def find_current_version():
   return version_prop_re.search(open('lucene/version.properties').read()).group(1)
 
-def merge_change(changeid, repo):
-  print('\nMerging downstream change %d...' % changeid, end='')
-  run('svn merge -c %d --record-only %s' % (changeid, repo))
-  print('done')
-
 if __name__ == '__main__':
   print('This is only a support module, it cannot be run')
   sys.exit(1)

