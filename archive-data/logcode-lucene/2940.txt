GitDiffStart: 0b27204418335dadac3f1b7ce9f49c5396bec10b | Fri Aug 7 12:41:32 2015 +0000
diff --git a/solr/core/src/test/org/apache/solr/security/PKIAuthenticationIntegrationTest.java b/solr/core/src/test/org/apache/solr/security/PKIAuthenticationIntegrationTest.java
index 0cfd01c..aeb0853 100644
--- a/solr/core/src/test/org/apache/solr/security/PKIAuthenticationIntegrationTest.java
+++ b/solr/core/src/test/org/apache/solr/security/PKIAuthenticationIntegrationTest.java
@@ -25,6 +25,7 @@ import java.util.concurrent.atomic.AtomicInteger;
 import java.util.function.Predicate;
 
 import org.apache.solr.SolrTestCaseJ4;
+import org.apache.solr.client.solrj.embedded.JettySolrRunner;
 import org.apache.solr.client.solrj.request.QueryRequest;
 import org.apache.solr.cloud.AbstractFullDistribZkTestBase;
 import org.apache.solr.common.cloud.ZkStateReader;
@@ -56,8 +57,10 @@ public class PKIAuthenticationIntegrationTest extends AbstractFullDistribZkTestB
         TIMEOUT, TIMEOUT)) {
       zkStateReader.getZkClient().setData(ZkStateReader.SOLR_SECURITY_CONF_PATH, bytes, true);
     }
-    String baseUrl = jettys.get(0).getBaseUrl().toString();
-    TestAuthorizationFramework.verifySecurityStatus(cloudClient.getLbClient().getHttpClient(), baseUrl + "/admin/authorization", "authorization/class", MockAuthorizationPlugin.class.getName(), 20);
+    for (JettySolrRunner jetty : jettys) {
+      String baseUrl = jetty.getBaseUrl().toString();
+      TestAuthorizationFramework.verifySecurityStatus(cloudClient.getLbClient().getHttpClient(), baseUrl + "/admin/authorization", "authorization/class", MockAuthorizationPlugin.class.getName(), 20);
+    }
     log.info("Starting test");
     ModifiableSolrParams params = new ModifiableSolrParams();
     params.add("q", "*:*");
@@ -93,8 +96,7 @@ public class PKIAuthenticationIntegrationTest extends AbstractFullDistribZkTestB
     };
     QueryRequest query = new QueryRequest(params);
     query.process(cloudClient);
-    log.info("count :{}", count);
-    assertTrue(count.get() > 2);
+    assertTrue("all nodes must get the user solr , no:of nodes got solr : " + count.get(),count.get() > 2);
   }
 
   @Override

