GitDiffStart: 69bd5b7f17603e7d2a44d9197216dbde7734c8ad | Mon Jul 2 15:57:03 2007 +0000
diff --git a/client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase.java b/client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase.java
index c261b99..e0634be 100644
--- a/client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase.java
+++ b/client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase.java
@@ -64,8 +64,8 @@ abstract public class SolrExampleTestBase extends AbstractSolrTestCase
     // Now add something...
     SolrInputDocument doc = new SolrInputDocument();
     String docID = "1112211111";
-    doc.addField( "id", docID, null );
-    doc.addField( "name", "my name!", null );
+    doc.addField( "id", docID, 1.0f );
+    doc.addField( "name", "my name!", 1.0f );
     
     Assert.assertEquals( null, doc.getField("foo") );
     Assert.assertTrue(doc.getField("name").getValue() != null );
@@ -91,28 +91,28 @@ abstract public class SolrExampleTestBase extends AbstractSolrTestCase
     // Now add a few docs for facet testing...
     List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();
     SolrInputDocument doc2 = new SolrInputDocument();
-    doc2.addField( "id", "2", null );
-    doc2.addField( "inStock", true, null );
-    doc2.addField( "price", 2, null );
-    doc2.addField( "timestamp", new java.util.Date(), null );
+    doc2.addField( "id", "2", 1.0f );
+    doc2.addField( "inStock", true, 1.0f );
+    doc2.addField( "price", 2, 1.0f );
+    doc2.addField( "timestamp", new java.util.Date(), 1.0f );
     docs.add(doc2);
     SolrInputDocument doc3 = new SolrInputDocument();
-    doc3.addField( "id", "3", null );
-    doc3.addField( "inStock", false, null );
-    doc3.addField( "price", 3, null );
-    doc3.addField( "timestamp", new java.util.Date(), null );
+    doc3.addField( "id", "3", 1.0f );
+    doc3.addField( "inStock", false, 1.0f );
+    doc3.addField( "price", 3, 1.0f );
+    doc3.addField( "timestamp", new java.util.Date(), 1.0f );
     docs.add(doc3);
     SolrInputDocument doc4 = new SolrInputDocument();
-    doc4.addField( "id", "4", null );
-    doc4.addField( "inStock", true, null );
-    doc4.addField( "price", 4, null );
-    doc4.addField( "timestamp", new java.util.Date(), null );
+    doc4.addField( "id", "4", 1.0f );
+    doc4.addField( "inStock", true, 1.0f );
+    doc4.addField( "price", 4, 1.0f );
+    doc4.addField( "timestamp", new java.util.Date(), 1.0f );
     docs.add(doc4);
     SolrInputDocument doc5 = new SolrInputDocument();
-    doc5.addField( "id", "5", null );
-    doc5.addField( "inStock", false, null );
-    doc5.addField( "price", 5, null );
-    doc5.addField( "timestamp", new java.util.Date(), null );
+    doc5.addField( "id", "5", 1.0f );
+    doc5.addField( "inStock", false, 1.0f );
+    doc5.addField( "price", 5, 1.0f );
+    doc5.addField( "timestamp", new java.util.Date(), 1.0f );
     docs.add(doc5);
     
     upres = server.add( docs ); 
@@ -171,7 +171,7 @@ abstract public class SolrExampleTestBase extends AbstractSolrTestCase
     SolrInputDocument[] doc = new SolrInputDocument[3];
     for( int i=0; i<3; i++ ) {
       doc[i] = new SolrInputDocument();
-      doc[i].setField( "id", i + " & 222", null );
+      doc[i].setField( "id", i + " & 222", 1.0f );
     }
     String id = (String) doc[0].getField( "id" ).getFirstValue();
     
diff --git a/src/java/org/apache/solr/common/SolrInputDocument.java b/src/java/org/apache/solr/common/SolrInputDocument.java
index d0030f7..26089bc 100644
--- a/src/java/org/apache/solr/common/SolrInputDocument.java
+++ b/src/java/org/apache/solr/common/SolrInputDocument.java
@@ -21,7 +21,6 @@ import java.util.HashMap;
 import java.util.Iterator;
 import java.util.LinkedHashSet;
 import java.util.Map;
-import java.util.Set;
 import java.util.Collection;
 
 /**
@@ -85,7 +84,7 @@ public class SolrInputDocument implements Iterable<SolrInputField>
    */
   public void addField(String name, Object value) 
   {
-    addField(name, value, null);
+    addField(name, value, 1.0f );
   }
   
   /** Get the first value for a field.
@@ -132,10 +131,10 @@ public class SolrInputDocument implements Iterable<SolrInputField>
    */
   public void setField(String name, Object value) 
   {
-    setField(name, value, null);
+    setField(name, value, 1.0f );
   }
   
-  public void setField(String name, Object value, Float boost ) 
+  public void setField(String name, Object value, float boost ) 
   {
     SolrInputField field = new SolrInputField( name );
     _fields.put( name, field );
@@ -151,7 +150,7 @@ public class SolrInputDocument implements Iterable<SolrInputField>
   /**
    * Remove all fields and boosts from the document
    */
-  public void addField(String name, Object value, Float boost ) 
+  public void addField(String name, Object value, float boost ) 
   {
     SolrInputField field = _fields.get( name );
     if( field == null || field.value == null ) {
diff --git a/src/java/org/apache/solr/common/SolrInputField.java b/src/java/org/apache/solr/common/SolrInputField.java
index cbdee9b..8c22e2f 100644
--- a/src/java/org/apache/solr/common/SolrInputField.java
+++ b/src/java/org/apache/solr/common/SolrInputField.java
@@ -43,8 +43,8 @@ public class SolrInputField implements Iterable<Object>
   /**
    * Set the value for a field.  Arrays will be converted to a collection.
    */
-  public void setValue(Object v, Float b) {
-    boost = (b==null) ? 1.0f : b.floatValue();
+  public void setValue(Object v, float b) {
+    boost = b;
 
     if( v instanceof Object[] ) {
       Object[] arr = (Object[])v;
@@ -64,7 +64,7 @@ public class SolrInputField implements Iterable<Object>
    * will be added individually
    */
   @SuppressWarnings("unchecked")
-  public void addValue(Object v, Float b) {
+  public void addValue(Object v, float b) {
     if( value == null ) {
       setValue(v, b);
       return;
@@ -74,9 +74,7 @@ public class SolrInputField implements Iterable<Object>
     // on multi-value fields even though lucene indexing does not support this.
     // To keep behavior consistent with what happens in the lucene index, we accumulate
     // the product of all boosts specified for this field.
-    if( b != null ) {
-      boost *= b.floatValue();
-    }
+    boost *= b;
     
     Collection<Object> vals = null;
     if( value instanceof Collection ) {
diff --git a/src/test/org/apache/solr/common/SolrDocumentTest.java b/src/test/org/apache/solr/common/SolrDocumentTest.java
index 89b2b0d..573e18b 100644
--- a/src/test/org/apache/solr/common/SolrDocumentTest.java
+++ b/src/test/org/apache/solr/common/SolrDocumentTest.java
@@ -127,8 +127,8 @@ public class SolrDocumentTest extends TestCase
     SolrInputDocument doc = new SolrInputDocument();
     doc.setRemoveDuplicateFieldValues( "f1", true );
     doc.setRemoveDuplicateFieldValues( "f2", false );
-    doc.addField( "f1", c0, null );
-    doc.addField( "f2", c0, null );
+    doc.addField( "f1", c0, 1.0f );
+    doc.addField( "f2", c0, 1.0f );
     assertEquals( 3, doc.getField("f1").getValueCount() );
     assertEquals( 5, doc.getField("f2").getValueCount() );
 
@@ -145,9 +145,9 @@ public class SolrDocumentTest extends TestCase
     // Set up a simple document
     SolrInputDocument doc = new SolrInputDocument();
     for( int i=0; i<5; i++ ) {
-      doc.addField( "f", fval0, null );
-      doc.addField( "f", fval1, null );
-      doc.addField( "f", fval2, null );
+      doc.addField( "f", fval0, 1.0f );
+      doc.addField( "f", fval1, 1.0f );
+      doc.addField( "f", fval2, 1.0f );
     }
     assertEquals( (3*5), doc.getField("f").getValueCount() );
     
@@ -160,9 +160,9 @@ public class SolrDocumentTest extends TestCase
     doc.removeField( "f" );
     doc.setRemoveDuplicateFieldValues( "f", true );
     for( int i=0; i<5; i++ ) {
-      doc.addField( "f", fval0, null );
-      doc.addField( "f", fval1, null );
-      doc.addField( "f", fval2, null );
+      doc.addField( "f", fval0, 1.0f );
+      doc.addField( "f", fval1, 1.0f );
+      doc.addField( "f", fval2, 1.0f );
     }
     assertEquals( (3), doc.getField("f").getValueCount() );
   }
diff --git a/src/test/org/apache/solr/update/DocumentBuilderTest.java b/src/test/org/apache/solr/update/DocumentBuilderTest.java
index 1c732ca..fe2fa49 100644
--- a/src/test/org/apache/solr/update/DocumentBuilderTest.java
+++ b/src/test/org/apache/solr/update/DocumentBuilderTest.java
@@ -40,7 +40,7 @@ public class DocumentBuilderTest extends AbstractSolrTestCase {
     // undefined field
     try {
       SolrInputDocument doc = new SolrInputDocument();
-      doc.setField( "unknown field", 12345, null );
+      doc.setField( "unknown field", 12345, 1.0f );
       DocumentBuilder.toDocument( doc, core.getSchema() );
       fail( "should throw an error" );
     }

