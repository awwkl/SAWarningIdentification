GitDiffStart: 9caaad0fea012491ddc3e31d38936fb6283034b1 | Sat Jan 16 10:31:33 2010 +0000
diff --git a/BUILD.txt b/BUILD.txt
index 6bab94e..3de9c9b 100644
--- a/BUILD.txt
+++ b/BUILD.txt
@@ -1,7 +1,5 @@
 Lucene Build Instructions
 
-$Id$
-
 Basic steps:
   0) Install JDK 1.5 (or greater), Ant 1.7.0 (or greater)
   1) Download Lucene from Apache and unpack it
diff --git a/CHANGES.txt b/CHANGES.txt
index 1d21d6b..a799448 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,5 +1,4 @@
 Lucene Change Log
-$Id$
 
 ======================= Trunk (not yet released) =======================
 Changes in backwards compatibility policy
diff --git a/README.txt b/README.txt
index 19b4cd7..721ba19 100644
--- a/README.txt
+++ b/README.txt
@@ -1,7 +1,5 @@
 Lucene README file
 
-$Id$
-
 INTRODUCTION
 
 Lucene is a Java full-text search engine.  Lucene is not a complete
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
index 4d39145..9efaefe 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
@@ -15,8 +15,6 @@
  * limitations under the License.
  */
 
-/* $Id: PatternParser.java 426576 2006-07-28 15:44:37Z jeremias $ */
-
 package org.apache.lucene.analysis.compound.hyphenation;
 
 // SAX
diff --git a/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool.java b/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool.java
index 22247f6..a7d3ef0 100644
--- a/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool.java
+++ b/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool.java
@@ -27,7 +27,6 @@ import java.io.IOException;
 /**
  * Merges indices specified on the command line into the index
  * specified as the first command line argument.
- * @version $Id$
  */
 public class IndexMergeTool {
   public static void main(String[] args) throws IOException {
diff --git a/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java b/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java
index a6e605d..9d8c2a4 100644
--- a/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java
+++ b/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java
@@ -37,8 +37,6 @@ import org.apache.lucene.store.RAMDirectory;
 
 /**
  * Tests changing of field norms with a custom similarity and with fake norms.
- *
- * @version $Id$
  */
 public class TestFieldNormModifier extends TestCase {
   public TestFieldNormModifier(String name) {
diff --git a/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java b/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java
index dad1244..e309125 100644
--- a/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java
+++ b/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java
@@ -40,8 +40,6 @@ import org.apache.lucene.store.RAMDirectory;
 
 /**
  * Tests changing the norms after changing the simularity
- *
- * @version $Id:$
  */
 public class TestLengthNormModifier extends TestCase {
     public TestLengthNormModifier(String name) {
diff --git a/contrib/remote/src/java/org/apache/lucene/search/RMIRemoteSearchable.java b/contrib/remote/src/java/org/apache/lucene/search/RMIRemoteSearchable.java
index ad2d053..6cf8bb3 100644
--- a/contrib/remote/src/java/org/apache/lucene/search/RMIRemoteSearchable.java
+++ b/contrib/remote/src/java/org/apache/lucene/search/RMIRemoteSearchable.java
@@ -38,8 +38,6 @@ import java.rmi.Remote;
  * 
  * </p>
  * </p>
- * 
- *  @version $Id:$
  */
 public interface RMIRemoteSearchable extends Searchable, Remote {
 
diff --git a/contrib/remote/src/java/org/apache/lucene/search/RemoteCachingWrapperFilter.java b/contrib/remote/src/java/org/apache/lucene/search/RemoteCachingWrapperFilter.java
index 9b58370..fe049b9 100644
--- a/contrib/remote/src/java/org/apache/lucene/search/RemoteCachingWrapperFilter.java
+++ b/contrib/remote/src/java/org/apache/lucene/search/RemoteCachingWrapperFilter.java
@@ -35,8 +35,6 @@ import org.apache.lucene.index.IndexReader;
  * To cache a result you must do something like 
  * RemoteCachingWrapperFilter f = new RemoteCachingWrapperFilter(new CachingWrapperFilter(myFilter));
  * <p/>
- * 
- * @version $Id:$
  */
 public class RemoteCachingWrapperFilter extends Filter {
   protected Filter filter;
diff --git a/contrib/remote/src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter.java b/contrib/remote/src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter.java
index 08cfbc6..d5b4ca8 100644
--- a/contrib/remote/src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter.java
+++ b/contrib/remote/src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter.java
@@ -33,8 +33,6 @@ import org.apache.lucene.store.RAMDirectory;
 /**
  * Tests that the index is cached on the searcher side of things.
  * NOTE: This is copied from TestRemoteSearchable since it already had a remote index set up.
- * 
- * @version $Id:$
  */
 public class TestRemoteCachingWrapperFilter extends LuceneTestCase {
   public TestRemoteCachingWrapperFilter(String name) {
diff --git a/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort.java b/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort.java
index 39c91f4..828c8f2 100644
--- a/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort.java
+++ b/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort.java
@@ -44,8 +44,6 @@ import org.apache.lucene.util._TestUtil;
  * Unit tests for remote sorting code.
  * Note: This is a modified copy of {@link TestSort} without duplicated test
  * methods and therefore unused members and methodes. 
- *
- * @version $Id:$
  */
 
 public class TestRemoteSort extends LuceneTestCase implements Serializable {
diff --git a/src/java/org/apache/lucene/analysis/CharFilter.java b/src/java/org/apache/lucene/analysis/CharFilter.java
index 7f7335c..04ce177 100644
--- a/src/java/org/apache/lucene/analysis/CharFilter.java
+++ b/src/java/org/apache/lucene/analysis/CharFilter.java
@@ -24,9 +24,6 @@ import java.io.IOException;
  * They can be used as {@link java.io.Reader} with additional offset
  * correction. {@link Tokenizer}s will automatically use {@link #correctOffset}
  * if a CharFilter/CharStream subclass is used.
- *
- * @version $Id$
- *
  */
 public abstract class CharFilter extends CharStream {
 
diff --git a/src/java/org/apache/lucene/index/SegmentReader.java b/src/java/org/apache/lucene/index/SegmentReader.java
index 38ab4b8..aa678c9 100644
--- a/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/src/java/org/apache/lucene/index/SegmentReader.java
@@ -40,7 +40,6 @@ import org.apache.lucene.util.BitVector;
 import org.apache.lucene.util.CloseableThreadLocal;
 import org.apache.lucene.search.FieldCache; // not great (circular); used only to purge FieldCache entry on close
 
-/** @version $Id */
 /**
  * <p><b>NOTE:</b> This API is new and still experimental
  * (subject to change suddenly in the next release)</p>
diff --git a/src/java/org/apache/lucene/search/FieldValueHitQueue.java b/src/java/org/apache/lucene/search/FieldValueHitQueue.java
index 75d4bba..f724c0a 100644
--- a/src/java/org/apache/lucene/search/FieldValueHitQueue.java
+++ b/src/java/org/apache/lucene/search/FieldValueHitQueue.java
@@ -30,7 +30,6 @@ import org.apache.lucene.util.PriorityQueue;
  * incompatible ways in the next release.
  *
  * @since 2.9
- * @version $Id:
  * @see Searcher#search(Query,Filter,int,Sort)
  * @see FieldCache
  */
diff --git a/src/java/org/apache/lucene/search/QueryWrapperFilter.java b/src/java/org/apache/lucene/search/QueryWrapperFilter.java
index b3b25d8..7001dd4 100644
--- a/src/java/org/apache/lucene/search/QueryWrapperFilter.java
+++ b/src/java/org/apache/lucene/search/QueryWrapperFilter.java
@@ -31,8 +31,6 @@ import org.apache.lucene.index.IndexReader;
  * QueryFilter that matches, e.g., only documents modified within the last
  * week.  The QueryFilter and TermRangeQuery would only need to be reconstructed
  * once per day.
- *
- * @version $Id:$
  */
 public class QueryWrapperFilter extends Filter {
   private Query query;
diff --git a/src/java/org/apache/lucene/search/SpanQueryFilter.java b/src/java/org/apache/lucene/search/SpanQueryFilter.java
index 93c0646..4c82651 100644
--- a/src/java/org/apache/lucene/search/SpanQueryFilter.java
+++ b/src/java/org/apache/lucene/search/SpanQueryFilter.java
@@ -34,9 +34,6 @@ import java.util.List;
  * <p/>
  * This filter does not cache.  See the {@link org.apache.lucene.search.CachingSpanFilter} for a wrapper that
  * caches.
- *
- *
- * @version $Id:$
  */
 public class SpanQueryFilter extends SpanFilter {
   protected SpanQuery query;
diff --git a/src/java/org/apache/lucene/util/BitUtil.java b/src/java/org/apache/lucene/util/BitUtil.java
index a720c04..055012a 100644
--- a/src/java/org/apache/lucene/util/BitUtil.java
+++ b/src/java/org/apache/lucene/util/BitUtil.java
@@ -18,8 +18,6 @@
 package org.apache.lucene.util; // from org.apache.solr.util rev 555343
 
 /**  A variety of high efficiency bit twiddling routines.
- *
- * @version $Id$
  */
 public class BitUtil {
 
diff --git a/src/java/org/apache/lucene/util/OpenBitSet.java b/src/java/org/apache/lucene/util/OpenBitSet.java
index eff8f9e..1300bdf 100644
--- a/src/java/org/apache/lucene/util/OpenBitSet.java
+++ b/src/java/org/apache/lucene/util/OpenBitSet.java
@@ -73,8 +73,6 @@ Test system: AMD Opteron, 64 bit linux, Sun Java 1.5_06 -server -Xbatch -Xmx64M
    <th>1% full</th> <td>2.51</td> <td>3.49</td> <td>&nbsp;</td> <td>1.00</td> <td>&nbsp;</td> <td>1.02</td>
  </tr>
 </table>
-
- * @version $Id$
  */
 
 public class OpenBitSet extends DocIdSet implements Cloneable, Serializable {
diff --git a/src/java/org/apache/lucene/util/OpenBitSetIterator.java b/src/java/org/apache/lucene/util/OpenBitSetIterator.java
index a732bbe..bfa3f52 100644
--- a/src/java/org/apache/lucene/util/OpenBitSetIterator.java
+++ b/src/java/org/apache/lucene/util/OpenBitSetIterator.java
@@ -22,8 +22,6 @@ import org.apache.lucene.search.DocIdSetIterator;
 /** An iterator to iterate over set bits in an OpenBitSet.
  * This is faster than nextSetBit() for iterating over the complete set of bits,
  * especially when the density of the bits set is high.
- *
- * @version $Id$
  */
 public class OpenBitSetIterator extends DocIdSetIterator {
 
diff --git a/src/java/org/apache/lucene/util/SmallFloat.java b/src/java/org/apache/lucene/util/SmallFloat.java
index e8e48c6..01fb42b 100644
--- a/src/java/org/apache/lucene/util/SmallFloat.java
+++ b/src/java/org/apache/lucene/util/SmallFloat.java
@@ -17,8 +17,6 @@ package org.apache.lucene.util;
 
 
 /** Floating point numbers smaller than 32 bits.
- *
- * @version $Id$
  */
 public class SmallFloat {
 
diff --git a/src/test/org/apache/lucene/index/TestIndexWriterLockRelease.java b/src/test/org/apache/lucene/index/TestIndexWriterLockRelease.java
index 79cf68c..75aca4e 100644
--- a/src/test/org/apache/lucene/index/TestIndexWriterLockRelease.java
+++ b/src/test/org/apache/lucene/index/TestIndexWriterLockRelease.java
@@ -28,8 +28,6 @@ import org.apache.lucene.store.FSDirectory;
  * This tests the patch for issue #LUCENE-715 (IndexWriter does not
  * release its write lock when trying to open an index which does not yet
  * exist).
- *
- * @version $Id$
  */
 
 public class TestIndexWriterLockRelease extends LuceneTestCase {
diff --git a/src/test/org/apache/lucene/index/TestTermdocPerf.java b/src/test/org/apache/lucene/index/TestTermdocPerf.java
index fea4b62..efe97a3 100644
--- a/src/test/org/apache/lucene/index/TestTermdocPerf.java
+++ b/src/test/org/apache/lucene/index/TestTermdocPerf.java
@@ -30,10 +30,6 @@ import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.RAMDirectory;
 import org.apache.lucene.util.LuceneTestCase;
 
-/**
- * @version $Id$
- */
-
 class RepeatingTokenStream extends TokenStream {
   public int num;
   TermAttribute termAtt;
diff --git a/src/test/org/apache/lucene/search/TestScorerPerf.java b/src/test/org/apache/lucene/search/TestScorerPerf.java
index 0123057..87c26b0 100755
--- a/src/test/org/apache/lucene/search/TestScorerPerf.java
+++ b/src/test/org/apache/lucene/search/TestScorerPerf.java
@@ -33,10 +33,6 @@ import org.apache.lucene.document.Field;
  * limitations under the License.
  */
 
-/**
- *
- * @version $Id$
- */
 public class TestScorerPerf extends LuceneTestCase {
   Random r;
   boolean validate = true;  // set to false when doing performance testing
diff --git a/src/test/org/apache/lucene/util/TestOpenBitSet.java b/src/test/org/apache/lucene/util/TestOpenBitSet.java
index b18cf2c..67551c8 100644
--- a/src/test/org/apache/lucene/util/TestOpenBitSet.java
+++ b/src/test/org/apache/lucene/util/TestOpenBitSet.java
@@ -22,9 +22,6 @@ import java.util.BitSet;
 
 import org.apache.lucene.search.DocIdSetIterator;
 
-/**
- * @version $Id$
- */
 public class TestOpenBitSet extends LuceneTestCase {
   Random rand;
 
diff --git a/src/test/org/apache/lucene/util/TestSmallFloat.java b/src/test/org/apache/lucene/util/TestSmallFloat.java
index 6434f56..ed98c01 100644
--- a/src/test/org/apache/lucene/util/TestSmallFloat.java
+++ b/src/test/org/apache/lucene/util/TestSmallFloat.java
@@ -18,9 +18,6 @@ package org.apache.lucene.util;
 
 import java.util.Random;
 
-/**
- * @version $Id$
- */
 public class TestSmallFloat extends LuceneTestCase {
 
   // original lucene byteToFloat

