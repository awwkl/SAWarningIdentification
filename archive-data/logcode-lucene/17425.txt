GitDiffStart: f60c6dab5b64aeb13eb2349e12142071f497085a | Thu Sep 9 00:00:40 2010 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index adffaaf..27b9696 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -466,6 +466,10 @@ Bug Fixes
   prevent an exception in one facet command from affecting another
   facet command. (yonik)
 
+* SOLR-2110: Remove the restriction on names for local params
+  substitution/dereferencing.  Properly encode local params in
+  distributed faceting.  (yonik)
+
 * SOLR-2114: Fixed parsing error in hsin function.  The function signature has changed slightly. (gsingers)  
 
 
diff --git a/solr/src/java/org/apache/solr/handler/component/FacetComponent.java b/solr/src/java/org/apache/solr/handler/component/FacetComponent.java
index 339f599..cb5bb61 100644
--- a/solr/src/java/org/apache/solr/handler/component/FacetComponent.java
+++ b/solr/src/java/org/apache/solr/handler/component/FacetComponent.java
@@ -106,10 +106,12 @@ public class  FacetComponent extends SearchComponent
           String facetCommand;
           // add terms into the original facet.field command
           // do it via parameter reference to avoid another layer of encoding.
+
+          String termsKeyEncoded = QueryParsing.encodeLocalParamVal(termsKey);
           if (dff.localParams != null) {
-            facetCommand = commandPrefix+termsKey + " " + dff.facetStr.substring(2);
+            facetCommand = commandPrefix+termsKeyEncoded + " " + dff.facetStr.substring(2);
           } else {
-            facetCommand = commandPrefix+termsKey+'}'+dff.field;
+            facetCommand = commandPrefix+termsKeyEncoded+'}'+dff.field;
           }
 
           if (refinements == null) {
diff --git a/solr/src/java/org/apache/solr/search/QueryParsing.java b/solr/src/java/org/apache/solr/search/QueryParsing.java
index e34de87..f6398e1 100644
--- a/solr/src/java/org/apache/solr/search/QueryParsing.java
+++ b/solr/src/java/org/apache/solr/search/QueryParsing.java
@@ -214,6 +214,31 @@ public class QueryParsing {
     }
   }
 
+  public static String encodeLocalParamVal(String val) {
+    int len = val.length();
+    int i;
+    for (i=0; i<len; i++) {
+      char ch = val.charAt(i);
+      if (Character.isWhitespace(ch) || ch=='}') break;
+    }
+
+    if (i>=len) return val;
+
+    // We need to enclose in quotes... but now we need to escape
+    StringBuilder sb = new StringBuilder(val.length() + 4);
+    sb.append('\'');
+    for (i=0; i<len; i++) {
+      char ch = val.charAt(i);
+      if (ch=='\'') {
+        sb.append('\\');
+      }
+      sb.append(ch);
+    }
+    sb.append('\'');
+    return sb.toString();
+  }
+  
+
   /**
    * "foo" returns null
    * "{!prefix f=myfield}yes" returns type="prefix",f="myfield",v="yes"
diff --git a/solr/src/test/org/apache/solr/TestDistributedSearch.java b/solr/src/test/org/apache/solr/TestDistributedSearch.java
index 1d007b7..e7893b4 100755
--- a/solr/src/test/org/apache/solr/TestDistributedSearch.java
+++ b/solr/src/test/org/apache/solr/TestDistributedSearch.java
@@ -177,7 +177,7 @@ public class TestDistributedSearch extends BaseDistributedSearchTestCase {
     handle.put("facet_fields", SKIPVAL);    
     query("q","*:*", "rows",0, "facet","true", "facet.field",t1,"facet.limit",5, "facet.shard.limit",5);
     // check a complex key name
-    query("q","*:*", "rows",0, "facet","true", "facet.field","{!key=a/b/c}"+t1,"facet.limit",5, "facet.shard.limit",5);
+    query("q","*:*", "rows",0, "facet","true", "facet.field","{!key='a b/c \\' \\} foo'}"+t1,"facet.limit",5, "facet.shard.limit",5);
     handle.remove("facet_fields");
 
 

