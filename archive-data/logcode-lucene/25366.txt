GitDiffStart: 679aa509198cf6e9ceddb0aa78f38c5932206061 | Wed Oct 1 16:39:26 2003 +0000
diff --git a/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java b/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
index acce2dc..ae6c623 100644
--- a/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
@@ -47,6 +47,9 @@ public class StandardTokenizer extends org.apache.lucene.analysis.Tokenizer impl
     case NUM:
       token = jj_consume_token(NUM);
       break;
+    case SIGRAM:
+      token = jj_consume_token(SIGRAM);
+      break;
     case 0:
       token = jj_consume_token(0);
       break;
@@ -76,7 +79,7 @@ public class StandardTokenizer extends org.apache.lucene.analysis.Tokenizer impl
       jj_la1_0();
    }
    private static void jj_la1_0() {
-      jj_la1_0 = new int[] {0xff,};
+      jj_la1_0 = new int[] {0x4ff,};
    }
 
   public StandardTokenizer(CharStream stream) {
@@ -155,8 +158,8 @@ public class StandardTokenizer extends org.apache.lucene.analysis.Tokenizer impl
 
   public ParseException generateParseException() {
     jj_expentries.removeAllElements();
-    boolean[] la1tokens = new boolean[14];
-    for (int i = 0; i < 14; i++) {
+    boolean[] la1tokens = new boolean[16];
+    for (int i = 0; i < 16; i++) {
       la1tokens[i] = false;
     }
     if (jj_kind >= 0) {
@@ -172,7 +175,7 @@ public class StandardTokenizer extends org.apache.lucene.analysis.Tokenizer impl
         }
       }
     }
-    for (int i = 0; i < 14; i++) {
+    for (int i = 0; i < 16; i++) {
       if (la1tokens[i]) {
         jj_expentry = new int[1];
         jj_expentry[0] = i;
diff --git a/src/java/org/apache/lucene/analysis/standard/StandardTokenizerConstants.java b/src/java/org/apache/lucene/analysis/standard/StandardTokenizerConstants.java
index 1ed35d2..e61f595 100644
--- a/src/java/org/apache/lucene/analysis/standard/StandardTokenizerConstants.java
+++ b/src/java/org/apache/lucene/analysis/standard/StandardTokenizerConstants.java
@@ -13,10 +13,12 @@ public interface StandardTokenizerConstants {
   int NUM = 7;
   int P = 8;
   int HAS_DIGIT = 9;
-  int ALPHA = 10;
-  int LETTER = 11;
-  int DIGIT = 12;
-  int NOISE = 13;
+  int SIGRAM = 10;
+  int ALPHA = 11;
+  int LETTER = 12;
+  int CJK = 13;
+  int DIGIT = 14;
+  int NOISE = 15;
 
   int DEFAULT = 0;
 
@@ -31,8 +33,10 @@ public interface StandardTokenizerConstants {
     "<NUM>",
     "<P>",
     "<HAS_DIGIT>",
+    "<SIGRAM>",
     "<ALPHA>",
     "<LETTER>",
+    "<CJK>",
     "<DIGIT>",
     "<NOISE>",
   };
diff --git a/src/java/org/apache/lucene/analysis/standard/StandardTokenizerTokenManager.java b/src/java/org/apache/lucene/analysis/standard/StandardTokenizerTokenManager.java
index 5ba3197..6eca3ad 100644
--- a/src/java/org/apache/lucene/analysis/standard/StandardTokenizerTokenManager.java
+++ b/src/java/org/apache/lucene/analysis/standard/StandardTokenizerTokenManager.java
@@ -8,7 +8,7 @@ public class StandardTokenizerTokenManager implements StandardTokenizerConstants
   public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
 private final int jjMoveStringLiteralDfa0_0()
 {
-   return jjMoveNfa_0(0, 0);
+   return jjMoveNfa_0(1, 0);
 }
 private final void jjCheckNAdd(int state)
 {
@@ -41,49 +41,52 @@ private final void jjCheckNAddStates(int start)
    jjCheckNAdd(jjnextStates[start + 1]);
 }
 static final long[] jjbitVec0 = {
-   0x1600L, 0x0L, 0x0L, 0x0L
-};
-static final long[] jjbitVec1 = {
-   0x0L, 0xffc000000000L, 0x0L, 0xffc000000000L
+   0x1ff0000000000000L, 0xffffffffffffc000L, 0xffffffffL, 0x600000000000000L
 };
 static final long[] jjbitVec2 = {
-   0x0L, 0x3ff00000000L, 0x0L, 0x3ff000000000000L
+   0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
 };
 static final long[] jjbitVec3 = {
-   0x0L, 0xffc000000000L, 0x0L, 0xff8000000000L
+   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffL, 0x0L
 };
 static final long[] jjbitVec4 = {
-   0x0L, 0xffc000000000L, 0x0L, 0x0L
+   0xffffffffffffffffL, 0xffffffffffffffffL, 0x0L, 0x0L
 };
 static final long[] jjbitVec5 = {
-   0x0L, 0x3ff0000L, 0x0L, 0x3ff0000L
+   0x3fffffffffffL, 0x0L, 0x0L, 0x0L
 };
 static final long[] jjbitVec6 = {
-   0x0L, 0x3ffL, 0x0L, 0x0L
+   0x1600L, 0x0L, 0x0L, 0x0L
 };
 static final long[] jjbitVec7 = {
-   0x1ff00000fffffffeL, 0xffffffffffffc000L, 0xffffffffL, 0x600000000000000L
+   0x0L, 0xffc000000000L, 0x0L, 0xffc000000000L
+};
+static final long[] jjbitVec8 = {
+   0x0L, 0x3ff00000000L, 0x0L, 0x3ff000000000000L
 };
 static final long[] jjbitVec9 = {
-   0x0L, 0x0L, 0x0L, 0xff7fffffff7fffffL
+   0x0L, 0xffc000000000L, 0x0L, 0xff8000000000L
 };
 static final long[] jjbitVec10 = {
-   0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
+   0x0L, 0xffc000000000L, 0x0L, 0x0L
 };
 static final long[] jjbitVec11 = {
-   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffL, 0x0L
+   0x0L, 0x3ff0000L, 0x0L, 0x3ff0000L
 };
 static final long[] jjbitVec12 = {
-   0xffffffffffffffffL, 0xffffffffffffffffL, 0x0L, 0x0L
+   0x0L, 0x3ffL, 0x0L, 0x0L
 };
 static final long[] jjbitVec13 = {
-   0x3fffffffffffL, 0x0L, 0x0L, 0x0L
+   0xfffffffeL, 0x0L, 0x0L, 0x0L
+};
+static final long[] jjbitVec14 = {
+   0x0L, 0x0L, 0x0L, 0xff7fffffff7fffffL
 };
 private final int jjMoveNfa_0(int startState, int curPos)
 {
    int[] nextStates;
    int startsAt = 0;
-   jjnewStateCnt = 74;
+   jjnewStateCnt = 75;
    int i = 1;
    jjstateSet[0] = startState;
    int j, kind = 0x7fffffff;
@@ -98,7 +101,7 @@ private final int jjMoveNfa_0(int startState, int curPos)
          {
             switch(jjstateSet[--i])
             {
-               case 0:
+               case 1:
                   if ((0x3ff000000000000L & l) != 0L)
                   {
                      if (kind > 1)
@@ -108,270 +111,270 @@ private final int jjMoveNfa_0(int startState, int curPos)
                   if ((0x3ff000000000000L & l) != 0L)
                      jjCheckNAddStates(18, 23);
                   break;
-               case 1:
-               case 40:
+               case 2:
+               case 41:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(1, 2);
+                     jjCheckNAddTwoStates(2, 3);
                   break;
-               case 2:
+               case 3:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAdd(3);
+                     jjCheckNAdd(4);
                   break;
-               case 3:
+               case 4:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAdd(3);
+                  jjCheckNAdd(4);
                   break;
-               case 4:
-               case 49:
+               case 5:
+               case 50:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(4, 5);
+                     jjCheckNAddTwoStates(5, 6);
                   break;
-               case 5:
+               case 6:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAdd(6);
+                     jjCheckNAdd(7);
                   break;
-               case 6:
+               case 7:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(6, 7);
+                     jjCheckNAddTwoStates(7, 8);
                   break;
-               case 7:
+               case 8:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(8, 9);
+                     jjCheckNAddTwoStates(9, 10);
                   break;
-               case 8:
+               case 9:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(8, 9);
+                     jjCheckNAddTwoStates(9, 10);
                   break;
-               case 9:
                case 10:
+               case 11:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(5, 10);
+                  jjCheckNAddTwoStates(6, 11);
                   break;
-               case 11:
-               case 62:
+               case 12:
+               case 63:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(11, 12);
+                     jjCheckNAddTwoStates(12, 13);
                   break;
-               case 12:
+               case 13:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAdd(13);
+                     jjCheckNAdd(14);
                   break;
-               case 13:
+               case 14:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(13, 14);
+                     jjCheckNAddTwoStates(14, 15);
                   break;
-               case 14:
+               case 15:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(15, 16);
+                     jjCheckNAddTwoStates(16, 17);
                   break;
-               case 15:
+               case 16:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(15, 16);
+                     jjCheckNAddTwoStates(16, 17);
                   break;
-               case 16:
                case 17:
+               case 18:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(17, 18);
+                     jjCheckNAddTwoStates(18, 19);
                   break;
-               case 18:
+               case 19:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAdd(19);
+                     jjCheckNAdd(20);
                   break;
-               case 19:
+               case 20:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(14, 19);
+                  jjCheckNAddTwoStates(15, 20);
                   break;
-               case 20:
+               case 21:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 1)
                      kind = 1;
                   jjCheckNAddStates(0, 17);
                   break;
-               case 21:
+               case 22:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 1)
                      kind = 1;
-                  jjCheckNAdd(21);
+                  jjCheckNAdd(22);
                   break;
-               case 22:
+               case 23:
                   if ((0x3ff000000000000L & l) != 0L)
                      jjCheckNAddStates(24, 26);
                   break;
-               case 23:
+               case 24:
                   if ((0x600000000000L & l) != 0L)
                      jjCheckNAddStates(27, 29);
                   break;
-               case 25:
+               case 26:
                   if ((0x3ff000000000000L & l) != 0L)
                      jjCheckNAddStates(30, 33);
                   break;
-               case 27:
+               case 28:
                   if ((0x3ff000000000000L & l) != 0L)
                      jjCheckNAddStates(34, 36);
                   break;
-               case 28:
+               case 29:
                   if (curChar != 46)
                      break;
                   if (kind > 5)
                      kind = 5;
-                  jjCheckNAddTwoStates(28, 29);
+                  jjCheckNAddTwoStates(29, 30);
                   break;
-               case 29:
+               case 30:
                   if (curChar == 45)
-                     jjCheckNAdd(30);
+                     jjCheckNAdd(31);
                   break;
-               case 30:
+               case 31:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 5)
                      kind = 5;
                   jjCheckNAddStates(37, 39);
                   break;
-               case 31:
+               case 32:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(31, 32);
+                     jjCheckNAddTwoStates(32, 33);
                   break;
-               case 32:
+               case 33:
                   if (curChar == 46)
-                     jjCheckNAdd(33);
+                     jjCheckNAdd(34);
                   break;
-               case 33:
+               case 34:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 6)
                      kind = 6;
-                  jjCheckNAddTwoStates(32, 33);
+                  jjCheckNAddTwoStates(33, 34);
                   break;
-               case 34:
+               case 35:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(34, 35);
+                     jjCheckNAddTwoStates(35, 36);
                   break;
-               case 35:
+               case 36:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(36, 37);
+                     jjCheckNAddTwoStates(37, 38);
                   break;
-               case 36:
+               case 37:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(36, 37);
+                     jjCheckNAddTwoStates(37, 38);
                   break;
-               case 37:
                case 38:
+               case 39:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAdd(38);
+                  jjCheckNAdd(39);
                   break;
-               case 39:
+               case 40:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(39, 40);
+                     jjCheckNAddTwoStates(40, 41);
                   break;
-               case 41:
+               case 42:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(41, 42);
+                     jjCheckNAddTwoStates(42, 43);
                   break;
-               case 42:
+               case 43:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(43, 44);
+                     jjCheckNAddTwoStates(44, 45);
                   break;
-               case 43:
+               case 44:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(43, 44);
+                     jjCheckNAddTwoStates(44, 45);
                   break;
-               case 44:
                case 45:
+               case 46:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(45, 46);
+                     jjCheckNAddTwoStates(46, 47);
                   break;
-               case 46:
+               case 47:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAdd(47);
+                     jjCheckNAdd(48);
                   break;
-               case 47:
+               case 48:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(42, 47);
+                  jjCheckNAddTwoStates(43, 48);
                   break;
-               case 48:
+               case 49:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(48, 49);
+                     jjCheckNAddTwoStates(49, 50);
                   break;
-               case 50:
+               case 51:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(50, 51);
+                     jjCheckNAddTwoStates(51, 52);
                   break;
-               case 51:
+               case 52:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(52, 53);
+                     jjCheckNAddTwoStates(53, 54);
                   break;
-               case 52:
+               case 53:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(52, 53);
+                     jjCheckNAddTwoStates(53, 54);
                   break;
-               case 53:
                case 54:
+               case 55:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(54, 55);
+                     jjCheckNAddTwoStates(55, 56);
                   break;
-               case 55:
+               case 56:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAdd(56);
+                     jjCheckNAdd(57);
                   break;
-               case 56:
+               case 57:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(56, 57);
+                     jjCheckNAddTwoStates(57, 58);
                   break;
-               case 57:
+               case 58:
                   if ((0xf00000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(58, 59);
+                     jjCheckNAddTwoStates(59, 60);
                   break;
-               case 58:
+               case 59:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(58, 59);
+                     jjCheckNAddTwoStates(59, 60);
                   break;
-               case 59:
                case 60:
+               case 61:
                   if ((0x3ff000000000000L & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(55, 60);
+                  jjCheckNAddTwoStates(56, 61);
                   break;
-               case 61:
+               case 62:
                   if ((0x3ff000000000000L & l) != 0L)
-                     jjCheckNAddTwoStates(61, 62);
+                     jjCheckNAddTwoStates(62, 63);
                   break;
-               case 65:
+               case 66:
                   if (curChar == 39)
-                     jjstateSet[jjnewStateCnt++] = 66;
+                     jjstateSet[jjnewStateCnt++] = 67;
                   break;
-               case 68:
+               case 69:
                   if (curChar == 46)
-                     jjCheckNAdd(69);
+                     jjCheckNAdd(70);
                   break;
-               case 70:
+               case 71:
                   if (curChar != 46)
                      break;
                   if (kind > 3)
                      kind = 3;
-                  jjCheckNAdd(69);
+                  jjCheckNAdd(70);
                   break;
-               case 72:
+               case 73:
                   if (curChar == 38)
-                     jjstateSet[jjnewStateCnt++] = 73;
+                     jjstateSet[jjnewStateCnt++] = 74;
                   break;
                default : break;
             }
@@ -384,7 +387,7 @@ private final int jjMoveNfa_0(int startState, int curPos)
          {
             switch(jjstateSet[--i])
             {
-               case 0:
+               case 1:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjCheckNAddStates(40, 45);
                   if ((0x7fffffe07fffffeL & l) != 0L)
@@ -394,269 +397,269 @@ private final int jjMoveNfa_0(int startState, int curPos)
                      jjCheckNAddStates(0, 17);
                   }
                   break;
-               case 1:
+               case 2:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjAddStates(46, 47);
                   break;
-               case 2:
+               case 3:
                   if (curChar == 95)
-                     jjCheckNAdd(3);
+                     jjCheckNAdd(4);
                   break;
-               case 3:
+               case 4:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAdd(3);
+                  jjCheckNAdd(4);
                   break;
-               case 4:
+               case 5:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(4, 5);
+                     jjCheckNAddTwoStates(5, 6);
                   break;
-               case 5:
+               case 6:
                   if (curChar == 95)
-                     jjCheckNAdd(6);
+                     jjCheckNAdd(7);
                   break;
-               case 6:
+               case 7:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(6, 7);
+                     jjCheckNAddTwoStates(7, 8);
                   break;
-               case 7:
+               case 8:
                   if (curChar == 95)
-                     jjCheckNAddTwoStates(8, 9);
+                     jjCheckNAddTwoStates(9, 10);
                   break;
-               case 8:
+               case 9:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(8, 9);
+                     jjCheckNAddTwoStates(9, 10);
                   break;
-               case 10:
+               case 11:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(5, 10);
+                  jjCheckNAddTwoStates(6, 11);
                   break;
-               case 11:
+               case 12:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjAddStates(48, 49);
                   break;
-               case 12:
+               case 13:
                   if (curChar == 95)
-                     jjCheckNAdd(13);
+                     jjCheckNAdd(14);
                   break;
-               case 13:
+               case 14:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(13, 14);
+                     jjCheckNAddTwoStates(14, 15);
                   break;
-               case 14:
+               case 15:
                   if (curChar == 95)
-                     jjCheckNAddTwoStates(15, 16);
+                     jjCheckNAddTwoStates(16, 17);
                   break;
-               case 15:
+               case 16:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(15, 16);
+                     jjCheckNAddTwoStates(16, 17);
                   break;
-               case 17:
+               case 18:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjAddStates(50, 51);
                   break;
-               case 18:
+               case 19:
                   if (curChar == 95)
-                     jjCheckNAdd(19);
+                     jjCheckNAdd(20);
                   break;
-               case 19:
+               case 20:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(14, 19);
+                  jjCheckNAddTwoStates(15, 20);
                   break;
-               case 20:
+               case 21:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 1)
                      kind = 1;
                   jjCheckNAddStates(0, 17);
                   break;
-               case 21:
+               case 22:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 1)
                      kind = 1;
-                  jjCheckNAdd(21);
+                  jjCheckNAdd(22);
                   break;
-               case 22:
+               case 23:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjCheckNAddStates(24, 26);
                   break;
-               case 24:
+               case 25:
                   if (curChar == 95)
-                     jjCheckNAdd(25);
+                     jjCheckNAdd(26);
                   break;
-               case 25:
+               case 26:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjCheckNAddStates(30, 33);
                   break;
-               case 26:
+               case 27:
                   if (curChar == 64)
-                     jjCheckNAdd(27);
+                     jjCheckNAdd(28);
                   break;
-               case 27:
+               case 28:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjCheckNAddStates(34, 36);
                   break;
-               case 30:
+               case 31:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 5)
                      kind = 5;
                   jjCheckNAddStates(37, 39);
                   break;
-               case 31:
+               case 32:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(31, 32);
+                     jjCheckNAddTwoStates(32, 33);
                   break;
-               case 33:
+               case 34:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 6)
                      kind = 6;
-                  jjCheckNAddTwoStates(32, 33);
+                  jjCheckNAddTwoStates(33, 34);
                   break;
-               case 34:
+               case 35:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(34, 35);
+                     jjCheckNAddTwoStates(35, 36);
                   break;
-               case 35:
+               case 36:
                   if (curChar == 95)
-                     jjCheckNAddTwoStates(36, 37);
+                     jjCheckNAddTwoStates(37, 38);
                   break;
-               case 36:
+               case 37:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(36, 37);
+                     jjCheckNAddTwoStates(37, 38);
                   break;
-               case 38:
+               case 39:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjstateSet[jjnewStateCnt++] = 38;
+                  jjstateSet[jjnewStateCnt++] = 39;
                   break;
-               case 39:
+               case 40:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(39, 40);
+                     jjCheckNAddTwoStates(40, 41);
                   break;
-               case 41:
+               case 42:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(41, 42);
+                     jjCheckNAddTwoStates(42, 43);
                   break;
-               case 42:
+               case 43:
                   if (curChar == 95)
-                     jjCheckNAddTwoStates(43, 44);
+                     jjCheckNAddTwoStates(44, 45);
                   break;
-               case 43:
+               case 44:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(43, 44);
+                     jjCheckNAddTwoStates(44, 45);
                   break;
-               case 45:
+               case 46:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjAddStates(52, 53);
                   break;
-               case 46:
+               case 47:
                   if (curChar == 95)
-                     jjCheckNAdd(47);
+                     jjCheckNAdd(48);
                   break;
-               case 47:
+               case 48:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(42, 47);
+                  jjCheckNAddTwoStates(43, 48);
                   break;
-               case 48:
+               case 49:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(48, 49);
+                     jjCheckNAddTwoStates(49, 50);
                   break;
-               case 50:
+               case 51:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(50, 51);
+                     jjCheckNAddTwoStates(51, 52);
                   break;
-               case 51:
+               case 52:
                   if (curChar == 95)
-                     jjCheckNAddTwoStates(52, 53);
+                     jjCheckNAddTwoStates(53, 54);
                   break;
-               case 52:
+               case 53:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(52, 53);
+                     jjCheckNAddTwoStates(53, 54);
                   break;
-               case 54:
+               case 55:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(54, 55);
+                     jjCheckNAddTwoStates(55, 56);
                   break;
-               case 55:
+               case 56:
                   if (curChar == 95)
-                     jjCheckNAdd(56);
+                     jjCheckNAdd(57);
                   break;
-               case 56:
+               case 57:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(56, 57);
+                     jjCheckNAddTwoStates(57, 58);
                   break;
-               case 57:
+               case 58:
                   if (curChar == 95)
-                     jjCheckNAddTwoStates(58, 59);
+                     jjCheckNAddTwoStates(59, 60);
                   break;
-               case 58:
+               case 59:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(58, 59);
+                     jjCheckNAddTwoStates(59, 60);
                   break;
-               case 60:
+               case 61:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(55, 60);
+                  jjCheckNAddTwoStates(56, 61);
                   break;
-               case 61:
+               case 62:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(61, 62);
+                     jjCheckNAddTwoStates(62, 63);
                   break;
-               case 63:
+               case 64:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjCheckNAddStates(40, 45);
                   break;
-               case 64:
+               case 65:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(64, 65);
+                     jjCheckNAddTwoStates(65, 66);
                   break;
-               case 66:
+               case 67:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 2)
                      kind = 2;
-                  jjCheckNAddTwoStates(65, 66);
+                  jjCheckNAddTwoStates(66, 67);
                   break;
-               case 67:
+               case 68:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(67, 68);
+                     jjCheckNAddTwoStates(68, 69);
                   break;
-               case 69:
+               case 70:
                   if ((0x7fffffe07fffffeL & l) != 0L)
                      jjAddStates(54, 55);
                   break;
-               case 71:
+               case 72:
                   if ((0x7fffffe07fffffeL & l) != 0L)
-                     jjCheckNAddTwoStates(71, 72);
+                     jjCheckNAddTwoStates(72, 73);
                   break;
-               case 72:
+               case 73:
                   if (curChar == 64)
-                     jjCheckNAdd(73);
+                     jjCheckNAdd(74);
                   break;
-               case 73:
+               case 74:
                   if ((0x7fffffe07fffffeL & l) == 0L)
                      break;
                   if (kind > 4)
                      kind = 4;
-                  jjCheckNAdd(73);
+                  jjCheckNAdd(74);
                   break;
                default : break;
             }
@@ -664,272 +667,288 @@ private final int jjMoveNfa_0(int startState, int curPos)
       }
       else
       {
+         int hiByte = (int)(curChar >> 8);
+         int i1 = hiByte >> 6;
+         long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
          long l2 = 1L << (curChar & 077);
          MatchLoop: do
          {
             switch(jjstateSet[--i])
             {
-               case 0:
-                  if ((jjbitVec2[i2] & l2) != 0L)
+               case 1:
+                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
+                  {
+                     if (kind > 10)
+                        kind = 10;
+                     jjCheckNAdd(0);
+                  }
+                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                      jjCheckNAddStates(18, 23);
-                  if ((jjbitVec9[i2] & l2) != 0L)
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                   {
                      if (kind > 1)
                         kind = 1;
                      jjCheckNAddStates(0, 17);
                   }
-                  if ((jjbitVec9[i2] & l2) != 0L)
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjCheckNAddStates(40, 45);
                   break;
-               case 1:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(1, 2);
+               case 0:
+                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
+                     break;
+                  if (kind > 10)
+                     kind = 10;
+                  jjCheckNAdd(0);
                   break;
-               case 3:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 2:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(2, 3);
+                  break;
+               case 4:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjstateSet[jjnewStateCnt++] = 3;
+                  jjstateSet[jjnewStateCnt++] = 4;
                   break;
-               case 4:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(4, 5);
+               case 5:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(5, 6);
                   break;
-               case 6:
-                  if ((jjbitVec9[i2] & l2) != 0L)
+               case 7:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjAddStates(56, 57);
                   break;
-               case 8:
-                  if ((jjbitVec9[i2] & l2) != 0L)
+               case 9:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjAddStates(58, 59);
                   break;
-               case 9:
-                  if ((jjbitVec2[i2] & l2) == 0L)
+               case 10:
+                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(5, 10);
+                  jjCheckNAddTwoStates(6, 11);
                   break;
-               case 10:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 11:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(5, 10);
+                  jjCheckNAddTwoStates(6, 11);
                   break;
-               case 11:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(11, 12);
-                  break;
-               case 13:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(13, 14);
+               case 12:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(12, 13);
                   break;
-               case 15:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjAddStates(60, 61);
+               case 14:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(14, 15);
                   break;
                case 16:
-                  if ((jjbitVec2[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(17, 18);
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjAddStates(60, 61);
                   break;
                case 17:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(17, 18);
+                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(18, 19);
                   break;
-               case 19:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 18:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(18, 19);
+                  break;
+               case 20:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(14, 19);
+                  jjCheckNAddTwoStates(15, 20);
                   break;
-               case 20:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 21:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 1)
                      kind = 1;
                   jjCheckNAddStates(0, 17);
                   break;
-               case 21:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 22:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 1)
                      kind = 1;
-                  jjCheckNAdd(21);
+                  jjCheckNAdd(22);
                   break;
-               case 22:
-                  if ((jjbitVec9[i2] & l2) != 0L)
+               case 23:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjCheckNAddStates(24, 26);
                   break;
-               case 25:
-                  if ((jjbitVec9[i2] & l2) != 0L)
+               case 26:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjCheckNAddStates(30, 33);
                   break;
-               case 27:
-                  if ((jjbitVec9[i2] & l2) != 0L)
+               case 28:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjCheckNAddStates(34, 36);
                   break;
-               case 30:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 31:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 5)
                      kind = 5;
                   jjCheckNAddStates(37, 39);
                   break;
-               case 31:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(31, 32);
+               case 32:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(32, 33);
                   break;
-               case 33:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 34:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 6)
                      kind = 6;
-                  jjCheckNAddTwoStates(32, 33);
+                  jjCheckNAddTwoStates(33, 34);
                   break;
-               case 34:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(34, 35);
+               case 35:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(35, 36);
                   break;
-               case 36:
-                  if ((jjbitVec9[i2] & l2) != 0L)
+               case 37:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjAddStates(62, 63);
                   break;
-               case 37:
-                  if ((jjbitVec2[i2] & l2) == 0L)
+               case 38:
+                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAdd(38);
+                  jjCheckNAdd(39);
                   break;
-               case 38:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 39:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAdd(38);
-                  break;
-               case 39:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(39, 40);
+                  jjCheckNAdd(39);
                   break;
                case 40:
-                  if ((jjbitVec2[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(1, 2);
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(40, 41);
                   break;
                case 41:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(41, 42);
+                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(2, 3);
                   break;
-               case 43:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjAddStates(64, 65);
+               case 42:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(42, 43);
                   break;
                case 44:
-                  if ((jjbitVec2[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(45, 46);
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjAddStates(64, 65);
                   break;
                case 45:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(45, 46);
+                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(46, 47);
                   break;
-               case 47:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 46:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(46, 47);
+                  break;
+               case 48:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(42, 47);
-                  break;
-               case 48:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(48, 49);
+                  jjCheckNAddTwoStates(43, 48);
                   break;
                case 49:
-                  if ((jjbitVec2[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(4, 5);
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(49, 50);
                   break;
                case 50:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(50, 51);
+                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(5, 6);
                   break;
-               case 52:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjAddStates(66, 67);
+               case 51:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(51, 52);
                   break;
                case 53:
-                  if ((jjbitVec2[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(54, 55);
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjAddStates(66, 67);
                   break;
                case 54:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(54, 55);
+                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(55, 56);
                   break;
-               case 56:
-                  if ((jjbitVec9[i2] & l2) != 0L)
+               case 55:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(55, 56);
+                  break;
+               case 57:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjAddStates(68, 69);
                   break;
-               case 58:
-                  if ((jjbitVec9[i2] & l2) != 0L)
+               case 59:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjAddStates(70, 71);
                   break;
-               case 59:
-                  if ((jjbitVec2[i2] & l2) == 0L)
+               case 60:
+                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(55, 60);
+                  jjCheckNAddTwoStates(56, 61);
                   break;
-               case 60:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 61:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 7)
                      kind = 7;
-                  jjCheckNAddTwoStates(55, 60);
-                  break;
-               case 61:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(61, 62);
+                  jjCheckNAddTwoStates(56, 61);
                   break;
                case 62:
-                  if ((jjbitVec2[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(11, 12);
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(62, 63);
                   break;
                case 63:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddStates(40, 45);
+                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(12, 13);
                   break;
                case 64:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(64, 65);
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddStates(40, 45);
                   break;
-               case 66:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 65:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(65, 66);
+                  break;
+               case 67:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 2)
                      kind = 2;
-                  jjCheckNAddTwoStates(65, 66);
+                  jjCheckNAddTwoStates(66, 67);
                   break;
-               case 67:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(67, 68);
+               case 68:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(68, 69);
                   break;
-               case 69:
-                  if ((jjbitVec9[i2] & l2) != 0L)
+               case 70:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                      jjAddStates(54, 55);
                   break;
-               case 71:
-                  if ((jjbitVec9[i2] & l2) != 0L)
-                     jjCheckNAddTwoStates(71, 72);
+               case 72:
+                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
+                     jjCheckNAddTwoStates(72, 73);
                   break;
-               case 73:
-                  if ((jjbitVec9[i2] & l2) == 0L)
+               case 74:
+                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                      break;
                   if (kind > 4)
                      kind = 4;
-                  jjstateSet[jjnewStateCnt++] = 73;
+                  jjstateSet[jjnewStateCnt++] = 74;
                   break;
                default : break;
             }
@@ -942,34 +961,87 @@ private final int jjMoveNfa_0(int startState, int curPos)
          kind = 0x7fffffff;
       }
       ++curPos;
-      if ((i = jjnewStateCnt) == (startsAt = 74 - (jjnewStateCnt = startsAt)))
+      if ((i = jjnewStateCnt) == (startsAt = 75 - (jjnewStateCnt = startsAt)))
          return curPos;
       try { curChar = input_stream.readChar(); }
       catch(java.io.IOException e) { return curPos; }
    }
 }
 static final int[] jjnextStates = {
-   21, 22, 23, 24, 31, 32, 34, 35, 39, 40, 41, 42, 48, 49, 50, 51, 
-   61, 62, 1, 2, 4, 5, 11, 12, 22, 23, 24, 23, 24, 26, 23, 24, 
-   25, 26, 27, 28, 29, 28, 29, 30, 64, 65, 67, 68, 71, 72, 1, 2, 
-   11, 12, 17, 18, 45, 46, 69, 70, 6, 7, 8, 9, 15, 16, 36, 37, 
-   43, 44, 52, 53, 56, 57, 58, 59, 
+   22, 23, 24, 25, 32, 33, 35, 36, 40, 41, 42, 43, 49, 50, 51, 52, 
+   62, 63, 2, 3, 5, 6, 12, 13, 23, 24, 25, 24, 25, 27, 24, 25, 
+   26, 27, 28, 29, 30, 29, 30, 31, 65, 66, 68, 69, 72, 73, 2, 3, 
+   12, 13, 18, 19, 46, 47, 70, 71, 7, 8, 9, 10, 16, 17, 37, 38, 
+   44, 45, 53, 54, 57, 58, 59, 60, 
 };
+private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
+{
+   switch(hiByte)
+   {
+      case 48:
+         return ((jjbitVec2[i2] & l2) != 0L);
+      case 49:
+         return ((jjbitVec3[i2] & l2) != 0L);
+      case 51:
+         return ((jjbitVec4[i2] & l2) != 0L);
+      case 61:
+         return ((jjbitVec5[i2] & l2) != 0L);
+      default : 
+         if ((jjbitVec0[i1] & l1) != 0L)
+            return true;
+         return false;
+   }
+}
+private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
+{
+   switch(hiByte)
+   {
+      case 6:
+         return ((jjbitVec8[i2] & l2) != 0L);
+      case 11:
+         return ((jjbitVec9[i2] & l2) != 0L);
+      case 13:
+         return ((jjbitVec10[i2] & l2) != 0L);
+      case 14:
+         return ((jjbitVec11[i2] & l2) != 0L);
+      case 16:
+         return ((jjbitVec12[i2] & l2) != 0L);
+      default : 
+         if ((jjbitVec6[i1] & l1) != 0L)
+            if ((jjbitVec7[i2] & l2) == 0L)
+               return false;
+            else
+            return true;
+         return false;
+   }
+}
+private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
+{
+   switch(hiByte)
+   {
+      case 0:
+         return ((jjbitVec14[i2] & l2) != 0L);
+      default : 
+         if ((jjbitVec13[i1] & l1) != 0L)
+            return true;
+         return false;
+   }
+}
 public static final String[] jjstrLiteralImages = {
 "", null, null, null, null, null, null, null, null, null, null, null, null, 
-null, };
+null, null, null, };
 public static final String[] lexStateNames = {
    "DEFAULT", 
 };
 static final long[] jjtoToken = {
-   0xffL, 
+   0x4ffL, 
 };
 static final long[] jjtoSkip = {
-   0x2000L, 
+   0x8000L, 
 };
 protected CharStream input_stream;
-private final int[] jjrounds = new int[74];
-private final int[] jjstateSet = new int[148];
+private final int[] jjrounds = new int[75];
+private final int[] jjstateSet = new int[150];
 protected char curChar;
 public StandardTokenizerTokenManager(CharStream stream)
 {
@@ -991,7 +1063,7 @@ private final void ReInitRounds()
 {
    int i;
    jjround = 0x80000001;
-   for (i = 74; i-- > 0;)
+   for (i = 75; i-- > 0;)
       jjrounds[i] = 0x80000000;
 }
 public void ReInit(CharStream stream, int lexState)
@@ -1051,9 +1123,9 @@ public Token getNextToken()
    jjmatchedKind = 0x7fffffff;
    jjmatchedPos = 0;
    curPos = jjMoveStringLiteralDfa0_0();
-   if (jjmatchedPos == 0 && jjmatchedKind > 13)
+   if (jjmatchedPos == 0 && jjmatchedKind > 15)
    {
-      jjmatchedKind = 13;
+      jjmatchedKind = 15;
    }
    if (jjmatchedKind != 0x7fffffff)
    {

