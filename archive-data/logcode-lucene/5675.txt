GitDiffStart: e0c00539b5ec193545541e8ebc4a8b4df1194e66 | Thu Aug 14 00:21:29 2014 +0000
diff --git a/solr/core/src/test/org/apache/solr/request/TestIntervalFaceting.java b/solr/core/src/test/org/apache/solr/request/TestIntervalFaceting.java
index e574d0e..266f95d 100644
--- a/solr/core/src/test/org/apache/solr/request/TestIntervalFaceting.java
+++ b/solr/core/src/test/org/apache/solr/request/TestIntervalFaceting.java
@@ -68,7 +68,6 @@ public class TestIntervalFaceting extends SolrTestCaseJ4 {
     assertU(adoc("id", "9", "test_ss_dv", "cat"));
     assertU(adoc("id", "10"));
     assertU(commit());
-    assertMultipleReaders();
 
     assertIntervalQueriesString("test_ss_dv");
     assertU(delQ("*:*"));
@@ -100,7 +99,18 @@ public class TestIntervalFaceting extends SolrTestCaseJ4 {
     assertU(adoc("id", "9", "test_s_dv", "cat"));
     assertU(adoc("id", "10"));
     assertU(commit());
-    assertMultipleReaders();
+    int i = 11;
+    while (getNumberOfReaders() < 2 && i < 10) {
+      //try to get more than one segment
+      assertU(adoc("id", String.valueOf(i), "test_i_dv", String.valueOf(i)));
+      assertU(commit());
+    }
+    if (getNumberOfReaders() < 2) {
+      // It is OK if for some seeds we fall into this case (for example, TieredMergePolicy with
+      // segmentsPerTier=2). Most of the case we shouldn't and the test should proceed.
+      log.warn("Could not generate more than 1 segment for this seed. Will skip the test");
+      return;
+    }
 
     assertIntervalQueriesString("test_s_dv");
 
@@ -126,12 +136,11 @@ public class TestIntervalFaceting extends SolrTestCaseJ4 {
     assertIntervalQuery("test_s_dv", "[Las\\,,Los Angeles]", "1");
   }
 
-  private void assertMultipleReaders() {
+  private int getNumberOfReaders() {
     RefCounted<SolrIndexSearcher> searcherRef = h.getCore().getSearcher();
     try {
       SolrIndexSearcher searcher = searcherRef.get();
-      int numReaders = searcher.getTopReaderContext().leaves().size();
-      assertTrue("Expected multiple reader leaves. Found " + numReaders, numReaders >= 2);
+      return searcher.getTopReaderContext().leaves().size();
     } finally {
       searcherRef.decref();
     }
@@ -708,7 +717,19 @@ public class TestIntervalFaceting extends SolrTestCaseJ4 {
     assertU(adoc("id", "10"));
     assertU(adoc("id", "11", "test_i_dv", "10"));
     assertU(commit());
-    assertMultipleReaders();
+    
+    int i = 12;
+    while (getNumberOfReaders() < 2 && i < 10) {
+      //try to get more than one segment
+      assertU(adoc("id", String.valueOf(i), "test_s_dv", String.valueOf(i)));
+      assertU(commit());
+    }
+    if (getNumberOfReaders() < 2) {
+      // It is OK if for some seeds we fall into this case (for example, TieredMergePolicy with
+      // segmentsPerTier=2). Most of the case we shouldn't and the test should proceed.
+      log.warn("Could not generate more than 1 segment for this seed. Will skip the test");
+      return;
+    }
 
     assertIntervalQueriesNumeric("test_i_dv");
   }

