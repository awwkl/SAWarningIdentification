GitDiffStart: 61f61ae0367bfb7b2a4cb59a8e9ec3ca2ccb8335 | Fri Jun 8 16:04:34 2012 +0000
diff --git a/solr/core/src/test/org/apache/solr/analysis/TestJapaneseKatakanaStemFilterFactory.java b/solr/core/src/test/org/apache/solr/analysis/TestJapaneseKatakanaStemFilterFactory.java
new file mode 100644
index 0000000..658ad51
--- /dev/null
+++ b/solr/core/src/test/org/apache/solr/analysis/TestJapaneseKatakanaStemFilterFactory.java
@@ -0,0 +1,49 @@
+package org.apache.solr.analysis;
+
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.lucene.analysis.BaseTokenStreamTestCase;
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.solr.core.SolrResourceLoader;
+
+import java.io.IOException;
+import java.io.StringReader;
+import java.util.Collections;
+import java.util.Map;
+
+/**
+ * Simple tests for {@link JapaneseKatakanaStemFilterFactory}
+ */
+public class TestJapaneseKatakanaStemFilterFactory extends BaseTokenStreamTestCase {
+  public void testKatakanaStemming() throws IOException {
+    JapaneseTokenizerFactory tokenizerFactory = new JapaneseTokenizerFactory();
+    Map<String, String> tokenizerArgs = Collections.emptyMap();
+    tokenizerFactory.init(tokenizerArgs);
+    tokenizerFactory.inform(new SolrResourceLoader(null, null));
+    TokenStream tokenStream = tokenizerFactory.create(
+        new StringReader("????¥ã??¼ã??£ã???????å®?????????¸é¤¨?§è?????³ã??¼ã??¾ã?????")
+    );
+    JapaneseKatakanaStemFilterFactory filterFactory = new JapaneseKatakanaStemFilterFactory();
+    Map<String, String> filterArgs = Collections.emptyMap();
+    filterFactory.init(filterArgs);
+    assertTokenStreamContents(filterFactory.create(tokenStream),
+        new String[]{ "?????", "??????", "??", "è¡??", "äº??", "??", "???",   // ???????? should be stemmed
+                      "?³æ?é¤?", "??", "è³??", "??", "?³ã???", "??", "?¾ã?", "??"} // ?³ã??? should not be stemmed
+    );
+  }
+}
diff --git a/solr/core/src/test/org/apache/solr/analysis/TestJapaneseReadingFormFilterFactory.java b/solr/core/src/test/org/apache/solr/analysis/TestJapaneseReadingFormFilterFactory.java
new file mode 100644
index 0000000..10c9e88
--- /dev/null
+++ b/solr/core/src/test/org/apache/solr/analysis/TestJapaneseReadingFormFilterFactory.java
@@ -0,0 +1,44 @@
+package org.apache.solr.analysis;
+
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.lucene.analysis.BaseTokenStreamTestCase;
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.solr.core.SolrResourceLoader;
+
+import java.io.IOException;
+import java.io.StringReader;
+import java.util.Collections;
+import java.util.Map;
+
+/**
+ * Simple tests for {@link JapaneseReadingFormFilterFactory}
+ */
+public class TestJapaneseReadingFormFilterFactory extends BaseTokenStreamTestCase {
+  public void testReadings() throws IOException {
+    JapaneseTokenizerFactory tokenizerFactory = new JapaneseTokenizerFactory();
+    Map<String, String> args = Collections.emptyMap();
+    tokenizerFactory.init(args);
+    tokenizerFactory.inform(new SolrResourceLoader(null, null));
+    TokenStream tokenStream = tokenizerFactory.create(new StringReader("????©ã?????³ã?????¾ã?????"));
+    JapaneseReadingFormFilterFactory filterFactory = new JapaneseReadingFormFilterFactory();
+    assertTokenStreamContents(filterFactory.create(tokenStream),
+        new String[] { "?µã?", "???", "??????", "???", "??", "???", "??" }
+    );
+  }
+}

