GitDiffStart: 846da57000f2919bf83794dc94013d88ffdd069c | Thu Sep 19 02:11:42 2002 +0000
diff --git a/src/java/org/apache/lucene/index/FieldsReader.java b/src/java/org/apache/lucene/index/FieldsReader.java
index ff4cfac..0377a8a 100644
--- a/src/java/org/apache/lucene/index/FieldsReader.java
+++ b/src/java/org/apache/lucene/index/FieldsReader.java
@@ -63,51 +63,66 @@ import org.apache.lucene.store.InputStream;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 
-final class FieldsReader {
-  private FieldInfos fieldInfos;
-  private InputStream fieldsStream;
-  private InputStream indexStream;
-  private int size;
+/**
+ * FIXME: Describe class <code>FieldsReader</code> here.
+ *
+ * @version $Id$
+ */
+final class FieldsReader
+{
+    private FieldInfos fieldInfos;
+    private InputStream fieldsStream;
+    private InputStream indexStream;
+    private int size;
 
-  FieldsReader(Directory d, String segment, FieldInfos fn)
-       throws IOException {
-    fieldInfos = fn;
+    FieldsReader(Directory d, String segment, FieldInfos fn)
+        throws IOException
+    {
+        fieldInfos = fn;
 
-    fieldsStream = d.openFile(segment + ".fdt");
-    indexStream = d.openFile(segment + ".fdx");
+        fieldsStream = d.openFile(segment + ".fdt");
+        indexStream = d.openFile(segment + ".fdx");
+
+        // TODO: document the magic number 8
+        size = (int)indexStream.length() / 8;
+    }
 
-    size = (int)indexStream.length() / 8;
-  }
+    final void close()
+        throws IOException
+    {
+        fieldsStream.close();
+        indexStream.close();
+    }
 
-  final void close() throws IOException {
-    fieldsStream.close();
-    indexStream.close();
-  }
+    final int size()
+    {
+        return size;
+    }
 
-  final int size() {
-    return size;
-  }
+    final Document doc(int n)
+        throws IOException
+    {
+        // TODO: document the magic number 8L
+        indexStream.seek(n * 8L);
+        long position = indexStream.readLong();
+        fieldsStream.seek(position);
 
-  final Document doc(int n) throws IOException {
-    indexStream.seek(n * 8L);
-    long position = indexStream.readLong();
-    fieldsStream.seek(position);
-    
-    Document doc = new Document();
-    int numFields = fieldsStream.readVInt();
-    for (int i = 0; i < numFields; i++) {
-      int fieldNumber = fieldsStream.readVInt();
-      FieldInfo fi = fieldInfos.fieldInfo(fieldNumber);
+        Document doc = new Document();
+        int numFields = fieldsStream.readVInt();
+        for (int i = 0; i < numFields; i++)
+        {
+            int fieldNumber = fieldsStream.readVInt();
+            FieldInfo fi = fieldInfos.fieldInfo(fieldNumber);
 
-      byte bits = fieldsStream.readByte();
+            byte bits = fieldsStream.readByte();
 
-      doc.add(new Field(fi.name,		  // name
+            doc.add(new Field(fi.name, 		   // name
 			fieldsStream.readString(), // read value
-			true,			  // stored
-			fi.isIndexed,		  // indexed
-			(bits & 1) != 0));	  // tokenized
-    }
+			true,			   // stored
+			fi.isIndexed,		   // indexed
+			(bits & 1) != 0));	   // tokenized
+        }
 
-    return doc;
-  }
+        return doc;
+    }
 }

