GitDiffStart: 1e4c3cdf86b83740efbcb50d78906e8f6fed76e4 | Tue Aug 25 21:26:35 2009 +0000
diff --git a/contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizer.java b/contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizer.java
index 4c3ff6d..b77f68c 100644
--- a/contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizer.java
+++ b/contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizer.java
@@ -157,7 +157,7 @@ public class WikipediaTokenizer extends Tokenizer {
 
   /**
    * Createa a new instance of the {@link org.apache.lucene.wikipedia.analysis.WikipediaTokenizer}.  Attaches the
-   * <conde>input</code> to a the newly created JFlex scanner. Uses the given {@link AttributeFactory}.
+   * <conde>input</code> to a the newly created JFlex scanner. Uses the given {@link AttributeSource.AttributeFactory}.
    *
    * @param input The input
    * @param tokenOutput One of {@link #TOKENS_ONLY}, {@link #UNTOKENIZED_ONLY}, {@link #BOTH}
diff --git a/src/java/org/apache/lucene/analysis/LetterTokenizer.java b/src/java/org/apache/lucene/analysis/LetterTokenizer.java
index 2379984..3f7bc3a 100644
--- a/src/java/org/apache/lucene/analysis/LetterTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/LetterTokenizer.java
@@ -40,7 +40,7 @@ public class LetterTokenizer extends CharTokenizer {
     super(source, in);
   }
   
-  /** Construct a new LetterTokenizer using a given {@link AttributeFactory}. */
+  /** Construct a new LetterTokenizer using a given {@link AttributeSource.AttributeFactory}. */
   public LetterTokenizer(AttributeFactory factory, Reader in) {
     super(factory, in);
   }
diff --git a/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java b/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java
index e338203..3fd3e40 100644
--- a/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java
@@ -43,7 +43,7 @@ public final class LowerCaseTokenizer extends LetterTokenizer {
     super(source, in);
   }
 
-  /** Construct a new LowerCaseTokenizer using a given {@link AttributeFactory}. */
+  /** Construct a new LowerCaseTokenizer using a given {@link AttributeSource.AttributeFactory}. */
   public LowerCaseTokenizer(AttributeFactory factory, Reader in) {
     super(factory, in);
   }
diff --git a/src/java/org/apache/lucene/analysis/WhitespaceTokenizer.java b/src/java/org/apache/lucene/analysis/WhitespaceTokenizer.java
index 375e0e4..fbe278b 100644
--- a/src/java/org/apache/lucene/analysis/WhitespaceTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/WhitespaceTokenizer.java
@@ -36,7 +36,7 @@ public class WhitespaceTokenizer extends CharTokenizer {
     super(source, in);
   }
 
-  /** Construct a new WhitespaceTokenizer using a given {@link AttributeFactory}. */
+  /** Construct a new WhitespaceTokenizer using a given {@link AttributeSource.AttributeFactory}. */
   public WhitespaceTokenizer(AttributeFactory factory, Reader in) {
     super(factory, in);
   }
diff --git a/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java b/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
index f13b629..992c3ba 100644
--- a/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
+++ b/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
@@ -142,7 +142,7 @@ public class StandardTokenizer extends Tokenizer {
   }
 
   /**
-   * Creates a new StandardTokenizer with a given {@link AttributeFactory}. 
+   * Creates a new StandardTokenizer with a given {@link AttributeSource.AttributeFactory} 
    */
   public StandardTokenizer(AttributeFactory factory, Reader input, boolean replaceInvalidAcronym) {
     super(factory);
diff --git a/src/java/org/apache/lucene/util/AttributeSource.java b/src/java/org/apache/lucene/util/AttributeSource.java
index a587555..aff9442 100644
--- a/src/java/org/apache/lucene/util/AttributeSource.java
+++ b/src/java/org/apache/lucene/util/AttributeSource.java
@@ -93,7 +93,7 @@ public class AttributeSource {
   private AttributeFactory factory;
   
   /**
-   * An AttributeSource using the default attribute factory {@link AttributeFactory#DEFAULT_ATTRIBUTE_FACTORY}.
+   * An AttributeSource using the default attribute factory {@link AttributeSource.AttributeFactory#DEFAULT_ATTRIBUTE_FACTORY}.
    */
   public AttributeSource() {
     this(AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY);

