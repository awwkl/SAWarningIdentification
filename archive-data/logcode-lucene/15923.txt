GitDiffStart: f89d7b4ee05f1960b17de38b568be37af3be2e70 | Wed Apr 27 15:11:23 2011 +0000
diff --git a/lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue.java b/lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue.java
index 33484de..69d11e5 100644
--- a/lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue.java
+++ b/lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue.java
@@ -72,6 +72,8 @@ final class DocumentsWriterDeleteQueue {
   private final BufferedDeletes globalBufferedDeletes;
   /* only acquired to update the global deletes */
   private final ReentrantLock globalBufferLock = new ReentrantLock();
+
+  long generation;
   
   DocumentsWriterDeleteQueue() {
     this(new BufferedDeletes(false));
@@ -379,4 +381,11 @@ final class DocumentsWriterDeleteQueue {
   public long bytesUsed() {
     return globalBufferedDeletes.bytesUsed.get();
   }
+
+  @Override
+  public String toString() {
+    return "DWDQ: [ generation: " + generation + " ]";
+  }
+  
+  
 }
diff --git a/lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java b/lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java
index 7b968a8..8ed235c 100644
--- a/lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java
+++ b/lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java
@@ -303,7 +303,9 @@ public final class DocumentsWriterFlushControl {
       flushingQueue = documentsWriter.deleteQueue;
       // Set a new delete queue - all subsequent DWPT will use this queue until
       // we do another full flush
-      documentsWriter.deleteQueue = new DocumentsWriterDeleteQueue(new BufferedDeletes(false));
+      DocumentsWriterDeleteQueue newQueue = new DocumentsWriterDeleteQueue();
+      newQueue.generation = flushingQueue.generation + 1;
+      documentsWriter.deleteQueue = newQueue;
     }
     final Iterator<ThreadState> allActiveThreads = perThreadPool
     .getActivePerThreadsIterator();
@@ -315,7 +317,14 @@ public final class DocumentsWriterFlushControl {
         if (!next.isActive()) {
           continue; 
         }
-        assert next.perThread.deleteQueue == flushingQueue || next.perThread.deleteQueue == documentsWriter.deleteQueue;
+        assert next.perThread.deleteQueue == flushingQueue
+            || next.perThread.deleteQueue == documentsWriter.deleteQueue : " flushingQueue: "
+            + flushingQueue
+            + " currentqueue: "
+            + documentsWriter.deleteQueue
+            + " perThread queue: "
+            + next.perThread.deleteQueue
+            + " numDocsInRam: " + next.perThread.getNumDocsInRAM();
         if (next.perThread.deleteQueue != flushingQueue) {
           // this one is already a new DWPT
           continue;

