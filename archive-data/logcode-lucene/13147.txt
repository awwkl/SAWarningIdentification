GitDiffStart: 0e3af8045296cf3b9121ae4072ba5bd9c4d6e211 | Wed Mar 21 21:28:13 2012 +0000
diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/UncaughtExceptionsRule.java b/lucene/test-framework/src/java/org/apache/lucene/util/UncaughtExceptionsRule.java
index aaf1f66..c9ba803 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/util/UncaughtExceptionsRule.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/util/UncaughtExceptionsRule.java
@@ -23,6 +23,7 @@ import java.lang.Thread.UncaughtExceptionHandler;
 import java.util.ArrayList;
 import java.util.List;
 
+import org.junit.internal.AssumptionViolatedException;
 import org.junit.rules.TestRule;
 import org.junit.runner.Description;
 import org.junit.runners.model.MultipleFailureException;
@@ -85,7 +86,7 @@ public class UncaughtExceptionsRule implements TestRule {
           uncaughtExceptions.clear();
         }
 
-        if (!errors.isEmpty()) {
+        if (hasNonAssumptionErrors(errors)) {
           if (ltc == null) {
             // class level failure (e.g. afterclass)
             LuceneTestCase.reportPartialFailureInfo();
@@ -98,7 +99,16 @@ public class UncaughtExceptionsRule implements TestRule {
       }
     };
   }
- 
+
+  private boolean hasNonAssumptionErrors(ArrayList<Throwable> errors) {
+    for (Throwable t : errors) {
+      if (!(t instanceof AssumptionViolatedException)) {
+        return true;
+      }
+    }
+    return false;
+  }
+
   /**
    * Just a check if anything's been caught.
    */

