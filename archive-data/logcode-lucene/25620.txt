GitDiffStart: 0221ec480be9fbe4509ce2698c9cf59a0bd4d5b6 | Thu Jul 18 14:17:41 2002 +0000
diff --git a/src/test/org/apache/lucene/queryParser/TestQueryParser.java b/src/test/org/apache/lucene/queryParser/TestQueryParser.java
index 8f8b725..957a8ce 100644
--- a/src/test/org/apache/lucene/queryParser/TestQueryParser.java
+++ b/src/test/org/apache/lucene/queryParser/TestQueryParser.java
@@ -137,6 +137,28 @@ public class TestQueryParser extends TestCase {
 	}
     }
 
+    public Query getQueryDOA(String query, Analyzer a)
+	throws Exception
+    {
+	if (a == null)
+	    a = new SimpleAnalyzer();
+	QueryParser qp = new QueryParser("field", a);
+	qp.setOperator(QueryParser.DEFAULT_OPERATOR_AND);
+	return qp.parse(query);
+    }
+
+    public void assertQueryEqualsDOA(String query, Analyzer a, String result)
+	throws Exception
+    {
+	Query q = getQueryDOA(query, a);
+	String s = q.toString("field");
+	if (!s.equals(result))
+	{
+	    fail("Query /" + query + "/ yielded /" + s
+		+ "/, expecting /" + result + "/");
+	}
+    }
+
     public void testSimple() throws Exception {
 	assertQueryEquals("term term term", null, "term term term");
 	assertQueryEquals("t?m term term", null, "t?m term term");
@@ -272,4 +294,14 @@ public class TestQueryParser extends TestCase {
 	assertQueryEquals("\\+blah", a, "\\+blah");
 	assertQueryEquals("\\(blah", a, "\\(blah");
     }
+
+    public void testSimpleDAO()
+	throws Exception
+    {
+	assertQueryEqualsDOA("term term term", null, "+term +term +term");
+	assertQueryEqualsDOA("term +term term", null, "+term +term +term");
+	assertQueryEqualsDOA("term term +term", null, "+term +term +term");
+	assertQueryEqualsDOA("term +term +term", null, "+term +term +term");
+	assertQueryEqualsDOA("-term term term", null, "-term +term +term");
+    }
 }

