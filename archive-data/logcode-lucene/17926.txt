GitDiffStart: 4e93b11311e7c2d6339ea053987bad5b28e72fa0 | Fri May 14 15:41:02 2010 +0000
diff --git a/lucene/src/java/org/apache/lucene/index/CheckIndex.java b/lucene/src/java/org/apache/lucene/index/CheckIndex.java
index ab86214..7defdeb 100644
--- a/lucene/src/java/org/apache/lucene/index/CheckIndex.java
+++ b/lucene/src/java/org/apache/lucene/index/CheckIndex.java
@@ -685,7 +685,7 @@ public class CheckIndex {
                   throw new RuntimeException("term " + term + ": doc " + doc + ": pos " + pos + " < lastPos " + lastPos);
                 }
                 lastPos = pos;
-                if (postings.getPayloadLength() != 0) {
+                if (postings.hasPayload()) {
                   postings.getPayload();
                 }
               }
diff --git a/lucene/src/java/org/apache/lucene/index/DirectoryReader.java b/lucene/src/java/org/apache/lucene/index/DirectoryReader.java
index 75d319a..ca5aaa3 100644
--- a/lucene/src/java/org/apache/lucene/index/DirectoryReader.java
+++ b/lucene/src/java/org/apache/lucene/index/DirectoryReader.java
@@ -1393,7 +1393,7 @@ class DirectoryReader extends IndexReader implements Cloneable {
       return ((TermPositions)current).nextPosition();
     }
     
-    public int getPayloadLength() {
+    public int getPayloadLength() throws IOException {
       return ((TermPositions)current).getPayloadLength();
     }
      
diff --git a/lucene/src/java/org/apache/lucene/index/DocsAndPositionsEnum.java b/lucene/src/java/org/apache/lucene/index/DocsAndPositionsEnum.java
index 0ffc264..247737e 100644
--- a/lucene/src/java/org/apache/lucene/index/DocsAndPositionsEnum.java
+++ b/lucene/src/java/org/apache/lucene/index/DocsAndPositionsEnum.java
@@ -29,9 +29,6 @@ public abstract class DocsAndPositionsEnum extends DocsEnum {
    *  the behavior is not defined. */
   public abstract int nextPosition() throws IOException;
 
-  /** Returns length of payload at current position */
-  public abstract int getPayloadLength();
-
   /** Returns the payload at this position, or null if no
    *  payload was indexed. */
   public abstract BytesRef getPayload() throws IOException;
diff --git a/lucene/src/java/org/apache/lucene/index/FilterIndexReader.java b/lucene/src/java/org/apache/lucene/index/FilterIndexReader.java
index c9c048a..dae846b 100644
--- a/lucene/src/java/org/apache/lucene/index/FilterIndexReader.java
+++ b/lucene/src/java/org/apache/lucene/index/FilterIndexReader.java
@@ -67,7 +67,7 @@ public class FilterIndexReader extends IndexReader {
       return ((TermPositions) this.in).nextPosition();
     }
     
-    public int getPayloadLength() {
+    public int getPayloadLength() throws IOException {
       return ((TermPositions) this.in).getPayloadLength();
     }
 
diff --git a/lucene/src/java/org/apache/lucene/index/LegacyFieldsEnum.java b/lucene/src/java/org/apache/lucene/index/LegacyFieldsEnum.java
index d233a2c..1dac04a 100644
--- a/lucene/src/java/org/apache/lucene/index/LegacyFieldsEnum.java
+++ b/lucene/src/java/org/apache/lucene/index/LegacyFieldsEnum.java
@@ -305,11 +305,6 @@ class LegacyFieldsEnum extends FieldsEnum {
       return tp.nextPosition();
     }
 
-    @Override
-    public int getPayloadLength() {
-      return tp.getPayloadLength();
-    }
-
     private BytesRef payload;
 
     @Override
diff --git a/lucene/src/java/org/apache/lucene/index/MultiDocsAndPositionsEnum.java b/lucene/src/java/org/apache/lucene/index/MultiDocsAndPositionsEnum.java
index ba19046..d8dfcea 100644
--- a/lucene/src/java/org/apache/lucene/index/MultiDocsAndPositionsEnum.java
+++ b/lucene/src/java/org/apache/lucene/index/MultiDocsAndPositionsEnum.java
@@ -112,11 +112,6 @@ public final class MultiDocsAndPositionsEnum extends DocsAndPositionsEnum {
   }
 
   @Override
-  public int getPayloadLength() {
-    return current.getPayloadLength();
-  }
-
-  @Override
   public boolean hasPayload() {
     return current.hasPayload();
   }
diff --git a/lucene/src/java/org/apache/lucene/index/ParallelReader.java b/lucene/src/java/org/apache/lucene/index/ParallelReader.java
index 8e89050..c30de55 100644
--- a/lucene/src/java/org/apache/lucene/index/ParallelReader.java
+++ b/lucene/src/java/org/apache/lucene/index/ParallelReader.java
@@ -721,7 +721,7 @@ public class ParallelReader extends IndexReader {
       return ((TermPositions)termDocs).nextPosition();
     }
 
-    public int getPayloadLength() {
+    public int getPayloadLength() throws IOException {
       return ((TermPositions)termDocs).getPayloadLength();
     }
 
diff --git a/lucene/src/java/org/apache/lucene/index/SegmentReader.java b/lucene/src/java/org/apache/lucene/index/SegmentReader.java
index a0e5bbf..496fea9 100644
--- a/lucene/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/lucene/src/java/org/apache/lucene/index/SegmentReader.java
@@ -1653,19 +1653,31 @@ public class SegmentReader extends IndexReader implements Cloneable {
       throw new UnsupportedOperationException("TermPositions does not support processing multiple documents in one call. Use TermDocs instead.");
     }
 
-    public int nextPosition() throws IOException {     
+    public int nextPosition() throws IOException {
+      pendingPayload = null;
       if (!any || postingsEnum == null) {
         return 0;
       } else {
         return postingsEnum.nextPosition();
       }
     }
+    
+    private BytesRef pendingPayload;
 
-    public int getPayloadLength() {
+    public int getPayloadLength() throws IOException {
       if (!any || postingsEnum == null) {
         return 0;
       } else {
-        return postingsEnum.getPayloadLength();
+        if (pendingPayload == null) {
+          if (!postingsEnum.hasPayload()) {
+            return 0;
+          }
+          pendingPayload = postingsEnum.getPayload();
+        }
+        if (pendingPayload == null) {
+          return 0;
+        }
+        return pendingPayload.length;
       }
     }
 
@@ -1673,17 +1685,26 @@ public class SegmentReader extends IndexReader implements Cloneable {
       if (!any || postingsEnum == null) {
         return null;
       }
-      final BytesRef payload = postingsEnum.getPayload();
+      if (pendingPayload == null) {
+        if (!postingsEnum.hasPayload()) {
+          return null;
+        }
+        pendingPayload = postingsEnum.getPayload();
+      }
+      if (pendingPayload == null) {
+        return null;
+      }
+
       // old API would always used passed in bytes if it
       // "fits", else allocate new:
-      if (bytes != null && payload.length <= bytes.length - offset) {
-        System.arraycopy(payload.bytes, payload.offset, bytes, offset, payload.length);
+      if (bytes != null && pendingPayload.length <= bytes.length - offset) {
+        System.arraycopy(pendingPayload.bytes, pendingPayload.offset, bytes, offset, pendingPayload.length);
         return bytes;
-      } else if (payload.offset == 0 && payload.length == payload.bytes.length) {
-        return payload.bytes;
+      } else if (pendingPayload.offset == 0 && pendingPayload.length == pendingPayload.bytes.length) {
+        return pendingPayload.bytes;
       } else {
-        final byte[] retBytes = new byte[payload.length];
-        System.arraycopy(payload.bytes, payload.offset, retBytes, 0, payload.length);
+        final byte[] retBytes = new byte[pendingPayload.length];
+        System.arraycopy(pendingPayload.bytes, pendingPayload.offset, retBytes, 0, pendingPayload.length);
         return retBytes;
       }
     }
diff --git a/lucene/src/java/org/apache/lucene/index/TermPositions.java b/lucene/src/java/org/apache/lucene/index/TermPositions.java
index fea1d57..6e5af8b 100644
--- a/lucene/src/java/org/apache/lucene/index/TermPositions.java
+++ b/lucene/src/java/org/apache/lucene/index/TermPositions.java
@@ -46,7 +46,7 @@ public interface TermPositions
      * the first time.<br>
      * @return length of the current payload in number of bytes
      */
-    int getPayloadLength();
+    int getPayloadLength() throws IOException;
     
     /** 
      * Returns the payload data at the current term position.
diff --git a/lucene/src/java/org/apache/lucene/index/codecs/MappingMultiDocsAndPositionsEnum.java b/lucene/src/java/org/apache/lucene/index/codecs/MappingMultiDocsAndPositionsEnum.java
index 865df5e..2035b2f 100644
--- a/lucene/src/java/org/apache/lucene/index/codecs/MappingMultiDocsAndPositionsEnum.java
+++ b/lucene/src/java/org/apache/lucene/index/codecs/MappingMultiDocsAndPositionsEnum.java
@@ -102,12 +102,6 @@ public final class MappingMultiDocsAndPositionsEnum extends DocsAndPositionsEnum
     return current.nextPosition();
   }
   
-
-  @Override
-  public int getPayloadLength() {
-    return current.getPayloadLength();
-  }
-
   @Override
   public BytesRef getPayload() throws IOException {
     BytesRef payload = current.getPayload();
diff --git a/lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer.java b/lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer.java
index 3449ff3..a6bd46f 100644
--- a/lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer.java
+++ b/lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer.java
@@ -79,9 +79,8 @@ public abstract class PostingsConsumer {
         this.startDoc(doc, freq);
         for(int i=0;i<freq;i++) {
           final int position = postingsEnum.nextPosition();
-          final int payloadLength = postingsEnum.getPayloadLength();
           final BytesRef payload;
-          if (payloadLength > 0) {
+          if (postingsEnum.hasPayload()) {
             payload = postingsEnum.getPayload();
           } else {
             payload = null;
diff --git a/lucene/src/java/org/apache/lucene/index/codecs/preflex/PreFlexFields.java b/lucene/src/java/org/apache/lucene/index/codecs/preflex/PreFlexFields.java
index bd3b8b4..c419b26 100644
--- a/lucene/src/java/org/apache/lucene/index/codecs/preflex/PreFlexFields.java
+++ b/lucene/src/java/org/apache/lucene/index/codecs/preflex/PreFlexFields.java
@@ -457,11 +457,6 @@ public class PreFlexFields extends FieldsProducer {
     }
 
     @Override
-    public int getPayloadLength() {
-      return pos.getPayloadLength();
-    }
-
-    @Override
     public boolean hasPayload() {
       return pos.isPayloadAvailable();
     }
diff --git a/lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.java b/lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.java
index d72d4e8..c3ac53b 100644
--- a/lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.java
+++ b/lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.java
@@ -358,11 +358,6 @@ public class PulsingPostingsReaderImpl extends StandardPostingsReader {
     }
 
     @Override
-    public int getPayloadLength() {
-      return payloadRetrieved || pos.payload == null ? 0 : pos.payload.length;
-    }
-
-    @Override
     public boolean hasPayload() {
       return !payloadRetrieved && pos.payload != null && pos.payload.length > 0;
     }
diff --git a/lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.java b/lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.java
index 089e5c8..9eb8b82 100644
--- a/lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.java
+++ b/lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.java
@@ -638,11 +638,6 @@ public class SepPostingsReaderImpl extends StandardPostingsReader {
       return position;
     }
 
-    @Override
-    public int getPayloadLength() {
-      return payloadLength;
-    }
-
     private BytesRef payload;
 
     @Override
diff --git a/lucene/src/java/org/apache/lucene/search/MultiPhraseQuery.java b/lucene/src/java/org/apache/lucene/search/MultiPhraseQuery.java
index 98b00b3..d8127fc 100644
--- a/lucene/src/java/org/apache/lucene/search/MultiPhraseQuery.java
+++ b/lucene/src/java/org/apache/lucene/search/MultiPhraseQuery.java
@@ -509,11 +509,6 @@ class UnionDocsAndPositionsEnum extends DocsAndPositionsEnum {
   }
 
   @Override
-  public int getPayloadLength() {
-    throw new UnsupportedOperationException();
-  }
-
-  @Override
   public BytesRef getPayload() {
     throw new UnsupportedOperationException();
   }
diff --git a/lucene/src/test/org/apache/lucene/TestExternalCodecs.java b/lucene/src/test/org/apache/lucene/TestExternalCodecs.java
index 1843b8b..75bce7d 100644
--- a/lucene/src/test/org/apache/lucene/TestExternalCodecs.java
+++ b/lucene/src/test/org/apache/lucene/TestExternalCodecs.java
@@ -436,11 +436,6 @@ public class TestExternalCodecs extends LuceneTestCase {
       }
 
       @Override
-      public int getPayloadLength() {
-        return 0;
-      }
-
-      @Override
       public BytesRef getPayload() {
         return null;
       }
diff --git a/lucene/src/test/org/apache/lucene/index/FlexTestUtil.java b/lucene/src/test/org/apache/lucene/index/FlexTestUtil.java
index 580e062..85c6785 100644
--- a/lucene/src/test/org/apache/lucene/index/FlexTestUtil.java
+++ b/lucene/src/test/org/apache/lucene/index/FlexTestUtil.java
@@ -190,8 +190,8 @@ public class FlexTestUtil {
                   assertEquals(position, termPos.nextPosition());
                   assertEquals(postings.hasPayload(), termPos.isPayloadAvailable());
                   if (postings.hasPayload()) {
-                    assertEquals(postings.getPayloadLength(), termPos.getPayloadLength());
                     BytesRef payload = postings.getPayload();
+                    assertEquals(payload.length, termPos.getPayloadLength());
                     byte[] b2 = termPos.getPayload(null, 0);
                     assertNotNull(payload);
                     assertNotNull(b2);
@@ -337,9 +337,9 @@ public class FlexTestUtil {
                           assertEquals(position, termPos.nextPosition());
                           assertEquals(postings.hasPayload(), termPos.isPayloadAvailable());
                           if (postings.hasPayload()) {
-                            assertEquals(postings.getPayloadLength(), termPos.getPayloadLength());
                             if (rand.nextInt(3) <= 1) {
                               BytesRef payload = postings.getPayload();
+                              assertEquals(payload.length, termPos.getPayloadLength());
                               byte[] b2 = termPos.getPayload(null, 0);
                               assertNotNull(payload);
                               assertNotNull(b2);
@@ -525,8 +525,8 @@ public class FlexTestUtil {
             assertEquals(pos1, pos2);
             assertEquals(postings.hasPayload(), termPositions.isPayloadAvailable());
             if (postings.hasPayload()) {
-              assertEquals(postings.getPayloadLength(), termPositions.getPayloadLength());
               BytesRef b1 = postings.getPayload();
+              assertEquals(b1.length, termPositions.getPayloadLength());
               byte[] b2 = termPositions.getPayload(null, 0);
               assertNotNull(b1);
               assertNotNull(b2);
diff --git a/lucene/src/test/org/apache/lucene/index/TestPayloads.java b/lucene/src/test/org/apache/lucene/index/TestPayloads.java
index e64dc2c..6d71899 100644
--- a/lucene/src/test/org/apache/lucene/index/TestPayloads.java
+++ b/lucene/src/test/org/apache/lucene/index/TestPayloads.java
@@ -309,14 +309,6 @@ public class TestPayloads extends LuceneTestCase {
          * Test multiple call of getPayload()
          */
         tp.getPayload(null, 0);
-        try {
-            // it is forbidden to call getPayload() more than once
-            // without calling nextPosition()
-            tp.getPayload(null, 0);
-            fail("Expected exception not thrown");
-        } catch (Exception expected) {
-            // expected exception
-        }
         
         reader.close();
         

