GitDiffStart: 031237d92104e2e48612626a6995cf3d3b05fd18 | Sun Nov 28 11:57:47 2010 +0000
diff --git a/lucene/src/test/org/apache/lucene/util/LuceneTestCase.java b/lucene/src/test/org/apache/lucene/util/LuceneTestCase.java
index 90c5903..807f22f 100644
--- a/lucene/src/test/org/apache/lucene/util/LuceneTestCase.java
+++ b/lucene/src/test/org/apache/lucene/util/LuceneTestCase.java
@@ -322,7 +322,7 @@ public abstract class LuceneTestCase extends Assert {
       if (random.nextInt(4) == 0) { // preflex-only setup
         codec = installTestCodecs("PreFlex", CodecProvider.getDefault());
       } else { // per-field setup
-        CodecProvider.setDefault(new RandomCodecProvider());
+        CodecProvider.setDefault(new RandomCodecProvider(random));
         codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());
       }
     } else { // ordinary setup
@@ -982,12 +982,15 @@ public abstract class LuceneTestCase extends Assert {
   private static class RandomCodecProvider extends CodecProvider {
     private List<Codec> knownCodecs = new ArrayList<Codec>();
     private Map<String,Codec> previousMappings = new HashMap<String,Codec>();
+    private final int perFieldSeed;
     
-    RandomCodecProvider() {
+    RandomCodecProvider(Random random) {
+      this.perFieldSeed = random.nextInt();
       register(new StandardCodec());
       register(new PreFlexCodec());
       register(new PulsingCodec(1));
       register(new SimpleTextCodec());
+      Collections.shuffle(knownCodecs, random);
     }
 
     public synchronized void register(Codec codec) {
@@ -1004,7 +1007,7 @@ public abstract class LuceneTestCase extends Assert {
     public synchronized String getFieldCodec(String name) {
       Codec codec = previousMappings.get(name);
       if (codec == null) {
-        codec = knownCodecs.get(random.nextInt(knownCodecs.size()));
+        codec = knownCodecs.get(Math.abs(perFieldSeed ^ name.hashCode()) % knownCodecs.size());
         previousMappings.put(name, codec);
       }
       return codec.name;

