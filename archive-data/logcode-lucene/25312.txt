GitDiffStart: 1a39c55c4c49423b64ec6ab9bbdf08058d83fb85 | Thu Nov 13 11:42:26 2003 +0000
diff --git a/src/java/org/apache/lucene/queryParser/QueryParser.java b/src/java/org/apache/lucene/queryParser/QueryParser.java
index 35f8e39..8a095a0 100644
--- a/src/java/org/apache/lucene/queryParser/QueryParser.java
+++ b/src/java/org/apache/lucene/queryParser/QueryParser.java
@@ -83,13 +83,8 @@ public class QueryParser implements QueryParserConstants {
    */
   static public Query parse(String query, String field, Analyzer analyzer)
        throws ParseException {
-    try {
-      QueryParser parser = new QueryParser(field, analyzer);
-      return parser.parse(query);
-    }
-    catch (TokenMgrError tme) {
-      throw new ParseException(tme.getMessage());
-    }
+    QueryParser parser = new QueryParser(field, analyzer);
+    return parser.parse(query);
   }
 
   /** Constructs a query parser.
@@ -106,11 +101,15 @@ public class QueryParser implements QueryParserConstants {
    * <a href="lucene.search.Query.html">Query</a>.
    *  @param query	the query string to be parsed.
    *  @throws ParseException if the parsing fails
-   *  @throws TokenMgrError if ther parsing fails
    */
-  public Query parse(String query) throws ParseException, TokenMgrError {
+  public Query parse(String query) throws ParseException {
     ReInit(new FastCharStream(new StringReader(query)));
-    return Query(field);
+    try {
+      return Query(field);
+    }
+    catch (TokenMgrError tme) {
+      throw new ParseException(tme.getMessage());
+    }
   }
 
   /**
diff --git a/src/java/org/apache/lucene/queryParser/QueryParser.jj b/src/java/org/apache/lucene/queryParser/QueryParser.jj
index 02ea937..c7f00d3 100644
--- a/src/java/org/apache/lucene/queryParser/QueryParser.jj
+++ b/src/java/org/apache/lucene/queryParser/QueryParser.jj
@@ -145,13 +145,8 @@ public class QueryParser {
    */
   static public Query parse(String query, String field, Analyzer analyzer)
        throws ParseException {
-    try {
-      QueryParser parser = new QueryParser(field, analyzer);
-      return parser.parse(query);
-    }
-    catch (TokenMgrError tme) {
-      throw new ParseException(tme.getMessage());
-    }
+    QueryParser parser = new QueryParser(field, analyzer);
+    return parser.parse(query);
   }
 
   /** Constructs a query parser.
@@ -168,11 +163,15 @@ public class QueryParser {
    * <a href="lucene.search.Query.html">Query</a>.
    *  @param query	the query string to be parsed.
    *  @throws ParseException if the parsing fails
-   *  @throws TokenMgrError if ther parsing fails
    */
-  public Query parse(String query) throws ParseException, TokenMgrError {
+  public Query parse(String query) throws ParseException {
     ReInit(new FastCharStream(new StringReader(query)));
-    return Query(field);
+    try {
+      return Query(field);
+    }
+    catch (TokenMgrError tme) {
+      throw new ParseException(tme.getMessage());
+    }
   }
 
   /**

