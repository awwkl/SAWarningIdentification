GitDiffStart: 2a6f2c7cbbf4e25b1175f5bb63271cb918faf203 | Thu Sep 6 17:22:48 2012 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 33e3a17..7217273 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -131,6 +131,9 @@ Bug Fixes
 
 * SOLR-3679: Core Admin UI gives no feedback if "Add Core" fails (steffkes, hossman)
 
+* SOLR-3795: Fixed LukeRequestHandler response to correctly return field name 
+  strings in copyDests and copySources arrays (hossman)
+
 Other Changes
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
index 219cdbb..bb737fb3 100644
--- a/solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
@@ -53,6 +53,7 @@ import org.apache.solr.schema.FieldType;
 import org.apache.solr.update.SolrIndexWriter;
 import org.apache.solr.schema.IndexSchema;
 import org.apache.solr.schema.SchemaField;
+import org.apache.solr.schema.CopyField;
 import org.apache.solr.search.SolrIndexSearcher;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -522,8 +523,8 @@ public class LukeRequestHandler extends RequestHandlerBase
     if (ft.getAnalyzer().getPositionIncrementGap(f.getName()) != 0) {
       field.add("positionIncrementGap", ft.getAnalyzer().getPositionIncrementGap(f.getName()));
     }
-    field.add("copyDests", schema.getCopyFieldsList(f.getName()));
-    field.add("copySources", schema.getCopySources(f.getName()));
+    field.add("copyDests", toListOfStringDests(schema.getCopyFieldsList(f.getName())));
+    field.add("copySources", toListOfStrings(schema.getCopySources(f.getName())));
 
 
     fields.put( f.getName(), field );
@@ -617,6 +618,22 @@ public class LukeRequestHandler extends RequestHandlerBase
     // Add a histogram
     fieldMap.add("histogram", tiq.histogram.toNamedList());
   }
+
+  private static List<String> toListOfStrings(SchemaField[] raw) {
+    List<String> result = new ArrayList<String>(raw.length);
+    for (SchemaField f : raw) {
+      result.add(f.getName());
+    }
+    return result;
+  }
+  private static List<String> toListOfStringDests(List<CopyField> raw) {
+    List<String> result = new ArrayList<String>(raw.size());
+    for (CopyField f : raw) {
+      result.add(f.getDestination().getName());
+    }
+    return result;
+  }
+
   //////////////////////// SolrInfoMBeans methods //////////////////////
 
   @Override
diff --git a/solr/core/src/test-files/solr/collection1/conf/schema12.xml b/solr/core/src/test-files/solr/collection1/conf/schema12.xml
index b6cc3c0..85ee29a 100755
--- a/solr/core/src/test-files/solr/collection1/conf/schema12.xml
+++ b/solr/core/src/test-files/solr/collection1/conf/schema12.xml
@@ -591,6 +591,10 @@
 
    <dynamicField name="random_*" type="random" />
 
+   <!-- unused, for testing luke copyFields -->
+   <dynamicField name="foo_copysource_*" type="ignored" multiValued="true"/>
+   <dynamicField name="bar_copydest_*" type="ignored" multiValued="true"/>
+
  </fields>
 
  <defaultSearchField>text</defaultSearchField>
@@ -601,5 +605,7 @@
 
    <copyField source="title" dest="text"/>
    <copyField source="subject" dest="text"/>
+
+   <copyField source="foo_copysource_*" dest="bar_copydest_*" />
  
 </schema>
diff --git a/solr/core/src/test/org/apache/solr/handler/admin/LukeRequestHandlerTest.java b/solr/core/src/test/org/apache/solr/handler/admin/LukeRequestHandlerTest.java
index 32213a9..09efa5d 100644
--- a/solr/core/src/test/org/apache/solr/handler/admin/LukeRequestHandlerTest.java
+++ b/solr/core/src/test/org/apache/solr/handler/admin/LukeRequestHandlerTest.java
@@ -146,7 +146,12 @@ public class LukeRequestHandlerTest extends AbstractSolrTestCase {
   private static String getFieldXPathPrefix(String field) {
     return "//lst[@name='fields']/lst[@name='"+field+"']/str";
   }
-
+  private static String field(String field) {
+    return "//lst[@name='fields']/lst[@name='"+field+"']/";
+  }
+  private static String dynfield(String field) {
+    return "//lst[@name='dynamicFields']/lst[@name='"+field+"']/";
+  }
   @Test
   public void testFlParam() {
     SolrQueryRequest req = req("qt", "/admin/luke", "fl", "solr_t solr_s", "show", "all");
@@ -179,4 +184,21 @@ public class LukeRequestHandlerTest extends AbstractSolrTestCase {
       fail("Caught unexpected exception " + e.getMessage());
     }
   }
+
+  public void testCopyFieldLists() throws Exception {
+    SolrQueryRequest req = req("qt", "/admin/luke", "show", "schema");
+
+    String xml = h.query(req);
+    String r = h.validateXPath
+      (xml,
+       field("text") + "/arr[@name='copySources']/str[.='title']",
+       field("text") + "/arr[@name='copySources']/str[.='subject']",
+       field("title") + "/arr[@name='copyDests']/str[.='text']",
+       field("title") + "/arr[@name='copyDests']/str[.='title_stemmed']",
+       // :TODO: SOLR-3798
+       //dynfield("bar_copydest_*") + "/arr[@name='copySource']/str[.='foo_copysource_*']",
+       dynfield("foo_copysource_*") + "/arr[@name='copyDests']/str[.='bar_copydest_*']");
+    assertEquals(xml, null, r);
+  }
+
 }

