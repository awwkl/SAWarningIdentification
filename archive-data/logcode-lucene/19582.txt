GitDiffStart: 7dd9b440aa7de08dd0c64ff064b5e531c17d4981 | Tue Aug 25 14:36:47 2009 +0000
diff --git a/docs/fileformats.html b/docs/fileformats.html
index 7c3cb07..a8a6c24 100644
--- a/docs/fileformats.html
+++ b/docs/fileformats.html
@@ -368,7 +368,7 @@ document.write("Last Published: " + document.lastModified);
 <div class="section">
 <p>
                 This document defines the index file formats used
-                in Lucene version 2.1. If you are using a different
+                in Lucene version 2.9. If you are using a different
                 version of Lucene, please consult the copy of
                 <span class="codefrag">docs/fileformats.html</span>
                 that was distributed
@@ -382,7 +382,7 @@ document.write("Last Published: " + document.lastModified);
                 languages</a>.  If these versions are to remain compatible with Apache
                 Lucene, then a language-independent definition of the Lucene index
                 format is required.  This document thus attempts to provide a
-                complete and independent definition of the Apache Lucene 2.1 file
+                complete and independent definition of the Apache Lucene 2.9 file
                 formats.
             </p>
 <p>
@@ -786,7 +786,7 @@ document.write("Last Published: " + document.lastModified);
 <tr>
               
 <td><a href="#Normalization Factors">Norms</a></td>
-              <td>.nrm (pre 2.1: .f[0-9]*)</td>
+              <td>.nrm</td>
               <td>Encodes length and boost factors for docs and fields</td>
             
 </tr>
@@ -1492,37 +1492,7 @@ document.write("Last Published: " + document.lastModified);
                 </p>
 <p>
                     
-<b>Pre-2.1:</b>
-                    Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize&gt;
-                    <sup>SegCount</sup>
-                
-</p>
-<p>
-                    
-<b>2.1 and above:</b>
-                    Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize, DelGen, HasSingleNormFile, NumField,
-                    NormGen<sup>NumField</sup>,
-                    IsCompoundFile&gt;<sup>SegCount</sup>
-                
-</p>
-<p>
-                    
-<b>2.3:</b>
-                    Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile, NumField,
-                    NormGen<sup>NumField</sup>,
-                    IsCompoundFile&gt;<sup>SegCount</sup>
-                
-</p>
-<p>
-                    
-<b>2.4 and above:</b>
-                    Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile, NumField,
-                    NormGen<sup>NumField</sup>,
-                    IsCompoundFile, DeletionCount, HasProx&gt;<sup>SegCount</sup>, Checksum
-                </p>
-<p>
-                    
-<b>2.9 and above:</b>
+<b>2.9</b>
                     Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile, NumField,
                     NormGen<sup>NumField</sup>,
                     IsCompoundFile, DeletionCount, HasProx, Diagnostics&gt;<sup>SegCount</sup>, CommitUserData, Checksum
@@ -1548,7 +1518,7 @@ document.write("Last Published: " + document.lastModified);
 		    CommitUserData --&gt; Map&lt;String,String&gt;
                 </p>
 <p>
-                    Format is -1 as of Lucene 1.4, -3 (SegmentInfos.FORMAT_SINGLE_NORM_FILE) as of Lucene 2.1 and 2.2, -4 (SegmentInfos.FORMAT_SHARED_DOC_STORE) as of Lucene 2.3, -7 (SegmentInfos.FORMAT_HAS_PROX) as of Lucene 2.4, and -9 (SegmentInfos.FORMAT_DIAGNOSTICS) as of Lucene 2.9.
+                    Format is -9 (SegmentInfos.FORMAT_DIAGNOSTICS).
                 </p>
 <p>
                     Version counts how often the index has been
@@ -1648,7 +1618,7 @@ document.write("Last Published: " + document.lastModified);
 		    Lucene version, OS, Java version, why the segment
 		    was created (merge, flush, addIndexes), etc.
                 </p>
-<a name="N105EB"></a><a name="Lock File"></a>
+<a name="N105BE"></a><a name="Lock File"></a>
 <h3 class="boxed">Lock File</h3>
 <p>
                     The write lock, which is stored in the index
@@ -1662,20 +1632,14 @@ document.write("Last Published: " + document.lastModified);
                     documents).  This lock file ensures that only one
                     writer is modifying the index at a time.
                 </p>
-<p>
-                    Note that prior to version 2.1, Lucene also used a
-                    commit lock. This was removed in 2.1.
-                </p>
-<a name="N105F7"></a><a name="Deletable File"></a>
+<a name="N105C7"></a><a name="Deletable File"></a>
 <h3 class="boxed">Deletable File</h3>
 <p>
-                    Prior to Lucene 2.1 there was a file "deletable"
-                    that contained details about files that need to be
-                    deleted. As of 2.1, a writer dynamically computes
+                    A writer dynamically computes
                     the files that are deletable, instead, so no file
                     is written.
                 </p>
-<a name="N10600"></a><a name="Compound Files"></a>
+<a name="N105D0"></a><a name="Compound Files"></a>
 <h3 class="boxed">Compound Files</h3>
 <p>Starting with Lucene 1.4 the compound file format became default. This
                     is simply a container for all files described in the next section
@@ -1702,14 +1666,14 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N10628"></a><a name="Per-Segment Files"></a>
+<a name="N105F8"></a><a name="Per-Segment Files"></a>
 <h2 class="boxed">Per-Segment Files</h2>
 <div class="section">
 <p>
                 The remaining files are all per-segment, and are
                 thus defined by suffix.
             </p>
-<a name="N10630"></a><a name="Fields"></a>
+<a name="N10600"></a><a name="Fields"></a>
 <h3 class="boxed">Fields</h3>
 <p>
                     
@@ -1755,12 +1719,6 @@ document.write("Last Published: " + document.lastModified);
                             without term vectors.
                         </li>
                         
-<p>
-                            
-<b>Lucene &gt;= 1.9:</b>
-                        
-</p>
-                        
 <li>If the third lowest-order bit is set (0x04), term positions are stored with the term vectors.</li>
                         
 <li>If the fourth lowest-order bit is set (0x08), term offsets are stored with the term vectors.</li>
@@ -1872,31 +1830,6 @@ document.write("Last Published: " + document.lastModified);
 <p>FieldNum --&gt;
                             VInt
                         </p>
-
-                        
-<p>
-                            
-<b>Lucene &lt;= 1.4:</b>
-                        
-</p>
-                        
-<p>Bits --&gt;
-                            Byte
-                        </p>
-                        
-<p>Value --&gt;
-                            String
-                        </p>
-                        
-<p>Only the low-order bit of Bits is used. It is one for
-                            tokenized fields, and zero for non-tokenized fields.
-                        </p>
-                        
-<p>
-                            
-<b>Lucene &gt;= 1.9:</b>
-                        
-</p>
                         
 <p>Bits --&gt;
                             Byte
@@ -1933,7 +1866,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N106F2"></a><a name="Term Dictionary"></a>
+<a name="N106A7"></a><a name="Term Dictionary"></a>
 <h3 class="boxed">Term Dictionary</h3>
 <p>
                     The term dictionary is represented as two files:
@@ -2006,7 +1939,7 @@ document.write("Last Published: " + document.lastModified);
                         </p>
                         
 <p>TIVersion names the version of the format
-                            of this file and is -2 in Lucene 1.4.
+                            of this file and is equal to TermInfosWriter.FORMAT_CURRENT.
                         </p>
                         
 <p>Term
@@ -2125,7 +2058,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N10776"></a><a name="Frequencies"></a>
+<a name="N1072B"></a><a name="Frequencies"></a>
 <h3 class="boxed">Frequencies</h3>
 <p>
                     The .frq file contains the lists of documents
@@ -2241,7 +2174,7 @@ document.write("Last Published: " + document.lastModified);
                     <sup>nd</sup>
                     starts.
                 </p>
-<p>Lucene 2.2 introduces the notion of skip levels. Each term can have multiple skip levels.
+<p>Each term can have multiple skip levels.
                    The amount of skip levels for a term is NumSkipLevels = Min(MaxSkipLevels, floor(log(DocFreq/log(SkipInterval)))).
                    The number of SkipData entries for a skip level is DocFreq/(SkipInterval^(Level + 1)), whereas the lowest skip
                    level is Level=0. <br>
@@ -2253,7 +2186,7 @@ document.write("Last Published: " + document.lastModified);
                    entry in level-1. In the example has entry 15 on level 1 a pointer to entry 15 on level 0 and entry 31 on level 1 a pointer
                    to entry 31 on level 0.                   
                 </p>
-<a name="N107FE"></a><a name="Positions"></a>
+<a name="N107B3"></a><a name="Positions"></a>
 <h3 class="boxed">Positions</h3>
 <p>
                     The .prx file contains the lists of positions that
@@ -2323,25 +2256,9 @@ document.write("Last Published: " + document.lastModified);
                     Payload. If PayloadLength is not stored, then this Payload has the same
                     length as the Payload at the previous position.
                 </p>
-<a name="N1083A"></a><a name="Normalization Factors"></a>
+<a name="N107EF"></a><a name="Normalization Factors"></a>
 <h3 class="boxed">Normalization Factors</h3>
-<p>
-                    
-<b>Pre-2.1:</b>
-                    There's a norm file for each indexed field with a byte for
-                    each document. The .f[0-9]* file contains,
-                    for each document, a byte that encodes a value that is multiplied
-                    into the score for hits on that field:
-                </p>
-<p>Norms
-                    (.f[0-9]*) --&gt; &lt;Byte&gt;
-                    <sup>SegSize</sup>
-                
-</p>
-<p>
-                    
-<b>2.1 and above:</b>
-                    There's a single .nrm file containing all norms:
+<p>There's a single .nrm file containing all norms:
                 </p>
 <p>AllNorms
                     (.nrm) --&gt; NormsHeader,&lt;Norms&gt;
@@ -2417,17 +2334,9 @@ document.write("Last Published: " + document.lastModified);
 					When field <em>N</em> is modified, a separate norm file <em>.sN</em> 
 					is created, to maintain the norm values for that field.
                 </p>
-<p>
-                    
-<b>Pre-2.1:</b>
-                    Separate norm files are created only for compound segments.
-                </p>
-<p>
-                    
-<b>2.1 and above:</b>
-                    Separate norm files are created (when adequate) for both compound and non compound segments.
+<p>Separate norm files are created (when adequate) for both compound and non compound segments.
                 </p>
-<a name="N108A3"></a><a name="Term Vectors"></a>
+<a name="N10840"></a><a name="Term Vectors"></a>
 <h3 class="boxed">Term Vectors</h3>
 <p>
 		  Term Vector support is an optional on a field by
@@ -2450,7 +2359,7 @@ document.write("Last Published: " + document.lastModified);
                         
 </p>
                         
-<p>TVXVersion --&gt; Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)</p>
+<p>TVXVersion --&gt; Int (TermVectorsReader.CURRENT)</p>
                         
 <p>DocumentPosition --&gt; UInt64 (offset in
                         the .tvd file)</p>
@@ -2475,7 +2384,7 @@ document.write("Last Published: " + document.lastModified);
                         
 </p>
                         
-<p>TVDVersion --&gt; Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)</p>
+<p>TVDVersion --&gt; Int (TermVectorsReader.FORMAT_CURRENT)</p>
                         
 <p>NumFields --&gt; VInt</p>
                         
@@ -2511,7 +2420,7 @@ document.write("Last Published: " + document.lastModified);
                         
 </p>
                         
-<p>TVFVersion --&gt; Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)</p>
+<p>TVFVersion --&gt; Int (TermVectorsReader.FORMAT_CURRENT)</p>
                         
 <p>NumTerms --&gt; VInt</p>
                         
@@ -2563,7 +2472,7 @@ document.write("Last Published: " + document.lastModified);
 </li>
                 
 </ol>
-<a name="N1093F"></a><a name="Deleted Documents"></a>
+<a name="N108DC"></a><a name="Deleted Documents"></a>
 <h3 class="boxed">Deleted Documents</h3>
 <p>The .del file is
                     optional, and only exists when a segment contains deletions.
@@ -2571,14 +2480,6 @@ document.write("Last Published: " + document.lastModified);
 <p>Although per-segment, this file is maintained exterior to compound segment files.
                 </p>
 <p>
-                
-<b>Pre-2.1:</b>
-                Deletions
-                    (.del) --&gt; ByteCount,BitCount,Bits
-                </p>
-<p>
-				
-<b>2.1 and above:</b>
                 Deletions
                     (.del) --&gt; [Format],ByteCount,BitCount, Bits | DGaps (depending on Format)
                 </p>
@@ -2635,7 +2536,7 @@ document.write("Last Published: " + document.lastModified);
 </div>
 
         
-<a name="N10982"></a><a name="Limitations"></a>
+<a name="N10916"></a><a name="Limitations"></a>
 <h2 class="boxed">Limitations</h2>
 <div class="section">
 <p>
diff --git a/docs/fileformats.pdf b/docs/fileformats.pdf
index fb92330..68cfc43 100644
--- a/docs/fileformats.pdf
+++ b/docs/fileformats.pdf
@@ -23,21 +23,21 @@ Table of contents
    8 Per-Index Files................................................................................................................... 9
     8.1 Segments File................................................................................................................ 9
     8.2 Lock File......................................................................................................................11
-    8.3 Deletable File...............................................................................................................12
-    8.4 Compound Files...........................................................................................................12
+    8.3 Deletable File...............................................................................................................11
+    8.4 Compound Files...........................................................................................................11
    9 Per-Segment Files............................................................................................................ 12
 
                    Copyright © 2006 The Apache Software Foundation. All rights reserved.
                                                                                                             Apache Lucene - Index File Formats
 
  9.1 Fields........................................................................................................................... 12
- 9.2 Term Dictionary.......................................................................................................... 14
- 9.3 Frequencies..................................................................................................................16
- 9.4 Positions...................................................................................................................... 18
+ 9.2 Term Dictionary.......................................................................................................... 13
+ 9.3 Frequencies..................................................................................................................15
+ 9.4 Positions...................................................................................................................... 17
  9.5 Normalization Factors................................................................................................. 18
  9.6 Term Vectors............................................................................................................... 19
- 9.7 Deleted Documents..................................................................................................... 21
-10 Limitations..................................................................................................................... 22
+ 9.7 Deleted Documents..................................................................................................... 20
+10 Limitations..................................................................................................................... 21
 
                                                                        Page 2
 
@@ -46,7 +46,7 @@ Copyright © 2006 The Apache Software Foundation. All rights reserved.
 
 1. Index File Formats
 
-This document defines the index file formats used in Lucene version 2.1. If you are using a
+This document defines the index file formats used in Lucene version 2.9. If you are using a
 different version of Lucene, please consult the copy of docs/fileformats.html that
 was distributed with the version you are using.
 
@@ -54,7 +54,7 @@ Apache Lucene is written in Java, but several efforts are underway to write vers
 Lucene in other programming languages. If these versions are to remain compatible with
 Apache Lucene, then a language-independent definition of the Lucene index format is
 required. This document thus attempts to provide a complete and independent definition of
-the Apache Lucene 2.1 file formats.
+the Apache Lucene 2.9 file formats.
 
 As Lucene evolves, this document should evolve. Versions of Lucene in different
 programming languages should endeavor to agree on file formats, and generate new versions
@@ -234,29 +234,29 @@ Term Info Index    .tii                      The index into the Term Infos
              Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
-Frequencies                         .frq                      Contains the list of docs which
-                                                              contain each term along with
-Positions                           .prx                      frequency
+Frequencies                         .frq  Contains the list of docs which
+                                          contain each term along with
+Positions                           .prx  frequency
 
-Norms                               .nrm (pre 2.1: .f[0-9]*)  Stores position information
-Term Vector Index                   .tvx                      about where a term occurs in
-Term Vector Documents               .tvd                      the index
+Norms                               .nrm  Stores position information
+Term Vector Index                   .tvx  about where a term occurs in
+Term Vector Documents               .tvd  the index
 
-Term Vector Fields                  .tvf                      Encodes length and boost
-Deleted Documents                   .del                      factors for docs and fields
+Term Vector Fields                  .tvf  Encodes length and boost
+Deleted Documents                   .del  factors for docs and fields
 
-                                                              Stores offset into the document
-                                                              data file
+                                          Stores offset into the document
+                                          data file
 
-                                                              Contains information about
-                                                              each document that has term
-                                                              vectors
+                                          Contains information about
+                                          each document that has term
+                                          vectors
 
-                                                              The field level info about term
-                                                              vectors
+                                          The field level info about term
+                                          vectors
 
-                                                              Info about what files are
-                                                              deleted
+                                          Info about what files are
+                                          deleted
 
 6. Primitive Types
 
@@ -361,33 +361,16 @@ clients with time-based directory cache expiraation). This file simply contains
 version header (SegmentInfos.FORMAT_LOCKLESS = -2), followed by the generation
 recorded as Int64, written twice.
 
-Pre-2.1: Segments --> Format, Version, NameCounter, SegCount, <SegName, SegSize>
-SegCount
-
-2.1 and above: Segments --> Format, Version, NameCounter, SegCount, <SegName,
-SegSize, DelGen, HasSingleNormFile, NumField, NormGenNumField,
+2.9 Segments --> Format, Version, NameCounter, SegCount, <SegName, SegSize, DelGen,
+DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile,
+NumField, NormGenNumField, IsCompoundFile, DeletionCount, HasProx,
+Diagnostics>SegCount, CommitUserData, Checksum
 
 Page 9
 
         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
-IsCompoundFile>SegCount
-
-2.3: Segments --> Format, Version, NameCounter, SegCount, <SegName, SegSize, DelGen,
-DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile,
-NumField, NormGenNumField, IsCompoundFile>SegCount
-
-2.4 and above: Segments --> Format, Version, NameCounter, SegCount, <SegName,
-SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile],
-HasSingleNormFile, NumField, NormGenNumField, IsCompoundFile, DeletionCount,
-HasProx>SegCount, Checksum
-
-2.9 and above: Segments --> Format, Version, NameCounter, SegCount, <SegName,
-SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile],
-HasSingleNormFile, NumField, NormGenNumField, IsCompoundFile, DeletionCount,
-HasProx, Diagnostics>SegCount, CommitUserData, Checksum
-
 Format, NameCounter, SegCount, SegSize, NumField, DocStoreOffset, DeletionCount -->
 Int32
 
@@ -401,10 +384,7 @@ IsCompoundFile, HasSingleNormFile, DocStoreIsCompoundFile, HasProx --> Int8
 
 CommitUserData --> Map<String,String>
 
-Format is -1 as of Lucene 1.4, -3 (SegmentInfos.FORMAT_SINGLE_NORM_FILE) as of
-Lucene 2.1 and 2.2, -4 (SegmentInfos.FORMAT_SHARED_DOC_STORE) as of Lucene
-2.3, -7 (SegmentInfos.FORMAT_HAS_PROX) as of Lucene 2.4, and -9
-(SegmentInfos.FORMAT_DIAGNOSTICS) as of Lucene 2.9.
+Format is -9 (SegmentInfos.FORMAT_DIAGNOSTICS).
 
 Version counts how often the index has been changed by adding or deleting documents.
 
@@ -419,11 +399,6 @@ DelGen is the generation count of the separate deletes file. If this is -1, ther
 deletes. If it is 0, this is a pre-2.1 segment and you must check filesystem for the existence of
 _X.del. Anything above zero means there are separate deletes (_X_N.del).
 
-                                                                       Page 10
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 NumField is the size of the array for NormGen, or -1 if there are no NormGens stored.
 
 NormGen records the generation of the separate norms files. If NumField is -1, there are no
@@ -442,6 +417,12 @@ extension .nrm); if it is 0 then each field's norms are stored as separate .fN f
 DocStoreOffset, DocStoreSegment, DocStoreIsCompoundFile: If DocStoreOffset is -1, this
 segment has its own doc store (stored fields values and term vectors) files and
 DocStoreSegment and DocStoreIsCompoundFile are not stored. In this case all files for
+
+                                                                       Page 10
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 stored field values (*.fdt and *.fdx) and term vectors (*.tvf, *.tvd and *.tvx) will be stored
 with this segment. Otherwise, DocStoreSegment is the name of the segment that has the
 shared doc store files; DocStoreIsCompoundFile is 1 if that segment is stored in compound
@@ -468,31 +449,36 @@ why the segment was created (merge, flush, addIndexes), etc.
 The write lock, which is stored in the index directory by default, is named "write.lock". If the
 lock directory is different from the index directory then the write lock will be named
 "XXXX-write.lock" where XXXX is a unique prefix derived from the full path to the index
-
-Page 11
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 directory. When this file is present, a writer is currently modifying the index (adding or
 removing documents). This lock file ensures that only one writer is modifying the index at a
 time.
-Note that prior to version 2.1, Lucene also used a commit lock. This was removed in 2.1.
 
 8.3. Deletable File
-Prior to Lucene 2.1 there was a file "deletable" that contained details about files that need to
-be deleted. As of 2.1, a writer dynamically computes the files that are deletable, instead, so
-no file is written.
+
+A writer dynamically computes the files that are deletable, instead, so no file is written.
 
 8.4. Compound Files
+
 Starting with Lucene 1.4 the compound file format became default. This is simply a container
 for all files described in the next section (except for the .del file).
+
 Compound (.cfs) --> FileCount, <DataOffset, FileName> FileCount , FileData FileCount
+
 FileCount --> VInt
+
 DataOffset --> Long
+
+Page 11
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 FileName --> String
+
 FileData --> raw file data
+
 The raw file data is the data from the individual files named above.
+
 Starting with Lucene 2.3, doc store files (stored field values and term vectors) can be shared
 in a single set of files for more than one segment. When compound file is enabled, these
 shared files will be added into a single compound file (same format as above) but with the
@@ -503,52 +489,66 @@ extension .cfx.
 The remaining files are all per-segment, and are thus defined by suffix.
 
 9.1. Fields
-Field Info
-Field names are stored in the field info file, with suffix .fnm.
 
-                                                                       Page 12
+Field Info
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
+Field names are stored in the field info file, with suffix .fnm.
 
 FieldInfos (.fnm) --> FNMVersion,FieldsCount, <FieldName, FieldBits> FieldsCount
+
 FNMVersion, FieldsCount --> VInt
+
 FieldName --> String
+
 FieldBits --> Byte
 
+?? The low-order bit is one for indexed fields, and zero for non-indexed fields.
+?? The second lowest-order bit is one for fields that have term vectors stored, and zero for
+
+    fields without term vectors.
+?? If the third lowest-order bit is set (0x04), term positions are stored with the term vectors.
+?? If the fourth lowest-order bit is set (0x08), term offsets are stored with the term vectors.
+?? If the fifth lowest-order bit is set (0x10), norms are omitted for the indexed field.
+?? If the sixth lowest-order bit is set (0x20), payloads are stored for the indexed field.
+
 FNMVersion (added in 2.9) is always -2.
+
 Fields are numbered by their order in this file. Thus field zero is the first field in the file, field
 one the next, and so on. Note that, like document numbers, field numbers are segment
 relative.
+
 Stored Fields
+
+                                                                       Page 12
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 Stored fields are represented by two files:
 1. The field index, or .fdx file.
 
     This contains, for each document, a pointer to its field data, as follows:
+
     FieldIndex (.fdx) --> <FieldValuesPosition> SegSize
+
     FieldValuesPosition --> Uint64
+
     This is used to find the location within the field data file of the fields of a particular
     document. Because it contains fixed-length data, this file may be easily randomly
     accessed. The position of document n 's field data is the Uint64 at n*8 in this file.
 2. The field data, or .fdt file.
     This contains the stored fields of each document, as follows:
+
     FieldData (.fdt) --> <DocFieldData> SegSize
+
     DocFieldData --> FieldCount, <FieldNum, Bits, Value> FieldCount
-    FieldCount --> VInt
-    FieldNum --> VInt
-    Lucene <= 1.4:
-    Bits --> Byte
-    Value --> String
 
-Page 13
+    FieldCount --> VInt
 
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
+    FieldNum --> VInt
 
-    Only the low-order bit of Bits is used. It is one for tokenized fields, and zero for
-    non-tokenized fields.
-    Lucene >= 1.9:
     Bits --> Byte
+
     ?? low order bit is one for tokenized fields
     ?? second bit is one for fields containing binary data
     ?? third bit is one for fields with compression option enabled (if compression is enabled,
@@ -556,57 +556,77 @@ Page 13
          the algorithm used is ZLIB)
 
     Value --> String | BinaryValue (depending on Bits)
+
     BinaryValue --> ValueSize, <Byte>^ValueSize
+
     ValueSize --> VInt
 
 9.2. Term Dictionary
+
 The term dictionary is represented as two files:
 1. The term infos, or tis file.
 
     TermInfoFile (.tis)--> TIVersion, TermCount, IndexInterval, SkipInterval,
     MaxSkipLevels, TermInfos
-    TIVersion --> UInt32
-    TermCount --> UInt64
-    IndexInterval --> UInt32
-    SkipInterval --> UInt32
-    MaxSkipLevels --> UInt32
-    TermInfos --> <TermInfo> TermCount
-    TermInfo --> <Term, DocFreq, FreqDelta, ProxDelta, SkipDelta>
-    Term --> <PrefixLength, Suffix, FieldNum>
-    Suffix --> String
-    PrefixLength, DocFreq, FreqDelta, ProxDelta, SkipDelta
-    --> VInt
 
-                                                                       Page 14
+Page 13
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 Apache Lucene - Index File Formats
 
-    This file is sorted by Term. Terms are ordered first lexicographically (by UTF16
-    character code) by the term's field name, and within that lexicographically (by UTF16
-    character code) by the term's text.
+TIVersion --> UInt32
+
+TermCount --> UInt64
+
+IndexInterval --> UInt32
+
+SkipInterval --> UInt32
+
+MaxSkipLevels --> UInt32
+
+TermInfos --> <TermInfo> TermCount
+
+TermInfo --> <Term, DocFreq, FreqDelta, ProxDelta, SkipDelta>
+
+Term --> <PrefixLength, Suffix, FieldNum>
+
+Suffix --> String
 
-    TIVersion names the version of the format of this file and is -2 in Lucene 1.4.
+PrefixLength, DocFreq, FreqDelta, ProxDelta, SkipDelta
+--> VInt
 
-    Term text prefixes are shared. The PrefixLength is the number of initial characters from
-    the previous term which must be pre-pended to a term's suffix in order to form the term's
-    text. Thus, if the previous term's text was "bone" and the term is "boy", the PrefixLength
-    is two and the suffix is "y".
+This file is sorted by Term. Terms are ordered first lexicographically (by UTF16
+character code) by the term's field name, and within that lexicographically (by UTF16
+character code) by the term's text.
 
-    FieldNumber determines the term's field, whose name is stored in the .fdt file.
+TIVersion names the version of the format of this file and is equal to
+TermInfosWriter.FORMAT_CURRENT.
 
-    DocFreq is the count of documents which contain the term.
+Term text prefixes are shared. The PrefixLength is the number of initial characters from
+the previous term which must be pre-pended to a term's suffix in order to form the term's
+text. Thus, if the previous term's text was "bone" and the term is "boy", the PrefixLength
+is two and the suffix is "y".
 
-    FreqDelta determines the position of this term's TermFreqs within the .frq file. In
-    particular, it is the difference between the position of this term's data in that file and the
-    position of the previous term's data (or zero, for the first term in the file).
+FieldNumber determines the term's field, whose name is stored in the .fdt file.
 
-    ProxDelta determines the position of this term's TermPositions within the .prx file. In
-    particular, it is the difference between the position of this term's data in that file and the
-    position of the previous term's data (or zero, for the first term in the file. For fields with
-    omitTf true, this will be 0 since prox information is not stored.
+DocFreq is the count of documents which contain the term.
+
+FreqDelta determines the position of this term's TermFreqs within the .frq file. In
+particular, it is the difference between the position of this term's data in that file and the
+position of the previous term's data (or zero, for the first term in the file).
+
+ProxDelta determines the position of this term's TermPositions within the .prx file. In
+particular, it is the difference between the position of this term's data in that file and the
+position of the previous term's data (or zero, for the first term in the file. For fields with
+omitTf true, this will be 0 since prox information is not stored.
+
+SkipDelta determines the position of this term's SkipData within the .frq file. In
+
+                                                                       Page 14
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
 
-    SkipDelta determines the position of this term's SkipData within the .frq file. In
     particular, it is the number of bytes after TermFreqs that the SkipData starts. In other
     words, it is the length of the TermFreq data. SkipDelta is only stored if DocFreq is not
     smaller than SkipInterval.
@@ -628,11 +648,6 @@ Copyright © 2006 The Apache Software Foundation. All rights reserved.
 
     IndexInterval --> UInt32
 
-Page 15
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
     SkipInterval --> UInt32
 
     TermIndices --> <TermInfo, IndexDelta> IndexTermCount
@@ -658,6 +673,11 @@ Page 15
 The .frq file contains the lists of documents which contain each term, along with the
 frequency of the term in that document (if omitTf is false).
 
+Page 15
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 FreqFile (.frq) --> <TermFreqs, SkipData> TermCount
 
 TermFreqs --> <TermFreq> DocFreq
@@ -679,12 +699,6 @@ TermFreqs are ordered by term (the term is implicit, from the .tis file).
 TermFreq entries are ordered by increasing document number.
 
 DocDelta: if omitTf is false, this determines both the document number and the frequency. In
-
-                                                                       Page 16
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 particular, DocDelta/2 is the difference between this document number and the previous
 document number (or zero when this is the first document in a TermFreqs). When DocDelta
 is odd, the frequency is one. When DocDelta is even, the frequency is read as another VInt. If
@@ -710,6 +724,11 @@ position of every SkipInterval th entry in FreqFile and ProxFile, respectively.
 are relative to the start of TermFreqs and Positions, to the previous SkipDatum in the
 sequence.
 
+                                                                       Page 16
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 For example, if DocFreq=35 and SkipInterval=16, then there are two SkipData entries,
 containing the 15 th and 31 st document numbers in TermFreqs. The first FreqSkip names the
 number of bytes after the beginning of TermFreqs that the 16 th SkipDatum starts, and the
@@ -717,10 +736,10 @@ second the number of bytes after that that the 32 nd starts. The first ProxSkip
 number of bytes after the beginning of Positions that the 16 th SkipDatum starts, and the
 second the number of bytes after that that the 32 nd starts.
 
-Lucene 2.2 introduces the notion of skip levels. Each term can have multiple skip levels. The
-amount of skip levels for a term is NumSkipLevels = Min(MaxSkipLevels,
-floor(log(DocFreq/log(SkipInterval)))). The number of SkipData entries for a skip level is
-DocFreq/(SkipInterval^(Level + 1)), whereas the lowest skip level is Level=0.
+Each term can have multiple skip levels. The amount of skip levels for a term is
+NumSkipLevels = Min(MaxSkipLevels, floor(log(DocFreq/log(SkipInterval)))). The number
+of SkipData entries for a skip level is DocFreq/(SkipInterval^(Level + 1)), whereas the
+lowest skip level is Level=0.
 Example: SkipInterval = 4, MaxSkipLevels = 2, DocFreq = 35. Then skip level 0 has 8
 SkipData entries, containing the 3rd, 7th, 11th, 15th, 19th, 23rd, 27th, and 31st document
 numbers in TermFreqs. Skip level 1 has 2 SkipData entries, containing the 15th and 31st
@@ -729,11 +748,6 @@ The SkipData entries on all upper levels > 0 contain a SkipChildLevelPointer ref
 corresponding SkipData entry in level-1. In the example has entry 15 on level 1 a pointer to
 entry 15 on level 0 and entry 31 on level 1 a pointer to entry 31 on level 0.
 
-Page 17
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 9.4. Positions
 
 The .prx file contains the lists of positions that each term occurs at within documents. Note
@@ -759,6 +773,11 @@ TermPositions are ordered by term (the term is implicit, from the .tis file).
 Positions entries are ordered by increasing document number (the document number is
 implicit from the .frq file).
 
+Page 17
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 PositionDelta is, if payloads are disabled for the term's field, the difference between the
 position of the current occurrence in the document and the previous occurrence (or zero, if
 this is the first occurrence in this document). If payloads are enabled for the term's field, then
@@ -778,19 +797,7 @@ stored, then this Payload has the same length as the Payload at the previous pos
 
 9.5. Normalization Factors
 
-Pre-2.1: There's a norm file for each indexed field with a byte for each document. The
-
-                                                                       Page 18
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
-.f[0-9]* file contains, for each document, a byte that encodes a value that is multiplied into
-the score for hits on that field:
-
-Norms (.f[0-9]*) --> <Byte> SegSize
-
-2.1 and above: There's a single .nrm file containing all norms:
+There's a single .nrm file containing all norms:
 
 AllNorms (.nrm) --> NormsHeader,<Norms> NumFieldsWithNorms
 
@@ -814,28 +821,24 @@ These are converted to an IEEE single float value as follows:
 
 A separate norm file is created when the norm values of an existing segment are modified.
 When field N is modified, a separate norm file .sN is created, to maintain the norm values for
-that field.
 
-Pre-2.1: Separate norm files are created only for compound segments.
+                                                                       Page 18
 
-2.1 and above: Separate norm files are created (when adequate) for both compound and non
-compound segments.
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
 
-9.6. Term Vectors
+that field.
+Separate norm files are created (when adequate) for both compound and non compound
+segments.
 
+9.6. Term Vectors
 Term Vector support is an optional on a field by field basis. It consists of 3 files.
 1. The Document Index or .tvx file.
 
     For each document, this stores the offset into the document data (.tvd) and field data (.tvf)
     files.
-
-Page 19
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
     DocumentIndex (.tvx) --> TVXVersion<DocumentPosition,FieldPosition> NumDocs
-    TVXVersion --> Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)
+    TVXVersion --> Int (TermVectorsReader.CURRENT)
     DocumentPosition --> UInt64 (offset in the .tvd file)
     FieldPosition --> UInt64 (offset in the .tvf file)
 2. The Document or .tvd file.
@@ -843,7 +846,7 @@ Page 19
     vector info and finally a list of pointers to the field information in the .tvf (Term Vector
     Fields) file.
     Document (.tvd) --> TVDVersion<NumFields, FieldNums, FieldPositions> NumDocs
-    TVDVersion --> Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)
+    TVDVersion --> Int (TermVectorsReader.FORMAT_CURRENT)
     NumFields --> VInt
     FieldNums --> <FieldNumDelta> NumFields
     FieldNumDelta --> VInt
@@ -853,19 +856,27 @@ Page 19
     field information is in the .tvf file.
 3. The Field or .tvf file.
     This file contains, for each field that has a term vector stored, a list of the terms, their
+
+Page 19
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
     frequencies and, optionally, position and offest information.
+
     Field (.tvf) --> TVFVersion<NumTerms, Position/Offset, TermFreqs> NumFields
-    TVFVersion --> Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)
+
+    TVFVersion --> Int (TermVectorsReader.FORMAT_CURRENT)
+
     NumTerms --> VInt
+
     Position/Offset --> Byte
+
     TermFreqs --> <TermText, TermFreq, Positions?, Offsets?> NumTerms
-    TermText --> <PrefixLength, Suffix>
-    PrefixLength --> VInt
 
-                                                                       Page 20
+    TermText --> <PrefixLength, Suffix>
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
+    PrefixLength --> VInt
 
     Suffix --> String
 
@@ -895,13 +906,15 @@ The .del file is optional, and only exists when a segment contains deletions.
 
 Although per-segment, this file is maintained exterior to compound segment files.
 
-Pre-2.1: Deletions (.del) --> ByteCount,BitCount,Bits
-
-2.1 and above: Deletions (.del) --> [Format],ByteCount,BitCount, Bits | DGaps (depending
-on Format)
+Deletions (.del) --> [Format],ByteCount,BitCount, Bits | DGaps (depending on Format)
 
 Format,ByteSize,BitCount --> Uint32
 
+                                                                       Page 20
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 Bits --> <Byte> ByteCount
 
 DGaps --> <DGap,NonzeroByte> NonzeroBytesCount
@@ -915,11 +928,6 @@ excluded.
 
 ByteCount indicates the number of bytes in Bits. It is typically (SegSize/8)+1.
 
-Page 21
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-                                                                                                                Apache Lucene - Index File Formats
-
 BitCount indicates the number of bits that are currently set in Bits.
 
 Bits contains one bit for each document indexed. When the bit corresponding to a document
@@ -947,7 +955,7 @@ uses an Int32 on-disk to store document numbers. This is a limitation of both th
 format and the current implementation. Eventually these should be replaced with either
 UInt64 values, or better yet, VInt values which have no limit.
 
-                                                                       Page 22
+Page 21
 
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
 
\ No newline at end of file
diff --git a/src/site/src/documentation/content/xdocs/fileformats.xml b/src/site/src/documentation/content/xdocs/fileformats.xml
index 2db4d78..b7e9525 100644
--- a/src/site/src/documentation/content/xdocs/fileformats.xml
+++ b/src/site/src/documentation/content/xdocs/fileformats.xml
@@ -12,7 +12,7 @@
 
             <p>
                 This document defines the index file formats used
-                in Lucene version 2.1. If you are using a different
+                in Lucene version 2.9. If you are using a different
                 version of Lucene, please consult the copy of
                 <code>docs/fileformats.html</code>
                 that was distributed
@@ -27,7 +27,7 @@
                 languages</a>.  If these versions are to remain compatible with Apache
                 Lucene, then a language-independent definition of the Lucene index
                 format is required.  This document thus attempts to provide a
-                complete and independent definition of the Apache Lucene 2.1 file
+                complete and independent definition of the Apache Lucene 2.9 file
                 formats.
             </p>
 
@@ -367,7 +367,7 @@
             </tr>
             <tr>
               <td><a href="#Normalization Factors">Norms</a></td>
-              <td>.nrm (pre 2.1: .f[0-9]*)</td>
+              <td>.nrm</td>
               <td>Encodes length and boost factors for docs and fields</td>
             </tr>
             <tr>
@@ -903,32 +903,8 @@
                     -2), followed by the generation recorded as Int64,
                     written twice.
                 </p>
-
-                <p>
-                    <b>Pre-2.1:</b>
-                    Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize&gt;
-                    <sup>SegCount</sup>
-                </p>
-                <p>
-                    <b>2.1 and above:</b>
-                    Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize, DelGen, HasSingleNormFile, NumField,
-                    NormGen<sup>NumField</sup>,
-                    IsCompoundFile&gt;<sup>SegCount</sup>
-                </p>
-                <p>
-                    <b>2.3:</b>
-                    Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile, NumField,
-                    NormGen<sup>NumField</sup>,
-                    IsCompoundFile&gt;<sup>SegCount</sup>
-                </p>
-                <p>
-                    <b>2.4 and above:</b>
-                    Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile, NumField,
-                    NormGen<sup>NumField</sup>,
-                    IsCompoundFile, DeletionCount, HasProx&gt;<sup>SegCount</sup>, Checksum
-                </p>
                 <p>
-                    <b>2.9 and above:</b>
+                    <b>2.9</b>
                     Segments --&gt; Format, Version, NameCounter, SegCount, &lt;SegName, SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile, NumField,
                     NormGen<sup>NumField</sup>,
                     IsCompoundFile, DeletionCount, HasProx, Diagnostics&gt;<sup>SegCount</sup>, CommitUserData, Checksum
@@ -961,7 +937,7 @@
                 </p>
 
                 <p>
-                    Format is -1 as of Lucene 1.4, -3 (SegmentInfos.FORMAT_SINGLE_NORM_FILE) as of Lucene 2.1 and 2.2, -4 (SegmentInfos.FORMAT_SHARED_DOC_STORE) as of Lucene 2.3, -7 (SegmentInfos.FORMAT_HAS_PROX) as of Lucene 2.4, and -9 (SegmentInfos.FORMAT_DIAGNOSTICS) as of Lucene 2.9.
+                    Format is -9 (SegmentInfos.FORMAT_DIAGNOSTICS).
                 </p>
 
                 <p>
@@ -1092,20 +1068,12 @@
                     documents).  This lock file ensures that only one
                     writer is modifying the index at a time.
                 </p>
-
-                <p>
-                    Note that prior to version 2.1, Lucene also used a
-                    commit lock. This was removed in 2.1.
-                </p>
-
             </section>
 
             <section id="Deletable File"><title>Deletable File</title>
 
                 <p>
-                    Prior to Lucene 2.1 there was a file "deletable"
-                    that contained details about files that need to be
-                    deleted. As of 2.1, a writer dynamically computes
+                    A writer dynamically computes
                     the files that are deletable, instead, so no file
                     is written.
                 </p>
@@ -1193,9 +1161,6 @@
                             bit is one for fields that have term vectors stored, and zero for fields
                             without term vectors.
                         </li>
-                        <p>
-                            <b>Lucene &gt;= 1.9:</b>
-                        </p>
                         <li>If the third lowest-order bit is set (0x04), term positions are stored with the term vectors.</li>
                         <li>If the fourth lowest-order bit is set (0x08), term offsets are stored with the term vectors.</li>
                         <li>If the fifth lowest-order bit is set (0x10), norms are omitted for the indexed field.</li>
@@ -1286,22 +1251,6 @@
                         <p>FieldNum --&gt;
                             VInt
                         </p>
-
-                        <p>
-                            <b>Lucene &lt;= 1.4:</b>
-                        </p>
-                        <p>Bits --&gt;
-                            Byte
-                        </p>
-                        <p>Value --&gt;
-                            String
-                        </p>
-                        <p>Only the low-order bit of Bits is used. It is one for
-                            tokenized fields, and zero for non-tokenized fields.
-                        </p>
-                        <p>
-                            <b>Lucene &gt;= 1.9:</b>
-                        </p>
                         <p>Bits --&gt;
                             Byte
                         </p>
@@ -1383,7 +1332,7 @@
                             UTF16 character code) by the term's text.
                         </p>
                         <p>TIVersion names the version of the format
-                            of this file and is -2 in Lucene 1.4.
+                            of this file and is equal to TermInfosWriter.FORMAT_CURRENT.
                         </p>
                         <p>Term
                             text prefixes are shared. The PrefixLength is the number of initial
@@ -1592,7 +1541,7 @@
                     <sup>nd</sup>
                     starts.
                 </p>
-                <p>Lucene 2.2 introduces the notion of skip levels. Each term can have multiple skip levels.
+                <p>Each term can have multiple skip levels.
                    The amount of skip levels for a term is NumSkipLevels = Min(MaxSkipLevels, floor(log(DocFreq/log(SkipInterval)))).
                    The number of SkipData entries for a skip level is DocFreq/(SkipInterval^(Level + 1)), whereas the lowest skip
                    level is Level=0. <br></br>
@@ -1674,20 +1623,8 @@
                 </p>
             </section>
             <section id="Normalization Factors"><title>Normalization Factors</title>
-				<p>
-                    <b>Pre-2.1:</b>
-                    There's a norm file for each indexed field with a byte for
-                    each document. The .f[0-9]* file contains,
-                    for each document, a byte that encodes a value that is multiplied
-                    into the score for hits on that field:
-                </p>
-                <p>Norms
-                    (.f[0-9]*) --&gt; &lt;Byte&gt;
-                    <sup>SegSize</sup>
-                </p>
-				<p>
-                    <b>2.1 and above:</b>
-                    There's a single .nrm file containing all norms:
+
+				        <p>There's a single .nrm file containing all norms:
                 </p>
                 <p>AllNorms
                     (.nrm) --&gt; NormsHeader,&lt;Norms&gt;
@@ -1745,13 +1682,7 @@
 					When field <em>N</em> is modified, a separate norm file <em>.sN</em> 
 					is created, to maintain the norm values for that field.
                 </p>
-				<p>
-                    <b>Pre-2.1:</b>
-                    Separate norm files are created only for compound segments.
-                </p>
-				<p>
-                    <b>2.1 and above:</b>
-                    Separate norm files are created (when adequate) for both compound and non compound segments.
+				<p>Separate norm files are created (when adequate) for both compound and non compound segments.
                 </p>
 
             </section>
@@ -1770,7 +1701,7 @@
                         <p>DocumentIndex (.tvx) --&gt; TVXVersion&lt;DocumentPosition,FieldPosition&gt;
                             <sup>NumDocs</sup>
                         </p>
-                        <p>TVXVersion --&gt; Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)</p>
+                        <p>TVXVersion --&gt; Int (TermVectorsReader.CURRENT)</p>
                         <p>DocumentPosition --&gt; UInt64 (offset in
                         the .tvd file)</p>
                         <p>FieldPosition --&gt; UInt64 (offset in the
@@ -1785,7 +1716,7 @@
                             Document (.tvd) --&gt; TVDVersion&lt;NumFields, FieldNums, FieldPositions&gt;
                             <sup>NumDocs</sup>
                         </p>
-                        <p>TVDVersion --&gt; Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)</p>
+                        <p>TVDVersion --&gt; Int (TermVectorsReader.FORMAT_CURRENT)</p>
                         <p>NumFields --&gt; VInt</p>
                         <p>FieldNums --&gt; &lt;FieldNumDelta&gt;
                             <sup>NumFields</sup>
@@ -1805,7 +1736,7 @@
                         <p>Field (.tvf) --&gt; TVFVersion&lt;NumTerms, Position/Offset, TermFreqs&gt;
                             <sup>NumFields</sup>
                         </p>
-                        <p>TVFVersion --&gt; Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)</p>
+                        <p>TVFVersion --&gt; Int (TermVectorsReader.FORMAT_CURRENT)</p>
                         <p>NumTerms --&gt; VInt</p>
                         <p>Position/Offset --&gt; Byte</p>
                         <p>TermFreqs --&gt; &lt;TermText, TermFreq, Positions?, Offsets?&gt;
@@ -1845,15 +1776,7 @@
 
                 <p>Although per-segment, this file is maintained exterior to compound segment files.
                 </p>
-				
-                <p>
-                <b>Pre-2.1:</b>
-                Deletions
-                    (.del) --&gt; ByteCount,BitCount,Bits
-                </p>
-
                 <p>
-				<b>2.1 and above:</b>
                 Deletions
                     (.del) --&gt; [Format],ByteCount,BitCount, Bits | DGaps (depending on Format)
                 </p>

