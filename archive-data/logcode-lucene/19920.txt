GitDiffStart: ce1231b37cc7f1a275196bde69cd1d8bb6438e3f | Fri Jul 10 12:31:17 2009 +0000
diff --git a/src/java/org/apache/lucene/index/FieldInfos.java b/src/java/org/apache/lucene/index/FieldInfos.java
index e6b079c..443cb86 100644
--- a/src/java/org/apache/lucene/index/FieldInfos.java
+++ b/src/java/org/apache/lucene/index/FieldInfos.java
@@ -122,9 +122,12 @@ final class FieldInfos {
   /** Returns true if any fields do not omitTermFreqAndPositions */
   boolean hasProx() {
     final int numFields = byNumber.size();
-    for(int i=0;i<numFields;i++)
-      if (!fieldInfo(i).omitTermFreqAndPositions)
+    for(int i=0;i<numFields;i++) {
+      final FieldInfo fi = fieldInfo(i);
+      if (fi.isIndexed && !fi.omitTermFreqAndPositions) {
         return true;
+      }
+    }
     return false;
   }
   
diff --git a/src/java/org/apache/lucene/index/SegmentReader.java b/src/java/org/apache/lucene/index/SegmentReader.java
index da94d19..80cee6d 100644
--- a/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/src/java/org/apache/lucene/index/SegmentReader.java
@@ -443,11 +443,7 @@ class SegmentReader extends IndexReader implements Cloneable {
         instance.openDocStores();
       }
 
-      boolean anyProx = false;
-      final int numFields = instance.fieldInfos.size();
-      for(int i=0;!anyProx && i<numFields;i++)
-        if (!instance.fieldInfos.fieldInfo(i).omitTermFreqAndPositions)
-          anyProx = true;
+      boolean anyProx = instance.fieldInfos.hasProx();
 
       instance.tis = new TermInfosReader(cfsDir, instance.segment, instance.fieldInfos, readBufferSize);
 
diff --git a/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java b/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java
index d3c6dd0..77b868c 100644
--- a/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java
+++ b/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java
@@ -209,22 +209,24 @@ public class TestBackwardsCompatibility extends LuceneTestCase
             !oldName.startsWith("20.") &&
             !oldName.startsWith("21.") &&
             !oldName.startsWith("22.")) {
-          // Test on indices >= 2.3
-          assertEquals(5, fields.size());
-          Field f = (Field) d.getField("id");
-          assertEquals(""+i, f.stringValue());
 
-          f = (Field) d.getField("utf8");
-          assertEquals("Lu\uD834\uDD1Ece\uD834\uDD60ne \u0000 \u2620 ab\ud917\udc17cd", f.stringValue());
+          if (d.getField("content3") == null) {
+            assertEquals(5, fields.size());
+            Field f = (Field) d.getField("id");
+            assertEquals(""+i, f.stringValue());
 
-          f = (Field) d.getField("autf8");
-          assertEquals("Lu\uD834\uDD1Ece\uD834\uDD60ne \u0000 \u2620 ab\ud917\udc17cd", f.stringValue());
+            f = (Field) d.getField("utf8");
+            assertEquals("Lu\uD834\uDD1Ece\uD834\uDD60ne \u0000 \u2620 ab\ud917\udc17cd", f.stringValue());
+
+            f = (Field) d.getField("autf8");
+            assertEquals("Lu\uD834\uDD1Ece\uD834\uDD60ne \u0000 \u2620 ab\ud917\udc17cd", f.stringValue());
         
-          f = (Field) d.getField("content2");
-          assertEquals("here is more content with aaa aaa aaa", f.stringValue());
+            f = (Field) d.getField("content2");
+            assertEquals("here is more content with aaa aaa aaa", f.stringValue());
 
-          f = (Field) d.getField("fie\u2C77ld");
-          assertEquals("field with non-ascii name", f.stringValue());
+            f = (Field) d.getField("fie\u2C77ld");
+            assertEquals("field with non-ascii name", f.stringValue());
+          }
         }       
       } else
         // Only ID 7 is deleted
@@ -257,10 +259,16 @@ public class TestBackwardsCompatibility extends LuceneTestCase
     dir.close();
   }
 
+  private int compare(String name, String v) {
+    int v0 = Integer.parseInt(name.substring(0, 2));
+    int v1 = Integer.parseInt(v);
+    return v0 - v1;
+  }
+
   /* Open pre-lockless index, add docs, do a delete &
    * setNorm, and search */
   public void changeIndexWithAdds(String dirName, boolean autoCommit) throws IOException {
-
+    String origDirName = dirName;
     dirName = fullDir(dirName);
 
     Directory dir = FSDirectory.open(new File(dirName));
@@ -274,7 +282,13 @@ public class TestBackwardsCompatibility extends LuceneTestCase
     }
 
     // make sure writer sees right total -- writer seems not to know about deletes in .del?
-    assertEquals("wrong doc count", 45, writer.docCount());
+    final int expected;
+    if (compare(origDirName, "24") < 0) {
+      expected = 45;
+    } else {
+      expected = 46;
+    }
+    assertEquals("wrong doc count", expected, writer.docCount());
     writer.close();
 
     // make sure searching sees right # hits
@@ -386,6 +400,13 @@ public class TestBackwardsCompatibility extends LuceneTestCase
     assertEquals("wrong doc count", 35, writer.docCount());
     writer.close();
 
+    // open fresh writer so we get no prx file in the added segment
+    writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);
+    writer.setUseCompoundFile(doCFS);
+    writer.setMaxBufferedDocs(10);
+    addNoProxDoc(writer);
+    writer.close();
+
     // Delete one doc so we get a .del file:
     IndexReader reader = IndexReader.open(dir);
     Term searchTerm = new Term("id", "7");
@@ -492,6 +513,17 @@ public class TestBackwardsCompatibility extends LuceneTestCase
     writer.addDocument(doc);
   }
 
+  private void addNoProxDoc(IndexWriter writer) throws IOException {
+    Document doc = new Document();
+    Field f = new Field("content3", "aaa", Field.Store.YES, Field.Index.ANALYZED);
+    f.setOmitTf(true);
+    doc.add(f);
+    f = new Field("content4", "aaa", Field.Store.YES, Field.Index.NO);
+    f.setOmitTf(true);
+    doc.add(f);
+    writer.addDocument(doc);
+  }
+
   private void rmDir(String dir) throws IOException {
     File fileDir = new File(fullDir(dir));
     if (fileDir.exists()) {
diff --git a/src/test/org/apache/lucene/index/index.24.cfs.zip b/src/test/org/apache/lucene/index/index.24.cfs.zip
index fc73098..2c666a9 100644
Binary files a/src/test/org/apache/lucene/index/index.24.cfs.zip and b/src/test/org/apache/lucene/index/index.24.cfs.zip differ
diff --git a/src/test/org/apache/lucene/index/index.24.nocfs.zip b/src/test/org/apache/lucene/index/index.24.nocfs.zip
index 37861e3..c223875 100644
Binary files a/src/test/org/apache/lucene/index/index.24.nocfs.zip and b/src/test/org/apache/lucene/index/index.24.nocfs.zip differ

