GitDiffStart: 4661a1b02b1c87fceeecaf3b17ed89f9ccf22c57 | Thu Aug 28 11:50:15 2008 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index a6d0949..ec8a83f 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -122,6 +122,9 @@ API Changes
     3.0 the default will become true.  (Jason Rutherglen via Mike
     McCandless)
 
+19. LUCENE-1367: Add IndexCommit.isDeleted().  (Shalin Shekhar Mangar
+    via Mike McCandless)
+
 Bug fixes
     
  1. LUCENE-1134: Fixed BooleanQuery.rewrite to only optimize a single 
diff --git a/src/java/org/apache/lucene/index/DirectoryIndexReader.java b/src/java/org/apache/lucene/index/DirectoryIndexReader.java
index 5b3f7f9..1d3baf1 100644
--- a/src/java/org/apache/lucene/index/DirectoryIndexReader.java
+++ b/src/java/org/apache/lucene/index/DirectoryIndexReader.java
@@ -401,6 +401,9 @@ abstract class DirectoryIndexReader extends IndexReader {
     public long getGeneration() {
       return generation;
     }
+    public boolean isDeleted() {
+      return false;
+    }
   }
 
   /**
diff --git a/src/java/org/apache/lucene/index/IndexCommit.java b/src/java/org/apache/lucene/index/IndexCommit.java
index 8e567f5..8836d71 100644
--- a/src/java/org/apache/lucene/index/IndexCommit.java
+++ b/src/java/org/apache/lucene/index/IndexCommit.java
@@ -74,6 +74,10 @@ public abstract class IndexCommit implements IndexCommitPoint {
     throw new UnsupportedOperationException("This IndexCommit does not support this method.");
   }
 
+  public boolean isDeleted() {
+    throw new UnsupportedOperationException("This IndexCommit does not support this method.");
+  }
+
   /**
    * Returns true if this commit is an optimized index.
    */
diff --git a/src/java/org/apache/lucene/index/IndexFileDeleter.java b/src/java/org/apache/lucene/index/IndexFileDeleter.java
index 6fa4847..d5edf06 100644
--- a/src/java/org/apache/lucene/index/IndexFileDeleter.java
+++ b/src/java/org/apache/lucene/index/IndexFileDeleter.java
@@ -637,6 +637,10 @@ final class IndexFileDeleter {
       }
     }
 
+    public boolean isDeleted() {
+      return deleted;
+    }
+
     public int compareTo(Object obj) {
       CommitPoint commit = (CommitPoint) obj;
       if (gen < commit.gen) {
diff --git a/src/java/org/apache/lucene/index/SnapshotDeletionPolicy.java b/src/java/org/apache/lucene/index/SnapshotDeletionPolicy.java
index 43b8557..b094adb 100644
--- a/src/java/org/apache/lucene/index/SnapshotDeletionPolicy.java
+++ b/src/java/org/apache/lucene/index/SnapshotDeletionPolicy.java
@@ -109,6 +109,9 @@ public class SnapshotDeletionPolicy implements IndexDeletionPolicy {
           cp.delete();
       }
     }
+    public boolean isDeleted() {
+      return cp.isDeleted();
+    }
     public long getVersion() {
       return cp.getVersion();
     }
diff --git a/src/test/org/apache/lucene/index/TestDeletionPolicy.java b/src/test/org/apache/lucene/index/TestDeletionPolicy.java
index 278af04..a50f595 100644
--- a/src/test/org/apache/lucene/index/TestDeletionPolicy.java
+++ b/src/test/org/apache/lucene/index/TestDeletionPolicy.java
@@ -89,7 +89,9 @@ public class TestDeletionPolicy extends LuceneTestCase
       // On init, delete all commit points:
       Iterator it = commits.iterator();
       while(it.hasNext()) {
-        ((IndexCommit) it.next()).delete();
+        final IndexCommit commit = (IndexCommit) it.next();
+        commit.delete();
+        assertTrue(commit.isDeleted());
       }
     }
     public void onCommit(List commits) {

