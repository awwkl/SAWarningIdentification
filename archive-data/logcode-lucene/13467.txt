GitDiffStart: 8aecefd623b0744485b5daa60b636dd88ac8d04a | Fri Feb 24 14:36:40 2012 +0000
diff --git a/solr/core/src/java/org/apache/solr/handler/component/StatsValuesFactory.java b/solr/core/src/java/org/apache/solr/handler/component/StatsValuesFactory.java
index 882df8f..dcd4682 100644
--- a/solr/core/src/java/org/apache/solr/handler/component/StatsValuesFactory.java
+++ b/solr/core/src/java/org/apache/solr/handler/component/StatsValuesFactory.java
@@ -354,7 +354,9 @@ class DateStatsValues extends AbstractStatsValues<Date> {
    */
   protected void addTypeSpecificStats(NamedList<Object> res) {
     res.add("sum", new Date(sum));
-    res.add("mean", new Date(sum / count));
+    if (count > 0) {
+      res.add("mean", new Date(sum / count));
+    }
   }
 }
 
diff --git a/solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java b/solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java
index 08fdd8d..9805dd8 100644
--- a/solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java
+++ b/solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java
@@ -281,4 +281,62 @@ public class StatsComponentTest extends AbstractSolrTestCase {
 	            , "//lst[@name='false']/double[@name='stddev'][.='0.0']"
 	    );
 	  }
+
+  public void testFieldStatisticsResultsNumericFieldAlwaysMissing() throws Exception {
+    SolrCore core = h.getCore();
+    assertU(adoc("id", "1"));
+    assertU(adoc("id", "2"));
+    assertU(adoc("id", "3"));
+    assertU(adoc("id", "4"));
+    assertU(commit());
+
+    Map<String, String> args = new HashMap<String, String>();
+    args.put(CommonParams.Q, "*:*");
+    args.put(StatsParams.STATS, "true");
+    args.put(StatsParams.STATS_FIELD, "active_i");
+    args.put("indent", "true");
+    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));
+
+    assertQ("test string statistics values", req,
+        "//null[@name='active_i'][.='']");
+  }
+
+  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {
+    SolrCore core = h.getCore();
+    assertU(adoc("id", "1"));
+    assertU(adoc("id", "2"));
+    assertU(adoc("id", "3"));
+    assertU(adoc("id", "4"));
+    assertU(commit());
+
+    Map<String, String> args = new HashMap<String, String>();
+    args.put(CommonParams.Q, "*:*");
+    args.put(StatsParams.STATS, "true");
+    args.put(StatsParams.STATS_FIELD, "active_s");
+    args.put("indent", "true");
+    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));
+
+    assertQ("test string statistics values", req,
+        "//null[@name='active_s'][.='']");
+  }
+
+  //SOLR-3160
+  public void testFieldStatisticsResultsDateFieldAlwaysMissing() throws Exception {
+    SolrCore core = h.getCore();
+
+    assertU(adoc("id", "1"));
+    assertU(adoc("id", "2"));
+    assertU(adoc("id", "3"));
+    assertU(commit());
+
+    Map<String, String> args = new HashMap<String, String>();
+    args.put(CommonParams.Q, "*:*");
+    args.put(StatsParams.STATS, "true");
+    args.put(StatsParams.STATS_FIELD, "active_dt");
+    args.put("indent", "true");
+    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));
+
+    assertQ("test string statistics values", req,
+        "//null[@name='active_dt'][.='']");
+  }
 }

