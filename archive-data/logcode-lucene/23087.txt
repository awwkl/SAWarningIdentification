GitDiffStart: 39c8be64475560c03c4c522b86c95e94a795d5cc | Wed Jan 24 02:59:17 2007 +0000
diff --git a/client/ruby/solrb/lib/solr/request/standard.rb b/client/ruby/solrb/lib/solr/request/standard.rb
index 9f13368..dc5aa11 100755
--- a/client/ruby/solrb/lib/solr/request/standard.rb
+++ b/client/ruby/solrb/lib/solr/request/standard.rb
@@ -66,6 +66,7 @@ module Solr
         
         # facet parameter processing
         if @params[:facets]
+          # TODO need validation of all that is under the :facets Hash too
           hash[:facet] = true
           hash[:"facet.field"] = []
           hash[:"facet.query"] = @params[:facets][:queries]
@@ -73,6 +74,7 @@ module Solr
           hash[:"facet.limit"] = @params[:facets][:limit]
           hash[:"facet.missing"] = @params[:facets][:missing]
           hash[:"facet.mincount"] = @params[:facets][:mincount]
+          hash[:"facet.prefix"] = @params[:facets][:prefix]
           @params[:facets][:fields].each do |f|
             if f.kind_of? Hash
               key = f.keys[0]
@@ -82,6 +84,7 @@ module Solr
               hash[:"f.#{key}.facet.limit"] = value[:limit]
               hash[:"f.#{key}.facet.missing"] = value[:missing]
               hash[:"f.#{key}.facet.mincount"] = value[:mincount]
+              hash[:"f.#{key}.facet.prefix"] = value[:prefix]
             else
               hash[:"facet.field"] << f
             end
diff --git a/client/ruby/solrb/solr/webapps/solr.war b/client/ruby/solrb/solr/webapps/solr.war
index 9dfbf08..23e08b3 100644
Binary files a/client/ruby/solrb/solr/webapps/solr.war and b/client/ruby/solrb/solr/webapps/solr.war differ
diff --git a/client/ruby/solrb/test/unit/standard_request_test.rb b/client/ruby/solrb/test/unit/standard_request_test.rb
index c0aa0db68..93fcdd8 100755
--- a/client/ruby/solrb/test/unit/standard_request_test.rb
+++ b/client/ruby/solrb/test/unit/standard_request_test.rb
@@ -58,21 +58,27 @@ class StandardRequestTest < Test::Unit::TestCase
   def test_facet_params_all
     request = Solr::Request::Standard.new(:query => 'query',
        :facets => {
-         :fields => [:genre,
-                     {:year => {:limit => 50, :mincount => 0, :missing => false, :sort => :term}}], # field that overrides the global facet parameters
+         :fields => [:genre,           
+                     # field that overrides the global facet parameters
+                     {:year => {:limit => 50, :mincount => 0, :missing => false, :sort => :term, :prefix=>"199"}}], 
          :queries => ["q1", "q2"],
+         :prefix => "cat",
          :limit => 5, :zeros => true, :mincount => 20, :sort => :count  # global facet parameters
         }
     )
-    assert_equal true, request.to_hash[:facet]
-    assert_equal [:genre, :year], request.to_hash[:"facet.field"]
-    assert_equal ["q1", "q2"], request.to_hash[:"facet.query"]
-    assert_equal 5, request.to_hash[:"facet.limit"]
-    assert_equal 20, request.to_hash[:"facet.mincount"]
-    assert_equal true, request.to_hash[:"facet.sort"]
-    assert_equal 50, request.to_hash[:"f.year.facet.limit"]
-    assert_equal 0, request.to_hash[:"f.year.facet.mincount"]
-    assert_equal false, request.to_hash[:"f.year.facet.sort"]
+    
+    hash = request.to_hash
+    assert_equal true, hash[:facet]
+    assert_equal [:genre, :year], hash[:"facet.field"]
+    assert_equal ["q1", "q2"], hash[:"facet.query"]
+    assert_equal 5, hash[:"facet.limit"]
+    assert_equal 20, hash[:"facet.mincount"]
+    assert_equal true, hash[:"facet.sort"]
+    assert_equal "cat", hash[:"facet.prefix"]
+    assert_equal 50, hash[:"f.year.facet.limit"]
+    assert_equal 0, hash[:"f.year.facet.mincount"]
+    assert_equal false, hash[:"f.year.facet.sort"]
+    assert_equal "199", hash[:"f.year.facet.prefix"]
   end
 
   def test_basic_sort

