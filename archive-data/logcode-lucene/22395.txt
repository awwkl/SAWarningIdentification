GitDiffStart: 1fec553e28ac9b9fa5f04cac58680cebd87c75df | Wed Jul 11 17:57:51 2007 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index eed161f..ce3d6b5 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -113,6 +113,10 @@ Bug Fixes
 
  5. SOLR-292: Fix MoreLikeThis facet counting. (Pieter Berkel via ryan)
 
+ 6. SOLR-297: Fix bug in RequiredSolrParams where requiring a field
+    specific param would fail if a general default value had been supplied.
+    (hossman)
+ 
 Other Changes
  1. SOLR-135: Moved common classes to org.apache.solr.common and altered the
     build scripts to make two jars: apache-solr-1.3.jar and 
diff --git a/src/java/org/apache/solr/common/params/RequiredSolrParams.java b/src/java/org/apache/solr/common/params/RequiredSolrParams.java
index 5931d72..7abf75b 100755
--- a/src/java/org/apache/solr/common/params/RequiredSolrParams.java
+++ b/src/java/org/apache/solr/common/params/RequiredSolrParams.java
@@ -50,8 +50,41 @@ public class RequiredSolrParams extends SolrParams {
     }
     return val;
   }
+  
+  @Override
+  public String getFieldParam(final String field, final String param) {
+    final String fpname = fpname(field,param);
+    String val = params.get(fpname);
+    if (null == val) {
+      // don't call this.get, we want a specified exception message
+      val = params.get(param);
+      if (null == val)  {
+        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,
+                                 "Missing required parameter: "+fpname+
+                                 " (or default: "+param+")" );
+      }
+    }
+    return val;
+  }
 
   @Override
+  public String[] getFieldParams(final String field, final String param) {
+    final String fpname = fpname(field,param);
+    String[] val = params.getParams(fpname);
+    if (null == val) {
+      // don't call this.getParams, we want a specified exception message
+      val = params.getParams(param);
+      if (null == val)  {
+        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,
+                                 "Missing required parameter: "+fpname+
+                                 " (or default: "+param+")" );
+      }
+    }
+    return val;
+  }
+
+  
+  @Override
   public String[] getParams(String param) {
     String[] vals = params.getParams(param);
     if( vals == null || vals.length == 0 ) {
diff --git a/src/test/org/apache/solr/common/params/SolrParamTest.java b/src/test/org/apache/solr/common/params/SolrParamTest.java
index 2627f3d..27be073 100755
--- a/src/test/org/apache/solr/common/params/SolrParamTest.java
+++ b/src/test/org/apache/solr/common/params/SolrParamTest.java
@@ -127,7 +127,11 @@ public class SolrParamTest extends TestCase
     // field value present
     assertEquals( pbool  , required.getFieldBool(  "fl", "bool" ) );
     // field defaulting (fall through to non-field-specific value)
-    //assertEquals( pint   , required.getFieldInt( "fff",  "int"      ) );
+    assertEquals( pstr   , required.getFieldParams("fakefield", "str")[0] );
+    assertEquals( pstr   , required.getFieldParam( "fakefield", "str"   ) );
+    assertEquals( pbool  , required.getFieldBool(  "fakefield", "bool"  ) );
+    assertEquals( pint   , required.getFieldInt(   "fakefield", "int"   ) );
+    assertEquals( pfloat , required.getFieldFloat( "fakefield", "float" ) );
     
     // Required params which are missing: These should throw a 400
     assertEquals( 400, getReturnCode( new Runnable() { public void run() { required.get( "aaaa" ); } } ) );

