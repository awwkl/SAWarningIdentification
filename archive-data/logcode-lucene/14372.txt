GitDiffStart: c9ad724c1947ba12e66bb784370c286d8f65f9d0 | Sun Dec 4 14:35:46 2011 +0000
diff --git a/modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FloatMagicTest.java b/modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FloatMagicTest.java
index 1fd8410..450c3b7 100644
--- a/modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FloatMagicTest.java
+++ b/modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FloatMagicTest.java
@@ -36,6 +36,7 @@ public class FloatMagicTest extends LuceneTestCase {
     for (int i = 0; i < floats.size(); i++) {
       int4[i] = FloatMagic.toSortable(floats.get(i)) & 0xffffffffL;
 
+      /*
       System.out.println(
           String.format("raw %8s sortable %8s %8s numutils %8s %s",
               Integer.toHexString(Float.floatToRawIntBits(floats.get(i))),
@@ -43,6 +44,7 @@ public class FloatMagicTest extends LuceneTestCase {
               Integer.toHexString(FloatMagic.unsignedOrderedToFloatBits(FloatMagic.toSortable(floats.get(i)))),
               Integer.toHexString(NumericUtils.floatToSortableInt(floats.get(i))),
               floats.get(i)));
+      */
     }
 
     // Sort and compare. Should be identical order.
@@ -52,10 +54,12 @@ public class FloatMagicTest extends LuceneTestCase {
       backFromFixed.add(FloatMagic.fromSortable((int) int4[i]));
     }
 
+    /*
     for (int i = 0; i < int4.length; i++) {
       System.out.println(
           floats.get(i) + " " + FloatMagic.fromSortable((int) int4[i]));
     }
+    */
     
     assertEquals(floats, backFromFixed);
   }
diff --git a/modules/suggest/src/test/org/apache/lucene/search/suggest/fst/TestSort.java b/modules/suggest/src/test/org/apache/lucene/search/suggest/fst/TestSort.java
index 7caa646..d350b03 100644
--- a/modules/suggest/src/test/org/apache/lucene/search/suggest/fst/TestSort.java
+++ b/modules/suggest/src/test/org/apache/lucene/search/suggest/fst/TestSort.java
@@ -87,8 +87,8 @@ public class TestSort extends LuceneTestCase {
 
     File sorted = new File(tempDir, "sorted");
     SortInfo sortInfo = sort.sort(unsorted, sorted);
-    System.out.println("Input size [MB]: " + unsorted.length() / (1024 * 1024));
-    System.out.println(sortInfo);
+    //System.out.println("Input size [MB]: " + unsorted.length() / (1024 * 1024));
+    //System.out.println(sortInfo);
 
     assertFilesIdentical(golden, sorted);
     return sortInfo;

