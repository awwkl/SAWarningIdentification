GitDiffStart: 14b21aae0d3100fdc8682c5ec8c6fda0c640e69c | Tue Apr 12 17:22:32 2005 +0000
diff --git a/src/java/org/apache/lucene/search/BooleanQuery.java b/src/java/org/apache/lucene/search/BooleanQuery.java
index c755fa1..190a63e 100644
--- a/src/java/org/apache/lucene/search/BooleanQuery.java
+++ b/src/java/org/apache/lucene/search/BooleanQuery.java
@@ -405,7 +405,7 @@ public class BooleanQuery extends Query {
       return false;
     BooleanQuery other = (BooleanQuery)o;
     return (this.getBoost() == other.getBoost())
-      &&  Arrays.equals(this.getClauses(), other.getClauses());
+        && this.clauses.equals(other.clauses);
   }
 
   /** Returns a hash code value for this object.*/
diff --git a/src/test/org/apache/lucene/search/TestBooleanQuery.java b/src/test/org/apache/lucene/search/TestBooleanQuery.java
new file mode 100644
index 0000000..261c9d1
--- /dev/null
+++ b/src/test/org/apache/lucene/search/TestBooleanQuery.java
@@ -0,0 +1,34 @@
+package org.apache.lucene.search;
+
+/**
+ * Copyright 2004-2005 The Apache Software Foundation
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import junit.framework.TestCase;
+import org.apache.lucene.index.Term;
+
+public class TestBooleanQuery extends TestCase {
+  public void testEquality() throws Exception {
+    BooleanQuery bq1 = new BooleanQuery();
+    bq1.add(new TermQuery(new Term("field", "value1")), BooleanClause.Occur.SHOULD);
+    bq1.add(new TermQuery(new Term("field", "value2")), BooleanClause.Occur.SHOULD);
+
+    BooleanQuery bq2 = new BooleanQuery();
+    bq2.add(new TermQuery(new Term("field", "value1")), BooleanClause.Occur.SHOULD);
+    bq2.add(new TermQuery(new Term("field", "value2")), BooleanClause.Occur.SHOULD);
+
+    assertEquals(bq1, bq2);
+  }
+}

