GitDiffStart: 2e12d5635e6b58a2f92e3f070705509dbe833c29 | Wed Aug 14 11:57:20 2013 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index b9f95e8..9d6b54a 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -116,6 +116,10 @@ Bug Fixes
   
 * SOLR-5119: Managed schema problems after adding fields via Schema Rest API.
   (Nils KÃ¼bler, Steve Rowe)
+  
+* SOLR-5133: HdfsUpdateLog can fail to close a FileSystem instance if init 
+  is called more than once. (Mark Miller)
+  
 
 Optimizations
 ----------------------
diff --git a/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java b/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java
index e209c85..097a7c4 100644
--- a/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java
+++ b/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java
@@ -42,22 +42,18 @@ import org.apache.solr.util.IOUtils;
 /** @lucene.experimental */
 public class HdfsUpdateLog extends UpdateLog {
   
-  private FileSystem fs;
-  private Path tlogDir;
-  private String confDir;
+  private volatile FileSystem fs;
+  private volatile Path tlogDir;
+  private final String confDir;
 
   public HdfsUpdateLog() {
-    
+    this.confDir = null;
   }
   
   public HdfsUpdateLog(String confDir) {
     this.confDir = confDir;
   }
   
-  public FileSystem getFs() {
-    return fs;
-  }
-  
   // HACK
   // while waiting for HDFS-3107, instead of quickly
   // dropping, we slowly apply
@@ -118,6 +114,14 @@ public class HdfsUpdateLog extends UpdateLog {
     }
     
     try {
+      if (fs != null) {
+        fs.close();
+      }
+    } catch (IOException e) {
+      throw new SolrException(ErrorCode.SERVER_ERROR, e);
+    }
+    
+    try {
       fs = FileSystem.newInstance(new Path(dataDir).toUri(), getConf());
     } catch (IOException e) {
       throw new SolrException(ErrorCode.SERVER_ERROR, e);

