GitDiffStart: 8c5b480e717a5b2f76ac331d805cdcd5825a89eb | Tue Jun 2 00:36:41 2015 +0000
diff --git a/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java b/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java
index 067f0db..66231b0 100644
--- a/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java
+++ b/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java
@@ -618,7 +618,7 @@ public class HttpSolrCall {
     }
   }
 
-  void sendError(int code, String message) throws IOException {
+  protected void sendError(int code, String message) throws IOException {
     try {
       response.sendError(code, message);
     } catch (EOFException e) {
diff --git a/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java b/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java
index a82710e..090ebef 100644
--- a/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java
+++ b/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java
@@ -222,7 +222,7 @@ public class SolrDispatchFilter extends BaseSolrFilter {
       }
     }
     
-    HttpSolrCall call = new HttpSolrCall(this, cores, (HttpServletRequest) request, (HttpServletResponse) response, retry);
+    HttpSolrCall call = getHttpSolrCall((HttpServletRequest) request, (HttpServletResponse) response, retry);
     try {
       Action result = call.call();
       switch (result) {
@@ -240,6 +240,14 @@ public class SolrDispatchFilter extends BaseSolrFilter {
       call.destroy();
     }
   }
+  
+  /**
+   * Allow a subclass to modify the HttpSolrCall.  In particular, subclasses may
+   * want to add attributes to the request and send errors differently
+   */
+  protected HttpSolrCall getHttpSolrCall(HttpServletRequest request, HttpServletResponse response, boolean retry) {
+    return new HttpSolrCall(this, cores, request, response, retry);
+  }
 
   private boolean authenticateRequest(ServletRequest request, ServletResponse response, final AtomicReference<ServletRequest> wrappedRequest) throws IOException {
     final AtomicBoolean isAuthenticated = new AtomicBoolean(false);

