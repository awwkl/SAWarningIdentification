GitDiffStart: e1ad6e3ef76eb0c8cc40250d69e30d6782cc48b6 | Thu Nov 1 22:37:42 2007 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index c4932d2..ef9c00b 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -214,7 +214,11 @@ Other Changes
       init(Map<String,String> args)
     Existing classes should continue to work, but it is encouraged to update
     the initialization code.  (Henri Biestro vi ryan)
- 
+
+ 5. SOLR-367: The create method in all TokenFilter and Tokenizer Factories
+    provided by Solr now declare their specific return types instead of just
+    using "TokenStream" (hossman)
+     
 
 ================== Release 1.2, 20070602 ==================
 
diff --git a/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java b/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java
index e48bb10..6beafd8 100644
--- a/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java
@@ -153,7 +153,7 @@ public class CapitalizationFilterFactory extends BaseTokenFilterFactory
     return word.toString();
   }
   
-  public TokenStream create(TokenStream input) {
+  public CapitalizationFilter create(TokenStream input) {
     return new CapitalizationFilter(input,this);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java b/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java
index 3ec106f..0c2235d 100644
--- a/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java
@@ -49,7 +49,7 @@ public class EdgeNGramFilterFactory extends BaseTokenFilterFactory {
     }
   }
 
-  public TokenStream create(TokenStream input) {
+  public EdgeNGramTokenFilter create(TokenStream input) {
     return new EdgeNGramTokenFilter(input, side, minGramSize, maxGramSize);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java b/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java
index 38f2f62..b837832 100755
--- a/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java
@@ -48,7 +48,7 @@ public class EdgeNGramTokenizerFactory extends BaseTokenizerFactory {
         }
     }
 
-    public TokenStream create(Reader input) {
+    public EdgeNGramTokenizer create(Reader input) {
         return new EdgeNGramTokenizer(input, side, minGramSize, maxGramSize);
     }
 }
diff --git a/src/java/org/apache/solr/analysis/EnglishPorterFilterFactory.java b/src/java/org/apache/solr/analysis/EnglishPorterFilterFactory.java
index 812bf8d..ba467dd 100644
--- a/src/java/org/apache/solr/analysis/EnglishPorterFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/EnglishPorterFilterFactory.java
@@ -48,7 +48,7 @@ public class EnglishPorterFilterFactory extends BaseTokenFilterFactory {
 
   private Set protectedWords = null;
 
-  public TokenStream create(TokenStream input) {
+  public EnglishPorterFilter create(TokenStream input) {
     return new EnglishPorterFilter(input,protectedWords);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java b/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java
index c9944a9..bf97025 100755
--- a/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java
@@ -24,7 +24,7 @@ import org.apache.solr.analysis.BaseTokenFilterFactory;
  * Factory for HyphenatedWordsFilter
  */
 public class HyphenatedWordsFilterFactory extends BaseTokenFilterFactory {
-	public TokenStream create(TokenStream input) {
+	public HyphenatedWordsFilter create(TokenStream input) {
 		return new HyphenatedWordsFilter(input);
 	}
 }
diff --git a/src/java/org/apache/solr/analysis/ISOLatin1AccentFilterFactory.java b/src/java/org/apache/solr/analysis/ISOLatin1AccentFilterFactory.java
index 14d4f84..8181edd 100644
--- a/src/java/org/apache/solr/analysis/ISOLatin1AccentFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/ISOLatin1AccentFilterFactory.java
@@ -24,7 +24,7 @@ import org.apache.lucene.analysis.TokenStream;
  *  $Id$ 
  */
 public class ISOLatin1AccentFilterFactory extends BaseTokenFilterFactory {
-  public TokenStream create(TokenStream input) {
+  public ISOLatin1AccentFilter create(TokenStream input) {
     return new ISOLatin1AccentFilter(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java b/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java
index 9a40061..55a6c39 100644
--- a/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java
@@ -66,7 +66,7 @@ public class KeepWordFilterFactory extends BaseTokenFilterFactory {
     this.ignoreCase = ignoreCase;
   }
   
-  public TokenStream create(TokenStream input) {
+  public KeepWordFilter create(TokenStream input) {
     return new KeepWordFilter(input,words,ignoreCase);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java b/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java
index a8ddc16..8b9318a 100644
--- a/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java
@@ -26,7 +26,7 @@ import java.io.Reader;
  * @version $Id: LowerCaseTokenizerFactory.java 382610 2006-03-03 01:43:03Z yonik $
  */
 public class KeywordTokenizerFactory extends BaseTokenizerFactory {
-  public TokenStream create(Reader input) {
+  public KeywordTokenizer create(Reader input) {
     return new KeywordTokenizer(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/LengthFilterFactory.java b/src/java/org/apache/solr/analysis/LengthFilterFactory.java
index 5edf5a5..15e96d0 100644
--- a/src/java/org/apache/solr/analysis/LengthFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/LengthFilterFactory.java
@@ -33,7 +33,7 @@ public class LengthFilterFactory extends BaseTokenFilterFactory {
     min=Integer.parseInt(args.get("min"));
     max=Integer.parseInt(args.get("max"));
   }
-  public TokenStream create(TokenStream input) {
+  public LengthFilter create(TokenStream input) {
     return new LengthFilter(input,min,max);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java b/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java
index 1ee188b..9b14fd9 100644
--- a/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java
@@ -26,7 +26,7 @@ import java.io.Reader;
  * @version $Id$
  */
 public class LetterTokenizerFactory extends BaseTokenizerFactory {
-  public TokenStream create(Reader input) {
+  public LetterTokenizer create(Reader input) {
     return new LetterTokenizer(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java b/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java
index ba2b08c..bc2ce5f 100644
--- a/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java
@@ -24,7 +24,7 @@ import org.apache.lucene.analysis.LowerCaseFilter;
  * @version $Id$
  */
 public class LowerCaseFilterFactory extends BaseTokenFilterFactory {
-  public TokenStream create(TokenStream input) {
+  public LowerCaseFilter create(TokenStream input) {
     return new LowerCaseFilter(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java b/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java
index 4a99a72..6246e24 100644
--- a/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java
@@ -26,7 +26,7 @@ import java.io.Reader;
  * @version $Id$
  */
 public class LowerCaseTokenizerFactory extends BaseTokenizerFactory {
-  public TokenStream create(Reader input) {
+  public LowerCaseTokenizer create(Reader input) {
     return new LowerCaseTokenizer(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/NGramFilterFactory.java b/src/java/org/apache/solr/analysis/NGramFilterFactory.java
index 758b62a..428acee 100644
--- a/src/java/org/apache/solr/analysis/NGramFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/NGramFilterFactory.java
@@ -43,7 +43,7 @@ public class NGramFilterFactory extends BaseTokenFilterFactory {
         : NGramTokenFilter.DEFAULT_MIN_NGRAM_SIZE);
   }
 
-  public TokenStream create(TokenStream input) {
+  public NGramTokenFilter create(TokenStream input) {
     return new NGramTokenFilter(input, minGramSize, maxGramSize);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java b/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java
index b9af8ad..47ce749 100755
--- a/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java
@@ -42,7 +42,7 @@ public class NGramTokenizerFactory extends BaseTokenizerFactory {
     }
 
     /** Creates the {@link TokenStream} of n-grams from the given {@link Reader}. */
-    public TokenStream create(Reader input) {
+    public NGramTokenizer create(Reader input) {
         return new NGramTokenizer(input, minGramSize, maxGramSize);
     }
 }
diff --git a/src/java/org/apache/solr/analysis/PatternReplaceFilterFactory.java b/src/java/org/apache/solr/analysis/PatternReplaceFilterFactory.java
index 6d137b4..0306a80 100644
--- a/src/java/org/apache/solr/analysis/PatternReplaceFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/PatternReplaceFilterFactory.java
@@ -60,7 +60,7 @@ public class PatternReplaceFilterFactory extends BaseTokenFilterFactory {
     }
 
   }
-  public TokenStream create(TokenStream input) {
+  public PatternReplaceFilter create(TokenStream input) {
     return new PatternReplaceFilter(input, p, replacement, all);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/PhoneticFilterFactory.java b/src/java/org/apache/solr/analysis/PhoneticFilterFactory.java
index b66f4e8..c0c4188 100644
--- a/src/java/org/apache/solr/analysis/PhoneticFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/PhoneticFilterFactory.java
@@ -86,7 +86,7 @@ public class PhoneticFilterFactory extends BaseTokenFilterFactory
     }
   }
   
-  public TokenStream create(TokenStream input) {
+  public PhoneticFilter create(TokenStream input) {
     return new PhoneticFilter(input,encoder,name,inject);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/PorterStemFilterFactory.java b/src/java/org/apache/solr/analysis/PorterStemFilterFactory.java
index 6fdf6e7..36bc0f9 100644
--- a/src/java/org/apache/solr/analysis/PorterStemFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/PorterStemFilterFactory.java
@@ -24,7 +24,7 @@ import org.apache.lucene.analysis.PorterStemFilter;
  * @version $Id$
  */
 public class PorterStemFilterFactory extends BaseTokenFilterFactory {
-  public TokenStream create(TokenStream input) {
+  public PorterStemFilter create(TokenStream input) {
     return new PorterStemFilter(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilterFactory.java b/src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilterFactory.java
index b9e8c44..202eb0e 100644
--- a/src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilterFactory.java
@@ -23,7 +23,7 @@ import org.apache.lucene.analysis.TokenStream;
  * @version $Id:$
  */
 public class RemoveDuplicatesTokenFilterFactory extends BaseTokenFilterFactory {
-  public TokenStream create(TokenStream input) {
+  public RemoveDuplicatesTokenFilter create(TokenStream input) {
     return new RemoveDuplicatesTokenFilter(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory.java b/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory.java
index 8538c53..ba05dbf 100644
--- a/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory.java
@@ -42,7 +42,7 @@ public class SnowballPorterFilterFactory extends BaseTokenFilterFactory {
     SolrCore.log.fine("SnowballPorterFilterFactory: language=" + language);
   }
   
-  public TokenStream create(TokenStream input) {
+  public SnowballFilter create(TokenStream input) {
     return new SnowballFilter(input,language);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/StandardFilterFactory.java b/src/java/org/apache/solr/analysis/StandardFilterFactory.java
index e204de0..fb4b33c 100644
--- a/src/java/org/apache/solr/analysis/StandardFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/StandardFilterFactory.java
@@ -24,7 +24,7 @@ import org.apache.lucene.analysis.standard.StandardFilter;
  * @version $Id$
  */
 public class StandardFilterFactory extends BaseTokenFilterFactory {
-  public TokenStream create(TokenStream input) {
+  public StandardFilter create(TokenStream input) {
     return new StandardFilter(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/StandardTokenizerFactory.java b/src/java/org/apache/solr/analysis/StandardTokenizerFactory.java
index ad3f8f9..503eca7 100644
--- a/src/java/org/apache/solr/analysis/StandardTokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/StandardTokenizerFactory.java
@@ -27,7 +27,7 @@ import java.io.Reader;
  */
 
 public class StandardTokenizerFactory extends BaseTokenizerFactory {
-  public TokenStream create(Reader input) {
+  public StandardTokenizer create(Reader input) {
     return new StandardTokenizer(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/StopFilterFactory.java b/src/java/org/apache/solr/analysis/StopFilterFactory.java
index 56e50ac..4acd153 100644
--- a/src/java/org/apache/solr/analysis/StopFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/StopFilterFactory.java
@@ -51,7 +51,7 @@ public class StopFilterFactory extends BaseTokenFilterFactory {
   private Set stopWords = StopFilter.makeStopSet(StopAnalyzer.ENGLISH_STOP_WORDS);
   private boolean ignoreCase;
 
-  public TokenStream create(TokenStream input) {
+  public StopFilter create(TokenStream input) {
     return new StopFilter(input,stopWords,ignoreCase);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/SynonymFilterFactory.java b/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
index ff89f46..d8d413c 100644
--- a/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
@@ -113,7 +113,7 @@ public class SynonymFilterFactory extends BaseTokenFilterFactory {
   }
 
 
-  public TokenStream create(TokenStream input) {
+  public SynonymFilter create(TokenStream input) {
     return new SynonymFilter(input,synMap,ignoreCase);
   }
 
diff --git a/src/java/org/apache/solr/analysis/TrimFilterFactory.java b/src/java/org/apache/solr/analysis/TrimFilterFactory.java
index b441bee..2a89999 100644
--- a/src/java/org/apache/solr/analysis/TrimFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/TrimFilterFactory.java
@@ -46,7 +46,7 @@ public class TrimFilterFactory extends BaseTokenFilterFactory {
     }
   }
   
-  public TokenStream create(TokenStream input) {
+  public TrimFilter create(TokenStream input) {
     return new TrimFilter(input, updateOffsets);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/WhitespaceTokenizerFactory.java b/src/java/org/apache/solr/analysis/WhitespaceTokenizerFactory.java
index dce1d59..ec8aca0 100644
--- a/src/java/org/apache/solr/analysis/WhitespaceTokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/WhitespaceTokenizerFactory.java
@@ -26,7 +26,7 @@ import java.io.Reader;
  * @version $Id$
  */
 public class WhitespaceTokenizerFactory extends BaseTokenizerFactory {
-  public TokenStream create(Reader input) {
+  public WhitespaceTokenizer create(Reader input) {
     return new WhitespaceTokenizer(input);
   }
 }
diff --git a/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory.java b/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory.java
index 83ed445..dcc533a 100644
--- a/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory.java
@@ -42,7 +42,7 @@ public class WordDelimiterFilterFactory extends BaseTokenFilterFactory {
     splitOnCaseChange = getInt("splitOnCaseChange", 1);
   }
 
-  public TokenStream create(TokenStream input) {
+  public WordDelimiterFilter create(TokenStream input) {
     return new WordDelimiterFilter(input,
                                    generateWordParts, generateNumberParts,
                                    catenateWords, catenateNumbers, catenateAll,

