GitDiffStart: 37345a65d3b7183ee299dc2a17f6c6ecffe92d0d | Fri Oct 19 16:02:31 2007 +0000
diff --git a/client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse.java b/client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse.java
index 0ddc25b..b7aefd1 100644
--- a/client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse.java
+++ b/client/java/solrj/src/org/apache/solr/client/solrj/response/LukeResponse.java
@@ -195,9 +195,10 @@ public class LukeResponse extends SolrResponseBase {
     // Parse indexinfo
     indexInfo = (NamedList<Object>) res.get("index");
 
+    NamedList<Object> schema = (NamedList<Object>) res.get("schema");
     NamedList<Object> flds = (NamedList<Object>) res.get("fields");
-    if (flds == null) {
-      flds = (NamedList<Object>) ((NamedList<Object>) res.get("schema")).get("fields");
+    if (flds == null && schema != null ) {
+      flds = (NamedList<Object>) schema.get("fields");
     }
     if (flds != null) {
       fieldInfo = new HashMap<String, FieldInfo>();
@@ -208,16 +209,17 @@ public class LukeResponse extends SolrResponseBase {
       }
     }
 
-    NamedList<Object> fldTypes = (NamedList<Object>) ((NamedList<Object>) res.get("schema")).get("types");
-    if (fldTypes != null) {
-      fieldTypeInfo = new HashMap<String, FieldTypeInfo>();
-      for (Map.Entry<String, Object> fieldType : fldTypes) {
-        FieldTypeInfo ft = new FieldTypeInfo(fieldType.getKey());
-        ft.read((NamedList<Object>) fieldType.getValue());
-        fieldTypeInfo.put(fieldType.getKey(), ft);
+    if( schema != null ) {
+      NamedList<Object> fldTypes = (NamedList<Object>) schema.get("types");
+      if (fldTypes != null) {
+        fieldTypeInfo = new HashMap<String, FieldTypeInfo>();
+        for (Map.Entry<String, Object> fieldType : fldTypes) {
+          FieldTypeInfo ft = new FieldTypeInfo(fieldType.getKey());
+          ft.read((NamedList<Object>) fieldType.getValue());
+          fieldTypeInfo.put(fieldType.getKey(), ft);
+        }
       }
     }
-
   }
 
   //----------------------------------------------------------------
diff --git a/client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests.java b/client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests.java
index 50b4da5..8bac75c 100644
--- a/client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests.java
+++ b/client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests.java
@@ -27,6 +27,8 @@ import java.util.List;
 import junit.framework.Assert;
 
 import org.apache.solr.client.solrj.request.DirectXmlRequest;
+import org.apache.solr.client.solrj.request.LukeRequest;
+import org.apache.solr.client.solrj.response.LukeResponse;
 import org.apache.solr.client.solrj.response.QueryResponse;
 import org.apache.solr.client.solrj.response.UpdateResponse;
 import org.apache.solr.client.solrj.util.ClientUtils;
@@ -252,4 +254,31 @@ abstract public class SolrExampleTests extends SolrExampleTestBase
     server.commit();
     assertNumFound( "*:*", 0 ); // make sure it got out
   }
+  
+  
+  public void testLukeHandler() throws Exception
+  {    
+    SolrServer server = getSolrServer();
+    
+    // Empty the database...
+    server.deleteByQuery( "*:*" );// delete everything!
+    
+    SolrInputDocument[] doc = new SolrInputDocument[5];
+    for( int i=0; i<doc.length; i++ ) {
+      doc[i] = new SolrInputDocument();
+      doc[i].setField( "id", "ID"+i, 1.0f );
+      server.add( doc[i] );
+    }
+    server.commit();
+    assertNumFound( "*:*", doc.length ); // make sure it got in
+    
+    LukeRequest luke = new LukeRequest();
+    luke.setShowSchema( false );
+    LukeResponse rsp = luke.process( server );
+    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null
+    
+    luke.setShowSchema( true );
+    rsp = luke.process( server );
+    assertNotNull( rsp.getFieldTypeInfo() ); 
+  }
 }

