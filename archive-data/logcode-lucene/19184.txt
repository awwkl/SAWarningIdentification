GitDiffStart: c11776d2c6ddd7ae3b58d851b378395a3ea87a56 | Wed Oct 7 15:41:09 2009 +0000
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java
index d328ae8..72a5c78 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java
@@ -43,8 +43,6 @@ import org.apache.lucene.analysis.standard.StandardTokenizer;
  * A default set of stopwords is used unless an alternative list is specified, but the
  * exclusion list is empty by default.
  * </p>
- * 
- * @version $Id$
  */
 public class GermanAnalyzer extends Analyzer {
   
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanStemFilter.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanStemFilter.java
index df71c8c..29601ff 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanStemFilter.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanStemFilter.java
@@ -31,8 +31,6 @@ import org.apache.lucene.analysis.tokenattributes.TermAttribute;
  * not be stemmed at all. The stemmer used can be changed at runtime after the
  * filter object is created (as long as it is a {@link GermanStemmer}).
  * </p>
- *
- * @version   $Id$
  */
 public final class GermanStemFilter extends TokenFilter
 {
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanStemmer.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanStemmer.java
index 6a55fd1..c20b94e 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanStemmer.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanStemmer.java
@@ -25,8 +25,6 @@ package org.apache.lucene.analysis.de;
  * "A Fast and Simple Stemming Algorithm for German Words" by J&ouml;rg
  * Caumanns (joerg.caumanns at isst.fhg.de).
  * </p>
- *
- * @version   $Id$
  */
 public class GermanStemmer
 {
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java
index bbcff01..4e5c231 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java
@@ -42,8 +42,6 @@ import java.util.Set;
  * A default set of stopwords is used unless an alternative list is specified, but the
  * exclusion list is empty by default.
  * </p>
- *
- * @version $Id$
  */
 public final class FrenchAnalyzer extends Analyzer {
 
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter.java
index 12a55e9..ecca817 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter.java
@@ -31,8 +31,6 @@ import java.io.IOException;
  * "&#x5C;u0001yrtnuoc". This is useful when implementing efficient leading
  * wildcards search.
  * </p>
- * 
- * @version $Id$
  */
 public final class ReverseStringFilter extends TokenFilter {
 
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java
index 47b26c9..17e61db 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java
@@ -36,8 +36,6 @@ import org.apache.lucene.analysis.Tokenizer;
  * will not be indexed at all).
  * A default set of stopwords is used unless an alternative list is specified.
  * </p>
- *
- * @version $Id$
  */
 public final class RussianAnalyzer extends Analyzer
 {
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianLetterTokenizer.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianLetterTokenizer.java
index 340c5a1..bd346f3 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianLetterTokenizer.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianLetterTokenizer.java
@@ -26,8 +26,6 @@ import org.apache.lucene.util.AttributeSource;
 /**
  * A RussianLetterTokenizer is a {@link Tokenizer} that extends {@link LetterTokenizer}
  * by also allowing the basic latin digits 0-9. 
- *
- * @version $Id$
  */
 
 public class RussianLetterTokenizer extends CharTokenizer
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianLowerCaseFilter.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianLowerCaseFilter.java
index f4f588d..b4f9e54 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianLowerCaseFilter.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianLowerCaseFilter.java
@@ -28,8 +28,6 @@ import org.apache.lucene.analysis.tokenattributes.TermAttribute;
  * Normalizes token text to lower case.
  * @deprecated Use {@link LowerCaseFilter} instead, which has the same
  *  functionality. This filter will be removed in Lucene 3.1
- *
- * @version $Id$
  */
 public final class RussianLowerCaseFilter extends TokenFilter
 {
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemFilter.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemFilter.java
index feb372c..55cdf4e 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemFilter.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemFilter.java
@@ -32,8 +32,6 @@ import java.io.IOException;
  * The input should be filtered by {@link LowerCaseFilter} before passing it to RussianStemFilter ,
  * because RussianStemFilter only works with lowercase characters.
  * </p>
- *
- * @version   $Id$
  */
 public final class RussianStemFilter extends TokenFilter
 {
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer.java
index 6573209..9f95b37 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer.java
@@ -19,9 +19,6 @@ package org.apache.lucene.analysis.ru;
 
 /**
  * Russian stemming algorithm implementation (see http://snowball.sourceforge.net for detailed description).
- *
- *
- * @version $Id$
  */
 class RussianStemmer
 {
diff --git a/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer.java b/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer.java
index 128d8b1..2a3c997 100644
--- a/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer.java
+++ b/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ru/TestRussianAnalyzer.java
@@ -31,9 +31,6 @@ import org.apache.lucene.analysis.tokenattributes.TermAttribute;
 
 /**
  * Test case for RussianAnalyzer.
- *
- *
- * @version   $Id$
  */
 
 public class TestRussianAnalyzer extends BaseTokenStreamTestCase
diff --git a/contrib/misc/src/java/org/apache/lucene/misc/HighFreqTerms.java b/contrib/misc/src/java/org/apache/lucene/misc/HighFreqTerms.java
index 328242d..5960345 100644
--- a/contrib/misc/src/java/org/apache/lucene/misc/HighFreqTerms.java
+++ b/contrib/misc/src/java/org/apache/lucene/misc/HighFreqTerms.java
@@ -27,8 +27,6 @@ import java.io.File;
 /**
  * <code>HighFreqTerms</code> class extracts terms and their frequencies out
  * of an existing Lucene index.
- *
- * @version $Id$
  */
 public class HighFreqTerms {
   
diff --git a/contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable.java b/contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable.java
index 969dc80..fa80756 100644
--- a/contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable.java
+++ b/contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable.java
@@ -32,8 +32,6 @@ import java.rmi.server.UnicastRemoteObject;
 
 /**
  * A remote searchable implementation.
- *
- * @version $Id$
  */
 public class RemoteSearchable
   extends UnicastRemoteObject
diff --git a/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable.java b/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable.java
index a7c4de7..dc4715e 100644
--- a/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable.java
+++ b/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable.java
@@ -31,9 +31,6 @@ import java.util.Collections;
 import java.util.Set;
 import java.util.HashSet;
 
-/**
- *  @version $Id$
- */
 public class TestRemoteSearchable extends LuceneTestCase {
   public TestRemoteSearchable(String name) {
     super(name);
diff --git a/src/java/org/apache/lucene/analysis/LengthFilter.java b/src/java/org/apache/lucene/analysis/LengthFilter.java
index f111650..b7ce8c0 100644
--- a/src/java/org/apache/lucene/analysis/LengthFilter.java
+++ b/src/java/org/apache/lucene/analysis/LengthFilter.java
@@ -23,9 +23,6 @@ import org.apache.lucene.analysis.tokenattributes.TermAttribute;
 
 /**
  * Removes words that are too long or too short from the stream.
- *
- *
- * @version $Id$
  */
 public final class LengthFilter extends TokenFilter {
 
diff --git a/src/java/org/apache/lucene/analysis/LowerCaseFilter.java b/src/java/org/apache/lucene/analysis/LowerCaseFilter.java
index 91f89d7..7fe2d49 100644
--- a/src/java/org/apache/lucene/analysis/LowerCaseFilter.java
+++ b/src/java/org/apache/lucene/analysis/LowerCaseFilter.java
@@ -23,8 +23,6 @@ import org.apache.lucene.analysis.tokenattributes.TermAttribute;
 
 /**
  * Normalizes token text to lower case.
- *
- * @version $Id$
  */
 public final class LowerCaseFilter extends TokenFilter {
   public LowerCaseFilter(TokenStream in) {
diff --git a/src/java/org/apache/lucene/analysis/WordlistLoader.java b/src/java/org/apache/lucene/analysis/WordlistLoader.java
index ca77050..29d619d 100644
--- a/src/java/org/apache/lucene/analysis/WordlistLoader.java
+++ b/src/java/org/apache/lucene/analysis/WordlistLoader.java
@@ -27,9 +27,6 @@ import java.util.HashSet;
 
 /**
  * Loader for text files that represent a list of stopwords.
- *
- *
- * @version $Id$
  */
 public class WordlistLoader {
 
diff --git a/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java b/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java
index 5401bcb..3d8dce2 100644
--- a/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java
+++ b/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java
@@ -39,8 +39,6 @@ import java.util.Set;
  *   <li> As of 2.9, Tokens incorrectly identified as acronyms
  *        are corrected (see <a href="https://issues.apache.org/jira/browse/LUCENE-1068">LUCENE-1608</a>
  * </ul>
- *
- * @version $Id$
  */
 public class StandardAnalyzer extends Analyzer {
   private Set stopSet;
diff --git a/src/java/org/apache/lucene/index/CompoundFileReader.java b/src/java/org/apache/lucene/index/CompoundFileReader.java
index 85b786d..43fe0e6 100644
--- a/src/java/org/apache/lucene/index/CompoundFileReader.java
+++ b/src/java/org/apache/lucene/index/CompoundFileReader.java
@@ -31,9 +31,6 @@ import java.io.IOException;
  * Class for accessing a compound stream.
  * This class implements a directory, but is limited to only read operations.
  * Directory methods that would normally modify data throw an exception.
- *
- *
- * @version $Id$
  */
 class CompoundFileReader extends Directory {
 
diff --git a/src/java/org/apache/lucene/index/CompoundFileWriter.java b/src/java/org/apache/lucene/index/CompoundFileWriter.java
index 70b6db9..4ad92d8 100644
--- a/src/java/org/apache/lucene/index/CompoundFileWriter.java
+++ b/src/java/org/apache/lucene/index/CompoundFileWriter.java
@@ -45,9 +45,6 @@ import java.io.IOException;
  * file. The {directory} that follows has that many entries. Each directory entry
  * contains a long pointer to the start of this file's data section, and a String
  * with that file's name.
- *
- *
- * @version $Id$
  */
 final class CompoundFileWriter {
 
diff --git a/src/java/org/apache/lucene/index/FieldsReader.java b/src/java/org/apache/lucene/index/FieldsReader.java
index 61c4a83..d1597fa 100644
--- a/src/java/org/apache/lucene/index/FieldsReader.java
+++ b/src/java/org/apache/lucene/index/FieldsReader.java
@@ -34,8 +34,6 @@ import java.util.zip.DataFormatException;
  * Class responsible for access to stored document fields.
  * <p/>
  * It uses &lt;segment&gt;.fdt and &lt;segment&gt;.fdx; files.
- *
- * @version $Id$
  */
 final class FieldsReader implements Cloneable {
   private final FieldInfos fieldInfos;
diff --git a/src/java/org/apache/lucene/index/IndexFileNameFilter.java b/src/java/org/apache/lucene/index/IndexFileNameFilter.java
index a7037fd..0a0565b 100644
--- a/src/java/org/apache/lucene/index/IndexFileNameFilter.java
+++ b/src/java/org/apache/lucene/index/IndexFileNameFilter.java
@@ -23,8 +23,6 @@ import java.util.HashSet;
 
 /**
  * Filename filter that accept filenames and extensions only created by Lucene.
- *
- * @version $rcs = ' $Id: Exp $ ' ;
  */
 public class IndexFileNameFilter implements FilenameFilter {
 
diff --git a/src/java/org/apache/lucene/index/IndexFileNames.java b/src/java/org/apache/lucene/index/IndexFileNames.java
index 1155acf..ce98b95 100644
--- a/src/java/org/apache/lucene/index/IndexFileNames.java
+++ b/src/java/org/apache/lucene/index/IndexFileNames.java
@@ -19,8 +19,6 @@ package org.apache.lucene.index;
 
 /**
  * Useful constants representing filenames and extensions used by lucene
- *
- * @version $rcs = ' $Id: Exp $ ' ;
  */
 final class IndexFileNames {
 
diff --git a/src/java/org/apache/lucene/index/IndexReader.java b/src/java/org/apache/lucene/index/IndexReader.java
index f8af62d..8b2de92 100644
--- a/src/java/org/apache/lucene/index/IndexReader.java
+++ b/src/java/org/apache/lucene/index/IndexReader.java
@@ -74,8 +74,6 @@ import java.util.Map;
  synchronization, you should <b>not</b> synchronize on the
  <code>IndexReader</code> instance; use your own
  (non-Lucene) objects instead.
- 
- @version $Id$
 */
 public abstract class IndexReader implements Cloneable {
 
diff --git a/src/java/org/apache/lucene/index/MultiReader.java b/src/java/org/apache/lucene/index/MultiReader.java
index 12d7c75..cb2f412 100644
--- a/src/java/org/apache/lucene/index/MultiReader.java
+++ b/src/java/org/apache/lucene/index/MultiReader.java
@@ -30,10 +30,8 @@ import org.apache.lucene.index.DirectoryReader.MultiTermEnum;
 import org.apache.lucene.index.DirectoryReader.MultiTermPositions;
 import org.apache.lucene.search.DefaultSimilarity;
 
-/** An IndexReader which reads multiple indexes, appending their content.
- *
- * @version $Id$
- */
+/** An IndexReader which reads multiple indexes, appending
+ * their content. */
 public class MultiReader extends IndexReader implements Cloneable {
   protected IndexReader[] subReaders;
   private int[] starts;                           // 1st docno for each segment
diff --git a/src/java/org/apache/lucene/index/TermVectorsReader.java b/src/java/org/apache/lucene/index/TermVectorsReader.java
index cb578c5..21d83e2 100644
--- a/src/java/org/apache/lucene/index/TermVectorsReader.java
+++ b/src/java/org/apache/lucene/index/TermVectorsReader.java
@@ -24,9 +24,6 @@ import org.apache.lucene.store.IndexInput;
 import java.io.IOException;
 import java.util.Arrays;
 
-/**
- * @version $Id$
- */
 class TermVectorsReader implements Cloneable {
 
   // NOTE: if you make a new format, it must be larger than
diff --git a/src/java/org/apache/lucene/search/ConstantScoreQuery.java b/src/java/org/apache/lucene/search/ConstantScoreQuery.java
index 2a69889..946fc16 100644
--- a/src/java/org/apache/lucene/search/ConstantScoreQuery.java
+++ b/src/java/org/apache/lucene/search/ConstantScoreQuery.java
@@ -25,9 +25,6 @@ import java.util.Set;
 /**
  * A query that wraps a filter and simply returns a constant score equal to the
  * query boost for every document in the filter.
- *
- *
- * @version $Id$
  */
 public class ConstantScoreQuery extends Query {
   protected final Filter filter;
diff --git a/src/java/org/apache/lucene/search/ConstantScoreRangeQuery.java b/src/java/org/apache/lucene/search/ConstantScoreRangeQuery.java
index caf68df..305e9d5 100644
--- a/src/java/org/apache/lucene/search/ConstantScoreRangeQuery.java
+++ b/src/java/org/apache/lucene/search/ConstantScoreRangeQuery.java
@@ -35,7 +35,6 @@ import java.text.Collator;
  * @deprecated Use {@link TermRangeQuery} for term ranges or
  * {@link NumericRangeQuery} for numeric ranges instead.
  * This class will be removed in Lucene 3.0.
- * @version $Id$
  */
 public class ConstantScoreRangeQuery extends TermRangeQuery
 {
diff --git a/src/java/org/apache/lucene/search/FieldCache.java b/src/java/org/apache/lucene/search/FieldCache.java
index 6ab7d7f..50b9917 100644
--- a/src/java/org/apache/lucene/search/FieldCache.java
+++ b/src/java/org/apache/lucene/search/FieldCache.java
@@ -35,7 +35,6 @@ import java.text.DecimalFormat;
  * <p>Created: May 19, 2004 11:13:14 AM
  *
  * @since   lucene 1.4
- * @version $Id$
  * @see org.apache.lucene.util.FieldCacheSanityChecker
  */
 public interface FieldCache {
diff --git a/src/java/org/apache/lucene/search/FieldCacheImpl.java b/src/java/org/apache/lucene/search/FieldCacheImpl.java
index 325286a..419d713 100644
--- a/src/java/org/apache/lucene/search/FieldCacheImpl.java
+++ b/src/java/org/apache/lucene/search/FieldCacheImpl.java
@@ -42,7 +42,6 @@ import org.apache.lucene.util.FieldCacheSanityChecker;
  * <p>Created: May 19, 2004 4:40:36 PM
  *
  * @since   lucene 1.4
- * @version $Id$
  */
  // TODO: change interface to FieldCache in 3.0 when removed
 class FieldCacheImpl implements ExtendedFieldCache {
diff --git a/src/java/org/apache/lucene/search/FieldDoc.java b/src/java/org/apache/lucene/search/FieldDoc.java
index ad22a1c..9c00e74 100644
--- a/src/java/org/apache/lucene/search/FieldDoc.java
+++ b/src/java/org/apache/lucene/search/FieldDoc.java
@@ -33,7 +33,6 @@ package org.apache.lucene.search;
  * <p>Created: Feb 11, 2004 1:23:38 PM
  *
  * @since   lucene 1.4
- * @version $Id$
  * @see ScoreDoc
  * @see TopFieldDocs
  */
diff --git a/src/java/org/apache/lucene/search/FieldDocSortedHitQueue.java b/src/java/org/apache/lucene/search/FieldDocSortedHitQueue.java
index 93d48b8..16157a9 100644
--- a/src/java/org/apache/lucene/search/FieldDocSortedHitQueue.java
+++ b/src/java/org/apache/lucene/search/FieldDocSortedHitQueue.java
@@ -29,7 +29,6 @@ import java.util.Locale;
  * <p>Created: Feb 11, 2004 2:04:21 PM
  *
  * @since   lucene 1.4
- * @version $Id$
  */
 class FieldDocSortedHitQueue
 extends PriorityQueue {
diff --git a/src/java/org/apache/lucene/search/FieldSortedHitQueue.java b/src/java/org/apache/lucene/search/FieldSortedHitQueue.java
index 466b4cd..73eb04a 100644
--- a/src/java/org/apache/lucene/search/FieldSortedHitQueue.java
+++ b/src/java/org/apache/lucene/search/FieldSortedHitQueue.java
@@ -31,7 +31,6 @@ import java.util.Locale;
  * <p>Created: Dec 8, 2003 12:56:03 PM
  *
  * @since   lucene 1.4
- * @version $Id$
  * @see Searcher#search(Query,Filter,int,Sort)
  * @see FieldCache
  * @deprecated see {@link FieldValueHitQueue}
diff --git a/src/java/org/apache/lucene/search/FilteredQuery.java b/src/java/org/apache/lucene/search/FilteredQuery.java
index 5c0826d..f8edd3f 100644
--- a/src/java/org/apache/lucene/search/FilteredQuery.java
+++ b/src/java/org/apache/lucene/search/FilteredQuery.java
@@ -34,7 +34,6 @@ import java.util.Set;
  * <p>Created: Apr 20, 2004 8:58:29 AM
  *
  * @since   1.4
- * @version $Id$
  * @see     CachingWrapperFilter
  */
 public class FilteredQuery
diff --git a/src/java/org/apache/lucene/search/HitCollector.java b/src/java/org/apache/lucene/search/HitCollector.java
index 481e759..8b2698e 100644
--- a/src/java/org/apache/lucene/search/HitCollector.java
+++ b/src/java/org/apache/lucene/search/HitCollector.java
@@ -24,7 +24,6 @@ package org.apache.lucene.search;
  * (on a multi-segment index) API.
  * 
  * @see Searcher#search(Query,HitCollector)
- * @version $Id$
  * @deprecated Please use {@link Collector} instead.
  */
 public abstract class HitCollector {
diff --git a/src/java/org/apache/lucene/search/QueryFilter.java b/src/java/org/apache/lucene/search/QueryFilter.java
index a50f647..41cc43a 100644
--- a/src/java/org/apache/lucene/search/QueryFilter.java
+++ b/src/java/org/apache/lucene/search/QueryFilter.java
@@ -22,7 +22,6 @@ package org.apache.lucene.search;
  * query.  Results are cached, so that searches after the first on the same
  * index using this filter are much faster.
  *
- * @version $Id$
  * @deprecated use a CachingWrapperFilter with QueryWrapperFilter
  */
 public class QueryFilter extends CachingWrapperFilter {
diff --git a/src/java/org/apache/lucene/search/ScoreDocComparator.java b/src/java/org/apache/lucene/search/ScoreDocComparator.java
index 3dbc6c0..14839c5 100644
--- a/src/java/org/apache/lucene/search/ScoreDocComparator.java
+++ b/src/java/org/apache/lucene/search/ScoreDocComparator.java
@@ -24,7 +24,6 @@ package org.apache.lucene.search;
  * <p>Created: Feb 3, 2004 9:00:16 AM 
  *
  * @since   lucene 1.4
- * @version $Id$
  * @deprecated use {@link FieldComparator}
  */
 public interface ScoreDocComparator {
diff --git a/src/java/org/apache/lucene/search/Sort.java b/src/java/org/apache/lucene/search/Sort.java
index 8008393..a2bfe39 100644
--- a/src/java/org/apache/lucene/search/Sort.java
+++ b/src/java/org/apache/lucene/search/Sort.java
@@ -96,7 +96,6 @@ import java.util.Arrays;
  * <p>Created: Feb 12, 2004 10:53:57 AM
  *
  * @since   lucene 1.4
- * @version $Id$
  */
 public class Sort
 implements Serializable {
diff --git a/src/java/org/apache/lucene/search/SortComparator.java b/src/java/org/apache/lucene/search/SortComparator.java
index dee456d..a5f0f29 100644
--- a/src/java/org/apache/lucene/search/SortComparator.java
+++ b/src/java/org/apache/lucene/search/SortComparator.java
@@ -44,7 +44,6 @@ import java.io.IOException;
  * Created: Apr 21, 2004 5:08:38 PM
  * 
  * 
- * @version $Id$
  * @since 1.4
  * @deprecated Please use {@link FieldComparatorSource} instead.
  */
diff --git a/src/java/org/apache/lucene/search/SortComparatorSource.java b/src/java/org/apache/lucene/search/SortComparatorSource.java
index d7c8992..075ff53 100644
--- a/src/java/org/apache/lucene/search/SortComparatorSource.java
+++ b/src/java/org/apache/lucene/search/SortComparatorSource.java
@@ -34,8 +34,6 @@ import java.io.Serializable;
  * instance on every call to the server, so hashCode/equals is very important in
  * that situation.
  * 
- * @version $Id: SortComparatorSource.java 747019 2009-02-23 13:59:50Z
- *          mikemccand $
  * @since 1.4
  * @deprecated Please use {@link FieldComparatorSource} instead.
  */
diff --git a/src/java/org/apache/lucene/search/SortField.java b/src/java/org/apache/lucene/search/SortField.java
index d6eade4..7e7de06 100644
--- a/src/java/org/apache/lucene/search/SortField.java
+++ b/src/java/org/apache/lucene/search/SortField.java
@@ -34,7 +34,6 @@ import org.apache.lucene.util.StringHelper;
  * <p>Created: Feb 11, 2004 1:25:29 PM
  *
  * @since   lucene 1.4
- * @version $Id$
  * @see Sort
  */
 public class SortField
diff --git a/src/java/org/apache/lucene/search/TopFieldDocs.java b/src/java/org/apache/lucene/search/TopFieldDocs.java
index 8df575b..a0e657f 100644
--- a/src/java/org/apache/lucene/search/TopFieldDocs.java
+++ b/src/java/org/apache/lucene/search/TopFieldDocs.java
@@ -24,7 +24,6 @@ package org.apache.lucene.search;
  * <p>Created: Feb 12, 2004 8:58:46 AM 
  *
  * @since   lucene 1.4
- * @version $Id$
  * @see Searcher#search(Query,Filter,int,Sort)
  */
 public class TopFieldDocs
diff --git a/src/java/org/apache/lucene/search/WildcardTermEnum.java b/src/java/org/apache/lucene/search/WildcardTermEnum.java
index 306a6d6..330c0f1 100644
--- a/src/java/org/apache/lucene/search/WildcardTermEnum.java
+++ b/src/java/org/apache/lucene/search/WildcardTermEnum.java
@@ -28,8 +28,6 @@ import org.apache.lucene.index.Term;
  * <p>
  * Term enumerations are always ordered by Term.compareTo().  Each term in
  * the enumeration is greater than all that precede it.
- *
- * @version $Id$
  */
 public class WildcardTermEnum extends FilteredTermEnum {
   final Term searchTerm;
diff --git a/src/java/org/apache/lucene/store/Lock.java b/src/java/org/apache/lucene/store/Lock.java
index 8310bf0..3a7f08f 100644
--- a/src/java/org/apache/lucene/store/Lock.java
+++ b/src/java/org/apache/lucene/store/Lock.java
@@ -28,8 +28,6 @@ import java.io.IOException;
  *   }.run();
  * </pre>
  *
- *
- * @version $Id$
  * @see Directory#makeLock(String)
  */
 public abstract class Lock {
diff --git a/src/java/org/apache/lucene/store/RAMDirectory.java b/src/java/org/apache/lucene/store/RAMDirectory.java
index d1f48aa..84d29cc 100644
--- a/src/java/org/apache/lucene/store/RAMDirectory.java
+++ b/src/java/org/apache/lucene/store/RAMDirectory.java
@@ -29,8 +29,6 @@ import java.util.Set;
  * A memory-resident {@link Directory} implementation.  Locking
  * implementation is by default the {@link SingleInstanceLockFactory}
  * but can be changed with {@link #setLockFactory}.
- *
- * @version $Id$
  */
 public class RAMDirectory extends Directory implements Serializable {
 
diff --git a/src/java/org/apache/lucene/store/RAMInputStream.java b/src/java/org/apache/lucene/store/RAMInputStream.java
index ba2afd1..3336f49 100644
--- a/src/java/org/apache/lucene/store/RAMInputStream.java
+++ b/src/java/org/apache/lucene/store/RAMInputStream.java
@@ -21,8 +21,6 @@ import java.io.IOException;
 
 /**
  * A memory-resident {@link IndexInput} implementation.
- * 
- * @version $Id$
  */
 
 class RAMInputStream extends IndexInput implements Cloneable {
diff --git a/src/java/org/apache/lucene/store/RAMOutputStream.java b/src/java/org/apache/lucene/store/RAMOutputStream.java
index 8486935..6a2df4e 100644
--- a/src/java/org/apache/lucene/store/RAMOutputStream.java
+++ b/src/java/org/apache/lucene/store/RAMOutputStream.java
@@ -21,8 +21,6 @@ import java.io.IOException;
 
 /**
  * A memory-resident {@link IndexOutput} implementation.
- * 
- * @version $Id$
  */
 
 public class RAMOutputStream extends IndexOutput {
diff --git a/src/java/org/apache/lucene/util/BitVector.java b/src/java/org/apache/lucene/util/BitVector.java
index a342e4d..41ce022 100644
--- a/src/java/org/apache/lucene/util/BitVector.java
+++ b/src/java/org/apache/lucene/util/BitVector.java
@@ -31,9 +31,6 @@ import org.apache.lucene.store.IndexOutput;
   <li>inlinable get() method;</li>
   <li>store and load, as bit set or d-gaps, depending on sparseness;</li> 
   </ul>
-
-
-  @version $Id$
   */
 public final class BitVector implements Cloneable {
 
diff --git a/src/java/org/apache/lucene/util/Constants.java b/src/java/org/apache/lucene/util/Constants.java
index 6c20a42..cb51aff 100644
--- a/src/java/org/apache/lucene/util/Constants.java
+++ b/src/java/org/apache/lucene/util/Constants.java
@@ -21,9 +21,6 @@ import org.apache.lucene.LucenePackage;
 
 /**
  * Some useful constants.
- *
- *
- * @version $Id$
  **/
 
 public final class Constants {
diff --git a/src/java/org/apache/lucene/util/StringHelper.java b/src/java/org/apache/lucene/util/StringHelper.java
index 1ee8e3c..36675ec 100644
--- a/src/java/org/apache/lucene/util/StringHelper.java
+++ b/src/java/org/apache/lucene/util/StringHelper.java
@@ -20,8 +20,6 @@ package org.apache.lucene.util;
 
 /**
  * Methods for manipulating strings.
- *
- * $Id$
  */
 public abstract class StringHelper {
   /**
diff --git a/src/test/org/apache/lucene/TestSearch.java b/src/test/org/apache/lucene/TestSearch.java
index 7ccf452..659d82c 100644
--- a/src/test/org/apache/lucene/TestSearch.java
+++ b/src/test/org/apache/lucene/TestSearch.java
@@ -32,10 +32,7 @@ import org.apache.lucene.index.*;
 import org.apache.lucene.search.*;
 import org.apache.lucene.queryParser.*;
 
-/** JUnit adaptation of an older test case SearchTest.
- *
- * @version $Id$
- */
+/** JUnit adaptation of an older test case SearchTest. */
 public class TestSearch extends LuceneTestCase {
 
     /** Main for running test case by itself. */
diff --git a/src/test/org/apache/lucene/TestSearchForDuplicates.java b/src/test/org/apache/lucene/TestSearchForDuplicates.java
index 576c4ff..04c7280 100644
--- a/src/test/org/apache/lucene/TestSearchForDuplicates.java
+++ b/src/test/org/apache/lucene/TestSearchForDuplicates.java
@@ -32,11 +32,6 @@ import org.apache.lucene.util.LuceneTestCase;
 import junit.framework.TestSuite;
 import junit.textui.TestRunner;
 
-
-/** JUnit adaptation of an older test case DocTest.
- *
- * @version $Id$
- */
 public class TestSearchForDuplicates extends LuceneTestCase {
 
     /** Main for running test case by itself. */
diff --git a/src/test/org/apache/lucene/document/TestBinaryDocument.java b/src/test/org/apache/lucene/document/TestBinaryDocument.java
index e7dfc0f..529a0e6 100644
--- a/src/test/org/apache/lucene/document/TestBinaryDocument.java
+++ b/src/test/org/apache/lucene/document/TestBinaryDocument.java
@@ -26,9 +26,6 @@ import org.apache.lucene.store.MockRAMDirectory;
 
 /**
  * Tests {@link Document} class.
- *
- *
- * @version $Id$
  */
 public class TestBinaryDocument extends LuceneTestCase
 {
diff --git a/src/test/org/apache/lucene/document/TestDocument.java b/src/test/org/apache/lucene/document/TestDocument.java
index 0de18c3..3105e2c 100644
--- a/src/test/org/apache/lucene/document/TestDocument.java
+++ b/src/test/org/apache/lucene/document/TestDocument.java
@@ -30,9 +30,6 @@ import org.apache.lucene.util.LuceneTestCase;
 
 /**
  * Tests {@link Document} class.
- *
- *
- * @version $Id$
  */
 public class TestDocument extends LuceneTestCase
 {
diff --git a/src/test/org/apache/lucene/index/TestCompoundFile.java b/src/test/org/apache/lucene/index/TestCompoundFile.java
index 32a55e9..377bf01 100644
--- a/src/test/org/apache/lucene/index/TestCompoundFile.java
+++ b/src/test/org/apache/lucene/index/TestCompoundFile.java
@@ -31,10 +31,6 @@ import org.apache.lucene.store._TestHelper;
 import org.apache.lucene.util._TestUtil;
 
 
-/**
- *
- * @version $Id$
- */
 public class TestCompoundFile extends LuceneTestCase
 {
     /** Main for running test case by itself. */
diff --git a/src/test/org/apache/lucene/index/TestDoc.java b/src/test/org/apache/lucene/index/TestDoc.java
index 5087a3d..01b8d56 100644
--- a/src/test/org/apache/lucene/index/TestDoc.java
+++ b/src/test/org/apache/lucene/index/TestDoc.java
@@ -37,10 +37,7 @@ import org.apache.lucene.store.FSDirectory;
 import org.apache.lucene.util.LuceneTestCase;
 
 
-/** JUnit adaptation of an older test case DocTest.
- *
- * @version $Id$
- */
+/** JUnit adaptation of an older test case DocTest. */
 public class TestDoc extends LuceneTestCase {
 
     /** Main for running test case by itself. */
diff --git a/src/test/org/apache/lucene/index/TestIndexWriter.java b/src/test/org/apache/lucene/index/TestIndexWriter.java
index 737f80d..352b843 100644
--- a/src/test/org/apache/lucene/index/TestIndexWriter.java
+++ b/src/test/org/apache/lucene/index/TestIndexWriter.java
@@ -67,10 +67,6 @@ import org.apache.lucene.store.SingleInstanceLockFactory;
 import org.apache.lucene.util.UnicodeUtil;
 import org.apache.lucene.util._TestUtil;
 
-/**
- *
- * @version $Id$
- */
 public class TestIndexWriter extends BaseTokenStreamTestCase {
     public TestIndexWriter(String name) {
       super(name, new HashSet(Arrays.asList(new String[]{
diff --git a/src/test/org/apache/lucene/search/TestBooleanPrefixQuery.java b/src/test/org/apache/lucene/search/TestBooleanPrefixQuery.java
index 77fbe9d..ff13bb3 100644
--- a/src/test/org/apache/lucene/search/TestBooleanPrefixQuery.java
+++ b/src/test/org/apache/lucene/search/TestBooleanPrefixQuery.java
@@ -36,7 +36,6 @@ import java.io.IOException;
 
 /**
  *
- * @version $Id$
  **/
 
 public class TestBooleanPrefixQuery extends LuceneTestCase {
diff --git a/src/test/org/apache/lucene/search/TestBooleanScorer.java b/src/test/org/apache/lucene/search/TestBooleanScorer.java
index 96ab5fa..a0d4d8e 100644
--- a/src/test/org/apache/lucene/search/TestBooleanScorer.java
+++ b/src/test/org/apache/lucene/search/TestBooleanScorer.java
@@ -29,10 +29,6 @@ import org.apache.lucene.store.RAMDirectory;
 
 import org.apache.lucene.util.LuceneTestCase;
 
-/**
- *
- * @version $rcs = ' $Id$ ' ;
- */
 public class TestBooleanScorer extends LuceneTestCase
 {
 
diff --git a/src/test/org/apache/lucene/search/TestFilteredQuery.java b/src/test/org/apache/lucene/search/TestFilteredQuery.java
index 16f98b8..52560f3 100644
--- a/src/test/org/apache/lucene/search/TestFilteredQuery.java
+++ b/src/test/org/apache/lucene/search/TestFilteredQuery.java
@@ -36,7 +36,6 @@ import java.util.BitSet;
  * <p>Created: Apr 21, 2004 1:21:46 PM
  *
  *
- * @version $Id$
  * @since   1.4
  */
 public class TestFilteredQuery extends LuceneTestCase {
diff --git a/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java b/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java
index b3accef..30ddeba 100644
--- a/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java
+++ b/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java
@@ -38,7 +38,6 @@ import java.util.LinkedList;
  * This class tests the MultiPhraseQuery class.
  *
  *
- * @version $Id$
  */
 public class TestMultiPhraseQuery extends LuceneTestCase
 {
diff --git a/src/test/org/apache/lucene/search/TestMultiSearcher.java b/src/test/org/apache/lucene/search/TestMultiSearcher.java
index 3c19995..3810740 100644
--- a/src/test/org/apache/lucene/search/TestMultiSearcher.java
+++ b/src/test/org/apache/lucene/search/TestMultiSearcher.java
@@ -38,8 +38,6 @@ import java.util.Set;
 
 /**
  * Tests {@link MultiSearcher} class.
- *
- * @version $Id$
  */
 public class TestMultiSearcher extends LuceneTestCase
 {
diff --git a/src/test/org/apache/lucene/search/TestMultiSearcherRanking.java b/src/test/org/apache/lucene/search/TestMultiSearcherRanking.java
index 99f6c62..ef313be 100644
--- a/src/test/org/apache/lucene/search/TestMultiSearcherRanking.java
+++ b/src/test/org/apache/lucene/search/TestMultiSearcherRanking.java
@@ -33,7 +33,6 @@ import java.io.IOException;
  * Tests {@link MultiSearcher} ranking, i.e. makes sure this bug is fixed:
  * http://issues.apache.org/bugzilla/show_bug.cgi?id=31841
  *
- * @version $Id: TestMultiSearcher.java 150492 2004-09-06 22:01:49Z dnaber $
  */
 public class TestMultiSearcherRanking extends LuceneTestCase {
   
diff --git a/src/test/org/apache/lucene/search/TestMultiThreadTermVectors.java b/src/test/org/apache/lucene/search/TestMultiThreadTermVectors.java
index 425baa5..538d332 100644
--- a/src/test/org/apache/lucene/search/TestMultiThreadTermVectors.java
+++ b/src/test/org/apache/lucene/search/TestMultiThreadTermVectors.java
@@ -28,10 +28,6 @@ import org.apache.lucene.util.English;
 
 import java.io.IOException;
 
-/**
- *
- * @version $rcs = ' $Id$ ' ;
- */
 public class TestMultiThreadTermVectors extends LuceneTestCase {
   private RAMDirectory directory = new RAMDirectory();
   public int numDocs = 100;
diff --git a/src/test/org/apache/lucene/search/TestPhrasePrefixQuery.java b/src/test/org/apache/lucene/search/TestPhrasePrefixQuery.java
index e5b22b9..e92a6cc 100644
--- a/src/test/org/apache/lucene/search/TestPhrasePrefixQuery.java
+++ b/src/test/org/apache/lucene/search/TestPhrasePrefixQuery.java
@@ -32,9 +32,6 @@ import java.util.LinkedList;
 
 /**
  * This class tests PhrasePrefixQuery class.
- *
- *
- * @version $Id$
  */
 public class TestPhrasePrefixQuery
     extends LuceneTestCase
diff --git a/src/test/org/apache/lucene/search/TestSort.java b/src/test/org/apache/lucene/search/TestSort.java
index bd04ad5..9e13872 100644
--- a/src/test/org/apache/lucene/search/TestSort.java
+++ b/src/test/org/apache/lucene/search/TestSort.java
@@ -48,7 +48,6 @@ import org.apache.lucene.util.LuceneTestCase;
  * <p>Created: Feb 17, 2004 4:55:10 PM
  *
  * @since   lucene 1.4
- * @version $Id$
  */
 
 public class TestSort extends LuceneTestCase implements Serializable {
diff --git a/src/test/org/apache/lucene/search/TestThreadSafe.java b/src/test/org/apache/lucene/search/TestThreadSafe.java
index 695095c..2509d76 100755
--- a/src/test/org/apache/lucene/search/TestThreadSafe.java
+++ b/src/test/org/apache/lucene/search/TestThreadSafe.java
@@ -29,10 +29,6 @@ import java.util.Random;
 import java.util.List;
 import java.io.IOException;
 
-/**
- * 
- * @version $Id$
- */
 public class TestThreadSafe extends LuceneTestCase {
   Random r;
   Directory dir1;
diff --git a/src/test/org/apache/lucene/search/TestWildcard.java b/src/test/org/apache/lucene/search/TestWildcard.java
index 207bee7..6279710 100644
--- a/src/test/org/apache/lucene/search/TestWildcard.java
+++ b/src/test/org/apache/lucene/search/TestWildcard.java
@@ -33,9 +33,6 @@ import java.io.IOException;
 
 /**
  * TestWildcard tests the '*' and '?' wildcard characters.
- *
- * @version $Id$
- * 
  */
 public class TestWildcard
     extends LuceneTestCase {
diff --git a/src/test/org/apache/lucene/store/MockRAMDirectory.java b/src/test/org/apache/lucene/store/MockRAMDirectory.java
index 1c75c02..12efb52 100644
--- a/src/test/org/apache/lucene/store/MockRAMDirectory.java
+++ b/src/test/org/apache/lucene/store/MockRAMDirectory.java
@@ -32,7 +32,6 @@ import java.util.Arrays;
 /**
  * This is a subclass of RAMDirectory that adds methods
  * intended to be used only by unit tests.
- * @version $Id: RAMDirectory.java 437897 2006-08-29 01:13:10Z yonik $
  */
 
 public class MockRAMDirectory extends RAMDirectory {
diff --git a/src/test/org/apache/lucene/store/TestRAMDirectory.java b/src/test/org/apache/lucene/store/TestRAMDirectory.java
index b431394..ecb84a7 100644
--- a/src/test/org/apache/lucene/store/TestRAMDirectory.java
+++ b/src/test/org/apache/lucene/store/TestRAMDirectory.java
@@ -37,9 +37,6 @@ import org.apache.lucene.util.English;
 /**
  * JUnit testcase to test RAMDirectory. RAMDirectory itself is used in many testcases,
  * but not one of them uses an different constructor other than the default constructor.
- *
- * 
- * @version $Id: RAMDirectory.java 150537 2004-09-28 22:45:26 +0200 (Di, 28 Sep 2004) cutting $
  */
 public class TestRAMDirectory extends LuceneTestCase {
   
diff --git a/src/test/org/apache/lucene/util/TestBitVector.java b/src/test/org/apache/lucene/util/TestBitVector.java
index fe27ada..5d2a7a0 100644
--- a/src/test/org/apache/lucene/util/TestBitVector.java
+++ b/src/test/org/apache/lucene/util/TestBitVector.java
@@ -25,9 +25,6 @@ import org.apache.lucene.store.RAMDirectory;
 
 /**
  * <code>TestBitVector</code> tests the <code>BitVector</code>, obviously.
- *
- * 
- * @version $Id$
  */
 public class TestBitVector extends LuceneTestCase
 {

