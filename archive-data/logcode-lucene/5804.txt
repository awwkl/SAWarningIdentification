GitDiffStart: a2a9f2a6f9cba3b27b248102d88431b8b234530e | Thu Jul 17 09:19:02 2014 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/index/FreqProxFields.java b/lucene/core/src/java/org/apache/lucene/index/FreqProxFields.java
index 4856339..795afd3 100644
--- a/lucene/core/src/java/org/apache/lucene/index/FreqProxFields.java
+++ b/lucene/core/src/java/org/apache/lucene/index/FreqProxFields.java
@@ -176,9 +176,11 @@ class FreqProxFields extends Fields {
 
       // not found:
       ord = lo + 1;
-      if (ord == numTerms) {
+      if (ord >= numTerms) {
         return SeekStatus.END;
       } else {
+        int textStart = postingsArray.textStarts[sortedTermIDs[ord]];
+        terms.bytePool.setBytesRef(scratch, textStart);
         return SeekStatus.NOT_FOUND;
       }
     }
diff --git a/lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.java
index 1efddbf..71a216a 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.java
@@ -45,9 +45,9 @@ import org.apache.lucene.codecs.perfield.PerFieldPostingsFormat;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.FieldType;
-import org.apache.lucene.document.StringField;
 import org.apache.lucene.index.FieldInfo.DocValuesType;
 import org.apache.lucene.index.FieldInfo.IndexOptions;
+import org.apache.lucene.index.TermsEnum.SeekStatus;
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.FlushInfo;
 import org.apache.lucene.store.IOContext;
@@ -57,8 +57,6 @@ import org.apache.lucene.util.Constants;
 import org.apache.lucene.util.FixedBitSet;
 import org.apache.lucene.util.IOUtils;
 import org.apache.lucene.util.LineFileDocs;
-import org.apache.lucene.util.LuceneTestCase;
-import org.apache.lucene.util.RamUsageEstimator;
 import org.apache.lucene.util.RamUsageTester;
 import org.apache.lucene.util.TestUtil;
 import org.junit.AfterClass;
@@ -659,8 +657,6 @@ public abstract class BasePostingsFormatTestCase extends BaseIndexFileFormatTest
       System.out.println("\nTEST: now build index");
     }
 
-    int maxIndexOptionNoOffsets = Arrays.asList(IndexOptions.values()).indexOf(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);
-
     // TODO use allowPayloads
 
     FieldInfo[] newFieldInfoArray = new FieldInfo[fields.size()];
@@ -1539,6 +1535,15 @@ public abstract class BasePostingsFormatTestCase extends BaseIndexFileFormatTest
                         assertTrue(totalTermFreq <= termFreqs.get(term).totalTermFreq);
                       }
                     }
+
+                    // Also test seekCeil
+                    for(int iter=0;iter<10;iter++) {
+                      BytesRef term = new BytesRef(TestUtil.randomRealisticUnicodeString(random()));
+                      SeekStatus status = termsEnum.seekCeil(term);
+                      if (status == SeekStatus.NOT_FOUND) {
+                        assertTrue(term.compareTo(termsEnum.term()) < 0);
+                      }
+                    }
                   }
 
                   @Override

