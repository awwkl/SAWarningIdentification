GitDiffStart: deb1e81db039136da1edface0457fc57529bebbb | Fri Dec 31 17:47:06 2010 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index b49823e..bba07ba 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -134,7 +134,7 @@ Changes in Runtime Behavior
 * LUCENE-2805: IndexWriter now increments the index version on every change to
   the index instead of for every commit. Committing or closing the IndexWriter
   without any changes to the index will not cause any index version increment.
-  (Simon Willnauer, Mike Mccandless)
+  (Simon Willnauer, Mike McCandless)
 
 API Changes
 
@@ -298,7 +298,7 @@ New features
 
 * LUCENE-995: The QueryParser now interprets * as an open end for range
   queries.  Literal asterisks may be represented by quoting or escaping
-  (i.e. \* or "*")  Custom QueryParser sublcasses overriding getRangeQuery()
+  (i.e. \* or "*")  Custom QueryParser subclasses overriding getRangeQuery()
   will be passed null for any open endpoint. (Adriano Crestani, yonik)
 
 * LUCENE-2742: Add native per-field codec support. CodecProvider lets you now
@@ -324,7 +324,7 @@ Optimizations
   efficient copying by sub-classes. Optimized copy is implemented for RAM and FS
   streams. (Shai Erera)
 
-* LUCENE-2588: Don't store unecessary suffixes when writing the terms
+* LUCENE-2588: Don't store unnecessary suffixes when writing the terms
   index, saving RAM in IndexReader; change default terms index
   interval from 128 to 32, because the terms index now requires much
   less RAM.  (Robert Muir, Mike McCandless)
@@ -360,7 +360,7 @@ Bug fixes
 Changes in backwards compatibility policy
 
 * LUCENE-2719: Changed API of internal utility class
-  org.apche.lucene.util.SorterTemplate to support faster quickSort using
+  org.apache.lucene.util.SorterTemplate to support faster quickSort using
   pivot values and also merge sort and insertion sort. If you have used
   this class, you have to implement two more methods for handling pivots.
   (Uwe Schindler, Robert Muir, Mike McCandless)
@@ -632,7 +632,7 @@ New features
 
 * LUCENE-2314: Added AttributeSource.copyTo(AttributeSource) that
   allows to use cloneAttributes() and this method as a replacement
-  for captureState()/restoreState(), if the state itsself
+  for captureState()/restoreState(), if the state itself
   needs to be inspected/modified.  (Uwe Schindler)
 
 * LUCENE-2293: Expose control over max number of threads that
@@ -689,7 +689,7 @@ Optimizations
 
 * LUCENE-2136: If the multi reader (DirectoryReader or MultiReader)
   only has a single sub-reader, delegate all enum requests to it.
-  This avoid the overhead of using a PQ unecessarily.  (Mike
+  This avoid the overhead of using a PQ unnecessarily.  (Mike
   McCandless)
 
 * LUCENE-2137: Switch to AtomicInteger for some ref counting (Earwin
@@ -743,7 +743,7 @@ Optimizations
   cases.  (Mike McCandless)
 
 * LUCENE-2719: Improved TermsHashPerField's sorting to use a better
-  quick sort algorithm that dereferences the privot element not on
+  quick sort algorithm that dereferences the pivot element not on
   every compare call. Also replaced lots of sorting code in Lucene
   by the improved SorterTemplate class.
   (Uwe Schindler, Robert Muir, Mike McCandless)
@@ -771,7 +771,7 @@ Build
 
 * LUCENE-1709: Tests are now parallelized by default (except for benchmark). You
   can force them to run sequentially by passing -Drunsequential=1 on the command
-  line. The number of threads that are spwaned per CPU defaults to '1'. If you 
+  line. The number of threads that are spawned per CPU defaults to '1'. If you 
   wish to change that, you can run the tests with -DthreadsPerProcessor=[num].
   (Robert Muir, Shai Erera, Peter Kofler)
 
@@ -785,7 +785,7 @@ Build
 
 Test Cases
 
-* LUCENE-2037 Allow Junit4 tests in our envrionment (Erick Erickson
+* LUCENE-2037 Allow Junit4 tests in our environment (Erick Erickson
   via Mike McCandless)
 
 * LUCENE-1844: Speed up the unit tests (Mark Miller, Erick Erickson,
@@ -807,7 +807,7 @@ Test Cases
 * LUCENE-2313, LUCENE-2322: Add VERBOSE to LuceneTestCase(J4) to control
   verbosity of tests. If VERBOSE==false (default) tests should not print
   anything other than errors to System.(out|err). The setting can be
-  changed with -Dtests.verbose=true on test invokation.
+  changed with -Dtests.verbose=true on test invocation.
   (Shai Erera, Paul Elschot, Uwe Schindler)
 
 * LUCENE-2318: Remove inconsistent system property code for retrieving

