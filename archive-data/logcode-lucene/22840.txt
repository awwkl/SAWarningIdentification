GitDiffStart: 14d70e9be71f94f52e4edcb2de3e41a8436d6831 | Wed Mar 21 13:58:47 2007 +0000
diff --git a/src/java/org/apache/lucene/search/PrefixFilter.java b/src/java/org/apache/lucene/search/PrefixFilter.java
index 9771791..9358dc7 100755
--- a/src/java/org/apache/lucene/search/PrefixFilter.java
+++ b/src/java/org/apache/lucene/search/PrefixFilter.java
@@ -70,7 +70,7 @@ abstract class PrefixGenerator implements IdGenerator {
         Term term = enumerator.term();
         if (term != null &&
             term.text().startsWith(prefixText) &&
-            term.field() == prefixField)
+            term.field() == prefixField) // interned comparison
         {
           termDocs.seek(term);
           while (termDocs.next()) {
diff --git a/src/java/org/apache/lucene/search/PrefixQuery.java b/src/java/org/apache/lucene/search/PrefixQuery.java
index 0e3ccda..bfc6e05 100644
--- a/src/java/org/apache/lucene/search/PrefixQuery.java
+++ b/src/java/org/apache/lucene/search/PrefixQuery.java
@@ -47,7 +47,8 @@ public class PrefixQuery extends Query {
         Term term = enumerator.term();
         if (term != null &&
             term.text().startsWith(prefixText) &&
-            term.field() == prefixField) {
+            term.field() == prefixField) // interned comparison 
+        {
           TermQuery tq = new TermQuery(term);	  // found a match
           tq.setBoost(getBoost());                // set the boost
           query.add(tq, BooleanClause.Occur.SHOULD);		  // add to query
diff --git a/src/java/org/apache/lucene/search/RangeQuery.java b/src/java/org/apache/lucene/search/RangeQuery.java
index 3e11620..30e4c40 100644
--- a/src/java/org/apache/lucene/search/RangeQuery.java
+++ b/src/java/org/apache/lucene/search/RangeQuery.java
@@ -91,7 +91,7 @@ public class RangeQuery extends Query
 
             do {
                 Term term = enumerator.term();
-                if (term != null && term.field() == testField) {
+                if (term != null && term.field() == testField) { // interned comparison
                     if (!checkLower || term.text().compareTo(lowerTerm.text()) > 0) {
                         checkLower = false;
                         if (upperTerm != null) {

