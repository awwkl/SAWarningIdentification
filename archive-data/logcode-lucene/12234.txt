GitDiffStart: 694d75773dea31616770f3eb7471bda3dd46a32a | Fri Jun 8 20:06:24 2012 +0000
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/FloatEncoder.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/FloatEncoder.java
index e71da14..df87f98 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/FloatEncoder.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/FloatEncoder.java
@@ -20,7 +20,7 @@ import org.apache.lucene.util.BytesRef;
  */
 
 /**
- *  Encode a character array Float as a {@link org.apache.lucene.index.Payload}.
+ *  Encode a character array Float as a {@link BytesRef}.
  * <p/>
  * @see org.apache.lucene.analysis.payloads.PayloadHelper#encodeFloat(float, byte[], int)
  *
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/IntegerEncoder.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/IntegerEncoder.java
index 44bcf99..6a02bd3 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/IntegerEncoder.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/IntegerEncoder.java
@@ -21,7 +21,7 @@ import org.apache.lucene.util.BytesRef;
 
 
 /**
- *  Encode a character array Integer as a {@link org.apache.lucene.index.Payload}.
+ *  Encode a character array Integer as a {@link BytesRef}.
  * <p/>
  * See {@link org.apache.lucene.analysis.payloads.PayloadHelper#encodeInt(int, byte[], int)}.
  *
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/PayloadEncoder.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/PayloadEncoder.java
index 7b73e07..3c47e77 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/PayloadEncoder.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/PayloadEncoder.java
@@ -21,7 +21,8 @@ import org.apache.lucene.util.BytesRef;
 
 
 /**
- * Mainly for use with the DelimitedPayloadTokenFilter, converts char buffers to Payload.
+ * Mainly for use with the DelimitedPayloadTokenFilter, converts char buffers to
+ * {@link BytesRef}.
  * <p/>
  * NOTE: This interface is subject to change 
  *
@@ -31,7 +32,7 @@ public interface PayloadEncoder {
   BytesRef encode(char[] buffer);
 
   /**
-   * Convert a char array to a {@link org.apache.lucene.index.Payload}
+   * Convert a char array to a {@link BytesRef}
    * @param buffer
    * @param offset
    * @param length
diff --git a/lucene/core/src/java/org/apache/lucene/analysis/Token.java b/lucene/core/src/java/org/apache/lucene/analysis/Token.java
index 3ae9722..9a39dee 100644
--- a/lucene/core/src/java/org/apache/lucene/analysis/Token.java
+++ b/lucene/core/src/java/org/apache/lucene/analysis/Token.java
@@ -46,7 +46,7 @@ import org.apache.lucene.util.BytesRef;
   belongs to.  For example an end of sentence marker token might be implemented
   with type "eos".  The default token type is "word".  
   <p>
-  A Token can optionally have metadata (a.k.a. Payload) in the form of a variable
+  A Token can optionally have metadata (a.k.a. payload) in the form of a variable
   length byte array. Use {@link DocsAndPositionsEnum#getPayload()} to retrieve the 
   payloads from the index.
   
diff --git a/lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsFormat.java b/lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsFormat.java
index a6386b6..76f11b4 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsFormat.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsFormat.java
@@ -254,8 +254,8 @@ import org.apache.lucene.util.fst.FST; // javadocs
  * <p>4, 5, 4</p>
  * <p>PayloadData is metadata associated with the current term position. If
  * PayloadLength is stored at the current position, then it indicates the length
- * of this Payload. If PayloadLength is not stored, then this Payload has the same
- * length as the Payload at the previous position.</p>
+ * of this payload. If PayloadLength is not stored, then this payload has the same
+ * length as the payload at the previous position.</p>
  * <p>OffsetDelta/2 is the difference between this position's startOffset from the
  * previous occurrence (or zero, if this is the first occurrence in this document).
  * If OffsetDelta is odd, then the length (endOffset-startOffset) differs from the
diff --git a/lucene/facet/src/java/org/apache/lucene/facet/index/CategoryListPayloadStream.java b/lucene/facet/src/java/org/apache/lucene/facet/index/CategoryListPayloadStream.java
index eb0026b..43e249b 100644
--- a/lucene/facet/src/java/org/apache/lucene/facet/index/CategoryListPayloadStream.java
+++ b/lucene/facet/src/java/org/apache/lucene/facet/index/CategoryListPayloadStream.java
@@ -24,7 +24,7 @@ import org.apache.lucene.util.encoding.IntEncoder;
 
 /**
  * Accumulates category IDs for a single document, for writing in byte array
- * form, for example, to a Lucene Payload.
+ * form, for example, to a Lucene payload.
  * 
  * @lucene.experimental
  */
@@ -33,7 +33,7 @@ public class CategoryListPayloadStream {
   private ByteArrayOutputStream baos = new ByteArrayOutputStream(50);
   private IntEncoder encoder;
 
-  /** Creates a Payload stream using the specified encoder. */
+  /** Creates a payload stream using the specified encoder. */
   public CategoryListPayloadStream(IntEncoder encoder) {
     this.encoder = encoder;
     this.encoder.reInit(baos);

