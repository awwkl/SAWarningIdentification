GitDiffStart: 11d8f445bee8b05c6b2c5d3bae54598d4fd34e7b | Mon Nov 23 13:09:21 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index df4bbb0..a674c67 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -557,6 +557,8 @@ Other Changes
 * SOLR-8194: Improve error reporting for null documents in UpdateRequest (Markus
   Jelsma, Alan Woodward)
 
+* SOLR-8277: (Search|Top)GroupsFieldCommand tweaks (Christine Poerschke)
+
 ==================  5.3.1 ==================
 
 Bug Fixes
diff --git a/solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand.java b/solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand.java
index a81599a..e29e8e0 100644
--- a/solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand.java
+++ b/solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand.java
@@ -94,8 +94,8 @@ public class SearchGroupsFieldCommand implements Command<SearchGroupsFieldComman
 
   @Override
   public List<Collector> create() throws IOException {
-    List<Collector> collectors = new ArrayList<>();
-    FieldType fieldType = field.getType();
+    final List<Collector> collectors = new ArrayList<>(2);
+    final FieldType fieldType = field.getType();
     if (topNGroups > 0) {
       if (fieldType.getNumericType() != null) {
         ValueSource vs = fieldType.getValueSource(field, null);
@@ -120,7 +120,7 @@ public class SearchGroupsFieldCommand implements Command<SearchGroupsFieldComman
   @Override
   public SearchGroupsFieldCommandResult result() {
     final Collection<SearchGroup<BytesRef>> topGroups;
-    if (topNGroups > 0) {
+    if (firstPassGroupingCollector != null) {
       if (field.getType().getNumericType() != null) {
         topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));
       } else {
@@ -130,7 +130,7 @@ public class SearchGroupsFieldCommand implements Command<SearchGroupsFieldComman
       topGroups = Collections.emptyList();
     }
     final Integer groupCount;
-    if (includeGroupCount) {
+    if (allGroupsCollector != null) {
       groupCount = allGroupsCollector.getGroupCount();
     } else {
       groupCount = null;
diff --git a/solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand.java b/solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand.java
index eb8b485..d65058c 100644
--- a/solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand.java
+++ b/solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand.java
@@ -131,8 +131,8 @@ public class TopGroupsFieldCommand implements Command<TopGroups<BytesRef>> {
       return Collections.emptyList();
     }
 
-    List<Collector> collectors = new ArrayList<>();
-    FieldType fieldType = field.getType();
+    final List<Collector> collectors = new ArrayList<>(1);
+    final FieldType fieldType = field.getType();
     if (fieldType.getNumericType() != null) {
       ValueSource vs = fieldType.getValueSource(field, null);
       Collection<SearchGroup<MutableValue>> v = GroupConverter.toMutable(field, firstPhaseGroups);

