GitDiffStart: 8ff108e41df7fc8cff53d01e3e1eaf3c6aa80a62 | Tue Sep 4 19:01:04 2012 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 6e65c9b..ac6b210 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -138,6 +138,10 @@ Bug Fixes
 * LUCENE-4333: Fixed NPE in TermGroupFacetCollector when faceting on mv fields.
   (Jesse MacVicar, Martijn van Groningen)
 
+* LUCENE-4218: Document.get(String) and Field.stringValue() again return
+  values for numeric fields, like Lucene 3.x and consistent with the documentation.
+  (Jamie, Uwe Schindler, Robert Muir)
+
 * NRTCachingDirectory was always caching a newly flushed segment in
   RAM, instead of checking the estimated size of the segment
   to decide whether to cache it. (Mike McCandless)
diff --git a/lucene/core/src/java/org/apache/lucene/document/Field.java b/lucene/core/src/java/org/apache/lucene/document/Field.java
index 011187d..6858a2d 100644
--- a/lucene/core/src/java/org/apache/lucene/document/Field.java
+++ b/lucene/core/src/java/org/apache/lucene/document/Field.java
@@ -267,7 +267,11 @@ public class Field implements IndexableField, StorableField {
    * getBinaryValue() must be set.
    */
   public String stringValue() {
-    return fieldsData instanceof String ? (String) fieldsData : null;
+    if (fieldsData instanceof String || fieldsData instanceof Number) {
+      return fieldsData.toString();
+    } else {
+      return null;
+    }
   }
   
   /**
diff --git a/lucene/core/src/test/org/apache/lucene/document/TestDocument.java b/lucene/core/src/test/org/apache/lucene/document/TestDocument.java
index 07d035f..1b3c45a 100644
--- a/lucene/core/src/test/org/apache/lucene/document/TestDocument.java
+++ b/lucene/core/src/test/org/apache/lucene/document/TestDocument.java
@@ -324,4 +324,25 @@ public class TestDocument extends LuceneTestCase {
       // expected
     }
   }
+  
+  public void testNumericFieldAsString() throws Exception {
+    Document doc = new Document();
+    doc.add(new IntField("int", 5, Field.Store.YES));
+    assertEquals("5", doc.get("int"));
+    assertNull(doc.get("somethingElse"));
+    doc.add(new IntField("int", 4, Field.Store.YES));
+    assertArrayEquals(new String[] { "5", "4" }, doc.getValues("int"));
+    
+    Directory dir = newDirectory();
+    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);
+    iw.addDocument(doc);
+    DirectoryReader ir = iw.getReader();
+    StoredDocument sdoc = ir.document(0);
+    assertEquals("5", sdoc.get("int"));
+    assertNull(sdoc.get("somethingElse"));
+    assertArrayEquals(new String[] { "5", "4" }, sdoc.getValues("int"));
+    ir.close();
+    iw.close();
+    dir.close();
+  }
 }

