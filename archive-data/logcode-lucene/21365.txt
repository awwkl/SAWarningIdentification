GitDiffStart: 98ff4a03b9a7e6e1a446adbf10d630fc163c7737 | Wed Aug 6 06:00:49 2008 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 70068be..bf6592c 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -341,7 +341,10 @@ New Features
               on newSearcher event, if configured in solrconfig.xml
               (shalin)
 
-68. SOLR-554: Hierarchical JDK log level selector for SOLR Admin replaces logging.jsp (Sean Timm via shalin)                            
+68. SOLR-554: Hierarchical JDK log level selector for SOLR Admin replaces logging.jsp (Sean Timm via shalin)
+
+69. SOLR-506: Emitting HTTP Cache headers can be enabled or disabled through configuration
+              on a per-handler basis (shalin)
     
 Changes in runtime behavior
  1. SOLR-559: use Lucene updateDocument, deleteDocuments methods.  This
diff --git a/src/java/org/apache/solr/handler/MoreLikeThisHandler.java b/src/java/org/apache/solr/handler/MoreLikeThisHandler.java
index 4af654e..3b8453d 100644
--- a/src/java/org/apache/solr/handler/MoreLikeThisHandler.java
+++ b/src/java/org/apache/solr/handler/MoreLikeThisHandler.java
@@ -82,8 +82,7 @@ public class MoreLikeThisHandler extends RequestHandlerBase
   public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception 
   {
     RequestHandlerUtils.addExperimentalFormatWarning( rsp );
-    rsp.setHttpCaching(true);
-    
+
     SolrParams params = req.getParams();
     SolrIndexSearcher searcher = req.getSearcher();
     
diff --git a/src/java/org/apache/solr/handler/RequestHandlerBase.java b/src/java/org/apache/solr/handler/RequestHandlerBase.java
index c73241b..588fa83 100644
--- a/src/java/org/apache/solr/handler/RequestHandlerBase.java
+++ b/src/java/org/apache/solr/handler/RequestHandlerBase.java
@@ -50,6 +50,7 @@ public abstract class RequestHandlerBase implements SolrRequestHandler, SolrInfo
   protected SolrParams invariants;
   volatile long totalTime = 0;
   long handlerStart = System.currentTimeMillis();
+  protected boolean httpCaching = true;
 
   /** shorten the class references for utilities */
   private static class U extends SolrPluginUtils {
@@ -113,6 +114,11 @@ public abstract class RequestHandlerBase implements SolrRequestHandler, SolrInfo
         invariants = SolrParams.toSolrParams((NamedList)o);
       }
     }
+    
+    if (initArgs != null) {
+      Object caching = initArgs.get("httpCaching");
+      httpCaching = caching != null ? Boolean.parseBoolean(caching.toString()) : true;
+    }
   }
 
   public NamedList getInitArgs() {
@@ -125,6 +131,7 @@ public abstract class RequestHandlerBase implements SolrRequestHandler, SolrInfo
     numRequests++;
     try {
       U.setDefaults(req,defaults,appends,invariants);
+      rsp.setHttpCaching(httpCaching);
       handleRequestBody( req, rsp );
       // count timeouts
       boolean timedOut = (Boolean)rsp.getResponseHeader().get("partialResults") == null ? false : (Boolean)rsp.getResponseHeader().get("partialResults");
diff --git a/src/java/org/apache/solr/handler/SpellCheckerRequestHandler.java b/src/java/org/apache/solr/handler/SpellCheckerRequestHandler.java
index 8130a62..b2b85e9 100644
--- a/src/java/org/apache/solr/handler/SpellCheckerRequestHandler.java
+++ b/src/java/org/apache/solr/handler/SpellCheckerRequestHandler.java
@@ -263,7 +263,6 @@ public class SpellCheckerRequestHandler extends RequestHandlerBase implements So
   @Override
   public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)
     throws Exception {
-    rsp.setHttpCaching(true);
     SolrParams p = req.getParams();
     String words = p.get("q");
     String cmd = p.get("cmd");
diff --git a/src/java/org/apache/solr/handler/component/SearchHandler.java b/src/java/org/apache/solr/handler/component/SearchHandler.java
index 2742718..981cef8 100644
--- a/src/java/org/apache/solr/handler/component/SearchHandler.java
+++ b/src/java/org/apache/solr/handler/component/SearchHandler.java
@@ -140,8 +140,6 @@ public class SearchHandler extends RequestHandlerBase implements SolrCoreAware
 
     final RTimer timer = rb.isDebug() ? new RTimer() : null;
 
-    rsp.setHttpCaching(true);
-    
     if (timer == null) {
       // non-debugging prepare phase
       for( SearchComponent c : components ) {
diff --git a/src/java/org/apache/solr/request/SolrQueryResponse.java b/src/java/org/apache/solr/request/SolrQueryResponse.java
index fc8637a..56c59f1 100644
--- a/src/java/org/apache/solr/request/SolrQueryResponse.java
+++ b/src/java/org/apache/solr/request/SolrQueryResponse.java
@@ -75,7 +75,7 @@ public class SolrQueryResponse {
   /**
    * Should this response be tagged with HTTP caching headers?
    */
-  protected boolean httpCaching=false;
+  protected boolean httpCaching=true;
   
   /***
    // another way of returning an error
diff --git a/src/test/test-files/solr/conf/solrconfig.xml b/src/test/test-files/solr/conf/solrconfig.xml
index 4b0b946..8f6a1e3 100644
--- a/src/test/test-files/solr/conf/solrconfig.xml
+++ b/src/test/test-files/solr/conf/solrconfig.xml
@@ -229,7 +229,9 @@
       The "standard" request handler is the default and will be used if qt
      is not specified in the request.
   -->
-  <requestHandler name="standard" class="solr.StandardRequestHandler"/>
+  <requestHandler name="standard" class="solr.StandardRequestHandler">
+  	<bool name="httpCaching">true</bool>
+  </requestHandler>
   <requestHandler name="dismaxOldStyleDefaults"
                   class="solr.DisMaxRequestHandler" >
      <!-- for historic reasons, DisMaxRequestHandler will use all of
@@ -302,7 +304,9 @@
   </requestHandler>
 
   <requestHandler name="/update"     class="solr.XmlUpdateRequestHandler"          />
-  <requestHandler name="/update/csv" class="solr.CSVRequestHandler" startup="lazy" />
+  <requestHandler name="/update/csv" class="solr.CSVRequestHandler" startup="lazy">
+  	<bool name="httpCaching">false</bool>
+  </requestHandler>
 
   <!-- test elevation -->
   <searchComponent name="elevate" class="org.apache.solr.handler.component.QueryElevationComponent" >

