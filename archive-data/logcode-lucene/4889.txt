GitDiffStart: 81a557ab16fe0712d9755d37f5c932a14a019618 | Thu Nov 27 00:45:32 2014 +0000
diff --git a/lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase.java
index 83209ac..05cace1 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase.java
@@ -211,6 +211,7 @@ abstract class BaseIndexFileFormatTestCase extends LuceneTestCase {
   }
 
   /** Test the accuracy of the ramBytesUsed estimations. */
+  @Slow
   public void testRamBytesUsed() throws IOException {
     if (Codec.getDefault() instanceof RandomCodec) {
       // this test relies on the fact that two segments will be written with
diff --git a/lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper.java b/lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper.java
index bfe9f83..cea731b 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper.java
@@ -127,7 +127,7 @@ public class MockDirectoryWrapper extends BaseDirectoryWrapper {
     // not be reproducible from the original seed
     this.randomState = new Random(random.nextInt());
     this.throttledOutput = new ThrottledIndexOutput(ThrottledIndexOutput
-        .mBitsToBytes(40 + randomState.nextInt(10)), 5 + randomState.nextInt(5), null);
+        .mBitsToBytes(40 + randomState.nextInt(10)), 1 + randomState.nextInt(5), null);
     init();
   }
 
@@ -180,7 +180,7 @@ public class MockDirectoryWrapper extends BaseDirectoryWrapper {
   public static enum Throttling {
     /** always emulate a slow hard disk. could be very slow! */
     ALWAYS,
-    /** sometimes (2% of the time) emulate a slow hard disk. */
+    /** sometimes (0.5% of the time) emulate a slow hard disk. */
     SOMETIMES,
     /** never throttle output */
     NEVER
diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
index c794f9e..78b4da7 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
@@ -1315,7 +1315,7 @@ public abstract class LuceneTestCase extends Assert {
     }
     
     if (rarely(random) && !bare) { 
-      final double maxMBPerSec = 10 + 5*(random.nextDouble()-0.5);
+      final double maxMBPerSec = TestUtil.nextInt(random, 20, 40);
       if (LuceneTestCase.VERBOSE) {
         System.out.println("LuceneTestCase: will rate limit output IndexOutput to " + maxMBPerSec + " MB/sec");
       }
diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/ThrottledIndexOutput.java b/lucene/test-framework/src/java/org/apache/lucene/util/ThrottledIndexOutput.java
index 1c93bf8..c7a9cbe 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/util/ThrottledIndexOutput.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/util/ThrottledIndexOutput.java
@@ -53,7 +53,7 @@ public class ThrottledIndexOutput extends IndexOutput {
   }
 
   public static final int mBitsToBytes(int mbits) {
-    return mbits * 125000;
+    return mbits * 125000000;
   }
 
   public ThrottledIndexOutput(int bytesPerSecond, long flushDelayMillis,

