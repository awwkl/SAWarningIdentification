GitDiffStart: a8d98638a0abce03446466442ef8622013917b26 | Sun Oct 17 11:41:41 2004 +0000
diff --git a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
index 43b49ca..8308dcb 100644
--- a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
+++ b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
@@ -73,14 +73,14 @@ import java.util.Set;
  * will not be indexed at all) and an external list of exclusions (word that will
  * not be stemmed, but indexed).
  *
- * @author    Jo? Kramer
+ * @author    Joï¿? Kramer
  */
 public final class BrazilianAnalyzer extends Analyzer {
 
 	/**
 	 * List of typical german stopwords.
 	 */
-	private String[] BRAZILIAN_STOP_WORDS = {
+	public final static String[] BRAZILIAN_STOP_WORDS = {
       "a","ainda","alem","ambas","ambos","antes",
       "ao","aonde","aos","apos","aquele","aqueles",
       "as","assim","com","como","contra","contudo",
@@ -112,7 +112,7 @@ public final class BrazilianAnalyzer extends Analyzer {
 	private Set excltable = new HashSet();
 
 	/**
-	 * Builds an analyzer.
+	 * Builds an analyzer with the default stop words ({@link #BRAZILIAN_STOP_WORDS}).
 	 */
 	public BrazilianAnalyzer() {
 		stoptable = StopFilter.makeStopSet( BRAZILIAN_STOP_WORDS );
diff --git a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
index 832e208..82c8931 100644
--- a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
+++ b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
@@ -76,7 +76,7 @@ public class CJKAnalyzer extends Analyzer {
    * An array containing some common English words that are not usually
    * useful for searching. and some double-byte interpunctions.....
    */
-  private static String[] stopWords = {
+  public final static String[] STOP_WORDS = {
     "a", "and", "are", "as", "at", "be",
     "but", "by", "for", "if", "in",
     "into", "is", "it", "no", "not",
@@ -97,10 +97,10 @@ public class CJKAnalyzer extends Analyzer {
   //~ Constructors -----------------------------------------------------------
 
   /**
-   * Builds an analyzer which removes words in STOP_WORDS.
+   * Builds an analyzer which removes words in {@link #STOP_WORDS}.
    */
   public CJKAnalyzer() {
-    stopTable = StopFilter.makeStopSet(stopWords);
+    stopTable = StopFilter.makeStopSet(STOP_WORDS);
   }
 
   /**
diff --git a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
index 4de9e23..fd72f39 100644
--- a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
+++ b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
@@ -80,7 +80,7 @@ public final class CzechAnalyzer extends Analyzer {
 	/**
 	 * List of typical stopwords.
 	 */
-	private static String[] STOP_WORDS = {
+	public final static String[] CZECH_STOP_WORDS = {
         "a","s","k","o","i","u","v","z","dnes","cz","t\u00edmto","bude\u0161","budem",
         "byli","jse\u0161","m\u016fj","sv\u00fdm","ta","tomto","tohle","tuto","tyto",
         "jej","zda","pro\u010d","m\u00e1te","tato","kam","tohoto","kdo","kte\u0159\u00ed",
@@ -107,10 +107,10 @@ public final class CzechAnalyzer extends Analyzer {
 	private Set stoptable;
 
 	/**
-	 * Builds an analyzer.
+	 * Builds an analyzer with the default stop words ({@link #CZECH_STOP_WORDS}).
 	 */
 	public CzechAnalyzer() {
-		stoptable = StopFilter.makeStopSet( STOP_WORDS );
+		stoptable = StopFilter.makeStopSet( CZECH_STOP_WORDS );
 	}
 
 	/**
diff --git a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java
index edb60c9..d2982f8 100644
--- a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java
+++ b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java
@@ -84,7 +84,7 @@ public final class FrenchAnalyzer extends Analyzer {
   /**
    * Extended list of typical french stopwords.
    */
-  private String[] FRENCH_STOP_WORDS = {
+  public final static String[] FRENCH_STOP_WORDS = {
     "a", "afin", "ai", "ainsi", "aprÃ¨s", "attendu", "au", "aujourd", "auquel", "aussi",
     "autre", "autres", "aux", "auxquelles", "auxquels", "avait", "avant", "avec", "avoir",
     "c", "car", "ce", "ceci", "cela", "celle", "celles", "celui", "cependant", "certain",
@@ -119,7 +119,7 @@ public final class FrenchAnalyzer extends Analyzer {
   private Set excltable = new HashSet();
 
   /**
-   * Builds an analyzer.
+   * Builds an analyzer with the default stop words ({@link #FRENCH_STOP_WORDS}).
    */
   public FrenchAnalyzer() {
     stoptable = StopFilter.makeStopSet(FRENCH_STOP_WORDS);
diff --git a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
index d93edc6..f6d7fcb 100644
--- a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
+++ b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
@@ -45,7 +45,7 @@ public class DutchAnalyzer extends Analyzer {
   /**
    * List of typical Dutch stopwords.
    */
-  private String[] DUTCH_STOP_WORDS =
+  public final static String[] DUTCH_STOP_WORDS =
       {
         "de", "en", "van", "ik", "te", "dat", "die", "in", "een",
         "hij", "het", "niet", "zijn", "is", "was", "op", "aan", "met", "als", "voor", "had",
@@ -74,7 +74,7 @@ public class DutchAnalyzer extends Analyzer {
 
 
   /**
-   * Builds an analyzer.
+   * Builds an analyzer with the default stop words ({@link #DUTCH_STOP_WORDS}).
    */
   public DutchAnalyzer() {
     stoptable = StopFilter.makeStopSet(DUTCH_STOP_WORDS);

