GitDiffStart: 405e084a6c11d9cd23751ebf6a385b64a67b7d1f | Wed Feb 24 15:53:11 2016 +0530
diff --git a/solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.java b/solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.java
index 4a6e553..b73273a 100644
--- a/solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.java
@@ -356,11 +356,12 @@ public class SolrConfigHandler extends RequestHandlerBase implements SolrCoreAwa
         if (ops.isEmpty()) {
           ZkController.touchConfDir(zkLoader);
         } else {
-          log.debug("persisting params version : {}", Utils.toJSONString(params.toMap()));
+          log.info("persisting params data : {}", Utils.toJSONString(params.toMap()));
           int latestVersion = ZkController.persistConfigResourceToZooKeeper(zkLoader,
               params.getZnodeVersion(),
               RequestParams.RESOURCE,
               params.toByteArray(), true);
+          log.info("persisted to version : {} ", latestVersion);
           waitForAllReplicasState(req.getCore().getCoreDescriptor().getCloudDescriptor().getCollectionName(),
               req.getCore().getCoreDescriptor().getCoreContainer().getZkController(),
               RequestParams.NAME,
diff --git a/solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.java b/solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.java
index 9f80cbe..72cadb4 100644
--- a/solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.java
+++ b/solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.java
@@ -167,7 +167,9 @@ public class TestSolrConfigHandler extends RestTestBase {
   }
 
   public static void runConfigCommand(RestTestHarness harness, String uri, String payload) throws IOException {
-    String response = harness.post(uri, SolrTestCaseJ4.json(payload));
+    String json = SolrTestCaseJ4.json(payload);
+    log.info("going to send config command. path {} , payload: ", uri, payload);
+    String response = harness.post(uri, json);
     Map map = (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));
     assertNull(response, map.get("errors"));
   }

