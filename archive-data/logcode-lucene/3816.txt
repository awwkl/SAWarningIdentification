GitDiffStart: 01622683feac472b9f742769c1d977c99a0c8342 | Tue Apr 7 17:24:32 2015 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/search/IndexSearcher.java b/lucene/core/src/java/org/apache/lucene/search/IndexSearcher.java
index 23e490d..ea95818 100644
--- a/lucene/core/src/java/org/apache/lucene/search/IndexSearcher.java
+++ b/lucene/core/src/java/org/apache/lucene/search/IndexSearcher.java
@@ -108,6 +108,14 @@ public class IndexSearcher {
   }
 
   /**
+   * Expert: Get the default {@link QueryCache} or {@code null} if the cache is disabled.
+   * @lucene.internal
+   */
+  public static QueryCache getDefaultQueryCache() {
+    return DEFAULT_QUERY_CACHE;
+  }
+
+  /**
    * Expert: set the default {@link QueryCache} instance.
    * @lucene.internal
    */
@@ -116,6 +124,14 @@ public class IndexSearcher {
   }
 
   /**
+   * Expert: Get the default {@link QueryCachingPolicy}.
+   * @lucene.internal
+   */
+  public static QueryCachingPolicy getDefaultQueryCachingPolicy() {
+    return DEFAULT_CACHING_POLICY;
+  }
+
+  /**
    * Expert: set the default {@link QueryCachingPolicy} instance.
    * @lucene.internal
    */
diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
index 0ef60bb..9243c6e 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
@@ -96,6 +96,7 @@ import org.apache.lucene.search.AssertingIndexSearcher;
 import org.apache.lucene.search.DocIdSetIterator;
 import org.apache.lucene.search.LRUQueryCache;
 import org.apache.lucene.search.Query;
+import org.apache.lucene.search.QueryCache;
 import org.apache.lucene.search.QueryCachingPolicy;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.QueryUtils.FCInvisibleMultiReader;
@@ -1650,20 +1651,29 @@ public abstract class LuceneTestCase extends Assert {
     }
   }
 
+  private static final QueryCache DEFAULT_QUERY_CACHE = IndexSearcher.getDefaultQueryCache();
+  private static final QueryCachingPolicy DEFAULT_CACHING_POLICY = IndexSearcher.getDefaultQueryCachingPolicy();
+
   @Before
-  public void resetTestDefaultQueryCache() {
+  public void overrideTestDefaultQueryCache() {
     // Make sure each test method has its own cache
-    resetDefaultQueryCache();
+    overrideDefaultQueryCache();
   }
 
   @BeforeClass
-  public static void resetDefaultQueryCache() {
+  public static void overrideDefaultQueryCache() {
     // we need to reset the query cache in an @BeforeClass so that tests that
     // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache
     IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25));
     IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);
   }
 
+  @AfterClass
+  public static void resetDefaultQueryCache() {
+    IndexSearcher.setDefaultQueryCache(DEFAULT_QUERY_CACHE);
+    IndexSearcher.setDefaultQueryCachingPolicy(DEFAULT_CACHING_POLICY);
+  }
+
   /**
    * Create a new searcher over the reader. This searcher might randomly use
    * threads.

