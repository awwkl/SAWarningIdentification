GitDiffStart: 5ae03e4587d295ff84c3faa2bde1b57ca3a14e4e | Wed Aug 18 14:30:48 2004 +0000
diff --git a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter.java b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter.java
index 182b1ab..468a0e3 100644
--- a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter.java
+++ b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter.java
@@ -66,7 +66,7 @@ import java.util.Set;
 /**
  * Based on (copied) the GermanStemFilter
  *
- * @author Jo? Kramer
+ * @author João Kramer
  *         <p/>
  *         <p/>
  *         A filter that stemms german words. It supports a table of words that should
diff --git a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer.java b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer.java
index 8444860..7838e1a 100644
--- a/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer.java
+++ b/sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer.java
@@ -56,7 +56,7 @@ package org.apache.lucene.analysis.br;
 
 /**
  * A stemmer for brazilian words. The algorithm is based on the report
- * "A Fast and Simple Stemming Algorithm for German Words" by J?g
+ * "A Fast and Simple Stemming Algorithm for German Words" by Jörg
  * Caumanns (joerg.caumanns@isst.fhg.de).
  *
  * @author    Gerhard Schwarz
@@ -282,8 +282,8 @@ public class BrazilianStemmer {
 	/**
    * 1) Turn to lowercase
    * 2) Remove accents
-   * 3) ? -> a ; ? -> o
-   * 4) ? -> c
+   * 3) ã -> a ; õ -> o
+   * 4) ç -> c
    *
    * @return null or a string transformed
 	 */
@@ -299,31 +299,31 @@ public class BrazilianStemmer {
 
     value = value.toLowerCase() ;
     for (j=0 ; j < value.length() ; j++) {
-      if ((value.charAt(j) == '?') ||
-          (value.charAt(j) == '?') ||
-          (value.charAt(j) == '?')) {
+      if ((value.charAt(j) == 'á') ||
+          (value.charAt(j) == 'â') ||
+          (value.charAt(j) == 'ã')) {
         r= r + "a" ; continue ;
       }
-      if ((value.charAt(j) == '?') ||
-          (value.charAt(j) == '?')) {
+      if ((value.charAt(j) == 'é') ||
+          (value.charAt(j) == 'ê')) {
         r= r + "e" ; continue ;
       }
-      if (value.charAt(j) == '?') {
+      if (value.charAt(j) == 'í') {
         r= r + "i" ; continue ;
       }
-      if ((value.charAt(j) == '?') ||
-          (value.charAt(j) == '?') ||
-          (value.charAt(j) == '?')) {
+      if ((value.charAt(j) == 'ó') ||
+          (value.charAt(j) == 'ô') ||
+          (value.charAt(j) == 'õ')) {
         r= r + "o" ; continue ;
       }
-      if ((value.charAt(j) == '?') ||
-          (value.charAt(j) == '?')) {
+      if ((value.charAt(j) == 'ú') ||
+          (value.charAt(j) == 'ü')) {
         r= r + "u" ; continue ;
       }
-      if (value.charAt(j) == '?') {
+      if (value.charAt(j) == 'ç') {
         r= r + "c" ; continue ;
       }
-      if (value.charAt(j) == '?') {
+      if (value.charAt(j) == 'ñ') {
         r= r + "n" ; continue ;
       }
 
@@ -410,7 +410,7 @@ public class BrazilianStemmer {
   }
 
 	/**
-	 * Creates CT (changed term) , substituting * '?' and '?' for 'a~' and 'o~'.
+	 * Creates CT (changed term) , substituting * 'ã' and 'õ' for 'a~' and 'o~'.
 	 */
 	private void createCT( String term ) {
     CT = changeTerm(term) ;
@@ -1008,7 +1008,7 @@ public class BrazilianStemmer {
 	/**
 	 * Residual suffix
    *
-   * If the word ends with one of the suffixes (os a i o ? ? ?)
+   * If the word ends with one of the suffixes (os a i o á í ó)
    * in RV, delete it
    *
 	*/
@@ -1031,11 +1031,11 @@ public class BrazilianStemmer {
   }
 
 	/**
-	 * If the word ends with one of ( e ? ?) in RV,delete it,
+	 * If the word ends with one of ( e é ê) in RV,delete it,
    * and if preceded by 'gu' (or 'ci') with the 'u' (or 'i') in RV,
    * delete the 'u' (or 'i')
    *
-   * Or if the word ends ? remove the cedilha
+   * Or if the word ends ç remove the cedilha
    *
 	*/
 	private void step5() {

