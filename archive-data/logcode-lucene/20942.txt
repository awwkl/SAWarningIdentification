GitDiffStart: f9b1fb4d6365fa5b3a8c8d4fccf9ef23621c8e12 | Mon Nov 17 06:34:09 2008 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index 03ed597..4ee2c1a 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -110,8 +110,11 @@ Bug Fixes
 
  6. SOLR-837: Fix inject parameter on PhoneticFilterFactory and DoubleMetaphoneFilterFactory.
     (ehatcher)
+
  7. SOLR-843: SynonymFilterFactory cannot handle multiple synonym files correctly (koji)
 
+ 8. SOLR-840: BinaryResponseWriter does not handle incompatible data in fields (Noble Paul via shalin)
+
 
 Other Changes
 ----------------------
diff --git a/src/java/org/apache/solr/request/BinaryResponseWriter.java b/src/java/org/apache/solr/request/BinaryResponseWriter.java
index b42f7a6..0891387 100755
--- a/src/java/org/apache/solr/request/BinaryResponseWriter.java
+++ b/src/java/org/apache/solr/request/BinaryResponseWriter.java
@@ -31,6 +31,8 @@ import org.apache.solr.schema.FieldType;
 import org.apache.solr.search.DocIterator;
 import org.apache.solr.search.DocList;
 import org.apache.solr.search.SolrIndexSearcher;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 import java.io.IOException;
 import java.io.OutputStream;
@@ -39,6 +41,8 @@ import java.util.*;
 
 
 public class BinaryResponseWriter implements BinaryQueryResponseWriter {
+  private static final Logger LOG = LoggerFactory.getLogger(BinaryResponseWriter.class);
+
   public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {
     Resolver resolver = new Resolver(req, response.getReturnFields());
     Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);
@@ -141,7 +145,15 @@ public class BinaryResponseWriter implements BinaryQueryResponseWriter {
           if (f.isBinary()) val = f.binaryValue();
           else val = f.stringValue();
         } else {
-          val = useFieldObjects ? ft.toObject(f) : ft.toExternal(f);
+          try {
+            val = useFieldObjects ? ft.toObject(f) : ft.toExternal(f);
+          } catch (Exception e) {
+            // There is a chance of the underlying field not really matching the
+            // actual field type . So ,it can throw exception
+            LOG.warn("Error reading a field from document : "+solrDoc, e);
+            //if it happens log it and continue
+            continue;
+          }
         }
         solrDoc.addField(fieldName, val);
       }

