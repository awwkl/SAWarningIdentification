GitDiffStart: 568f6a398a8be76ec0261125f625c5d28942ea4a | Fri Jul 5 22:45:28 2013 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 4d4754f..599a9d0 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -253,6 +253,10 @@ Bug Fixes
 * SOLR-5000: ManagedIndexSchema doesn't persist uniqueKey tag after calling addFields
   method. (Jun Ohtani, Steve Rowe)
 
+* SOLR-5002: Don't create multiple SolrResourceLoaders for same Solr home, wasting 
+  resources and slowing down startup. This fixes the problem where the loader was
+  not correctly closed, making tests fail on Windows.  (Steve Rowe, Uwe Schindler)
+
 Optimizations
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkCLI.java b/solr/core/src/java/org/apache/solr/cloud/ZkCLI.java
index dad2d83..03538b2 100644
--- a/solr/core/src/java/org/apache/solr/cloud/ZkCLI.java
+++ b/solr/core/src/java/org/apache/solr/cloud/ZkCLI.java
@@ -176,7 +176,7 @@ public class ZkCLI {
           SolrResourceLoader loader = new SolrResourceLoader(solrHome);
           solrHome = loader.getInstanceDir();
 
-          ConfigSolr cfg = ConfigSolr.fromSolrHome(solrHome);
+          ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome);
 
           if(!ZkController.checkChrootPath(zkServerAddress, true)) {
             System.out.println("A chroot was specified in zkHost but the znode doesn't exist. ");
diff --git a/solr/core/src/java/org/apache/solr/core/ConfigSolr.java b/solr/core/src/java/org/apache/solr/core/ConfigSolr.java
index edea722..f7cedd7 100644
--- a/solr/core/src/java/org/apache/solr/core/ConfigSolr.java
+++ b/solr/core/src/java/org/apache/solr/core/ConfigSolr.java
@@ -46,11 +46,9 @@ public abstract class ConfigSolr {
   
   public final static String SOLR_XML_FILE = "solr.xml";
 
-  public static ConfigSolr fromFile(File configFile) {
+  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {
     log.info("Loading container configuration from {}", configFile.getAbsolutePath());
 
-    String solrHome = configFile.getParent();
-    SolrResourceLoader loader = new SolrResourceLoader(solrHome);
     InputStream inputStream = null;
 
     try {
@@ -87,8 +85,8 @@ public abstract class ConfigSolr {
     }
   }
 
-  public static ConfigSolr fromSolrHome(String solrHome) {
-    return fromFile(new File(solrHome, SOLR_XML_FILE));
+  public static ConfigSolr fromSolrHome(SolrResourceLoader loader, String solrHome) {
+    return fromFile(loader, new File(solrHome, SOLR_XML_FILE));
   }
 
   public static ConfigSolr fromConfig(Config config) {
diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java
index 6c2fc55..59bddeb 100644
--- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java
+++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java
@@ -129,7 +129,7 @@ public class CoreContainer
    * @see #load()
    */
   public CoreContainer() {
-    this(SolrResourceLoader.locateSolrHome());
+    this(new SolrResourceLoader(SolrResourceLoader.locateSolrHome()));
   }
 
   /**
@@ -139,7 +139,7 @@ public class CoreContainer
    * @see #load()
    */
   public CoreContainer(SolrResourceLoader loader) {
-    this(loader, ConfigSolr.fromSolrHome(loader.getInstanceDir()));
+    this(loader, ConfigSolr.fromSolrHome(loader, loader.getInstanceDir()));
   }
 
   /**
@@ -149,7 +149,7 @@ public class CoreContainer
    * @see #load()
    */
   public CoreContainer(String solrHome) {
-    this(new SolrResourceLoader(solrHome), ConfigSolr.fromSolrHome(solrHome));
+    this(new SolrResourceLoader(solrHome));
   }
 
   /**
@@ -172,7 +172,8 @@ public class CoreContainer
    * @return a loaded CoreContainer
    */
   public static CoreContainer createAndLoad(String solrHome, File configFile) {
-    CoreContainer cc = new CoreContainer(new SolrResourceLoader(solrHome), ConfigSolr.fromFile(configFile));
+    SolrResourceLoader loader = new SolrResourceLoader(solrHome);
+    CoreContainer cc = new CoreContainer(loader, ConfigSolr.fromFile(loader, configFile));
     cc.load();
     return cc;
   }

