GitDiffStart: adaaaf041a8d563c59edf3b35189f15f4ef9f557 | Sun Jul 20 17:32:28 2014 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 441d85e..1054ede 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -143,6 +143,9 @@ New Features
     value for the fetchMailsSince filter.
   (Peter Sturge, Timothy Potter)
 
+* SOLR-6258: Added onRollback event handler hook to Data Import Handler (DIH).
+  (ehatcher)
+
 
 Bug Fixes
 ----------------------
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.java
index 97b763a..6524041 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.java
@@ -308,6 +308,9 @@ public class DocBuilder {
     writer.rollback();
     statusMessages.put("", "Indexing failed. Rolled back all changes.");
     addStatusMessage("Rolledback");
+    if ((config != null) && (config.getOnRollback() != null)) {
+      invokeEventListener(config.getOnRollback());
+    }
   }
 
   private void doFullDump() {
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/config/DIHConfiguration.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/config/DIHConfiguration.java
index ce302f9..a623d90 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/config/DIHConfiguration.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/config/DIHConfiguration.java
@@ -56,6 +56,7 @@ public class DIHConfiguration {
   private final List<Entity> entities;
   private final String onImportStart;
   private final String onImportEnd;
+  private final String onRollback;
   private final List<Map<String, String>> functions;
   private final Script script;
   private final Map<String, Map<String,String>> dataSources;
@@ -71,6 +72,7 @@ public class DIHConfiguration {
     this.deleteQuery = ConfigParseUtil.getStringAttribute(element, "deleteQuery", null);
     this.onImportStart = ConfigParseUtil.getStringAttribute(element, "onImportStart", null);
     this.onImportEnd = ConfigParseUtil.getStringAttribute(element, "onImportEnd", null);
+    this.onRollback = ConfigParseUtil.getStringAttribute(element, "onRollback", null);
     List<Entity> modEntities = new ArrayList<>();
     List<Element> l = ConfigParseUtil.getChildNodes(element, "entity");
     boolean docRootFound = false;
@@ -163,6 +165,9 @@ public class DIHConfiguration {
   public String getOnImportEnd() {
     return onImportEnd;
   }
+  public String getOnRollback() {
+    return onRollback;
+  }
   public List<Map<String,String>> getFunctions() {
     return functions;
   }
diff --git a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDocBuilder2.java b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDocBuilder2.java
index faa7dcf..59a6e35 100644
--- a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDocBuilder2.java
+++ b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDocBuilder2.java
@@ -76,6 +76,17 @@ public class TestDocBuilder2 extends AbstractDataImportHandlerTestCase {
   }
 
   @Test
+  public void testRollbackHandler() throws Exception {
+    List rows = new ArrayList();
+    rows.add(createMap("id", "1", "FORCE_ROLLBACK", "true"));
+    MockDataSource.setIterator("select * from x", rows.iterator());
+
+    runFullImport(dataConfigWithRollbackHandler);
+
+    assertTrue("Rollback event listener was not called", RollbackEventListener.executed);
+  }
+
+  @Test
   @SuppressWarnings("unchecked")
   public void testDynamicFields() throws Exception {
     List rows = new ArrayList();
@@ -276,6 +287,13 @@ public class TestDocBuilder2 extends AbstractDataImportHandlerTestCase {
     }
   }
 
+  public static class ForcedExceptionTransformer extends Transformer {
+    @Override
+    public Object transformRow(Map<String, Object> row, Context context) {
+      throw new DataImportHandlerException(DataImportHandlerException.SEVERE, "ForcedException");
+    }
+  }
+
   public static class MockDataSource2 extends MockDataSource  {
 
   }
@@ -298,6 +316,15 @@ public class TestDocBuilder2 extends AbstractDataImportHandlerTestCase {
     }
   }
 
+  public static class RollbackEventListener implements EventListener {
+    public static boolean executed = false;
+
+    @Override
+    public void onEvent(Context ctx) {
+      executed = true;
+    }
+  }
+
   private final String requestParamAsVariable = "<dataConfig>\n" +
           "    <dataSource type=\"MockDataSource\" />\n" +
           "    <document>\n" +
@@ -350,6 +377,15 @@ public class TestDocBuilder2 extends AbstractDataImportHandlerTestCase {
           "    </document>\n" +
           "</dataConfig>";
 
+  private final String dataConfigWithRollbackHandler = "<dataConfig> <dataSource  type=\"MockDataSource\"/>\n" +
+          "    <document onRollback=\"TestDocBuilder2$RollbackEventListener\">\n" +
+          "        <entity name=\"books\" query=\"select * from x\" transformer=\"TestDocBuilder2$ForcedExceptionTransformer\">\n" +
+          "            <field column=\"id\" />\n" +
+          "            <field column=\"FORCE_ROLLBACK\" />\n" +
+          "        </entity>\n" +
+          "    </document>\n" +
+          "</dataConfig>";
+
   private final String dataConfigWithTemplatizedFieldNames = "<dataConfig><dataSource  type=\"MockDataSource\"/>\n" +
           "    <document>\n" +
           "        <entity name=\"books\" query=\"select * from x\">\n" +

