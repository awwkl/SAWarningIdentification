GitDiffStart: 39c2ae5268b0b459fe32ae091e2e30eb8bf1f93f | Sat Dec 10 16:50:54 2011 +0000
diff --git a/lucene/src/java/org/apache/lucene/index/MultiFieldsEnum.java b/lucene/src/java/org/apache/lucene/index/MultiFieldsEnum.java
index 79757a8..7db5f02 100644
--- a/lucene/src/java/org/apache/lucene/index/MultiFieldsEnum.java
+++ b/lucene/src/java/org/apache/lucene/index/MultiFieldsEnum.java
@@ -17,7 +17,6 @@ package org.apache.lucene.index;
  * limitations under the License.
  */
 
-import org.apache.lucene.index.values.MultiIndexDocValues;
 import org.apache.lucene.util.PriorityQueue;
 import org.apache.lucene.util.ReaderUtil;
 
@@ -39,14 +38,9 @@ public final  class MultiFieldsEnum extends FieldsEnum {
   // Holds sub-readers containing field we are currently
   // on, popped from queue.
   private final FieldsEnumWithSlice[] top;
-  private final FieldsEnumWithSlice[] enumWithSlices;
 
   private int numTop;
 
-  // Re-used TermsEnum
-  private final MultiTermsEnum terms;
-  private final MultiIndexDocValues docValues;
-
   private final Fields fields;
 
   private String currentField;
@@ -55,9 +49,7 @@ public final  class MultiFieldsEnum extends FieldsEnum {
    *  (ie, {@link FieldsEnum#next} has not been called. */
   public MultiFieldsEnum(MultiFields fields, FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {
     this.fields = fields;
-    terms = new MultiTermsEnum(subSlices);
     queue = new FieldMergeQueue(subs.length);
-    docValues = new MultiIndexDocValues();
     top = new FieldsEnumWithSlice[subs.length];
     List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();
 
@@ -73,8 +65,6 @@ public final  class MultiFieldsEnum extends FieldsEnum {
         queue.add(sub);
       }
     }
-    this.enumWithSlices = enumWithSlices.toArray(FieldsEnumWithSlice.EMPTY_ARRAY);
-
   }
 
   @Override

