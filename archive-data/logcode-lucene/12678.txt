GitDiffStart: e72d110b0dc6aa02683c881fe1407b43d0a8ca36 | Mon Apr 23 02:30:35 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig.java
index 7483926..4f3ba42 100644
--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig.java
+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig.java
@@ -589,11 +589,11 @@ public final class IndexWriterConfig implements Cloneable {
   /** By default, IndexWriter does not pool the
    *  SegmentReaders it must open for deletions and
    *  merging, unless a near-real-time reader has been
-   *  obtained by calling {@link IndexWriter#getReader}.
+   *  obtained by calling {@link DirectoryReader#open(IndexWriter, boolean)}.
    *  This method lets you enable pooling without getting a
    *  near-real-time reader.  NOTE: if you set this to
    *  false, IndexWriter will still pool readers once
-   *  {@link IndexWriter#getReader} is called.
+   *  {@link DirectoryReader#open(IndexWriter, boolean)} is called.
    *
    * <p>Only takes effect when IndexWriter is first created. */
   public IndexWriterConfig setReaderPooling(boolean readerPooling) {
@@ -602,7 +602,7 @@ public final class IndexWriterConfig implements Cloneable {
   }
 
   /** Returns true if IndexWriter should pool readers even
-   *  if {@link IndexWriter#getReader} has not been called. */
+   *  if {@link DirectoryReader#open(IndexWriter, boolean)} has not been called. */
   public boolean getReaderPooling() {
     return readerPooling;
   }
@@ -623,7 +623,7 @@ public final class IndexWriterConfig implements Cloneable {
   /** Sets the termsIndexDivisor passed to any readers that
    *  IndexWriter opens, for example when applying deletes
    *  or creating a near-real-time reader in {@link
-   *  IndexWriter#getReader}. If you pass -1, the terms index 
+   *  DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the terms index 
    *  won't be loaded by the readers. This is only useful in 
    *  advanced situations when you will only .next() through 
    *  all terms; attempts to seek will hit an exception.

