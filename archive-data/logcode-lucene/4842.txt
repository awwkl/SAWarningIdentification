GitDiffStart: e2ed5913cb15d8b13feddac473e2549025587494 | Sun Nov 30 04:34:11 2014 +0000
diff --git a/lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.java b/lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.java
index ce09f6e..ca7cd20 100644
--- a/lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.java
+++ b/lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.java
@@ -82,7 +82,7 @@ public class HighlighterPhraseTest extends LuceneTestCase {
 
       final TokenStream tokenStream = TokenSources
           .getTokenStream(indexReader.getTermVector(
-              0, FIELD), false);
+              0, FIELD));
       assertEquals(highlighter.getBestFragment(new TokenStreamConcurrent(),
           TEXT), highlighter.getBestFragment(tokenStream, TEXT));
     } finally {
@@ -149,7 +149,7 @@ public class HighlighterPhraseTest extends LuceneTestCase {
         assertEquals(0, position);
         final TokenStream tokenStream = TokenSources.getTokenStream(
             indexReader.getTermVector(position,
-                FIELD), false);
+                FIELD));
         assertEquals(highlighter.getBestFragment(new TokenStreamConcurrent(),
             TEXT), highlighter.getBestFragment(tokenStream, TEXT));
       }
@@ -191,7 +191,7 @@ public class HighlighterPhraseTest extends LuceneTestCase {
           new QueryScorer(phraseQuery));
       final TokenStream tokenStream = TokenSources
           .getTokenStream(indexReader.getTermVector(
-              0, FIELD), false);
+              0, FIELD));
       assertEquals(
           highlighter.getBestFragment(new TokenStreamSparse(), TEXT),
           highlighter.getBestFragment(tokenStream, TEXT));
@@ -231,7 +231,7 @@ public class HighlighterPhraseTest extends LuceneTestCase {
           new SimpleHTMLFormatter(), new SimpleHTMLEncoder(),
           new QueryScorer(phraseQuery));
       final TokenStream tokenStream = TokenSources.getTokenStream(
-          indexReader.getTermVector(0, FIELD), true);
+          indexReader.getTermVector(0, FIELD));
       assertEquals("the fox <B>did</B> not <B>jump</B>", highlighter
           .getBestFragment(tokenStream, TEXT));
     } finally {
@@ -271,7 +271,7 @@ public class HighlighterPhraseTest extends LuceneTestCase {
           new QueryScorer(phraseQuery));
       final TokenStream tokenStream = TokenSources
           .getTokenStream(indexReader.getTermVector(
-              0, FIELD), false);
+              0, FIELD));
       assertEquals(
           highlighter.getBestFragment(new TokenStreamSparse(), TEXT),
           highlighter.getBestFragment(tokenStream, TEXT));

