GitDiffStart: 48f55644505c5bf553b2225f9559c351621194b0 | Tue Feb 25 19:44:32 2014 +0000
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Affix.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Affix.java
index 443c006..47a8148 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Affix.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Affix.java
@@ -24,7 +24,6 @@ import java.util.regex.Pattern;
  */
 final class Affix {
 
-  private String append; // the affix itself, what is appended
   private char appendFlags[]; // continuation class flags
   private String strip;
   
@@ -45,24 +44,6 @@ final class Affix {
   }
 
   /**
-   * Returns the append defined for the affix
-   *
-   * @return Defined append
-   */
-  public String getAppend() {
-    return append;
-  }
-
-  /**
-   * Sets the append defined for the affix
-   *
-   * @param append Defined append for the affix
-   */
-  public void setAppend(String append) {
-    this.append = append;
-  }
-
-  /**
    * Returns the flags defined for the affix append
    *
    * @return Flags defined for the affix append
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary.java
index 0456d99..713bc92 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary.java
@@ -257,9 +257,7 @@ public class Dictionary {
         char appendFlags[] = flagParsingStrategy.parseFlags(flagPart);
         Arrays.sort(appendFlags);
         affix.setAppendFlags(appendFlags);
-        affix.setAppend(affixArg.substring(0, flagSep));
-      } else {
-        affix.setAppend(affixArg);
+        affixArg = affixArg.substring(0, flagSep);
       }
 
       String condition = ruleArgs[4];
@@ -283,10 +281,10 @@ public class Dictionary {
       affix.setCondition(patterns.get(patternIndex));
       affix.setCrossProduct(crossProduct);
       
-      List<Affix> list = affixes.get(affix.getAppend());
+      List<Affix> list = affixes.get(affixArg);
       if (list == null) {
         list = new ArrayList<Affix>();
-        affixes.put(affix.getAppend(), list);
+        affixes.put(affixArg, list);
       }
       
       list.add(affix);
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Stemmer.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Stemmer.java
index aa00836..62096ef 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Stemmer.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Stemmer.java
@@ -126,7 +126,8 @@ final class Stemmer {
 
       for (Affix suffix : suffixes) {
         if (hasCrossCheckedFlag(suffix.getFlag(), flags)) {
-          int deAffixedLength = length - suffix.getAppend().length();
+          int appendLength = length - i;
+          int deAffixedLength = length - appendLength;
           // TODO: can we do this in-place?
           String strippedWord = new StringBuilder().append(word, 0, deAffixedLength).append(suffix.getStrip()).toString();
 
@@ -148,7 +149,7 @@ final class Stemmer {
 
       for (Affix prefix : prefixes) {
         if (hasCrossCheckedFlag(prefix.getFlag(), flags)) {
-          int deAffixedStart = prefix.getAppend().length();
+          int deAffixedStart = i;
           int deAffixedLength = length - deAffixedStart;
 
           String strippedWord = new StringBuilder().append(prefix.getStrip())

