GitDiffStart: 6fe805f80bebe2c3f94298b8d665f873f03faf37 | Thu May 21 05:52:48 2009 +0000
diff --git a/contrib/dataimporthandler/CHANGES.txt b/contrib/dataimporthandler/CHANGES.txt
index f9e17b2..9049ef5 100644
--- a/contrib/dataimporthandler/CHANGES.txt
+++ b/contrib/dataimporthandler/CHANGES.txt
@@ -142,6 +142,7 @@ New Features
 32.SOLR-1092: Added a new command named 'import' which does not automatically clean the index. This is useful and
               more appropriate when one needs to import only some of the entities.
               (Noble Paul via shalin)
+33.SOLR-11153: 'deltaImportQuery' is honored on child entities as well (noble) 
 
 Optimizations
 ----------------------
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
index dc9eeb5..dd2dfb8 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/SqlEntityProcessor.java
@@ -107,18 +107,17 @@ public class SqlEntityProcessor extends EntityProcessorBase {
 
   public String getQuery() {
     String queryString = context.getEntityAttribute(QUERY);
-    if (context.currentProcess() == Context.FULL_DUMP
-            || !context.isRootEntity()) {
+    if (Context.FULL_DUMP.equals(context.currentProcess())) {
       return queryString;
     }
+    if (Context.DELTA_DUMP.equals(context.currentProcess())) {
+      String deltaImportQuery = context.getEntityAttribute(DELTA_IMPORT_QUERY);
+      if(deltaImportQuery != null) return deltaImportQuery;
+    }
     return getDeltaImportQuery(queryString);
   }
 
-  public String getDeltaImportQuery(String queryString) {
-    String deltaImportQuery = context.getEntityAttribute(DELTA_IMPORT_QUERY);
-    if(deltaImportQuery != null){
-      return resolver.replaceTokens(deltaImportQuery);
-    }
+  public String getDeltaImportQuery(String queryString) {    
     StringBuilder sb = new StringBuilder(queryString);
     if (SELECT_WHERE_PATTERN.matcher(queryString).find()) {
       sb.append(" and ");

