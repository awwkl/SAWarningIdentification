GitDiffStart: 8f928033537ef70f07a1096b5ca45a3734c12cb3 | Thu Mar 14 04:56:45 2013 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index b94e6a9..2bfee06 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -79,7 +79,10 @@ Bug Fixes
   when used in field:value queries in the lucene QParser.  (hossman, yonik)
   
 * SOLR-4567: copyField source glob matching explicit field(s) stopped working
-  in Solr 4.2. (Alexandre Rafalovitch, Steve Rowe)  
+  in Solr 4.2. (Alexandre Rafalovitch, Steve Rowe)
+
+* SOLR-4297: Atomic update request containing null=true sets all subsequent
+  fields to null (Ben Pennell, Rob, shalin)
 
 
 Other Changes
diff --git a/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java b/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java
index 5380754..6211322 100644
--- a/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java
+++ b/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java
@@ -438,6 +438,7 @@ public class XMLLoader extends ContentStreamLoader {
           }
           boost = 1.0f;
           update = null;
+          isNull = false;
           String attrVal = "";
           for (int i = 0; i < parser.getAttributeCount(); i++) {
             attrName = parser.getAttributeLocalName(i);
diff --git a/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java b/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
index 64a4911..d73038f 100644
--- a/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
+++ b/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
@@ -1438,6 +1438,29 @@ abstract public class SolrExampleTests extends SolrJettyTestBase
     assertNotNull("Entire doc was replaced because null update was not written", response.getResults().get(0).getFieldValue("single_s"));
     assertNull("Null update failed. Value still exists in document", response.getResults().get(0).getFieldValue("multi_ss"));
   }
+
+  public void testSetNullUpdateOrder() throws Exception {
+    SolrServer solrServer = getSolrServer();
+    SolrInputDocument doc = new SolrInputDocument();
+    doc.addField("id", "testSetNullUpdateOrder");
+    doc.addField("single_s", "test-value");
+    doc.addField("multi_ss", Arrays.asList("first", "second"));
+    solrServer.add(doc);
+    solrServer.commit(true, true);
+
+    Map<String, Object> map = Maps.newHashMap();
+    map.put("set", null);
+    doc = new SolrInputDocument();
+    doc.addField("multi_ss", map);
+    doc.addField("id", "testSetNullUpdateOrder");
+    doc.addField("single_s", "test-value2");
+    solrServer.add(doc);
+    solrServer.commit();
+
+    QueryResponse response = solrServer.query(new SolrQuery("id:testSetNullUpdateOrder"));
+    assertEquals("Field included after set null=true not updated via atomic update", "test-value2",
+        response.getResults().get(0).getFieldValue("single_s"));
+  }
   
   @Test
   public void testQueryWithParams() throws SolrServerException {

