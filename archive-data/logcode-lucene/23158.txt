GitDiffStart: 753ae838e8d269630381b43da2c42e02e1bd7728 | Sat Jan 13 03:36:10 2007 +0000
diff --git a/client/ruby/solrb/lib/solr/request/add_document.rb b/client/ruby/solrb/lib/solr/request/add_document.rb
index aea9126..a939c60 100644
--- a/client/ruby/solrb/lib/solr/request/add_document.rb
+++ b/client/ruby/solrb/lib/solr/request/add_document.rb
@@ -12,11 +12,12 @@
 
 require 'solr/request/base'
 require 'solr/document'
+require 'solr/request/update'
 require 'rexml/document'
 
 module Solr
   module Request
-    class AddDocument < Solr::Request::Base
+    class AddDocument < Solr::Request::Update
 
       # create the request, optionally passing in a Solr::Document
       #
diff --git a/client/ruby/solrb/lib/solr/request/base.rb b/client/ruby/solrb/lib/solr/request/base.rb
index b2b3fcd..45c83f7 100644
--- a/client/ruby/solrb/lib/solr/request/base.rb
+++ b/client/ruby/solrb/lib/solr/request/base.rb
@@ -18,40 +18,14 @@ module Solr
       # response type is for a given request
       
       def response_format
-        case self
-        when Solr::Request::Commit
-          return :xml
-        when Solr::Request::Update
-          return :xml
-        when Solr::Request::Select
-          return :ruby
-        when Solr::Request::AddDocument
-          return :xml
-        when Solr::Request::Ping
-          return :xml
-        else
-          raise "unkown request type: #{self.class}"
-        end
+        raise "unknown request type: #{self.class}"
       end
 
       # returns the solr handler or url fragment that can 
       # respond to this type of request
       
       def handler
-        case self
-        when Solr::Request::Commit
-          return 'update'
-        when Solr::Request::Update
-          return 'update'
-        when Solr::Request::Select
-          return 'select' 
-        when Solr::Request::AddDocument
-          return 'update'
-        when Solr::Request::Ping
-          return 'admin/ping'
-        else
-          raise "unkown request type: #{self.class}"
-        end
+        raise "unkown request type: #{self.class}"
       end
 
     end
diff --git a/client/ruby/solrb/lib/solr/request/commit.rb b/client/ruby/solrb/lib/solr/request/commit.rb
index 55a5d1b..fca00cf 100644
--- a/client/ruby/solrb/lib/solr/request/commit.rb
+++ b/client/ruby/solrb/lib/solr/request/commit.rb
@@ -14,7 +14,7 @@ require 'rexml/document'
 
 module Solr
   module Request
-    class Commit < Solr::Request::Base
+    class Commit < Solr::Request::Update
 
       def to_s
         return REXML::Element.new('commit').to_s
diff --git a/client/ruby/solrb/lib/solr/request/ping.rb b/client/ruby/solrb/lib/solr/request/ping.rb
index dd85348..9d57dd4 100644
--- a/client/ruby/solrb/lib/solr/request/ping.rb
+++ b/client/ruby/solrb/lib/solr/request/ping.rb
@@ -13,6 +13,13 @@
 module Solr
   module Request
     class Ping < Solr::Request::Base
+      def response_format
+        :xml
+      end
+      
+      def handler
+        'admin/ping'
+      end
     end
   end
 end
diff --git a/client/ruby/solrb/lib/solr/request/select.rb b/client/ruby/solrb/lib/solr/request/select.rb
index 98738f6..3ce0c4f 100644
--- a/client/ruby/solrb/lib/solr/request/select.rb
+++ b/client/ruby/solrb/lib/solr/request/select.rb
@@ -20,6 +20,14 @@ module Solr
       def initialize(query)
         @query = query
       end
+      
+      def response_format
+        :ruby
+      end
+      
+      def handler
+        'select'
+      end
 
       def to_hash
         return {:q => query, :wt => 'ruby', :fl => '*,score'}
@@ -35,7 +43,7 @@ module Solr
 
         http_params.join("&")
       end
-
+      
     end
   end
 end
diff --git a/client/ruby/solrb/lib/solr/request/update.rb b/client/ruby/solrb/lib/solr/request/update.rb
index 2b5555f..11b4dd1 100644
--- a/client/ruby/solrb/lib/solr/request/update.rb
+++ b/client/ruby/solrb/lib/solr/request/update.rb
@@ -13,7 +13,12 @@
 module Solr
   module Request
     class Update < Solr::Request::Base
-      def initialize
+      def response_format
+        :xml
+      end
+
+      def handler
+        'update'
       end
     end
   end
diff --git a/client/ruby/solrb/test/unit/connection_test.rb b/client/ruby/solrb/test/unit/connection_test.rb
index 6b6ce80..d69746a 100755
--- a/client/ruby/solrb/test/unit/connection_test.rb
+++ b/client/ruby/solrb/test/unit/connection_test.rb
@@ -20,6 +20,12 @@ class ConnectionTest < SolrMockBaseTestCase
     set_post_return("foo")
     assert_equal "foo", connection.post(Solr::Request::Update.new)
   end
+  
+  def test_bad_url
+    assert_raise(RuntimeError) do
+      Connection.new("ftp://localhost:9999")
+    end
+  end
 
   def test_connection_initialize
     connection = Solr::Connection.new("http://localhost:8983/solr")
diff --git a/client/ruby/solrb/test/unit/request_test.rb b/client/ruby/solrb/test/unit/request_test.rb
index db63956..72653ba 100755
--- a/client/ruby/solrb/test/unit/request_test.rb
+++ b/client/ruby/solrb/test/unit/request_test.rb
@@ -13,6 +13,9 @@
 require 'test/unit'
 require 'solr'
 
+class BadRequest < Solr::Request::Base
+end
+
 class RequestTest < Test::Unit::TestCase
 
   def test_commit_request
@@ -36,5 +39,20 @@ class RequestTest < Test::Unit::TestCase
     assert 'belkin', request.to_hash['q']
     assert_match /q=belkin/, request.to_s
   end
+  
+  def test_ping_request
+    request = Solr::Request::Ping.new
+    assert_equal :xml, request.response_format
+  end
+
+  def test_bad_request_class
+    assert_raise(RuntimeError) do
+      BadRequest.new.response_format
+    end
+    
+    assert_raise(RuntimeError) do
+      BadRequest.new.handler
+    end
+  end
 
 end

