GitDiffStart: 303ff3928fe4ce6a48a072d1923d94e7a47a6bb5 | Tue May 10 16:01:17 2011 +0000
diff --git a/lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec.java b/lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec.java
index 4e1c33e..2fe6154 100644
--- a/lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec.java
+++ b/lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec.java
@@ -140,6 +140,9 @@ public class MockRandomCodec extends Codec {
     out.close();
 
     final Random random = new Random(seed);
+    
+    random.nextInt(); // consume a random for buffersize
+    
     PostingsWriterBase postingsWriter;
 
     if (random.nextBoolean()) {
@@ -238,16 +241,22 @@ public class MockRandomCodec extends Codec {
     in.close();
 
     final Random random = new Random(seed);
+    
+    int readBufferSize = _TestUtil.nextInt(random, 1, 4096);
+    if (LuceneTestCase.VERBOSE) {
+      System.out.println("MockRandomCodec: readBufferSize=" + readBufferSize);
+    }
+
     PostingsReaderBase postingsReader;
 
     if (random.nextBoolean()) {
       postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,
-                                                 state.readBufferSize, new MockIntStreamFactory(random), state.codecId);
+                                                 readBufferSize, new MockIntStreamFactory(random), state.codecId);
     } else {
       if (LuceneTestCase.VERBOSE) {
         System.out.println("MockRandomCodec: reading Standard postings");
       }
-      postingsReader = new StandardPostingsReader(state.dir, state.segmentInfo, state.readBufferSize, state.codecId);
+      postingsReader = new StandardPostingsReader(state.dir, state.segmentInfo, readBufferSize, state.codecId);
     }
 
     if (random.nextBoolean()) {
@@ -312,7 +321,7 @@ public class MockRandomCodec extends Codec {
                                                 state.fieldInfos,
                                                 state.segmentInfo.name,
                                                 postingsReader,
-                                                state.readBufferSize,
+                                                readBufferSize,
                                                 termsCacheSize,
                                                 state.codecId);
       success = true;

