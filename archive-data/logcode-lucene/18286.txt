GitDiffStart: 21a1b9f0056fddfa3c8dc6dd1c0c96a4d3087b41 | Mon Mar 15 02:23:10 2010 +0000
diff --git a/src/java/org/apache/solr/util/SolrPluginUtils.java b/src/java/org/apache/solr/util/SolrPluginUtils.java
index 9cc04c3..ad658b7 100644
--- a/src/java/org/apache/solr/util/SolrPluginUtils.java
+++ b/src/java/org/apache/solr/util/SolrPluginUtils.java
@@ -988,9 +988,9 @@ public class SolrPluginUtils {
         Object val = entry.getValue();
         method.invoke(bean, val);
       } catch (InvocationTargetException e1) {
-        throw new RuntimeException("Error invoking setter " + setterName + "on class : " + clazz.getName(), e1);
+        throw new RuntimeException("Error invoking setter " + setterName + " on class : " + clazz.getName(), e1);
       } catch (IllegalAccessException e1) {
-        throw new RuntimeException("Error invoking setter " + setterName + "on class : " + clazz.getName(), e1);
+        throw new RuntimeException("Error invoking setter " + setterName + " on class : " + clazz.getName(), e1);
       }
     }
   }
diff --git a/src/test/org/apache/solr/core/TestPropInject.java b/src/test/org/apache/solr/core/TestPropInject.java
index 21a4847..1c80781 100644
--- a/src/test/org/apache/solr/core/TestPropInject.java
+++ b/src/test/org/apache/solr/core/TestPropInject.java
@@ -52,6 +52,6 @@ public class TestPropInject extends AbstractSolrTestCase {
   public void testPropsDefaults() throws Exception {
     IndexWriter writer = new ExposeWriterHandler().getWriter();
     ConcurrentMergeScheduler cms = (ConcurrentMergeScheduler)writer.getMergeScheduler();
-    assertEquals(10, cms.getMaxThreadCount());
+    assertEquals(4, cms.getMaxThreadCount());
   }
 }
diff --git a/src/test/test-files/solr/conf/solrconfig-propinject-indexdefault.xml b/src/test/test-files/solr/conf/solrconfig-propinject-indexdefault.xml
index 24db6d6..1b0b3b0 100644
--- a/src/test/test-files/solr/conf/solrconfig-propinject-indexdefault.xml
+++ b/src/test/test-files/solr/conf/solrconfig-propinject-indexdefault.xml
@@ -94,7 +94,7 @@
       can perform merges in the background using separate threads.  The SerialMergeScheduler (Lucene 2.2 default) does not.
      -->
     <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler">
-      <int name="maxThreadCount">10</int>
+      <int name="maxThreadCount">4</int>
     </mergeScheduler>
     <!-- these are global... can't currently override per index -->
     <writeLockTimeout>1000</writeLockTimeout>

