GitDiffStart: ed0f198480a9f82fb0eb88a773398ac187dcae22 | Wed Dec 24 18:50:31 2014 +0000
diff --git a/solr/core/src/java/org/apache/solr/core/RequestParams.java b/solr/core/src/java/org/apache/solr/core/RequestParams.java
index 137910d..02e464c 100644
--- a/solr/core/src/java/org/apache/solr/core/RequestParams.java
+++ b/solr/core/src/java/org/apache/solr/core/RequestParams.java
@@ -129,15 +129,17 @@ public class RequestParams implements MapSerializable{
           log.info("request params refreshed to version {}",requestParams.getZnodeVersion());
         }
       } catch (KeeperException e) {
-        //todo handle properly
-        log.error("",e);
+        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
       } catch (InterruptedException e) {
-        //todo handle properly
-
-        log.error("",e);
+        Thread.currentThread().interrupt();
+        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
       }
 
+    } else if(requestParams == null) {
+      Object[] o = getMapAndVersion(loader, RequestParams.RESOURCE);
+      requestParams = new RequestParams((Map) o[0],(Integer)o[1]);
     }
+
     return requestParams;
 
   }
@@ -152,16 +154,17 @@ public class RequestParams implements MapSerializable{
       return new Object[]{Collections.EMPTY_MAP, -1};
     }
 
-    try {
       int version = 0; //will be always 0 for file based resourceloader
       if (in instanceof ZkSolrResourceLoader.ZkByteArrayInputStream) {
         version = ((ZkSolrResourceLoader.ZkByteArrayInputStream) in).getStat().getVersion();
         log.info( "conf resource {} loaded . version : {} ", name,version);
       }
+
+    try {
       Map m = (Map) ObjectBuilder.getVal(new JSONParser(new InputStreamReader(in, StandardCharsets.UTF_8)));
       return new Object[]{m,version};
-    } catch (Exception e) {
-      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Error reading conf resource "+name,e);
+    } catch (IOException e) {
+      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Error parsing conf resource "+name,e);
     }
 
   }
diff --git a/solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.java b/solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.java
index fa10ab3..6705b65 100644
--- a/solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.java
@@ -113,9 +113,10 @@ public class SolrConfigHandler extends RequestHandlerBase implements SolrCoreAwa
             log.info("config update listener called for core {}", coreName);
             SolrZkClient zkClient = cc.getZkController().getZkClient();
             int solrConfigversion,overlayVersion, managedSchemaVersion=0;
+            SolrConfig cfg = null;
             try (SolrCore core = cc.getCore(coreName))  {
               if (core.isClosed()) return;
-              core.getSolrConfig().refreshRequestParams();
+              cfg = core.getSolrConfig();
               solrConfigversion = core.getSolrConfig().getOverlay().getZnodeVersion();
                overlayVersion = core.getSolrConfig().getZnodeVersion();
               if(managedSchmaResourcePath != null){
@@ -123,6 +124,9 @@ public class SolrConfigHandler extends RequestHandlerBase implements SolrCoreAwa
               }
 
             }
+            if(cfg != null){
+              cfg.refreshRequestParams();
+            }
 
             if (checkStale(zkClient, overlayPath, solrConfigversion) ||
                 checkStale(zkClient, solrConfigPath, overlayVersion) ||

