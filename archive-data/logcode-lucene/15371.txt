GitDiffStart: e5addc06d3accf159434a57df8f9ac88c218117e | Tue Jun 28 21:39:01 2011 +0000
diff --git a/solr/src/java/org/apache/solr/search/function/FileFloatSource.java b/solr/src/java/org/apache/solr/search/function/FileFloatSource.java
index 53ee329..8675aee 100755
--- a/solr/src/java/org/apache/solr/search/function/FileFloatSource.java
+++ b/solr/src/java/org/apache/solr/search/function/FileFloatSource.java
@@ -76,9 +76,8 @@ public class FileFloatSource extends ValueSource {
 
   @Override
   public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {
-    int offset = 0;
+    final int off = readerContext.docBase;
     ReaderContext topLevelContext = ReaderUtil.getTopLevelContext(readerContext);
-    final int off = offset;
 
     final float[] arr = getCachedFloats(topLevelContext.reader);
     return new FloatDocValues(this) {
diff --git a/solr/src/test/org/apache/solr/search/function/TestFunctionQuery.java b/solr/src/test/org/apache/solr/search/function/TestFunctionQuery.java
index 47f26d9..abdd430 100755
--- a/solr/src/test/org/apache/solr/search/function/TestFunctionQuery.java
+++ b/solr/src/test/org/apache/solr/search/function/TestFunctionQuery.java
@@ -65,11 +65,25 @@ public class TestFunctionQuery extends SolrTestCaseJ4 {
     // lrf.args.put("version","2.0");
     for (float val : values) {
       String s = Float.toString(val);
+
       if (field!=null) assertU(adoc("id", s, field, s));
       else assertU(adoc("id", s));
+
+      if (random.nextInt(100) < 20) {
+        if (field!=null) assertU(adoc("id", s, field, s));
+        else assertU(adoc("id", s));
+      }
+
+      if (random.nextInt(100) < 20) {
+        assertU(commit());
+
+      }
+
+
       // System.out.println("added doc for " + val);
     }
-    assertU(optimize()); // squeeze out any possible deleted docs
+    // assertU(optimize()); // squeeze out any possible deleted docs
+    assertU(commit());
   }
 
   // replace \0 with the field name and create a parseable string 

