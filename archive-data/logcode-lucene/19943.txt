GitDiffStart: 9689ddf9e8a1ba7f64e77bf8ad85914ef8503e21 | Sun Jul 5 19:09:01 2009 +0000
diff --git a/src/java/org/apache/lucene/search/spans/SpanFirstQuery.java b/src/java/org/apache/lucene/search/spans/SpanFirstQuery.java
index 1bef13f..b65233a 100644
--- a/src/java/org/apache/lucene/search/spans/SpanFirstQuery.java
+++ b/src/java/org/apache/lucene/search/spans/SpanFirstQuery.java
@@ -28,7 +28,7 @@ import org.apache.lucene.search.Query;
 import org.apache.lucene.util.ToStringUtils;
 
 /** Matches spans near the beginning of a field. */
-public class SpanFirstQuery extends SpanQuery {
+public class SpanFirstQuery extends SpanQuery implements Cloneable {
   private SpanQuery match;
   private int end;
 
@@ -64,6 +64,12 @@ public class SpanFirstQuery extends SpanQuery {
     return buffer.toString();
   }
   
+  public Object clone() {
+    SpanFirstQuery spanFirstQuery = new SpanFirstQuery((SpanQuery) match.clone(), end);
+    spanFirstQuery.setBoost(getBoost());
+    return spanFirstQuery;
+  }
+  
   public void extractTerms(Set terms) {
 	    match.extractTerms(terms);
   }
diff --git a/src/java/org/apache/lucene/search/spans/SpanNearQuery.java b/src/java/org/apache/lucene/search/spans/SpanNearQuery.java
index 462d78e..b797ed1 100644
--- a/src/java/org/apache/lucene/search/spans/SpanNearQuery.java
+++ b/src/java/org/apache/lucene/search/spans/SpanNearQuery.java
@@ -160,7 +160,9 @@ public class SpanNearQuery extends SpanQuery implements Cloneable {
       SpanQuery clause = (SpanQuery) clauses.get(i);
       newClauses[i] = (SpanQuery) clause.clone();
     }
-    return new SpanNearQuery(newClauses, slop, inOrder);
+    SpanNearQuery spanNearQuery = new SpanNearQuery(newClauses, slop, inOrder);
+    spanNearQuery.setBoost(getBoost());
+    return spanNearQuery;
   }
 
   /** Returns true iff <code>o</code> is equal to this. */
diff --git a/src/java/org/apache/lucene/search/spans/SpanNotQuery.java b/src/java/org/apache/lucene/search/spans/SpanNotQuery.java
index bb47329..8ae5ffb 100644
--- a/src/java/org/apache/lucene/search/spans/SpanNotQuery.java
+++ b/src/java/org/apache/lucene/search/spans/SpanNotQuery.java
@@ -69,7 +69,9 @@ public class SpanNotQuery extends SpanQuery implements Cloneable {
   }
 
   public Object clone() {
-    return  new SpanNotQuery((SpanQuery)include.clone(),(SpanQuery) exclude.clone());
+    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),(SpanQuery) exclude.clone());
+    spanNotQuery.setBoost(getBoost());
+    return  spanNotQuery;
   }
 
   public Spans getSpans(final IndexReader reader) throws IOException {
diff --git a/src/java/org/apache/lucene/search/spans/SpanOrQuery.java b/src/java/org/apache/lucene/search/spans/SpanOrQuery.java
index 9083413..1af3a9d 100644
--- a/src/java/org/apache/lucene/search/spans/SpanOrQuery.java
+++ b/src/java/org/apache/lucene/search/spans/SpanOrQuery.java
@@ -89,6 +89,7 @@ public class SpanOrQuery extends SpanQuery implements Cloneable {
       newClauses[i] = (SpanQuery) clause.clone();
     }
     SpanOrQuery soq = new SpanOrQuery(newClauses);
+    soq.setBoost(getBoost());
     return soq;
   }
 

