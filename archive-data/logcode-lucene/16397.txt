GitDiffStart: f4e977bb26143619a034574ef4a61e1dd136a3f4 | Thu Feb 10 11:50:37 2011 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 402bb3d..a9a5167 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -856,7 +856,9 @@ New features
   CJK types are explicitly marked to allow for custom downstream handling: 
   <IDEOGRAPHIC>, <HANGUL>, <KATAKANA>, and <HIRAGANA>.  
   (Robert Muir, Steven Rowe)
-  
+
+* LUCENE-2913: Add missing getters to Numeric* classes. (Uwe Schindler)
+
 Optimizations
 
 * LUCENE-2494: Use CompletionService in ParallelMultiSearcher instead of
diff --git a/lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.java b/lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.java
index b98a246..4dc63e9 100644
--- a/lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.java
+++ b/lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.java
@@ -293,6 +293,11 @@ public final class NumericTokenStream extends TokenStream {
     return (shift < valSize);
   }
 
+  /** Returns the precision step. */
+  public int getPrecisionStep() {
+    return precisionStep;
+  }
+  
   // members
   private final NumericTermAttribute numericAtt = addAttribute(NumericTermAttribute.class);
   private final TypeAttribute typeAtt = addAttribute(TypeAttribute.class);
diff --git a/lucene/src/java/org/apache/lucene/document/NumericField.java b/lucene/src/java/org/apache/lucene/document/NumericField.java
index 4d008e0..6cae722 100644
--- a/lucene/src/java/org/apache/lucene/document/NumericField.java
+++ b/lucene/src/java/org/apache/lucene/document/NumericField.java
@@ -222,6 +222,11 @@ public final class NumericField extends AbstractField {
     return (Number) fieldsData;
   }
   
+  /** Returns the precision step. */
+  public int getPrecisionStep() {
+    return numericTS.getPrecisionStep();
+  }
+  
   /**
    * Initializes the field with the supplied <code>long</code> value.
    * @param value the numeric value
diff --git a/lucene/src/java/org/apache/lucene/search/NumericRangeFilter.java b/lucene/src/java/org/apache/lucene/search/NumericRangeFilter.java
index f3a2dc1..116972a 100644
--- a/lucene/src/java/org/apache/lucene/search/NumericRangeFilter.java
+++ b/lucene/src/java/org/apache/lucene/search/NumericRangeFilter.java
@@ -179,4 +179,7 @@ public final class NumericRangeFilter<T extends Number> extends MultiTermQueryWr
   /** Returns the upper value of this range filter */
   public T getMax() { return query.getMax(); }
   
+  /** Returns the precision step. */
+  public int getPrecisionStep() { return query.getPrecisionStep(); }
+  
 }
diff --git a/lucene/src/java/org/apache/lucene/search/NumericRangeQuery.java b/lucene/src/java/org/apache/lucene/search/NumericRangeQuery.java
index 1daa453..1d0b662 100644
--- a/lucene/src/java/org/apache/lucene/search/NumericRangeQuery.java
+++ b/lucene/src/java/org/apache/lucene/search/NumericRangeQuery.java
@@ -319,6 +319,9 @@ public final class NumericRangeQuery<T extends Number> extends MultiTermQuery {
   /** Returns the upper value of this range query */
   public T getMax() { return max; }
   
+  /** Returns the precision step. */
+  public int getPrecisionStep() { return precisionStep; }
+  
   @Override
   public String toString(final String field) {
     final StringBuilder sb = new StringBuilder();

