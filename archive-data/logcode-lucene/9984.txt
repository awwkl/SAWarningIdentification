GitDiffStart: bbbe89ed1455c1e3e65b8390be80fbefa885a84b | Fri Jan 4 16:11:22 2013 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 87eb854..520b4c9 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -310,6 +310,10 @@ Bug Fixes
   that have no TermToBytesRefAttribute (commonly provided by CharTermAttribute),
   e.g., oal.analysis.miscellaneous.EmptyTokenStream.
   (Uwe Schindler, Adrien Grand, Robert Muir)
+
+* LUCENE-4660: ConcurrentMergeScheduler was taking too long to
+  un-pause incoming threads it had paused when too many merges were
+  queued up. (Mike McCandless)
     
 Changes in Runtime Behavior
   
diff --git a/lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java b/lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java
index e62fb33..197846d 100644
--- a/lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java
+++ b/lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java
@@ -479,6 +479,14 @@ public class ConcurrentMergeScheduler extends MergeScheduler {
           // Subsequent times through the loop we do any new
           // merge that writer says is necessary:
           merge = tWriter.getNextMerge();
+
+          // Notify here in case any threads were stalled;
+          // they will notice that the pending merge has
+          // been pulled and possibly resume:
+          synchronized(ConcurrentMergeScheduler.this) {
+            ConcurrentMergeScheduler.this.notifyAll();
+          }
+
           if (merge != null) {
             updateMergeThreads();
             if (verbose()) {

