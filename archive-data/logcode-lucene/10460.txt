GitDiffStart: 81c849c7e257d7e4998f65764d00b5f336b329f0 | Tue Nov 20 05:27:37 2012 +0000
diff --git a/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java b/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java
index 62cc982..e881f58 100644
--- a/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java
+++ b/solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java
@@ -158,12 +158,12 @@ public class OverseerCollectionProcessor implements Runnable {
   }
 
   private boolean createCollection(ClusterState clusterState, ZkNodeProps message) {
-	  String collectionName = message.getStr("name");
-	  if(clusterState.getCollections().contains(collectionName)) {
-	    SolrException.log(log, "collection already exists: " + collectionName);
-		  return false;
-	  }
-	  
+    String collectionName = message.getStr("name");
+    if (clusterState.getCollections().contains(collectionName)) {
+      SolrException.log(log, "collection already exists: " + collectionName);
+      return false;
+    }
+
     // look at the replication factor and see if it matches reality
     // if it does not, find best nodes to create more cores
     
@@ -216,10 +216,11 @@ public class OverseerCollectionProcessor implements Runnable {
     int numNodes = numShards * (numReplicas + 1);
     if (nodeList.size() < numNodes) {
       log.warn("Not enough nodes available to satisfy create collection request for collection:"
-                  + collectionName
-                  + " nodes needed:"
-                  + numNodes
-                  + " nodes available:" + nodeList.size() + " - using nodes available");
+          + collectionName
+          + " nodes needed:"
+          + numNodes
+          + " nodes available:"
+          + nodeList.size() + " - using nodes available");
     }
 
     List<String> createOnNodes = nodeList.subList(0, Math.min(nodeList.size(), numNodes));

