GitDiffStart: 3ef76ae033b8a6e77b5469233cf130a74550b0e2 | Tue Apr 14 00:36:02 2009 +0000
diff --git a/contrib/queries/src/java/org/apache/lucene/search/trie/IntTrieTokenStream.java b/contrib/queries/src/java/org/apache/lucene/search/trie/IntTrieTokenStream.java
index cd602e5..597664a 100644
--- a/contrib/queries/src/java/org/apache/lucene/search/trie/IntTrieTokenStream.java
+++ b/contrib/queries/src/java/org/apache/lucene/search/trie/IntTrieTokenStream.java
@@ -50,12 +50,12 @@ import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute;
  *  Field field = new Field(name, stream);
  *  field.setOmitNorms(true);
  *  field.setOmitTermFreqAndPositions(true);
+ *  Document doc = new Document();
+ *  document.add(field);
  *  <em>// use this code to index many documents:</em>
  *  stream.setValue(value1)
- *  document.add(field);
  *  writer.addDocument(document);
  *  stream.setValue(value2)
- *  document.add(field);
  *  writer.addDocument(document);
  *  ...
  * </pre>
diff --git a/contrib/queries/src/java/org/apache/lucene/search/trie/LongTrieTokenStream.java b/contrib/queries/src/java/org/apache/lucene/search/trie/LongTrieTokenStream.java
index 8a116dd..0ca6ef7 100644
--- a/contrib/queries/src/java/org/apache/lucene/search/trie/LongTrieTokenStream.java
+++ b/contrib/queries/src/java/org/apache/lucene/search/trie/LongTrieTokenStream.java
@@ -50,12 +50,12 @@ import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute;
  *  Field field = new Field(name, stream);
  *  field.setOmitNorms(true);
  *  field.setOmitTermFreqAndPositions(true);
+ *  Document doc = new Document();
+ *  document.add(field);
  *  <em>// use this code to index many documents:</em>
  *  stream.setValue(value1)
- *  document.add(field);
  *  writer.addDocument(document);
  *  stream.setValue(value2)
- *  document.add(field);
  *  writer.addDocument(document);
  *  ...
  * </pre>
diff --git a/contrib/queries/src/test/org/apache/lucene/search/trie/TestIntTrieTokenStream.java b/contrib/queries/src/test/org/apache/lucene/search/trie/TestIntTrieTokenStream.java
index e53b6e2..415798a 100644
--- a/contrib/queries/src/test/org/apache/lucene/search/trie/TestIntTrieTokenStream.java
+++ b/contrib/queries/src/test/org/apache/lucene/search/trie/TestIntTrieTokenStream.java
@@ -29,10 +29,9 @@ public class TestIntTrieTokenStream extends LuceneTestCase {
   public void testStreamNewAPI() throws Exception {
     final IntTrieTokenStream stream=new IntTrieTokenStream(value, precisionStep);
     stream.setUseNewAPI(true);
+    // use getAttribute to test if attributes really exist, if not an IAE will be throwed
     final ShiftAttribute shiftAtt = (ShiftAttribute) stream.getAttribute(ShiftAttribute.class);
-    assertNotNull("Has shift attribute", shiftAtt);
     final TermAttribute termAtt = (TermAttribute) stream.getAttribute(TermAttribute.class);
-    assertNotNull("Has term attribute", termAtt);
     for (int shift=0; shift<32; shift+=precisionStep) {
       assertTrue("New token is available", stream.incrementToken());
       assertEquals("Shift value", shift, shiftAtt.getShift());
diff --git a/contrib/queries/src/test/org/apache/lucene/search/trie/TestLongTrieTokenStream.java b/contrib/queries/src/test/org/apache/lucene/search/trie/TestLongTrieTokenStream.java
index e116f9e..be8c47b 100644
--- a/contrib/queries/src/test/org/apache/lucene/search/trie/TestLongTrieTokenStream.java
+++ b/contrib/queries/src/test/org/apache/lucene/search/trie/TestLongTrieTokenStream.java
@@ -29,10 +29,9 @@ public class TestLongTrieTokenStream extends LuceneTestCase {
   public void testStreamNewAPI() throws Exception {
     final LongTrieTokenStream stream=new LongTrieTokenStream(value, precisionStep);
     stream.setUseNewAPI(true);
+    // use getAttribute to test if attributes really exist, if not an IAE will be throwed
     final ShiftAttribute shiftAtt = (ShiftAttribute) stream.getAttribute(ShiftAttribute.class);
-    assertNotNull("Has shift attribute", shiftAtt);
     final TermAttribute termAtt = (TermAttribute) stream.getAttribute(TermAttribute.class);
-    assertNotNull("Has term attribute", termAtt);
     for (int shift=0; shift<64; shift+=precisionStep) {
       assertTrue("New token is available", stream.incrementToken());
       assertEquals("Shift value", shift, shiftAtt.getShift());

