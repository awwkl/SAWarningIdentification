GitDiffStart: a71c3e7147bb85fbd732697b4ce410e8e47e7e53 | Wed Jun 13 13:35:58 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/util/fst/FST.java b/lucene/core/src/java/org/apache/lucene/util/fst/FST.java
index f69cbcc..e43b795 100644
--- a/lucene/core/src/java/org/apache/lucene/util/fst/FST.java
+++ b/lucene/core/src/java/org/apache/lucene/util/fst/FST.java
@@ -1428,7 +1428,14 @@ public final class FST<T> {
    *  process requires substantial additional RAM (currently
    *  up to ~8 bytes per node depending on
    *  <code>acceptableOverheadRatio</code>), but then should
-   *  produce a smaller FST. */
+   *  produce a smaller FST.
+   *
+   *  <p>The implementation of this method uses ideas from
+   *  <a target="_blank" href="http://www.cs.put.poznan.pl/dweiss/site/publications/download/fsacomp.pdf">Smaller Representation of Finite State Automata</a>,
+   *  which describes techniques to reduce the size of a FST.
+   *  However, this is not a strict implementation of the
+   *  algorithms described in this paper.
+   */
   public FST<T> pack(int minInCountDeref, int maxDerefNodes, float acceptableOverheadRatio) throws IOException {
 
     // TODO: other things to try

