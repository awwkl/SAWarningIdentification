GitDiffStart: bd776e916bb8c553a86b4c592ad89dd45c68678d | Sun Oct 5 01:08:17 2008 +0000
diff --git a/client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java b/client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java
index d420860..ab917be 100644
--- a/client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java
+++ b/client/java/solrj/src/org/apache/solr/client/solrj/SolrQuery.java
@@ -184,11 +184,18 @@ public class SolrQuery extends ModifiableSolrParams
     return this.getInt(FacetParams.FACET_MINCOUNT, 1);
   }
 
-  public SolrQuery setMissing(String fld) {
-    this.set(FacetParams.FACET_MISSING, fld);
+  public SolrQuery setFacetMissing(Boolean v) {
+    this.set(FacetParams.FACET_MISSING, v);
     return this;
   }
 
+  /**
+   * @deprecated use {@link #setFacetMissing(String)}
+   */
+  public SolrQuery setMissing(String fld) {
+    return setFacetMissing(Boolean.valueOf(fld));
+  }
+
   /** get facet sort
    * 
    * @return facet sort or default of true
diff --git a/client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java b/client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java
index b817ad3..bcd5da1 100644
--- a/client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java
+++ b/client/java/solrj/test/org/apache/solr/client/solrj/SolrQueryTest.java
@@ -17,6 +17,8 @@
 
 package org.apache.solr.client.solrj;
 
+import org.apache.solr.common.params.FacetParams;
+
 import junit.framework.Assert;
 import junit.framework.TestCase;
 
@@ -113,5 +115,18 @@ public class SolrQueryTest extends TestCase {
       assertEquals(10, q.setStart(10).getStart().intValue());
       assertEquals("foo", q.setQueryType("foo").getQueryType());
       assertEquals(10, q.setTimeAllowed(10).getTimeAllowed().intValue());
+      
+      // non-standard
+      assertEquals("foo", q.setFacetPrefix("foo").get( FacetParams.FACET_PREFIX, null ) );
+      assertEquals("foo", q.setFacetPrefix("a", "foo").getFieldParam( "a", FacetParams.FACET_PREFIX, null ) );
+
+      assertEquals( Boolean.TRUE, q.setMissing(Boolean.TRUE.toString()).getBool( FacetParams.FACET_MISSING ) );
+      assertEquals( Boolean.FALSE, q.setFacetMissing( Boolean.FALSE ).getBool( FacetParams.FACET_MISSING ) );      
+      assertEquals( "true", q.setParam( "xxx", true ).getParams( "xxx" )[0] );
+  }
+  
+  public void testOrder() {
+    assertEquals( SolrQuery.ORDER.asc, SolrQuery.ORDER.desc.reverse() );
+    assertEquals( SolrQuery.ORDER.desc, SolrQuery.ORDER.asc.reverse() );
   }
 }

