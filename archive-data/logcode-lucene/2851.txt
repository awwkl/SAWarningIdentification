GitDiffStart: 2b05cda72cd222847487823702633f3930cf8121 | Fri Aug 21 07:17:01 2015 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 196daed..07b4944 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -81,6 +81,9 @@ Bug Fixes
 
 * LUCENE-6745: RAMInputStream.clone was not thread safe (Mike McCandless)
 
+* LUCENE-6748: UsageTrackingQueryCachingPolicy no longer caches trivial queries
+  like MatchAllDocsQuery. (Adrien Grand)
+
 Other
 
 * LUCENE-6174: Improve "ant eclipse" to select right JRE for building.
diff --git a/lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy.java b/lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy.java
index 4af1389..f2f146c 100644
--- a/lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy.java
+++ b/lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy.java
@@ -123,6 +123,24 @@ public final class UsageTrackingQueryCachingPolicy implements QueryCachingPolicy
 
   @Override
   public boolean shouldCache(Query query, LeafReaderContext context) throws IOException {
+    if (query instanceof MatchAllDocsQuery
+        // MatchNoDocsQuery currently rewrites to a BooleanQuery,
+        // but who knows, it might get its own Weight one day
+        || query instanceof MatchNoDocsQuery) {
+      return false;
+    }
+    if (query instanceof BooleanQuery) {
+      BooleanQuery bq = (BooleanQuery) query;
+      if (bq.clauses().isEmpty()) {
+        return false;
+      }
+    }
+    if (query instanceof DisjunctionMaxQuery) {
+      DisjunctionMaxQuery dmq = (DisjunctionMaxQuery) query;
+      if (dmq.getDisjuncts().isEmpty()) {
+        return false;
+      }
+    }
     if (segmentPolicy.shouldCache(query, context) == false) {
       return false;
     }
diff --git a/lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.java b/lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.java
index 5924aba..1b47872 100644
--- a/lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.java
+++ b/lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.java
@@ -17,6 +17,8 @@ package org.apache.lucene.search;
  * limitations under the License.
  */
 
+import org.apache.lucene.index.MultiReader;
+import org.apache.lucene.index.SlowCompositeReaderWrapper;
 import org.apache.lucene.index.Term;
 import org.apache.lucene.util.LuceneTestCase;
 
@@ -41,4 +43,13 @@ public class TestUsageTrackingFilterCachingPolicy extends LuceneTestCase {
     assertEquals(2, policy.frequency(q3));
   }
 
+  public void testNeverCacheMatchAll() throws Exception {
+    Query q = new MatchAllDocsQuery();
+    UsageTrackingQueryCachingPolicy policy = new UsageTrackingQueryCachingPolicy();
+    for (int i = 0; i < 1000; ++i) {
+      policy.onUse(q);
+    }
+    assertFalse(policy.shouldCache(q, SlowCompositeReaderWrapper.wrap(new MultiReader()).getContext()));
+  }
+
 }

