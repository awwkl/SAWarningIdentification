GitDiffStart: 6421e1aa77e4b1782f1d38b0d2f882967e860834 | Mon Feb 28 11:03:05 2011 +0000
diff --git a/solr/src/common/org/apache/solr/common/util/XMLErrorLogger.java b/solr/src/common/org/apache/solr/common/util/XMLErrorLogger.java
index 9160dcf..5b2ed7a 100644
--- a/solr/src/common/org/apache/solr/common/util/XMLErrorLogger.java
+++ b/solr/src/common/org/apache/solr/common/util/XMLErrorLogger.java
@@ -28,45 +28,50 @@ import javax.xml.stream.Location;
 import javax.xml.stream.XMLReporter;
 
 public final class XMLErrorLogger implements ErrorHandler,ErrorListener,XMLReporter {
-  
+
   private final Logger log;
 
   public XMLErrorLogger(Logger log) {
     this.log = log;
   }
-  
+
   // ErrorHandler
-  
-	public void warning(SAXParseException e) {
-		log.warn("XML parse warning in \""+e.getSystemId()+"\", line "+e.getLineNumber()+", column "+e.getColumnNumber()+": "+e.getMessage());
-	}
-
-	public void error(SAXParseException e) throws SAXException {
-		throw e;
-	}
-
-	public void fatalError(SAXParseException e) throws SAXException {
-		throw e;
-	}
-  
+
+  public void warning(SAXParseException e) {
+    log.warn("XML parse warning in \""+e.getSystemId()+"\", line "+e.getLineNumber()+", column "+e.getColumnNumber()+": "+e.getMessage());
+  }
+
+  public void error(SAXParseException e) throws SAXException {
+    throw e;
+  }
+
+  public void fatalError(SAXParseException e) throws SAXException {
+    throw e;
+  }
+
   // ErrorListener
-  
-	public void warning(TransformerException e) {
-		log.warn(e.getMessageAndLocation());
-	}
-
-	public void error(TransformerException e) throws TransformerException {
-		throw e;
-	}
-
-	public void fatalError(TransformerException e) throws TransformerException {
-		throw e;
-	}
-  
+
+  public void warning(TransformerException e) {
+    log.warn(e.getMessageAndLocation());
+  }
+
+  public void error(TransformerException e) throws TransformerException {
+    throw e;
+  }
+
+  public void fatalError(TransformerException e) throws TransformerException {
+    throw e;
+  }
+
   // XMLReporter
-  
+
   public void report(String message, String errorType, Object relatedInformation, Location loc) {
-		log.warn("XML parse warning in \""+loc.getSystemId()+"\", line "+loc.getLineNumber()+", column "+loc.getColumnNumber()+": "+message);
+    final StringBuilder sb = new StringBuilder("XML parser reported ").append(errorType);
+    if (loc !=  null) {
+      sb.append(" in \"").append(loc.getSystemId()).append("\", line ")
+        .append(loc.getLineNumber()).append(", column ").append(loc.getColumnNumber());
+    }
+    log.warn(sb.append(": ").append(message).toString());
   }
-  
+
 }

