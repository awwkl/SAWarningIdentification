GitDiffStart: 56f85a877d36ec742b23710298ce9a7feda92858 | Mon Mar 3 18:03:56 2008 +0000
diff --git a/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java b/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java
index 5d91e26..6b575fd 100644
--- a/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/PatternTokenizerFactory.java
@@ -35,26 +35,29 @@ import java.util.regex.Pattern;
 
 /**
  * This tokenizer uses regex pattern matching to construct distinct tokens
- * for the input stream.  It takes two arguments:  "pattern" and "group"
- * 
- * "pattern" is the regular expression.  
- * "group" says which group to extract into tokens.
- * 
+ * for the input stream.  It takes two arguments:  "pattern" and "group".
+ * <p/>
+ * <ul>
+ * <li>"pattern" is the regular expression.</li>
+ * <li>"group" says which group to extract into tokens.</li>
+ *  </ul>
+ * <p>
  * group=-1 (the default) is equivalent to "split".  In this case, the tokens will
  * be equivalent to the output from:
- * 
+ *
  * http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html#split(java.lang.String)
- * 
- * Using group >= 0 selects the matching group as the token.  For example, if you have:
- *  
+ * </p>
+ * <p>
+ * Using group >= 0 selects the matching group as the token.  For example, if you have:<br/>
+ * <pre>
  *  pattern = \'([^\']+)\'
  *  group = 0
  *  input = aaa 'bbb' 'ccc'
- * 
+ *</pre>
  * the output will be two tokens: 'bbb' and 'ccc' (including the ' marks).  With the same input
  * but using group=1, the output would be: bbb and ccc (no ' marks)
- * 
- * 
+ * </p>
+ *
  * @since solr1.2
  * @version $Id:$
  */

