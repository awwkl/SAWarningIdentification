GitDiffStart: 4f8375ded93588a0929ef2541a8cd48bc9eb655e | Fri Mar 16 12:54:40 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesConsumer.java b/lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesConsumer.java
index 477e87b..5999f06 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesConsumer.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesConsumer.java
@@ -65,7 +65,6 @@ public class SimpleTextDocValuesConsumer extends DocValuesConsumer {
     hash = new BytesRefHash();
     ords = new int[0];
     this.segmentSuffix = segmentSuffix;
-
   }
 
   @Override
@@ -84,11 +83,7 @@ public class SimpleTextDocValuesConsumer extends DocValuesConsumer {
     case BYTES_VAR_SORTED:
     case BYTES_VAR_STRAIGHT:
       vSize = -1;
-      try {
       ord = hash.add(value.binaryValue());
-      } catch (NullPointerException e) {
-        System.err.println();
-      }
       break;
     case FIXED_INTS_16:
       vSize = 2;
diff --git a/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java b/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
index 75a61cf..56b95ab 100644
--- a/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
+++ b/lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
@@ -476,9 +476,6 @@ public class MultiDocValues extends DocValues {
         offset =  ordToOffset[ord];
         size = (int) (ordToOffset[1 + ord] - offset);
       }
-      if (size < 0) {
-        System.out.println();
-      }
       assert size >=0;
       return data.fillSlice(bytesRef, offset, size);
      }
diff --git a/lucene/core/src/java/org/apache/lucene/util/fst/PairOutputs.java b/lucene/core/src/java/org/apache/lucene/util/fst/PairOutputs.java
index d2b3504..407a466 100644
--- a/lucene/core/src/java/org/apache/lucene/util/fst/PairOutputs.java
+++ b/lucene/core/src/java/org/apache/lucene/util/fst/PairOutputs.java
@@ -92,18 +92,15 @@ public class PairOutputs<A,B> extends Outputs<PairOutputs.Pair<A,B>> {
     final boolean noOutput2 = pair.output2.equals(outputs2.getNoOutput());
 
     if (noOutput1 && pair.output1 != outputs1.getNoOutput()) {
-      System.out.println("invalid0");
       return false;
     }
 
     if (noOutput2 && pair.output2 != outputs2.getNoOutput()) {
-      System.out.println("invalid1");
       return false;
     }
 
     if (noOutput1 && noOutput2) {
       if (pair != NO_OUTPUT) {
-        System.out.println("invalid2");
         return false;
       } else {
         return true;

