GitDiffStart: 1ccfec05f1a44019afe6e0728f1465b23ce6c227 | Mon Sep 24 21:20:53 2007 +0000
diff --git a/src/java/org/apache/solr/common/SolrInputDocument.java b/src/java/org/apache/solr/common/SolrInputDocument.java
index 9fd693e..21a352f 100644
--- a/src/java/org/apache/solr/common/SolrInputDocument.java
+++ b/src/java/org/apache/solr/common/SolrInputDocument.java
@@ -57,7 +57,7 @@ public class SolrInputDocument implements Iterable<SolrInputField>
   /** 
    * Add a field with implied null value for boost.
    * 
-   * @see addField(String, Object, Float)
+   * @see #addField(String, Object, float)
    * @param name name of the field to add
    * @param value value of the field
    */
@@ -104,7 +104,7 @@ public class SolrInputDocument implements Iterable<SolrInputField>
   
   /** Set a field with implied null value for boost.
    * 
-   * @see setField(String, Object, Float)
+   * @see #setField(String, Object, float)
    * @param name name of the field to set
    * @param value value of the field
    */
@@ -137,7 +137,7 @@ public class SolrInputDocument implements Iterable<SolrInputField>
   /**
    * Remove a field from the document
    * 
-   * @param key The field name whose field is to be removed from the document
+   * @param name The field name whose field is to be removed from the document
    * @return the previous field with <tt>name</tt>, or
    *         <tt>null</tt> if there was no field for <tt>key</tt>.
    */
diff --git a/src/java/org/apache/solr/highlight/SolrFormatter.java b/src/java/org/apache/solr/highlight/SolrFormatter.java
index f9c26ac..b23bd18 100644
--- a/src/java/org/apache/solr/highlight/SolrFormatter.java
+++ b/src/java/org/apache/solr/highlight/SolrFormatter.java
@@ -36,7 +36,7 @@ public interface SolrFormatter extends SolrInfoMBean, NamedListInitializedPlugin
    * Return a formatter appropriate for this field.
    * 
    * @param fieldName The name of the field
-   * @param request The current SolrQueryRequest
+   * @param params The params controlling Highlighting
    * @return An appropriate Formatter.
    */
   public Formatter getFormatter(String fieldName, SolrParams params );
diff --git a/src/java/org/apache/solr/highlight/SolrFragmenter.java b/src/java/org/apache/solr/highlight/SolrFragmenter.java
index 497a69f..7819bdf 100644
--- a/src/java/org/apache/solr/highlight/SolrFragmenter.java
+++ b/src/java/org/apache/solr/highlight/SolrFragmenter.java
@@ -36,7 +36,7 @@ public interface SolrFragmenter extends SolrInfoMBean, NamedListInitializedPlugi
    * Return a fragmenter appropriate for this field. 
    * 
    * @param fieldName The name of the field
-   * @param request The current SolrQueryRequest
+   * @param params The params controlling Highlighting
    * @return An appropriate Fragmenter.
    */
   public Fragmenter getFragmenter(String fieldName, SolrParams params);
diff --git a/src/java/org/apache/solr/highlight/SolrHighlighter.java b/src/java/org/apache/solr/highlight/SolrHighlighter.java
index d35527d..82e5a5f 100644
--- a/src/java/org/apache/solr/highlight/SolrHighlighter.java
+++ b/src/java/org/apache/solr/highlight/SolrHighlighter.java
@@ -103,7 +103,7 @@ public class SolrHighlighter
   
   /**
    * Check whether Highlighting is enabled for this request.
-   * @param request The current SolrQueryRequest
+   * @param params The params controlling Highlighting
    * @return <code>true</code> if highlighting enabled, <code>false</code> if not.
    */
   public boolean isHighlightingEnabled(SolrParams params) {
@@ -182,7 +182,7 @@ public class SolrHighlighter
    * been configured for this field, fall back to the configured default
    * or the solr default.
    * @param fieldName The name of the field
-   * @param request The current SolrQueryRequest
+   * @param params The params controlling Highlighting
    */
   protected int getMaxSnippets(String fieldName, SolrParams params) {
      return params.getFieldInt(fieldName, HighlightParams.SNIPPETS,1);
@@ -194,7 +194,7 @@ public class SolrHighlighter
    * default or the solr default (SimpleHTMLFormatter).
    * 
    * @param fieldName The name of the field
-   * @param request The current SolrQueryRequest
+   * @param params The params controlling Highlighting
    * @return An appropriate Formatter.
    */
   protected Formatter getFormatter(String fieldName, SolrParams params ) 
@@ -213,7 +213,7 @@ public class SolrHighlighter
    * default or the solr default (GapFragmenter).
    * 
    * @param fieldName The name of the field
-   * @param request The current SolrQueryRequest
+   * @param params The params controlling Highlighting
    * @return An appropriate Fragmenter.
    */
   protected Fragmenter getFragmenter(String fieldName, SolrParams params) 
diff --git a/src/java/org/apache/solr/util/SolrPluginUtils.java b/src/java/org/apache/solr/util/SolrPluginUtils.java
index 033019a..67ebbe6 100644
--- a/src/java/org/apache/solr/util/SolrPluginUtils.java
+++ b/src/java/org/apache/solr/util/SolrPluginUtils.java
@@ -813,7 +813,7 @@ public class SolrPluginUtils {
 
   /**
    * Builds a list of Query objects that should be used to filter results
-   * @see SolrParams#FQ
+   * @see CommonParams#FQ
    * @return null if no filter queries
    */
   public static List<Query> parseFilterQueries(SolrQueryRequest req) throws ParseException {
diff --git a/src/java/org/apache/solr/util/TestHarness.java b/src/java/org/apache/solr/util/TestHarness.java
index ac7939f..4d1aab3 100644
--- a/src/java/org/apache/solr/util/TestHarness.java
+++ b/src/java/org/apache/solr/util/TestHarness.java
@@ -98,16 +98,14 @@ public class TestHarness {
     this( dataDirectory, "solrconfig.xml", schemaFile);
   }
   /**
-    * @param name the core name
    * @param dataDirectory path for index data, will not be cleaned up
-    * @param configFile solrconfig filename
+   * @param configFile solrconfig filename
    * @param schemaFile schema filename
    */
    public TestHarness( String dataDirectory, String configFile, String schemaFile) {
      this( dataDirectory, createConfig(configFile), schemaFile);
    }
    /**
-    * @param name the core name
     * @param dataDirectory path for index data, will not be cleaned up
     * @param solrConfig solronfig instance
     * @param schemaFile schema filename
@@ -118,10 +116,9 @@ public class TestHarness {
      this( dataDirectory, solrConfig, new IndexSchema(solrConfig, schemaFile));
    }
    /**
-    * @param name the core name
     * @param dataDirectory path for index data, will not be cleaned up
     * @param solrConfig solrconfig instance
-    * @param schema schema instance
+    * @param indexSchema schema instance
     */
   public TestHarness( String dataDirectory,
                       SolrConfig solrConfig,
diff --git a/src/java/org/apache/solr/util/plugin/AbstractPluginLoader.java b/src/java/org/apache/solr/util/plugin/AbstractPluginLoader.java
index 7f6fb75..86f5b43 100644
--- a/src/java/org/apache/solr/util/plugin/AbstractPluginLoader.java
+++ b/src/java/org/apache/solr/util/plugin/AbstractPluginLoader.java
@@ -45,7 +45,7 @@ public abstract class AbstractPluginLoader<T>
   
   /**
    * @param type is the 'type' name included in error messages.
-   * @param preRegister, if true, this will first register all Plugins, then it will initialize them.
+   * @param preRegister if true, this will first register all Plugins, then it will initialize them.
    */
   public AbstractPluginLoader( String type, boolean preRegister, boolean requireName )
   {

