GitDiffStart: 91e37bf1fb8958ec5b7b9f20a7a7543f1dcd32ca | Thu Jul 23 00:02:48 2009 +0000
diff --git a/src/java/org/apache/lucene/index/DirectoryReader.java b/src/java/org/apache/lucene/index/DirectoryReader.java
index aac9121..60d4525 100644
--- a/src/java/org/apache/lucene/index/DirectoryReader.java
+++ b/src/java/org/apache/lucene/index/DirectoryReader.java
@@ -846,6 +846,10 @@ class DirectoryReader extends IndexReader implements Cloneable {
     return directory;
   }
 
+  public int getTermInfosIndexDivisor() {
+    return termInfosIndexDivisor;
+  }
+
   /**
    * Expert: return the IndexCommit that this reader has opened.
    * <p/>
diff --git a/src/java/org/apache/lucene/index/IndexReader.java b/src/java/org/apache/lucene/index/IndexReader.java
index 960813e..0c4e28d 100644
--- a/src/java/org/apache/lucene/index/IndexReader.java
+++ b/src/java/org/apache/lucene/index/IndexReader.java
@@ -736,12 +736,11 @@ public abstract class IndexReader implements Cloneable {
 
   /** <p>For IndexReader implementations that use
    *  TermInfosReader to read terms, this returns the
-   *  current indexDivisor.
-   *  @see #setTermInfosIndexDivisor
-   * @deprecated Please use {@link IndexReader#open(Directory, IndexDeletionPolicy, boolean, int)} to specify the required TermInfos index divisor instead.
+   *  current indexDivisor as specified when the reader was
+   *  opened.
    */
   public int getTermInfosIndexDivisor() {
-    throw new UnsupportedOperationException("Please pass termInfosIndexDivisor up-front when opening IndexReader");
+    throw new UnsupportedOperationException("This reader does not support this method.");
   }
 
   /**
diff --git a/src/java/org/apache/lucene/index/SegmentReader.java b/src/java/org/apache/lucene/index/SegmentReader.java
index ab6698c..6735b33 100644
--- a/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/src/java/org/apache/lucene/index/SegmentReader.java
@@ -1355,4 +1355,7 @@ public class SegmentReader extends IndexReader implements Cloneable {
     throw new IllegalArgumentException(reader + " is not a SegmentReader or a single-segment DirectoryReader");
   }
 
+  public int getTermInfosIndexDivisor() {
+    return core.termsIndexDivisor;
+  }
 }
diff --git a/src/test/org/apache/lucene/index/TestIndexReader.java b/src/test/org/apache/lucene/index/TestIndexReader.java
index 2e3e3ff..9059355 100644
--- a/src/test/org/apache/lucene/index/TestIndexReader.java
+++ b/src/test/org/apache/lucene/index/TestIndexReader.java
@@ -1821,6 +1821,7 @@ public class TestIndexReader extends LuceneTestCase
     }
     assertFalse(((SegmentReader) r.getSequentialSubReaders()[0]).termsIndexLoaded());
 
+    assertEquals(-1, r.getTermInfosIndexDivisor());
     writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);
     writer.addDocument(doc);
     writer.close();
diff --git a/src/test/org/apache/lucene/index/TestSegmentTermDocs.java b/src/test/org/apache/lucene/index/TestSegmentTermDocs.java
index 1b44b29..752f360 100644
--- a/src/test/org/apache/lucene/index/TestSegmentTermDocs.java
+++ b/src/test/org/apache/lucene/index/TestSegmentTermDocs.java
@@ -54,6 +54,7 @@ public class TestSegmentTermDocs extends LuceneTestCase {
     //After adding the document, we should be able to read it back in
     SegmentReader reader = SegmentReader.get(true, info, indexDivisor);
     assertTrue(reader != null);
+    assertEquals(indexDivisor, reader.getTermInfosIndexDivisor());
     SegmentTermDocs segTermDocs = new SegmentTermDocs(reader);
     assertTrue(segTermDocs != null);
     segTermDocs.seek(new Term(DocHelper.TEXT_FIELD_2_KEY, "field"));

