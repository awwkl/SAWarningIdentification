GitDiffStart: 04bd9ae73a8881d2333c66e78d2e9363eb4e171e | Thu Aug 18 02:57:00 2011 +0000
diff --git a/dev-tools/eclipse/dot.classpath b/dev-tools/eclipse/dot.classpath
index 147664f..3957ff9 100644
--- a/dev-tools/eclipse/dot.classpath
+++ b/dev-tools/eclipse/dot.classpath
@@ -4,6 +4,7 @@
 	<classpathentry kind="src" path="lucene/src/test-framework"/>
 	<classpathentry kind="src" path="lucene/src/test"/>
 	<classpathentry kind="src" path="lucene/contrib/demo/src/java"/>
+	<classpathentry kind="src" path="lucene/contrib/demo/src/resources"/>
 	<classpathentry kind="src" path="lucene/contrib/demo/src/test"/>
 	<classpathentry kind="src" path="lucene/contrib/highlighter/src/java"/>
 	<classpathentry kind="src" path="lucene/contrib/highlighter/src/test"/>
diff --git a/dev-tools/idea/lucene/contrib/demo/demo.iml b/dev-tools/idea/lucene/contrib/demo/demo.iml
index 6941a7f..fab85b1 100644
--- a/dev-tools/idea/lucene/contrib/demo/demo.iml
+++ b/dev-tools/idea/lucene/contrib/demo/demo.iml
@@ -6,12 +6,23 @@
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/resources" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/test" isTestSource="true" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" scope="TEST" name="JUnit" level="project" />
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$MODULE_DIR$/lib/servlet-api-2.4.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
     <orderEntry type="module" module-name="analysis-common" />
+    <orderEntry type="module" module-name="xml-query-parser" />
     <orderEntry type="module" module-name="lucene" />
     <orderEntry type="module" module-name="queryparser" />
   </component>
diff --git a/dev-tools/idea/lucene/contrib/xml-query-parser/xml-query-parser.iml b/dev-tools/idea/lucene/contrib/xml-query-parser/xml-query-parser.iml
index 80f15c2..8daaab0 100644
--- a/dev-tools/idea/lucene/contrib/xml-query-parser/xml-query-parser.iml
+++ b/dev-tools/idea/lucene/contrib/xml-query-parser/xml-query-parser.iml
@@ -6,14 +6,11 @@
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/demo/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/demo/WebContent" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/test" isTestSource="true" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" scope="TEST" name="JUnit" level="project" />
-    <orderEntry type="library" name="Servlet API 2.4" level="project" />
     <orderEntry type="module" module-name="queries-contrib" />
     <orderEntry type="module" module-name="misc" />
     <orderEntry type="module" module-name="analysis-common" />
diff --git a/dev-tools/maven/lucene/contrib/demo/pom.xml.template b/dev-tools/maven/lucene/contrib/demo/pom.xml.template
index 3834132..03ff801 100644
--- a/dev-tools/maven/lucene/contrib/demo/pom.xml.template
+++ b/dev-tools/maven/lucene/contrib/demo/pom.xml.template
@@ -58,6 +58,16 @@
       <version>${project.version}</version>
     </dependency>
     <dependency>
+      <groupId>${project.groupId}</groupId>
+      <artifactId>lucene-xml-query-parser</artifactId>
+      <version>${project.version}</version>
+    </dependency>
+    <dependency>
+      <groupId>javax.servlet</groupId>
+      <artifactId>servlet-api</artifactId>
+      <scope>provided</scope>
+    </dependency>
+    <dependency>
       <groupId>junit</groupId>
       <artifactId>junit</artifactId>
       <scope>test</scope>
diff --git a/dev-tools/maven/lucene/contrib/xml-query-parser/pom.xml.template b/dev-tools/maven/lucene/contrib/xml-query-parser/pom.xml.template
index 909280a..7361a1b 100644
--- a/dev-tools/maven/lucene/contrib/xml-query-parser/pom.xml.template
+++ b/dev-tools/maven/lucene/contrib/xml-query-parser/pom.xml.template
@@ -63,11 +63,6 @@
       <version>${project.version}</version>
     </dependency>
     <dependency>
-      <groupId>javax.servlet</groupId>
-      <artifactId>servlet-api</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
       <groupId>junit</groupId>
       <artifactId>junit</artifactId>
       <scope>test</scope>
diff --git a/lucene/contrib/CHANGES.txt b/lucene/contrib/CHANGES.txt
index 1b5f63c..bb670e9 100644
--- a/lucene/contrib/CHANGES.txt
+++ b/lucene/contrib/CHANGES.txt
@@ -13,6 +13,8 @@ Build
 
  * LUCENE-3285: Moved contrib/queryparser into modules/queryparser
 
+ * LUCENE-3285: Moved contrib/xml-query-parser's demo into contrib/demo
+
 New Features
 
  * LUCENE-2604: Added RegexpQuery support to contrib/queryparser.
diff --git a/lucene/contrib/contrib-build.xml b/lucene/contrib/contrib-build.xml
index c00b0ff..9bc7cb1 100644
--- a/lucene/contrib/contrib-build.xml
+++ b/lucene/contrib/contrib-build.xml
@@ -283,4 +283,15 @@
     </ant>
     <property name="suggest.uptodate" value="true"/>
   </target>
+
+  <property name="xml-query-parser.jar" value="${common.dir}/build/contrib/xml-query-parser/lucene-xml-query-parser-${version}.jar"/>
+  <target name="check-xml-query-parser-uptodate" unless="xml-query-parser.uptodate">
+    <contrib-uptodate name="xml-query-parser" jarfile="${xml-query-parser.jar}" property="xml-query-parser.uptodate"/>
+  </target>
+  <target name="jar-xml-query-parser" unless="xml-query-parser.uptodate" depends="check-xml-query-parser-uptodate">
+    <ant dir="${common.dir}/contrib/xml-query-parser" target="jar-core" inheritall="false">
+      <propertyset refid="uptodate.and.compiled.properties"/>
+    </ant>
+    <property name="xml-query-parser.uptodate" value="true"/>
+  </target>
 </project>
diff --git a/lucene/contrib/demo/build.xml b/lucene/contrib/demo/build.xml
index f9a117e..9a06ed9 100644
--- a/lucene/contrib/demo/build.xml
+++ b/lucene/contrib/demo/build.xml
@@ -17,7 +17,7 @@
     limitations under the License.
  -->
 
-<project name="demo" default="jar-core" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
+<project name="demo" default="default" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
 
   <description>
     Lucene Demo
@@ -33,7 +33,27 @@
 	 <pathelement path="${analyzers-common.jar}"/>
    <pathelement path="${queryparser.jar}"/>
    <pathelement path="${lucene-core.jar}"/>
+   <pathelement path="${xml-query-parser.jar}"/>
+   <pathelement location="lib/servlet-api-2.4.jar"/>
   </path>
 
-  <target name="compile-core" depends="jar-analyzers-common,jar-queryparser,common.compile-core" />
+  <target name="compile-core" depends="jar-analyzers-common,jar-queryparser,jar-xml-query-parser,common.compile-core" />
+
+  <target name="default" depends="jar-core,build-web-demo"/>
+
+  <target name="build-artifacts-and-tests" depends="jar, compile-test,build-web-demo" />
+
+  <target name="build-web-demo"  description="Compiles demo">
+    <echo>Compiling XML QueryParser Demo WAR</echo>
+
+    <war destfile="${build.dir}/lucene-xml-query-demo.war" webxml="src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/web.xml">
+      <fileset dir="src/resources/org/apache/lucene/demo/xmlparser/"/>
+      <lib dir="${build.dir}">
+        <include name="${final.name}.jar"/>
+      </lib>
+      <lib file="${queries.jar}"/>
+      <lib file="${lucene-core.jar}"/>
+    </war>
+  </target>
+  
 </project>
diff --git a/lucene/contrib/demo/lib/servlet-api-2.4.jar b/lucene/contrib/demo/lib/servlet-api-2.4.jar
new file mode 100755
index 0000000..9e7f1e8
--- /dev/null
+++ b/lucene/contrib/demo/lib/servlet-api-2.4.jar
@@ -0,0 +1,2 @@
+AnyObjectId[018d6effad3823d0ea59f1b58ab154fc2652f418] was removed in git history.
+Apache SVN contains full history.
\ No newline at end of file
diff --git a/lucene/contrib/demo/lib/servlet-api-LICENSE-ASL.txt b/lucene/contrib/demo/lib/servlet-api-LICENSE-ASL.txt
new file mode 100644
index 0000000..5495b3c
--- /dev/null
+++ b/lucene/contrib/demo/lib/servlet-api-LICENSE-ASL.txt
@@ -0,0 +1 @@
+TODO: fill in
diff --git a/lucene/contrib/demo/lib/servlet-api-NOTICE.txt b/lucene/contrib/demo/lib/servlet-api-NOTICE.txt
new file mode 100644
index 0000000..de6f802
--- /dev/null
+++ b/lucene/contrib/demo/lib/servlet-api-NOTICE.txt
@@ -0,0 +1,5 @@
+Apache Tomcat
+Copyright 1999-2007 The Apache Software Foundation
+
+This product includes software developed by
+The Apache Software Foundation (http://www.apache.org/).
diff --git a/lucene/contrib/demo/src/java/org/apache/lucene/demo/xmlparser/FormBasedXmlQueryDemo.java b/lucene/contrib/demo/src/java/org/apache/lucene/demo/xmlparser/FormBasedXmlQueryDemo.java
new file mode 100644
index 0000000..6d76153
--- /dev/null
+++ b/lucene/contrib/demo/src/java/org/apache/lucene/demo/xmlparser/FormBasedXmlQueryDemo.java
@@ -0,0 +1,150 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.demo.xmlparser;
+
+import org.apache.lucene.analysis.Analyzer;
+import org.apache.lucene.analysis.standard.StandardAnalyzer;
+import org.apache.lucene.document.Document;
+import org.apache.lucene.document.Field;
+import org.apache.lucene.index.CorruptIndexException;
+import org.apache.lucene.index.IndexWriter;
+import org.apache.lucene.index.IndexWriterConfig;
+import org.apache.lucene.search.IndexSearcher;
+import org.apache.lucene.search.Query;
+import org.apache.lucene.search.ScoreDoc;
+import org.apache.lucene.search.TopDocs;
+import org.apache.lucene.store.RAMDirectory;
+import org.apache.lucene.util.Version;
+import org.apache.lucene.xmlparser.CorePlusExtensionsParser;
+import org.apache.lucene.xmlparser.QueryTemplateManager;
+
+import javax.servlet.RequestDispatcher;
+import javax.servlet.ServletConfig;
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServlet;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.util.Enumeration;
+import java.util.Properties;
+import java.util.StringTokenizer;
+
+public class FormBasedXmlQueryDemo extends HttpServlet {
+
+  private QueryTemplateManager queryTemplateManager;
+  private CorePlusExtensionsParser xmlParser;
+  private IndexSearcher searcher;
+  private Analyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);
+
+  @Override
+  public void init(ServletConfig config) throws ServletException {
+    super.init(config);
+    try {
+      openExampleIndex();
+
+      //load servlet configuration settings
+      String xslFile = config.getInitParameter("xslFile");
+      String defaultStandardQueryParserField = config.getInitParameter("defaultStandardQueryParserField");
+
+
+      //Load and cache choice of XSL query template using QueryTemplateManager
+      queryTemplateManager = new QueryTemplateManager(
+          getServletContext().getResourceAsStream("/WEB-INF/" + xslFile));
+
+      //initialize an XML Query Parser for use by all threads
+      xmlParser = new CorePlusExtensionsParser(defaultStandardQueryParserField, analyzer);
+    } catch (Exception e) {
+      throw new ServletException("Error loading query template", e);
+    }
+  }
+
+  @Override
+  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
+    //Take all completed form fields and add to a Properties object
+    Properties completedFormFields = new Properties();
+    Enumeration pNames = request.getParameterNames();
+    while (pNames.hasMoreElements()) {
+      String propName = (String) pNames.nextElement();
+      String value = request.getParameter(propName);
+      if ((value != null) && (value.trim().length() > 0)) {
+        completedFormFields.setProperty(propName, value);
+      }
+    }
+
+    try {
+      //Create an XML query by populating template with given user criteria
+      org.w3c.dom.Document xmlQuery = queryTemplateManager.getQueryAsDOM(completedFormFields);
+
+      //Parse the XML to produce a Lucene query
+      Query query = xmlParser.getQuery(xmlQuery.getDocumentElement());
+
+      //Run the query
+      TopDocs topDocs = searcher.search(query, 10);
+
+      //and package the results and forward to JSP
+      if (topDocs != null) {
+        ScoreDoc[] sd = topDocs.scoreDocs;
+        Document[] results = new Document[sd.length];
+        for (int i = 0; i < results.length; i++) {
+          results[i] = searcher.doc(sd[i].doc);
+          request.setAttribute("results", results);
+        }
+      }
+      RequestDispatcher dispatcher = getServletContext().getRequestDispatcher("/index.jsp");
+      dispatcher.forward(request, response);
+    }
+    catch (Exception e) {
+      throw new ServletException("Error processing query", e);
+    }
+  }
+
+  private void openExampleIndex() throws CorruptIndexException, IOException {
+    //Create a RAM-based index from our test data file
+    RAMDirectory rd = new RAMDirectory();
+    IndexWriterConfig iwConfig = new IndexWriterConfig(Version.LUCENE_40, analyzer);
+    IndexWriter writer = new IndexWriter(rd, iwConfig);
+    InputStream dataIn = getServletContext().getResourceAsStream("/WEB-INF/data.tsv");
+    BufferedReader br = new BufferedReader(new InputStreamReader(dataIn));
+    String line = br.readLine();
+    while (line != null) {
+      line = line.trim();
+      if (line.length() > 0) {
+        //parse row and create a document
+        StringTokenizer st = new StringTokenizer(line, "\t");
+        Document doc = new Document();
+        doc.add(new Field("location", st.nextToken(), Field.Store.YES,
+            Field.Index.ANALYZED_NO_NORMS));
+        doc.add(new Field("salary", st.nextToken(), Field.Store.YES,
+            Field.Index.ANALYZED_NO_NORMS));
+        doc.add(new Field("type", st.nextToken(), Field.Store.YES,
+            Field.Index.ANALYZED_NO_NORMS));
+        doc.add(new Field("description", st.nextToken(), Field.Store.YES,
+            Field.Index.ANALYZED));
+        writer.addDocument(doc);
+      }
+      line = br.readLine();
+    }
+    writer.close();
+
+    //open searcher
+    searcher = new IndexSearcher(rd, true);
+  }
+}
diff --git a/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/META-INF/MANIFEST.MF b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/META-INF/MANIFEST.MF
new file mode 100644
index 0000000..254272e
--- /dev/null
+++ b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/META-INF/MANIFEST.MF
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Class-Path: 
+
diff --git a/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/data.tsv b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/data.tsv
new file mode 100644
index 0000000..806ba68
--- /dev/null
+++ b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/data.tsv
@@ -0,0 +1,5 @@
+South	100	Contract	Java developer required to work within a small development group. Minimum 3+ years experience developing web applications in Java with exposure to Open Source technologies such as Spring, Hibernate, Eclipse, Struts, Lucene, Tomcat
+North	078	Permanent	Seeking developer with VB.NET, HTML, CSS, JavaScript, ASP. NET, SQL Query Analyzer, Visual Studio. NET, SQL Profiler
+East	100	Permanent	Project Manager - currently seeking a Project Manager to be based in London with experience of running multiple projects within budget. Candidate will come with a strong project management background, ideally from a technical background with web related experience and project management methodology such as Prince 2
+West	085	Contract	Oracle DBA required to provide 3rd line support, maintenance and database restore for company's production systems. Experienced in SQL, PL/SQL Oracle databases (9i & 10GR2), Oracle RAC, RMAN and Data Guard. Ideally with, Linux and Windows experience
+North	099	Permanent	Search engine developer required with experience in the following technologies: Java, Lucene, Solr, Spring, JSP, MySQL, Tomcat, JavaScript, Ant / Ivy, Subversion
\ No newline at end of file
diff --git a/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/query.xsl b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/query.xsl
new file mode 100644
index 0000000..3be114c
--- /dev/null
+++ b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/query.xsl
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
+<xsl:template match="/Document">
+<BooleanQuery>
+	<!-- Clause if user selects a preference for type of job - apply choice of 
+	     permanent/contract filter and cache -->
+	<xsl:if test="type">
+	    <Clause occurs="must">
+	    	<ConstantScoreQuery>
+	    	   <CachedFilter>
+	    	     	<TermsFilter fieldName="type"><xsl:value-of select="type"/></TermsFilter>
+	    	   </CachedFilter>
+	    	 </ConstantScoreQuery>
+	   </Clause>
+	</xsl:if>
+		
+	<!-- Use standard Lucene query parser for any job description input -->
+	<xsl:if test="description">
+		<Clause occurs="must">
+			<UserQuery fieldName="description"><xsl:value-of select="description"/></UserQuery>
+		</Clause>
+	</xsl:if>      
+	
+	<!-- If any of the location fields are set OR them ALL in a Boolean filter and cache individual filters -->
+	<xsl:if test="South|North|East|West">
+		<Clause occurs="must">
+			<ConstantScoreQuery>
+				<BooleanFilter>
+					<xsl:for-each select="South|North|East|West">
+					<Clause occurs="should">
+						<CachedFilter>
+							<TermsFilter fieldName="location"><xsl:value-of select="name()"/></TermsFilter>
+						</CachedFilter>
+				  	</Clause>
+					</xsl:for-each>					
+				</BooleanFilter>
+	     		</ConstantScoreQuery>
+	 	</Clause>
+	</xsl:if>   	
+	
+	<!-- Use XSL functions to split and zero pad salary range value -->
+	<xsl:if test="salaryRange">
+		<Clause occurs="must">
+			<ConstantScoreQuery>
+				<RangeFilter fieldName="salary" >
+					<xsl:attribute name="lowerTerm">
+						<xsl:value-of select='format-number( substring-before(salaryRange,"-"), "000" )' />
+					</xsl:attribute> 
+					<xsl:attribute name="upperTerm">
+						<xsl:value-of select='format-number( substring-after(salaryRange,"-"), "000" )' />
+					</xsl:attribute> 
+				</RangeFilter>
+			</ConstantScoreQuery>
+		</Clause>
+	</xsl:if>	
+</BooleanQuery>
+</xsl:template>
+</xsl:stylesheet>
\ No newline at end of file
diff --git a/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/web.xml b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/web.xml
new file mode 100644
index 0000000..b0388e0
--- /dev/null
+++ b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/WEB-INF/web.xml
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
+	<display-name>
+	LuceneXmlQueryWebDemo</display-name>
+	<servlet>
+		<description>
+		Servlet demonstrating XMLQueryParser</description>
+		<display-name>
+		FormBasedXmlQueryDemo</display-name>
+		<servlet-name>FormBasedXmlQueryDemo</servlet-name>
+		<servlet-class>
+		org.apache.lucene.xmlparser.webdemo.FormBasedXmlQueryDemo</servlet-class>
+		<init-param>
+			<description>
+			Name of query file held in /WEB-INF</description>
+			<param-name>xslFile</param-name>
+			<param-value>query.xsl</param-value>
+		</init-param>
+		<init-param>
+			<description>
+			Default field used in standard Lucene QueryParser used in UserQuery tag</description>
+			<param-name>defaultStandardQueryParserField</param-name>
+			<param-value>jobDescription</param-value>
+		</init-param>
+	</servlet>
+	<servlet-mapping>
+		<servlet-name>FormBasedXmlQueryDemo</servlet-name>
+		<url-pattern>/FormBasedXmlQueryDemo</url-pattern>
+	</servlet-mapping>
+	<welcome-file-list>
+		<welcome-file>index.jsp</welcome-file>
+	</welcome-file-list>
+</web-app>
diff --git a/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/index.jsp b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/index.jsp
new file mode 100644
index 0000000..705f27d
--- /dev/null
+++ b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/index.jsp
@@ -0,0 +1,145 @@
+<!--
+    Licensed to the Apache Software Foundation (ASF) under one or more
+    contributor license agreements.  See the NOTICE file distributed with
+    this work for additional information regarding copyright ownership.
+    The ASF licenses this file to You under the Apache License, Version 2.0
+    the "License"); you may not use this file except in compliance with
+    the License.  You may obtain a copy of the License at
+ 
+        http://www.apache.org/licenses/LICENSE-2.0
+ 
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+ -->
+<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
+import="org.apache.lucene.search.*,org.apache.lucene.document.*"
+pageEncoding="ISO-8859-1"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+	<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
+ 	<link rel="stylesheet" type="text/css" href="stylesheet.css">
+	<title>XML Query Parser demo</title>
+</head>
+<body>
+<h1>Job Search</h1>
+<%
+			// Load form variables
+			String description=request.getParameter("description");
+			String type=request.getParameter("type");
+			String salaryRange=request.getParameter("salaryRange"); 
+%>
+<form method="POST" action="FormBasedXmlQueryDemo">
+<table >
+	<tr>
+		<th class="formHeader">Description</th>
+		<td>
+			<input name="description" value="<%=description==null?"":description%>"/>
+		</td>
+	</tr>  
+	<tr>
+		<th class="formHeader">Type</th> 
+		<td> 
+ 			<select name="type">
+ 				<option value="" <%=type==null?"selected":""%>>Any</option>
+ 				<option value="Contract" <%="Contract".equals(type)?"selected":""%>>Contract</option>
+				<option value="Permanent" <%="Permanent".equals(type)?"selected":""%>>Permanent</option>
+			</select> 
+		</td> 
+	</tr>
+	<tr>       
+		<th class="formHeader">Salary</th> 
+		<td>
+ 			<select name="salaryRange">
+ 				<option value="" <%=salaryRange==null?"selected":""%>>Any</option>
+<%
+				String ranges[]={"20","30","40", "50","60","70","80","90","100","110","120","150","200"};
+				for(int i=1;i<ranges.length;i++)
+				{
+					String rangeText=ranges[i-1]+"-"+ranges[i];
+%>				
+ 					<option value="<%=rangeText%>" <%=rangeText.equals(salaryRange)?"selected":""%>><%=ranges[i-1]%> to <%=ranges[i]%>k</option>
+<%
+				}
+%>
+			</select> 
+		</td> 
+	</tr>	
+		
+	<tr>
+		<th class="formHeader">Locations</th>  
+		<td>   
+<%
+		String locs[]={"South","North","East","West"};  
+		boolean allLocsBlank=true;
+		for(int i=0;i<locs.length;i++)
+		{			
+			if(request.getParameter(locs[i])!=null)
+			{
+				allLocsBlank=false;
+			}
+		}
+		for(int i=0;i<locs.length;i++)
+		{			
+%>		
+			<input id='cb<%=locs[i]%>'  
+				name="<%=locs[i]%>" 
+<%
+				if((allLocsBlank)||("on".equals(request.getParameter(locs[i])))) 	{
+%>
+					checked="checked" 			
+<%				}	
+%>								
+				type="checkbox"/>
+			<label for="cb<%=locs[i]%>"><%=locs[i]%></label>
+<%
+		}
+%>		
+		</td>		
+	</tr>
+	
+	<tr>
+		<th></th>
+		<td>
+			<input type="submit" value="search"/>
+		</td>		
+	</tr>
+</table>
+</form>	 
+<%
+		Document[] results=(Document[])request.getAttribute("results");
+		if(results!=null)
+		{
+%>
+			<table width="600">
+				<tr>
+					<th class="resultsHeader">Type</th>
+					<th class="resultsHeader">Location</th>
+					<th class="resultsHeader">Salary</th>
+					<th class="resultsHeader">Description</th>
+				</tr>
+			<%
+						for (int i = 0; i < results.length; i++)
+						{
+							Document doc = results[i];
+			%>
+				<tr class="resultsRow">  
+					<td><%=doc.get("type")%></td>
+					<td><%=doc.get("location")%></td>
+					<td class="resultNum"><%=doc.get("salary")%>,000</td>
+					<td><%=doc.get("description")%></td>
+				</tr>
+
+			<%			
+						}
+			%>	
+			</table>
+			
+<% 					
+		}//end if has results
+%>	
+</body>
+</html>
diff --git a/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/stylesheet.css b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/stylesheet.css
new file mode 100644
index 0000000..4220a69
--- /dev/null
+++ b/lucene/contrib/demo/src/resources/org/apache/lucene/demo/xmlparser/stylesheet.css
@@ -0,0 +1,23 @@
+BODY {font: 10pt Tahoma; color: #000000; background-color: #FFFFFF}
+P {font: 10pt Tahoma}
+BIG {font: 14pt Tahoma}
+#A { color: #FFFFFF;text-decoration: none underline}
+A { text-decoration: none underline}
+#A:hover {color: #ff33ff; text-decoration: none}
+A:hover {color: #9A00C0; text-decoration: none}
+
+
+.resultsHeader {font: bold 10pt Tahoma; color: #000000; background-color: #DCE2EE}
+.formHeader {font: bold 10pt Tahoma; text-align:right; color: #000000; }
+TD {font: 10pt Tahoma; color: #000000; }
+TR.resultsRow:hover {font: 10pt Tahoma; color: #000000; background-color: #ECF2FE}
+.resultNum {text-align:right}
+FORM {display: inline}
+H1 {font: bold 16pt Tahoma}
+H2 {font: bold 14pt Tahoma}
+H3 {font: bold 12pt Tahoma}
+SPAN.h1 {font: bold 22pt Tahoma}
+SPAN.h2 {font: bold 14pt Tahoma}
+
+SMALL {font: 8pt Tahoma}
+SELECT {font: 10pt Tahoma; }
diff --git a/lucene/contrib/xml-query-parser/build.xml b/lucene/contrib/xml-query-parser/build.xml
index 8c1846b..c1bea22 100644
--- a/lucene/contrib/xml-query-parser/build.xml
+++ b/lucene/contrib/xml-query-parser/build.xml
@@ -25,9 +25,6 @@
 
   <import file="../contrib-build.xml"/>
 
-  <property name="servlet.jar" location="${common.dir}/lib/servlet-api-2.4.jar"/>
-  <available property="servlet.jar.present" type="file" file="${servlet.jar}"/>
-
   <path id="classpath">
     <pathelement path="${queries-contrib.jar}"/>
     <pathelement path="${queryparser.jar}"/>
@@ -35,41 +32,5 @@
     <path refid="base.classpath"/>
   </path>
 
-  <path id="web-classpath">
-    <pathelement path="${queries-contrib.jar}"/>
-    <pathelement path="${queryparser.jar}"/>
-    <pathelement path="${queries.jar}"/>
-    <pathelement path="${servlet.jar}"/>
-    <pathelement path="${build.dir}/${final.name}.jar"/>
-    <path refid="base.classpath"/>
-  </path>
-
   <target name="compile-core" depends="jar-queries-contrib,jar-queryparser,jar-queries,common.compile-core" />
-
-  <!-- override contrib-build.xml target to also build web demo -->
-  <target name="build-artifacts-and-tests" depends="jar, compile-test,build-web-demo" />
-
-  <target name="default" depends="jar-lucene-core,jar-core,build-web-demo"/>
-
-  <target name="build-web-demo"  description="Compiles demo" if="servlet.jar.present">
-
-    <echo>XML Parser compiling web demo</echo>
-
-    <compile
-      srcdir="src/demo/java"
-      destdir="${build.dir}/classes/webdemo">
-      <classpath refid="web-classpath"/>
-    </compile>
-
-    <war destfile="${build.dir}/xml-query-demo.war" webxml="src/demo/WebContent/WEB-INF/web.xml">
-      <fileset dir="src/demo/WebContent"/>
-      <lib dir="${build.dir}">
-        <include name="${final.name}.jar"/>
-      </lib>
-      <lib file="${queries.jar}"/>
-      <lib file="${lucene-core.jar}"/>
-      <classes dir="${build.dir}/classes/webdemo"/>
-    </war>
-
-  </target>
 </project>
diff --git a/lucene/contrib/xml-query-parser/src/demo/WebContent/META-INF/MANIFEST.MF b/lucene/contrib/xml-query-parser/src/demo/WebContent/META-INF/MANIFEST.MF
deleted file mode 100644
index 254272e..0000000
--- a/lucene/contrib/xml-query-parser/src/demo/WebContent/META-INF/MANIFEST.MF
+++ /dev/null
@@ -1,3 +0,0 @@
-Manifest-Version: 1.0
-Class-Path: 
-
diff --git a/lucene/contrib/xml-query-parser/src/demo/WebContent/WEB-INF/data.tsv b/lucene/contrib/xml-query-parser/src/demo/WebContent/WEB-INF/data.tsv
deleted file mode 100644
index 806ba68..0000000
--- a/lucene/contrib/xml-query-parser/src/demo/WebContent/WEB-INF/data.tsv
+++ /dev/null
@@ -1,5 +0,0 @@
-South	100	Contract	Java developer required to work within a small development group. Minimum 3+ years experience developing web applications in Java with exposure to Open Source technologies such as Spring, Hibernate, Eclipse, Struts, Lucene, Tomcat
-North	078	Permanent	Seeking developer with VB.NET, HTML, CSS, JavaScript, ASP. NET, SQL Query Analyzer, Visual Studio. NET, SQL Profiler
-East	100	Permanent	Project Manager - currently seeking a Project Manager to be based in London with experience of running multiple projects within budget. Candidate will come with a strong project management background, ideally from a technical background with web related experience and project management methodology such as Prince 2
-West	085	Contract	Oracle DBA required to provide 3rd line support, maintenance and database restore for company's production systems. Experienced in SQL, PL/SQL Oracle databases (9i & 10GR2), Oracle RAC, RMAN and Data Guard. Ideally with, Linux and Windows experience
-North	099	Permanent	Search engine developer required with experience in the following technologies: Java, Lucene, Solr, Spring, JSP, MySQL, Tomcat, JavaScript, Ant / Ivy, Subversion
\ No newline at end of file
diff --git a/lucene/contrib/xml-query-parser/src/demo/WebContent/WEB-INF/query.xsl b/lucene/contrib/xml-query-parser/src/demo/WebContent/WEB-INF/query.xsl
deleted file mode 100644
index 3be114c..0000000
--- a/lucene/contrib/xml-query-parser/src/demo/WebContent/WEB-INF/query.xsl
+++ /dev/null
@@ -1,74 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
-<xsl:template match="/Document">
-<BooleanQuery>
-	<!-- Clause if user selects a preference for type of job - apply choice of 
-	     permanent/contract filter and cache -->
-	<xsl:if test="type">
-	    <Clause occurs="must">
-	    	<ConstantScoreQuery>
-	    	   <CachedFilter>
-	    	     	<TermsFilter fieldName="type"><xsl:value-of select="type"/></TermsFilter>
-	    	   </CachedFilter>
-	    	 </ConstantScoreQuery>
-	   </Clause>
-	</xsl:if>
-		
-	<!-- Use standard Lucene query parser for any job description input -->
-	<xsl:if test="description">
-		<Clause occurs="must">
-			<UserQuery fieldName="description"><xsl:value-of select="description"/></UserQuery>
-		</Clause>
-	</xsl:if>      
-	
-	<!-- If any of the location fields are set OR them ALL in a Boolean filter and cache individual filters -->
-	<xsl:if test="South|North|East|West">
-		<Clause occurs="must">
-			<ConstantScoreQuery>
-				<BooleanFilter>
-					<xsl:for-each select="South|North|East|West">
-					<Clause occurs="should">
-						<CachedFilter>
-							<TermsFilter fieldName="location"><xsl:value-of select="name()"/></TermsFilter>
-						</CachedFilter>
-				  	</Clause>
-					</xsl:for-each>					
-				</BooleanFilter>
-	     		</ConstantScoreQuery>
-	 	</Clause>
-	</xsl:if>   	
-	
-	<!-- Use XSL functions to split and zero pad salary range value -->
-	<xsl:if test="salaryRange">
-		<Clause occurs="must">
-			<ConstantScoreQuery>
-				<RangeFilter fieldName="salary" >
-					<xsl:attribute name="lowerTerm">
-						<xsl:value-of select='format-number( substring-before(salaryRange,"-"), "000" )' />
-					</xsl:attribute> 
-					<xsl:attribute name="upperTerm">
-						<xsl:value-of select='format-number( substring-after(salaryRange,"-"), "000" )' />
-					</xsl:attribute> 
-				</RangeFilter>
-			</ConstantScoreQuery>
-		</Clause>
-	</xsl:if>	
-</BooleanQuery>
-</xsl:template>
-</xsl:stylesheet>
\ No newline at end of file
diff --git a/lucene/contrib/xml-query-parser/src/demo/WebContent/WEB-INF/web.xml b/lucene/contrib/xml-query-parser/src/demo/WebContent/WEB-INF/web.xml
deleted file mode 100644
index b0388e0..0000000
--- a/lucene/contrib/xml-query-parser/src/demo/WebContent/WEB-INF/web.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
-	<display-name>
-	LuceneXmlQueryWebDemo</display-name>
-	<servlet>
-		<description>
-		Servlet demonstrating XMLQueryParser</description>
-		<display-name>
-		FormBasedXmlQueryDemo</display-name>
-		<servlet-name>FormBasedXmlQueryDemo</servlet-name>
-		<servlet-class>
-		org.apache.lucene.xmlparser.webdemo.FormBasedXmlQueryDemo</servlet-class>
-		<init-param>
-			<description>
-			Name of query file held in /WEB-INF</description>
-			<param-name>xslFile</param-name>
-			<param-value>query.xsl</param-value>
-		</init-param>
-		<init-param>
-			<description>
-			Default field used in standard Lucene QueryParser used in UserQuery tag</description>
-			<param-name>defaultStandardQueryParserField</param-name>
-			<param-value>jobDescription</param-value>
-		</init-param>
-	</servlet>
-	<servlet-mapping>
-		<servlet-name>FormBasedXmlQueryDemo</servlet-name>
-		<url-pattern>/FormBasedXmlQueryDemo</url-pattern>
-	</servlet-mapping>
-	<welcome-file-list>
-		<welcome-file>index.jsp</welcome-file>
-	</welcome-file-list>
-</web-app>
diff --git a/lucene/contrib/xml-query-parser/src/demo/WebContent/index.jsp b/lucene/contrib/xml-query-parser/src/demo/WebContent/index.jsp
deleted file mode 100644
index 705f27d..0000000
--- a/lucene/contrib/xml-query-parser/src/demo/WebContent/index.jsp
+++ /dev/null
@@ -1,145 +0,0 @@
-<!--
-    Licensed to the Apache Software Foundation (ASF) under one or more
-    contributor license agreements.  See the NOTICE file distributed with
-    this work for additional information regarding copyright ownership.
-    The ASF licenses this file to You under the Apache License, Version 2.0
-    the "License"); you may not use this file except in compliance with
-    the License.  You may obtain a copy of the License at
- 
-        http://www.apache.org/licenses/LICENSE-2.0
- 
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
-import="org.apache.lucene.search.*,org.apache.lucene.document.*"
-pageEncoding="ISO-8859-1"%>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<html>
-<head>
-	<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
- 	<link rel="stylesheet" type="text/css" href="stylesheet.css">
-	<title>XML Query Parser demo</title>
-</head>
-<body>
-<h1>Job Search</h1>
-<%
-			// Load form variables
-			String description=request.getParameter("description");
-			String type=request.getParameter("type");
-			String salaryRange=request.getParameter("salaryRange"); 
-%>
-<form method="POST" action="FormBasedXmlQueryDemo">
-<table >
-	<tr>
-		<th class="formHeader">Description</th>
-		<td>
-			<input name="description" value="<%=description==null?"":description%>"/>
-		</td>
-	</tr>  
-	<tr>
-		<th class="formHeader">Type</th> 
-		<td> 
- 			<select name="type">
- 				<option value="" <%=type==null?"selected":""%>>Any</option>
- 				<option value="Contract" <%="Contract".equals(type)?"selected":""%>>Contract</option>
-				<option value="Permanent" <%="Permanent".equals(type)?"selected":""%>>Permanent</option>
-			</select> 
-		</td> 
-	</tr>
-	<tr>       
-		<th class="formHeader">Salary</th> 
-		<td>
- 			<select name="salaryRange">
- 				<option value="" <%=salaryRange==null?"selected":""%>>Any</option>
-<%
-				String ranges[]={"20","30","40", "50","60","70","80","90","100","110","120","150","200"};
-				for(int i=1;i<ranges.length;i++)
-				{
-					String rangeText=ranges[i-1]+"-"+ranges[i];
-%>				
- 					<option value="<%=rangeText%>" <%=rangeText.equals(salaryRange)?"selected":""%>><%=ranges[i-1]%> to <%=ranges[i]%>k</option>
-<%
-				}
-%>
-			</select> 
-		</td> 
-	</tr>	
-		
-	<tr>
-		<th class="formHeader">Locations</th>  
-		<td>   
-<%
-		String locs[]={"South","North","East","West"};  
-		boolean allLocsBlank=true;
-		for(int i=0;i<locs.length;i++)
-		{			
-			if(request.getParameter(locs[i])!=null)
-			{
-				allLocsBlank=false;
-			}
-		}
-		for(int i=0;i<locs.length;i++)
-		{			
-%>		
-			<input id='cb<%=locs[i]%>'  
-				name="<%=locs[i]%>" 
-<%
-				if((allLocsBlank)||("on".equals(request.getParameter(locs[i])))) 	{
-%>
-					checked="checked" 			
-<%				}	
-%>								
-				type="checkbox"/>
-			<label for="cb<%=locs[i]%>"><%=locs[i]%></label>
-<%
-		}
-%>		
-		</td>		
-	</tr>
-	
-	<tr>
-		<th></th>
-		<td>
-			<input type="submit" value="search"/>
-		</td>		
-	</tr>
-</table>
-</form>	 
-<%
-		Document[] results=(Document[])request.getAttribute("results");
-		if(results!=null)
-		{
-%>
-			<table width="600">
-				<tr>
-					<th class="resultsHeader">Type</th>
-					<th class="resultsHeader">Location</th>
-					<th class="resultsHeader">Salary</th>
-					<th class="resultsHeader">Description</th>
-				</tr>
-			<%
-						for (int i = 0; i < results.length; i++)
-						{
-							Document doc = results[i];
-			%>
-				<tr class="resultsRow">  
-					<td><%=doc.get("type")%></td>
-					<td><%=doc.get("location")%></td>
-					<td class="resultNum"><%=doc.get("salary")%>,000</td>
-					<td><%=doc.get("description")%></td>
-				</tr>
-
-			<%			
-						}
-			%>	
-			</table>
-			
-<% 					
-		}//end if has results
-%>	
-</body>
-</html>
diff --git a/lucene/contrib/xml-query-parser/src/demo/WebContent/stylesheet.css b/lucene/contrib/xml-query-parser/src/demo/WebContent/stylesheet.css
deleted file mode 100644
index 4220a69..0000000
--- a/lucene/contrib/xml-query-parser/src/demo/WebContent/stylesheet.css
+++ /dev/null
@@ -1,23 +0,0 @@
-BODY {font: 10pt Tahoma; color: #000000; background-color: #FFFFFF}
-P {font: 10pt Tahoma}
-BIG {font: 14pt Tahoma}
-#A { color: #FFFFFF;text-decoration: none underline}
-A { text-decoration: none underline}
-#A:hover {color: #ff33ff; text-decoration: none}
-A:hover {color: #9A00C0; text-decoration: none}
-
-
-.resultsHeader {font: bold 10pt Tahoma; color: #000000; background-color: #DCE2EE}
-.formHeader {font: bold 10pt Tahoma; text-align:right; color: #000000; }
-TD {font: 10pt Tahoma; color: #000000; }
-TR.resultsRow:hover {font: 10pt Tahoma; color: #000000; background-color: #ECF2FE}
-.resultNum {text-align:right}
-FORM {display: inline}
-H1 {font: bold 16pt Tahoma}
-H2 {font: bold 14pt Tahoma}
-H3 {font: bold 12pt Tahoma}
-SPAN.h1 {font: bold 22pt Tahoma}
-SPAN.h2 {font: bold 14pt Tahoma}
-
-SMALL {font: 8pt Tahoma}
-SELECT {font: 10pt Tahoma; }
diff --git a/lucene/contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo.java b/lucene/contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo.java
deleted file mode 100644
index 5de44f5..0000000
--- a/lucene/contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo.java
+++ /dev/null
@@ -1,150 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.lucene.xmlparser.webdemo;
-
-import org.apache.lucene.analysis.Analyzer;
-import org.apache.lucene.analysis.standard.StandardAnalyzer;
-import org.apache.lucene.document.Document;
-import org.apache.lucene.document.Field;
-import org.apache.lucene.index.CorruptIndexException;
-import org.apache.lucene.index.IndexWriter;
-import org.apache.lucene.index.IndexWriterConfig;
-import org.apache.lucene.search.IndexSearcher;
-import org.apache.lucene.search.Query;
-import org.apache.lucene.search.ScoreDoc;
-import org.apache.lucene.search.TopDocs;
-import org.apache.lucene.store.RAMDirectory;
-import org.apache.lucene.util.Version;
-import org.apache.lucene.xmlparser.CorePlusExtensionsParser;
-import org.apache.lucene.xmlparser.QueryTemplateManager;
-
-import javax.servlet.RequestDispatcher;
-import javax.servlet.ServletConfig;
-import javax.servlet.ServletException;
-import javax.servlet.http.HttpServlet;
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.util.Enumeration;
-import java.util.Properties;
-import java.util.StringTokenizer;
-
-public class FormBasedXmlQueryDemo extends HttpServlet {
-
-  private QueryTemplateManager queryTemplateManager;
-  private CorePlusExtensionsParser xmlParser;
-  private IndexSearcher searcher;
-  private Analyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);
-
-  @Override
-  public void init(ServletConfig config) throws ServletException {
-    super.init(config);
-    try {
-      openExampleIndex();
-
-      //load servlet configuration settings
-      String xslFile = config.getInitParameter("xslFile");
-      String defaultStandardQueryParserField = config.getInitParameter("defaultStandardQueryParserField");
-
-
-      //Load and cache choice of XSL query template using QueryTemplateManager
-      queryTemplateManager = new QueryTemplateManager(
-          getServletContext().getResourceAsStream("/WEB-INF/" + xslFile));
-
-      //initialize an XML Query Parser for use by all threads
-      xmlParser = new CorePlusExtensionsParser(defaultStandardQueryParserField, analyzer);
-    } catch (Exception e) {
-      throw new ServletException("Error loading query template", e);
-    }
-  }
-
-  @Override
-  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
-    //Take all completed form fields and add to a Properties object
-    Properties completedFormFields = new Properties();
-    Enumeration pNames = request.getParameterNames();
-    while (pNames.hasMoreElements()) {
-      String propName = (String) pNames.nextElement();
-      String value = request.getParameter(propName);
-      if ((value != null) && (value.trim().length() > 0)) {
-        completedFormFields.setProperty(propName, value);
-      }
-    }
-
-    try {
-      //Create an XML query by populating template with given user criteria
-      org.w3c.dom.Document xmlQuery = queryTemplateManager.getQueryAsDOM(completedFormFields);
-
-      //Parse the XML to produce a Lucene query
-      Query query = xmlParser.getQuery(xmlQuery.getDocumentElement());
-
-      //Run the query
-      TopDocs topDocs = searcher.search(query, 10);
-
-      //and package the results and forward to JSP
-      if (topDocs != null) {
-        ScoreDoc[] sd = topDocs.scoreDocs;
-        Document[] results = new Document[sd.length];
-        for (int i = 0; i < results.length; i++) {
-          results[i] = searcher.doc(sd[i].doc);
-          request.setAttribute("results", results);
-        }
-      }
-      RequestDispatcher dispatcher = getServletContext().getRequestDispatcher("/index.jsp");
-      dispatcher.forward(request, response);
-    }
-    catch (Exception e) {
-      throw new ServletException("Error processing query", e);
-    }
-  }
-
-  private void openExampleIndex() throws CorruptIndexException, IOException {
-    //Create a RAM-based index from our test data file
-    RAMDirectory rd = new RAMDirectory();
-    IndexWriterConfig iwConfig = new IndexWriterConfig(Version.LUCENE_40, analyzer);
-    IndexWriter writer = new IndexWriter(rd, iwConfig);
-    InputStream dataIn = getServletContext().getResourceAsStream("/WEB-INF/data.tsv");
-    BufferedReader br = new BufferedReader(new InputStreamReader(dataIn));
-    String line = br.readLine();
-    while (line != null) {
-      line = line.trim();
-      if (line.length() > 0) {
-        //parse row and create a document
-        StringTokenizer st = new StringTokenizer(line, "\t");
-        Document doc = new Document();
-        doc.add(new Field("location", st.nextToken(), Field.Store.YES,
-            Field.Index.ANALYZED_NO_NORMS));
-        doc.add(new Field("salary", st.nextToken(), Field.Store.YES,
-            Field.Index.ANALYZED_NO_NORMS));
-        doc.add(new Field("type", st.nextToken(), Field.Store.YES,
-            Field.Index.ANALYZED_NO_NORMS));
-        doc.add(new Field("description", st.nextToken(), Field.Store.YES,
-            Field.Index.ANALYZED));
-        writer.addDocument(doc);
-      }
-      line = br.readLine();
-    }
-    writer.close();
-
-    //open searcher
-    searcher = new IndexSearcher(rd, true);
-  }
-}

