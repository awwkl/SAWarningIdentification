GitDiffStart: f6e4fceda22c2e8827a1650e51886796921a0319 | Thu Feb 2 02:17:54 2012 +0000
diff --git a/modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java b/modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java
index 51fb07c..40b96b0 100644
--- a/modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java
+++ b/modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java
@@ -107,7 +107,7 @@ public class FunctionQuery extends Query {
     final float qWeight;
     int doc=-1;
     final FunctionValues vals;
-    final Bits liveDocs;
+    final Bits acceptDocs;
 
     public AllScorer(AtomicReaderContext context, Bits acceptDocs, FunctionWeight w, float qWeight) throws IOException {
       super(w);
@@ -115,7 +115,7 @@ public class FunctionQuery extends Query {
       this.qWeight = qWeight;
       this.reader = context.reader();
       this.maxDoc = reader.maxDoc();
-      this.liveDocs = acceptDocs;
+      this.acceptDocs = acceptDocs;
       vals = func.getValues(weight.context, context);
     }
 
@@ -135,7 +135,7 @@ public class FunctionQuery extends Query {
         if (doc>=maxDoc) {
           return doc=NO_MORE_DOCS;
         }
-        if (liveDocs != null && !liveDocs.get(doc)) continue;
+        if (acceptDocs != null && !acceptDocs.get(doc)) continue;
         return doc;
       }
     }
diff --git a/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java b/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java
index fdea6d2..58e0860 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java
@@ -40,6 +40,7 @@ import org.apache.solr.common.cloud.ZkStateReader;
 import org.apache.solr.common.cloud.ZooKeeperException;
 import org.apache.solr.common.params.CoreAdminParams.CoreAdminAction;
 import org.apache.solr.common.params.ModifiableSolrParams;
+import org.apache.solr.common.params.UpdateParams;
 import org.apache.solr.common.util.Hash;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.core.CoreDescriptor;
@@ -112,7 +113,7 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {
     this.ulog = updateHandler.getUpdateLog();
     this.vinfo = ulog == null ? null : ulog.getVersionInfo();
     versionsStored = this.vinfo != null && this.vinfo.getVersionField() != null;
-    returnVersions = versionsStored;
+    returnVersions = req.getParams().getBool(UpdateParams.VERSIONS ,false);
 
     // TODO: better way to get the response, or pass back info to it?
     SolrRequestInfo reqInfo = returnVersions ? SolrRequestInfo.getRequestInfo() : null;
diff --git a/solr/solrj/src/java/org/apache/solr/common/params/UpdateParams.java b/solr/solrj/src/java/org/apache/solr/common/params/UpdateParams.java
index 09e5ed9..2f37645 100644
--- a/solr/solrj/src/java/org/apache/solr/common/params/UpdateParams.java
+++ b/solr/solrj/src/java/org/apache/solr/common/params/UpdateParams.java
@@ -61,4 +61,7 @@ public interface UpdateParams
   public static final String MAX_OPTIMIZE_SEGMENTS = "maxSegments";
 
   public static final String EXPUNGE_DELETES = "expungeDeletes";
+
+  /** Return versions of updates? */
+  public static final String VERSIONS = "versions";
 }
diff --git a/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java b/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java
index 089a1f8..397c38e 100755
--- a/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java
+++ b/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java
@@ -834,6 +834,11 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {
 
 
   public static Long addAndGetVersion(SolrInputDocument sdoc, SolrParams params) throws Exception {
+    if (params==null || params.get("versions") == null) {
+      ModifiableSolrParams mparams = new ModifiableSolrParams(params);
+      mparams.set("versions","true");
+      params = mparams;
+    }
     String response = updateJ(jsonAdd(sdoc), params);
     Map rsp = (Map)ObjectBuilder.fromJSON(response);
     List lst = (List)rsp.get("adds");
@@ -842,6 +847,11 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {
   }
 
   public static Long deleteAndGetVersion(String id, SolrParams params) throws Exception {
+    if (params==null || params.get("versions") == null) {
+      ModifiableSolrParams mparams = new ModifiableSolrParams(params);
+      mparams.set("versions","true");
+      params = mparams;
+    }
     String response = updateJ(jsonDelId(id), params);
     Map rsp = (Map)ObjectBuilder.fromJSON(response);
     List lst = (List)rsp.get("deletes");
@@ -850,6 +860,11 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {
   }
 
   public static Long deleteByQueryAndGetVersion(String q, SolrParams params) throws Exception {
+    if (params==null || params.get("versions") == null) {
+      ModifiableSolrParams mparams = new ModifiableSolrParams(params);
+      mparams.set("versions","true");
+      params = mparams;
+    }
     String response = updateJ(jsonDelQ(q), params);
     Map rsp = (Map)ObjectBuilder.fromJSON(response);
     List lst = (List)rsp.get("deleteByQuery");

