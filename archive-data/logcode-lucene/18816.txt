GitDiffStart: 52283c86f8a06501291030cdc6bad64ffd74b383 | Wed Nov 18 23:02:38 2009 +0000
diff --git a/src/java/org/apache/solr/search/function/distance/DistanceUtils.java b/src/java/org/apache/solr/search/function/distance/DistanceUtils.java
index 907ec28..944c68c 100644
--- a/src/java/org/apache/solr/search/function/distance/DistanceUtils.java
+++ b/src/java/org/apache/solr/search/function/distance/DistanceUtils.java
@@ -34,6 +34,7 @@ public class DistanceUtils {
    */
   public static double haversine(double x1, double y1, double x2, double y2, double radius){
     double result = 0;
+    //make sure they aren't all the same, as then we can just return 0
     if ((x1 != x2) || (y1 != y2)) {
       double diffX = x1 - x2;
       double diffY = y1 - y2;
diff --git a/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java b/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java
index d7d7a23..2244d6a 100644
--- a/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java
+++ b/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java
@@ -93,11 +93,13 @@ public class GeohashHaversineFunction extends ValueSource {
     double result = 0;
     String h1 = gh1DV.strVal(doc);
     String h2 = gh2DV.strVal(doc);
-    if (h1.equals(h2) == false){
+    if (h1 != null && h2 != null && h1.equals(h2) == false){
       double[] h1Pair = GeoHashUtils.decode(h1);
       double[] h2Pair = GeoHashUtils.decode(h2);
       result = DistanceUtils.haversine(Math.toRadians(h1Pair[0]), Math.toRadians(h1Pair[1]),
               Math.toRadians(h2Pair[0]), Math.toRadians(h2Pair[1]), radius);
+    } else if (h1 == null || h2 == null){
+      result = Double.MAX_VALUE;
     }
     return result;
   }
diff --git a/src/java/org/apache/solr/search/function/distance/HaversineFunction.java b/src/java/org/apache/solr/search/function/distance/HaversineFunction.java
index a5998ac..63a1f26 100644
--- a/src/java/org/apache/solr/search/function/distance/HaversineFunction.java
+++ b/src/java/org/apache/solr/search/function/distance/HaversineFunction.java
@@ -66,16 +66,12 @@ public class HaversineFunction extends ValueSource {
    * @return The haversine distance formula
    */
   protected double distance(int doc, DocValues x1DV, DocValues y1DV, DocValues x2DV, DocValues y2DV) {
-    double result = 0;
     double x1 = x1DV.doubleVal(doc); //in radians
     double y1 = y1DV.doubleVal(doc);
     double x2 = x2DV.doubleVal(doc);
     double y2 = y2DV.doubleVal(doc);
 
-    //make sure they aren't all the same, as then we can just return 0
-    result = DistanceUtils.haversine(x1, y1, x2, y2, radius);
-
-    return result;
+    return DistanceUtils.haversine(x1, y1, x2, y2, radius);
   }
 
 

