GitDiffStart: ad994d8281d745a9758194d9ed1e38456e337828 | Tue Apr 10 17:02:11 2012 +0000
diff --git a/modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java b/modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java
index 7034834..00190dd 100644
--- a/modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java
+++ b/modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java
@@ -113,11 +113,7 @@ public class TestRandomChains extends BaseTokenStreamTestCase {
                                  LimitTokenCountFilter.class,
                                  // Not broken: we forcefully add this, so we shouldn't
                                  // also randomly pick it:
-                                 ValidatingTokenFilter.class,
-                                 // nocommit: randomly generate the Side enum param here; then promote to brokenOffsets?
-                                 EdgeNGramTokenizer.class,
-                                 // nocommit: randomly generate the Side enum param here; then promote to brokenOffsets?
-                                 EdgeNGramTokenFilter.class
+                                 ValidatingTokenFilter.class
     );
   }
 
@@ -138,6 +134,10 @@ public class TestRandomChains extends BaseTokenStreamTestCase {
                                  NGramTokenizer.class,
                                  // broken!
                                  NGramTokenFilter.class,
+                                 // broken!
+                                 EdgeNGramTokenizer.class,
+                                 // broken!
+                                 EdgeNGramTokenFilter.class,
                                  // nocommit it seems to mess up offsets!?
                                  WikipediaTokenizer.class
                                  );
@@ -356,6 +356,20 @@ public class TestRandomChains extends BaseTokenStreamTestCase {
         }
       }
     });
+    put(EdgeNGramTokenizer.Side.class, new ArgProducer() {
+      @Override public Object create(Random random) {
+        return random.nextBoolean() 
+            ? EdgeNGramTokenizer.Side.FRONT 
+            : EdgeNGramTokenizer.Side.BACK;
+      }
+    });
+    put(EdgeNGramTokenFilter.Side.class, new ArgProducer() {
+      @Override public Object create(Random random) {
+        return random.nextBoolean() 
+            ? EdgeNGramTokenFilter.Side.FRONT 
+            : EdgeNGramTokenFilter.Side.BACK;
+      }
+    });
     put(HyphenationTree.class, new ArgProducer() {
       @Override public Object create(Random random) {
         // TODO: make nastier

