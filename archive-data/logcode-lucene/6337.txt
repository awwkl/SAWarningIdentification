GitDiffStart: 5e19ec415da32983a5e4e8493d2599a2ecb6e628 | Thu May 1 13:32:56 2014 +0000
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions2.java b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions2.java
index 8e5e1c1..f86edc9 100644
--- a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions2.java
+++ b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions2.java
@@ -92,6 +92,7 @@ public class TestIndexWriterExceptions2 extends LuceneTestCase {
           iw.addDocument(doc);
         } catch (Exception e) {
           if (e.getMessage() != null && e.getMessage().startsWith("Fake IOException")) {
+            System.out.println("\nTEST: got expected fake exc:");
             e.printStackTrace(exceptionStream);
           } else {
             Rethrow.rethrow(e);
@@ -106,6 +107,7 @@ public class TestIndexWriterExceptions2 extends LuceneTestCase {
             }
           } catch (Exception e) {
             if (e.getMessage() != null && e.getMessage().startsWith("Fake IOException")) {
+              System.out.println("\nTEST: got expected fake exc:");
               e.printStackTrace(exceptionStream);
             } else {
               Rethrow.rethrow(e);
diff --git a/lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingCodec.java b/lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingCodec.java
index 0903afe..2f81c88 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingCodec.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingCodec.java
@@ -64,4 +64,9 @@ public final class AssertingCodec extends FilterCodec {
   public NormsFormat normsFormat() {
     return norms;
   }
+
+  @Override
+  public String toString() {
+    return "Asserting(" + delegate + ")";
+  }
 }
diff --git a/lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyCodec.java b/lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyCodec.java
index f0e5c42..0719aca 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyCodec.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyCodec.java
@@ -84,4 +84,9 @@ public class CrankyCodec extends FilterCodec {
   public TermVectorsFormat termVectorsFormat() {
     return new CrankyTermVectorsFormat(delegate.termVectorsFormat(), random);
   }
+
+  @Override
+  public String toString() {
+    return "Cranky(" + delegate + ")";
+  }
 }
diff --git a/lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPostingsFormat.java b/lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPostingsFormat.java
index aaaca2d..6ca0c1f 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPostingsFormat.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPostingsFormat.java
@@ -66,6 +66,7 @@ class CrankyPostingsFormat extends PostingsFormat {
       if (random.nextInt(1000) == 0) {
         throw new IOException("Fake IOException from FieldsConsumer.write()");
       }  
+      delegate.write(fields);
     }
   }
 }

