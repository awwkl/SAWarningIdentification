GitDiffStart: ca1059f194f5492b6b4200ab98219baf7c080e34 | Sun Aug 19 08:45:25 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/util/FilterIterator.java b/lucene/core/src/java/org/apache/lucene/util/FilterIterator.java
index 8e9b5a9..d67a2ff 100644
--- a/lucene/core/src/java/org/apache/lucene/util/FilterIterator.java
+++ b/lucene/core/src/java/org/apache/lucene/util/FilterIterator.java
@@ -22,41 +22,40 @@ import java.util.NoSuchElementException;
 
 public abstract class FilterIterator<T> implements Iterator<T> {
   
-  private Iterator<T> iterator;
+  private final Iterator<T> iterator;
   private T next = null;
   private boolean nextIsSet = false;
   
-  protected abstract boolean predicateFunction(T field);
+  protected abstract boolean predicateFunction(T object);
   
   public FilterIterator(Iterator<T> baseIterator) {
     this.iterator = baseIterator;
   }
   
-  public boolean hasNext() {
-    if (nextIsSet) {
-      return true;
-    } else {
-      return setNext();
-    }
+  public final boolean hasNext() {
+    return nextIsSet || setNext();
   }
   
-  public T next() {
-    if (!nextIsSet) {
-      if (!setNext()) {
-        throw new NoSuchElementException();
-      }
+  public final T next() {
+    if (!hasNext()) {
+      throw new NoSuchElementException();
+    }
+    assert nextIsSet;
+    try {
+      return next;
+    } finally {
+      nextIsSet = false;
+      next = null;
     }
-    nextIsSet = false;
-    return next;
   }
   
-  public void remove() {
+  public final void remove() {
     throw new UnsupportedOperationException();
   }
   
   private boolean setNext() {
     while (iterator.hasNext()) {
-      T object = iterator.next();
+      final T object = iterator.next();
       if (predicateFunction(object)) {
         next = object;
         nextIsSet = true;

