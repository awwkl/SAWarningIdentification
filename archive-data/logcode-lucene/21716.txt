GitDiffStart: 7a32b537a934572e5e8de301a6be78363a9692ed | Sat Mar 22 23:57:52 2008 +0000
diff --git a/build.xml b/build.xml
index ae53e50..3cb1bc5 100644
--- a/build.xml
+++ b/build.xml
@@ -371,7 +371,7 @@
     
     <!-- jetty -->
     <fileset dir="example/lib">
-      <include name="*.jar" />
+      <include name="**/*.jar" />
     </fileset>
   </path>
     
@@ -618,7 +618,7 @@
           depends="compile, make-manifest, dist-jar">
     <mkdir dir="${dist}" />
     <war destfile="${dist}/${fullnamever}.war"
-         webxml="${src}/webapp/WEB-INF/web.xml"
+         webxml="${src}/webapp/web/WEB-INF/web.xml"
          filesetmanifest="skip"
          manifest="${dest}/META-INF/MANIFEST.MF">
        <lib dir="${lib}">
@@ -630,7 +630,7 @@
          <include name="${fullname}-common-${version}.jar" />
        </lib>
        <lib dir="client/java/solrj/lib"/>
-       <fileset dir="${src}/webapp/resources" />
+       <fileset dir="${src}/webapp/web" />
        <metainf dir="${basedir}" includes="LICENSE.txt,NOTICE.txt"/>
     </war>
   </target>
diff --git a/client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest.java b/client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest.java
new file mode 100644
index 0000000..458306a
--- /dev/null
+++ b/client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest.java
@@ -0,0 +1,85 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.solr.client.solrj.embedded;
+
+import java.net.URL;
+
+import junit.framework.TestCase;
+
+import org.apache.commons.io.IOUtils;
+import org.mortbay.jetty.Connector;
+import org.mortbay.jetty.Server;
+import org.mortbay.jetty.bio.SocketConnector;
+import org.mortbay.jetty.webapp.WebAppContext;
+
+/**
+ * @version $Id$
+ * @since solr 1.3
+ */
+public class JettyWebappTest extends TestCase 
+{
+  static final int port = 8985; // not 8983
+  static final String context = "/test";
+  
+  Server server;
+  
+  @Override
+  public void setUp() throws Exception 
+  {
+    System.setProperty("solr.solr.home", "../../../example/solr");
+    String path = "../../webapp/web";
+
+    Server server = new Server(port);
+    new WebAppContext(server, path, context );
+
+    SocketConnector connector = new SocketConnector();
+    connector.setMaxIdleTime(1000 * 60 * 60);
+    connector.setSoLingerTime(-1);
+    connector.setPort(port);
+    server.setConnectors(new Connector[]{connector});
+    server.setStopAtShutdown( true );
+    
+    server.start();
+  }
+
+  @Override
+  public void tearDown() throws Exception 
+  {
+    try {
+      server.stop();
+    } catch( Exception ex ) {}
+  }
+  
+  public void testJSP() throws Exception
+  {
+    // Currently not an extensive test, but it does fire up the JSP pages and make 
+    // sure they compile ok
+    
+    String adminPath = "http://localhost:"+port+context+"/admin/";
+    String html = IOUtils.toString( new URL(adminPath).openStream() );
+    assertNotNull( html ); // real error will be an exception
+
+    // analysis
+    html = IOUtils.toString( new URL(adminPath+"analysis.jsp").openStream() );
+    assertNotNull( html ); // real error will be an exception
+
+    // schema browser
+    html = IOUtils.toString( new URL(adminPath+"schema.jsp").openStream() );
+    assertNotNull( html ); // real error will be an exception
+  }
+}
diff --git a/src/webapp/WEB-INF/web.xml b/src/webapp/WEB-INF/web.xml
deleted file mode 100644
index 13669b3..0000000
--- a/src/webapp/WEB-INF/web.xml
+++ /dev/null
@@ -1,95 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<web-app>
-
-  <!-- Uncomment if you are trying to use a Resin version before 3.0.19.
-    Their XML implementation isn't entirely compatible with Xerces.
-    Below are the implementations to use with Sun's JVM.
-  <system-property javax.xml.xpath.XPathFactory=
-             "com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl"/>
-  <system-property javax.xml.parsers.DocumentBuilderFactory=
-             "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl"/>
-  <system-property javax.xml.parsers.SAXParserFactory=
-             "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl"/>
-   -->
-
-  <!-- Any path (name) registered in solrconfig.xml will be sent to that filter -->
-  <filter>
-    <filter-name>SolrRequestFilter</filter-name>
-    <filter-class>org.apache.solr.servlet.SolrDispatchFilter</filter-class>
-    <!--
-    <init-param>
-      <param-name>path-prefix</param-name>
-      <param-value>/xxx</param-value>
-    </init-param>
-    -->
-  </filter>
-  <filter-mapping>
-    <filter-name>SolrRequestFilter</filter-name>
-    <url-pattern>/*</url-pattern>
-  </filter-mapping>
-
-  <!-- Otherwise it will continue to the old servlets -->
-  
-  <servlet>
-    <servlet-name>SolrServer</servlet-name>
-    <display-name>Solr</display-name>
-    <description>Solr Server</description>
-    <servlet-class>org.apache.solr.servlet.SolrServlet</servlet-class>
-    <load-on-startup>1</load-on-startup>
-  </servlet>
-
-  <servlet>
-    <servlet-name>SolrUpdate</servlet-name>
-    <display-name>SolrUpdate</display-name>
-    <description>Solr Update Handler</description>
-    <servlet-class>org.apache.solr.servlet.SolrUpdateServlet</servlet-class>
-    <load-on-startup>2</load-on-startup>
-  </servlet>
-
-  <!-- @Deprecated -->
-  <servlet>
-    <servlet-name>ping</servlet-name>
-    <jsp-file>/admin/ping.jsp</jsp-file>
-  </servlet>
-
-  <servlet-mapping>
-    <servlet-name>SolrServer</servlet-name>
-    <url-pattern>/select/*</url-pattern>
-  </servlet-mapping>
-
-  <servlet-mapping>
-    <servlet-name>SolrUpdate</servlet-name>
-    <url-pattern>/update/*</url-pattern>
-  </servlet-mapping>
-
-  <!-- @Deprecated -->
-  <servlet-mapping>
-    <servlet-name>ping</servlet-name>
-    <url-pattern>/admin/ping</url-pattern>
-  </servlet-mapping>
-  
-  <mime-mapping>
-    <extension>.xsl</extension>
-    <!-- per http://www.w3.org/TR/2006/PR-xslt20-20061121/ -->
-    <mime-type>application/xslt+xml</mime-type>
-  </mime-mapping>
-
-</web-app>
diff --git a/src/webapp/resources/admin/_info.jsp b/src/webapp/resources/admin/_info.jsp
deleted file mode 100644
index 371f304..0000000
--- a/src/webapp/resources/admin/_info.jsp
+++ /dev/null
@@ -1,109 +0,0 @@
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.solr.core.SolrConfig,
-                 org.apache.solr.core.SolrCore,
-                 org.apache.solr.schema.IndexSchema,
-                 java.io.File"%>
-<%@ page import="java.net.InetAddress"%>
-<%@ page import="java.io.StringWriter"%>
-<%@ page import="org.apache.solr.core.Config"%>
-<%@ page import="org.apache.solr.util.XML"%>
-<%@ page import="org.apache.lucene.LucenePackage"%>
-<%@ page import="java.net.UnknownHostException" %>
-
-
-<%
-  // 
-  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
-  if (core == null)
-    core = SolrCore.getSolrCore();
-    
-  SolrConfig solrConfig = core.getSolrConfig();
-  int port = request.getServerPort();
-  IndexSchema schema = core.getSchema();
-
-  // enabled/disabled is purely from the point of a load-balancer
-  // and has no effect on local server function.  If there is no healthcheck
-  // configured, don't put any status on the admin pages.
-  String enabledStatus = null;
-  String enabledFile = solrConfig.get("admin/healthcheck/text()",null);
-  boolean isEnabled = false;
-  if (enabledFile!=null) {
-    isEnabled = new File(enabledFile).exists();
-  }
-
-  String collectionName = schema!=null ? schema.getName():"unknown";
-  InetAddress addr = null;
-  String hostname = "unknown";
-  try {
-    addr = InetAddress.getLocalHost();
-    hostname = addr.getCanonicalHostName();
-  } catch (UnknownHostException e) {
-    //default to unknown
-  }
-
-  String defaultSearch = "";
-  { 
-    StringWriter tmp = new StringWriter();
-    XML.escapeCharData
-      (solrConfig.get("admin/defaultQuery/text()", null), tmp);
-    defaultSearch = tmp.toString();
-  }
-
-  String solrImplVersion = "";
-  String solrSpecVersion = "";
-  String luceneImplVersion = "";
-  String luceneSpecVersion = "";
-
-  { 
-    Package p;
-    StringWriter tmp;
-
-    p = SolrCore.class.getPackage();
-
-    tmp = new StringWriter();
-    solrImplVersion = p.getImplementationVersion();
-    if (null != solrImplVersion) {
-      XML.escapeCharData(solrImplVersion, tmp);
-      solrImplVersion = tmp.toString();
-    }
-    tmp = new StringWriter();
-    solrSpecVersion = p.getSpecificationVersion() ;
-    if (null != solrSpecVersion) {
-      XML.escapeCharData(solrSpecVersion, tmp);
-      solrSpecVersion = tmp.toString();
-    }
-  
-    p = LucenePackage.class.getPackage();
-
-    tmp = new StringWriter();
-    luceneImplVersion = p.getImplementationVersion();
-    if (null != luceneImplVersion) {
-      XML.escapeCharData(luceneImplVersion, tmp);
-      luceneImplVersion = tmp.toString();
-    }
-    tmp = new StringWriter();
-    luceneSpecVersion = p.getSpecificationVersion() ;
-    if (null != luceneSpecVersion) {
-      XML.escapeCharData(luceneSpecVersion, tmp);
-      luceneSpecVersion = tmp.toString();
-    }
-  }
-  
-  String cwd=System.getProperty("user.dir");
-  String solrHome= solrConfig.getInstanceDir();
-%>
diff --git a/src/webapp/resources/admin/action.jsp b/src/webapp/resources/admin/action.jsp
deleted file mode 100644
index 978c530..0000000
--- a/src/webapp/resources/admin/action.jsp
+++ /dev/null
@@ -1,116 +0,0 @@
-<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.solr.util.XML"%>
-<%@ page import="org.apache.solr.core.SolrCore,
-                 org.apache.solr.schema.IndexSchema,
-                 java.io.File,
-                 java.net.InetAddress,
-                 java.net.UnknownHostException"%>
-<%@ page import="java.util.Date"%>
-<%@ page import="java.util.logging.Level"%>
-<%@ page import="java.util.logging.Logger"%>
-<%@include file="header.jsp" %>
-<%
-
-  String action = request.getParameter("action");
-  String logging = request.getParameter("log");
-  String enableActionStatus = "";
-  boolean isValid = false;
-
-  if (action != null) {
-    // Validate fname
-    if ("Enable".compareTo(action) == 0) isValid = true;
-    if ("Disable".compareTo(action) == 0) isValid = true;
-  }
-  if (logging != null) {
-    action = "Set Log Level";
-    isValid = true;
-  }
-  if (isValid) {
-    if ("Enable".compareTo(action) == 0) {
-      try {
-        File enableFile = new File(enabledFile);
-        if (enableFile.createNewFile()) {
-          enableActionStatus += "Enable Succeeded (enable file ";
-          enableActionStatus += enabledFile;
-          enableActionStatus += " created)";
-        } else {
-          enableActionStatus += "Already Enabled";
-        }
-      } catch(Exception e) {
-          enableActionStatus += "Enable Failed: " + e.toString();
-      }
-    }
-    if ("Disable".compareTo(action) == 0) {
-      try {
-        File enableFile = new File(enabledFile);
-        if (enableFile.delete()) {
-          enableActionStatus = "Disable Succeeded (enable file ";
-          enableActionStatus += enabledFile;
-          enableActionStatus += " removed)";
-        } else {
-          enableActionStatus = "Already Disabled";
-        }
-      } catch(Exception e) {
-          enableActionStatus += "Disable Failed: " + e.toString();
-      }
-    }
-    if (logging != null) {
-      try {
-        Logger log = SolrCore.log;
-        Logger parent = log.getParent();
-        while (parent != null) {
-          log = parent;
-          parent = log.getParent();
-        }
-        log.setLevel(Level.parse(logging));
-        enableActionStatus = "Set Log Level (" + logging + ") Succeeded";
-      } catch(Exception e) {
-          enableActionStatus += "Set Log Level (" + logging + ") Failed: "
-                                 + e.toString();
-      }
-    }
-  } else {
-    enableActionStatus = "Illegal Action";
-  }
-  // :TODO: might want to rework this so any logging change happens *after*
-  SolrCore.log.log(Level.INFO, enableActionStatus);
-%>
-<br clear="all">
-<table>
-  <tr>
-    <td>
-      <H3>Action:</H3>
-    </td>
-    <td>
-      <% XML.escapeCharData(action, out); %><br>
-    </td>
-  </tr>
-  <tr>
-    <td>
-      <H4>Result:</H4>
-    </td>
-    <td>
-      <% XML.escapeCharData(enableActionStatus, out); %><br>
-    </td>
-  </tr>
-</table>
-<br><br>
-    <a href=".">Return to Admin Page</a>
-</body>
-</html>
diff --git a/src/webapp/resources/admin/analysis.jsp b/src/webapp/resources/admin/analysis.jsp
deleted file mode 100644
index fe6d3f4..0000000
--- a/src/webapp/resources/admin/analysis.jsp
+++ /dev/null
@@ -1,418 +0,0 @@
-<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.lucene.analysis.Analyzer,
-                 org.apache.lucene.analysis.Token,
-                 org.apache.lucene.analysis.TokenStream,
-                 org.apache.solr.analysis.TokenFilterFactory,
-                 org.apache.solr.analysis.TokenizerChain,
-                 org.apache.solr.analysis.TokenizerFactory,
-                 org.apache.solr.schema.FieldType,
-                 org.apache.solr.schema.SchemaField,
-                 org.apache.solr.util.XML,
-                 javax.servlet.jsp.JspWriter,java.io.IOException
-                "%>
-<%@ page import="java.io.Reader"%>
-<%@ page import="java.io.StringReader"%>
-<%@ page import="java.util.*"%>
-
-<%-- $Id$ --%>
-<%-- $Source: /cvs/main/searching/org.apache.solrolarServer/resources/admin/analysis.jsp,v $ --%>
-<%-- $Name:  $ --%>
-
-<%@include file="header.jsp" %>
-
-<%
-  // is name a field name or a type name?
-  String nt = request.getParameter("nt");
-  if (nt==null || nt.length()==0) nt="name"; // assume field name
-  nt = nt.toLowerCase().trim();
-  String name = request.getParameter("name");
-  if (name==null || name.length()==0) name="";
-  String val = request.getParameter("val");
-  if (val==null || val.length()==0) val="";
-  String qval = request.getParameter("qval");
-  if (qval==null || qval.length()==0) qval="";
-  String verboseS = request.getParameter("verbose");
-  boolean verbose = verboseS!=null && verboseS.equalsIgnoreCase("on");
-  String qverboseS = request.getParameter("qverbose");
-  boolean qverbose = qverboseS!=null && qverboseS.equalsIgnoreCase("on");
-  String highlightS = request.getParameter("highlight");
-  boolean highlight = highlightS!=null && highlightS.equalsIgnoreCase("on");
-%>
-
-<br clear="all">
-
-<h2>Field Analysis</h2>
-
-<form method="POST" action="analysis.jsp">
-<table>
-<tr>
-  <td>
-	<strong>Field
-          <select name="nt">
-	  <option <%= nt.equals("name") ? "selected=\"selected\"" : "" %> >name</option>
-	  <option <%= nt.equals("type") ? "selected=\"selected\"" : "" %>>type</option></strong>
-  </td>
-  <td>
-	<input class="std" name="name" type="text" value="<% XML.escapeCharData(name, out); %>">
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Field value (Index)</strong>
-  <br/>
-  verbose output
-  <input name="verbose" type="checkbox"
-     <%= verbose ? "checked=\"true\"" : "" %> >
-    <br/>
-  highlight matches
-  <input name="highlight" type="checkbox"
-     <%= highlight ? "checked=\"true\"" : "" %> >
-  </td>
-  <td>
-	<textarea class="std" rows="8" cols="70" name="val"><% XML.escapeCharData(val,out); %></textarea>
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Field value (Query)</strong>
-  <br/>
-  verbose output
-  <input name="qverbose" type="checkbox"
-     <%= qverbose ? "checked=\"true\"" : "" %> >
-  </td>
-  <td>
-	<textarea class="std" rows="1" cols="70" name="qval"><% XML.escapeCharData(qval,out); %></textarea>
-  </td>
-</tr>
-<tr>
-
-  <td>
-  </td>
-
-  <td>
-	<input class="stdbutton" type="submit" value="analyze">
-  </td>
-
-</tr>
-</table>
-</form>
-
-
-<%
-  SchemaField field=null;
-
-  if (name!="") {
-    if (nt.equals("name")) {
-      try {
-        field = schema.getField(name);
-      } catch (Exception e) {
-        out.println("<strong>Unknown Field: " + name + "</strong>");
-      }
-    } else {
-       FieldType t = schema.getFieldTypes().get(name);
-       if (null == t) {
-         out.println("<strong>Unknown Field Type: " + name + "</strong>");
-       } else {
-         field = new SchemaField("fakefieldoftype:"+name, t);
-       }
-    }
-  }
-
-  if (field!=null) {
-    HashSet<Tok> matches = null;
-    if (qval!="" && highlight) {
-      Reader reader = new StringReader(qval);
-      Analyzer analyzer =  field.getType().getQueryAnalyzer();
-      TokenStream tstream = analyzer.tokenStream(field.getName(),reader);
-      List<Token> tokens = getTokens(tstream);
-      matches = new HashSet<Tok>();
-      for (Token t : tokens) { matches.add( new Tok(t,0)); }
-    }
-
-    if (val!="") {
-      out.println("<h3>Index Analyzer</h3>");
-      doAnalyzer(out, field, val, false, verbose,matches);
-    }
-    if (qval!="") {
-      out.println("<h3>Query Analyzer</h3>");
-      doAnalyzer(out, field, qval, true, qverbose,null);
-    }
-  }
-
-%>
-
-
-</body>
-</html>
-
-
-<%!
-  private static void doAnalyzer(JspWriter out, SchemaField field, String val, boolean queryAnalyser, boolean verbose, Set<Tok> match) throws Exception {
-    Reader reader = new StringReader(val);
-
-    FieldType ft = field.getType();
-     Analyzer analyzer = queryAnalyser ?
-             ft.getQueryAnalyzer() : ft.getAnalyzer();
-     if (analyzer instanceof TokenizerChain) {
-       TokenizerChain tchain = (TokenizerChain)analyzer;
-       TokenizerFactory tfac = tchain.getTokenizerFactory();
-       TokenFilterFactory[] filtfacs = tchain.getTokenFilterFactories();
-
-       TokenStream tstream = tfac.create(reader);
-       List<Token> tokens = getTokens(tstream);
-       tstream = tfac.create(reader);
-       if (verbose) {
-         writeHeader(out, tfac.getClass(), tfac.getArgs());
-       }
-
-       writeTokens(out, tokens, ft, verbose, match);
-
-       for (TokenFilterFactory filtfac : filtfacs) {
-         if (verbose) {
-           writeHeader(out, filtfac.getClass(), filtfac.getArgs());
-         }
-
-         final Iterator<Token> iter = tokens.iterator();
-         tstream = filtfac.create( new TokenStream() {
-           public Token next() throws IOException {
-             return iter.hasNext() ? iter.next() : null;
-           }
-          }
-         );
-         tokens = getTokens(tstream);
-
-         writeTokens(out, tokens, ft, verbose, match);
-       }
-
-     } else {
-       TokenStream tstream = analyzer.tokenStream(field.getName(),reader);
-       List<Token> tokens = getTokens(tstream);
-       if (verbose) {
-         writeHeader(out, analyzer.getClass(), new HashMap<String,String>());
-       }
-       writeTokens(out, tokens, ft, verbose, match);
-     }
-  }
-
-
-  static List<Token> getTokens(TokenStream tstream) throws IOException {
-    List<Token> tokens = new ArrayList<Token>();
-    while (true) {
-      Token t = tstream.next();
-      if (t==null) break;
-      tokens.add(t);
-    }
-    return tokens;
-  }
-
-
-  private static class Tok {
-    Token token;
-    int pos;
-    Tok(Token token, int pos) {
-      this.token=token;
-      this.pos=pos;
-    }
-
-    public boolean equals(Object o) {
-      return ((Tok)o).token.termText().equals(token.termText());
-    }
-    public int hashCode() {
-      return token.termText().hashCode();
-    }
-    public String toString() {
-      return token.termText();
-    }
-  }
-
-  private static interface ToStr {
-    public String toStr(Object o);
-  }
-
-  private static void printRow(JspWriter out, String header, List[] arrLst, ToStr converter, boolean multival, boolean verbose, Set<Tok> match) throws IOException {
-    // find the maximum number of terms for any position
-    int maxSz=1;
-    if (multival) {
-      for (List lst : arrLst) {
-        maxSz = Math.max(lst.size(), maxSz);
-      }
-    }
-
-
-    for (int idx=0; idx<maxSz; idx++) {
-      out.println("<tr>");
-      if (idx==0 && verbose) {
-        if (header != null) {
-          out.print("<th NOWRAP rowspan=\""+maxSz+"\">");
-          XML.escapeCharData(header,out);
-          out.println("</th>");
-        }
-      }
-
-      for (int posIndex=0; posIndex<arrLst.length; posIndex++) {
-        List<Tok> lst = arrLst[posIndex];
-        if (lst.size() <= idx) continue;
-        if (match!=null && match.contains(lst.get(idx))) {
-          out.print("<td class=\"highlight\"");
-        } else {
-          out.print("<td class=\"debugdata\"");
-        }
-
-        // if the last value in the column, use up
-        // the rest of the space via rowspan.
-        if (lst.size() == idx+1 && lst.size() < maxSz) {
-          out.print("rowspan=\""+(maxSz-lst.size()+1)+'"');
-        }
-
-        out.print('>');
-
-        XML.escapeCharData(converter.toStr(lst.get(idx)), out);
-        out.print("</td>");
-      }
-
-      out.println("</tr>");
-    }
-
-  }
-
-
-
-  static void writeHeader(JspWriter out, Class clazz, Map<String,String> args) throws IOException {
-    out.print("<h4>");
-    out.print(clazz.getName());
-    XML.escapeCharData("   "+args,out);
-    out.println("</h4>");
-  }
-
-
-
-  // readable, raw, pos, type, start/end
-  static void writeTokens(JspWriter out, List<Token> tokens, final FieldType ft, boolean verbose, Set<Tok> match) throws IOException {
-
-    // Use a map to tell what tokens are in what positions
-    // because some tokenizers/filters may do funky stuff with
-    // very large increments, or negative increments.
-    HashMap<Integer,List<Tok>> map = new HashMap<Integer,List<Tok>>();
-    boolean needRaw=false;
-    int pos=0;
-    for (Token t : tokens) {
-      if (!t.termText().equals(ft.indexedToReadable(t.termText()))) {
-        needRaw=true;
-      }
-
-      pos += t.getPositionIncrement();
-      List lst = map.get(pos);
-      if (lst==null) {
-        lst = new ArrayList(1);
-        map.put(pos,lst);
-      }
-      Tok tok = new Tok(t,pos);
-      lst.add(tok);
-    }
-
-    List<Tok>[] arr = (List<Tok>[])map.values().toArray(new ArrayList[map.size()]);
-
-    /* Jetty 6.1.3 miscompiles this generics version...
-    Arrays.sort(arr, new Comparator<List<Tok>>() {
-      public int compare(List<Tok> toks, List<Tok> toks1) {
-        return toks.get(0).pos - toks1.get(0).pos;
-      }
-    }
-    */
-
-    Arrays.sort(arr, new Comparator() {
-      public int compare(Object toks, Object toks1) {
-        return ((List<Tok>)toks).get(0).pos - ((List<Tok>)toks1).get(0).pos;
-      }
-    }
-
-
-    );
-
-    out.println("<table width=\"auto\" class=\"analysis\" border=\"1\">");
-
-    if (verbose) {
-      printRow(out,"term position", arr, new ToStr() {
-        public String toStr(Object o) {
-          return Integer.toString(((Tok)o).pos);
-        }
-      }
-              ,false
-              ,verbose
-              ,null);
-    }
-
-
-    printRow(out,"term text", arr, new ToStr() {
-      public String toStr(Object o) {
-        return ft.indexedToReadable( ((Tok)o).token.termText() );
-      }
-    }
-            ,true
-            ,verbose
-            ,match
-   );
-
-    if (needRaw) {
-      printRow(out,"raw text", arr, new ToStr() {
-        public String toStr(Object o) {
-          // page is UTF-8, so anything goes.
-          return ((Tok)o).token.termText();
-        }
-      }
-              ,true
-              ,verbose
-              ,match
-      );
-    }
-
-    if (verbose) {
-      printRow(out,"term type", arr, new ToStr() {
-        public String toStr(Object o) {
-          String tt =  ((Tok)o).token.type();
-          if (tt == null) {
-             return "null";
-          } else {
-             return tt;
-          }
-        }
-      }
-              ,true
-              ,verbose,
-              null
-      );
-    }
-
-    if (verbose) {
-      printRow(out,"source start,end", arr, new ToStr() {
-        public String toStr(Object o) {
-          Token t = ((Tok)o).token;
-          return Integer.toString(t.startOffset()) + ',' + t.endOffset() ;
-        }
-      }
-              ,true
-              ,verbose
-              ,null
-      );
-    }
-
-    out.println("</table>");
-  }
-
-%>
diff --git a/src/webapp/resources/admin/analysis.xsl b/src/webapp/resources/admin/analysis.xsl
deleted file mode 100644
index e2b48f2..0000000
--- a/src/webapp/resources/admin/analysis.xsl
+++ /dev/null
@@ -1,177 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<!-- $Id$ -->
-<!-- $URL$ -->
-
-<xsl:stylesheet
-  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-  version="1.0">
-
-  <xsl:output
-    method="html"
-    indent="yes"
-    doctype-public="-//W3C//DTD HTML 4.01//EN"
-    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
-
-  <xsl:template match="/">
-    <html>
-      <head>
-        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
-        <link rel="icon" href="/favicon.ico" type="image/ico"></link>
-        <link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
-        <title>SOLR Info</title>
-      </head>
-      <body>
-        <a href="">
-          <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR"/>
-  </a>
-        <h1>Solr Admin (<xsl:value-of select="solr/meta/collection" />)</h1>
-        <div style="margin-top: 1em;">
-          <h2>Field Analysis</h2>
-          <xsl:apply-templates/>
-          <a href=".">Return to Admin Page</a>
-        </div>
-      </body>
-    </html>
-  </xsl:template>
-
-  <xsl:include href="meta.xsl"/>
-
-  <xsl:template match="solr/analysis/form">
-  <form method="POST" action="analysis.jsp">
-    <table>
-      <tr>
-        <td>
-        <strong>Field name</strong>
-        </td>
-        <td>
-          <input class="std" name="name" type="text" value="{field}"/>
-        </td>
-      </tr>
-      <tr>
-        <td>
-        <strong>Field value (Index)</strong>
-        <br/>
-        verbose output <input name="verbose" type="checkbox" checked="true"/>
-        <br/>
-        highlight matches <input name="highlight" type="checkbox" checked="true"/>
-        </td>
-        <td>
-        <textarea class="std" rows="8" cols="70" name="val"><xsl:value-of select="fieldIndexValue" /></textarea>
-        </td>
-      </tr>
-      <tr>
-        <td>
-        <strong>Field value (Query)</strong>
-        <br/>
-        verbose output <input name="qverbose" type="checkbox" checked="true"/>
-        </td>
-        <td>
-        <textarea class="std" rows="1" cols="70" name="qval"><xsl:value-of select="fieldQueryValue" /></textarea>
-        </td>
-      </tr>
-      <tr>
-        <td>
-        </td>
-        <td>
-          <input class="stdbutton" type="submit" value="analyze"/>
-        </td>
-      </tr>
-    </table>
-  </form>
-</xsl:template>
-
-<xsl:template match="solr/analysis/results/indexAnalyzer">
-  <h4>Index Analyzer</h4>
-  <xsl:for-each select="factory">
-    <h5 style="margin-left: 1em;"><xsl:apply-templates select="@class"/></h5>
-    <xsl:apply-templates/>
-  </xsl:for-each>
-</xsl:template>
-
-<xsl:template match="solr/analysis/results/indexAnalyzer/factory/args">
-  <div style="margin-left: 2em; font-weight: bold;">{
-  <xsl:for-each select="arg">
-    <xsl:apply-templates select="@name"/>=<xsl:value-of select="."/>, 
-  </xsl:for-each>
-  }</div>
-</xsl:template>
-
-<xsl:template match="solr/analysis/results/indexAnalyzer/factory/tokens">
-<div style="margin-left: 2em;">
-  <table width="auto" class="analysis" border="1">
-    <tr>
-      <th>text</th>
-      <th>type</th>
-      <th>position</th>
-      <th>start</th>
-      <th>end</th>
-    </tr>
-  <xsl:for-each select="token">
-    <tr>
-      <td><xsl:value-of select="."/></td>
-      <td><xsl:apply-templates select="@type"/></td>
-      <td><xsl:apply-templates select="@pos"/></td>
-      <td><xsl:apply-templates select="@start"/></td>
-      <td><xsl:apply-templates select="@end"/></td>
-    </tr>
-  </xsl:for-each>
-  </table>
-</div>
-</xsl:template>
-
-<xsl:template match="solr/analysis/results/queryAnalyzer">
-  <h4>Query Analyzer</h4>
-  <xsl:for-each select="factory">
-    <h5 style="margin-left: 1em;"><xsl:apply-templates select="@class"/></h5>
-    <xsl:apply-templates/>
-  </xsl:for-each>
-</xsl:template>
-
-<xsl:template match="solr/analysis/results/queryAnalyzer/factory/args">
-  <div style="margin-left: 2em; font-weight: bold;">{
-  <xsl:for-each select="arg">
-    <xsl:apply-templates select="@name"/>=<xsl:value-of select="."/>, 
-  </xsl:for-each>
-  }</div>
-</xsl:template>
-
-<xsl:template match="solr/analysis/results/queryAnalyzer/factory/tokens">
-<div style="margin-left: 2em;">
-  <table width="auto" class="analysis" border="1">
-    <tr>
-      <th>text</th>
-      <th>type</th>
-      <th>position</th>
-      <th>start</th>
-      <th>end</th>
-    </tr>
-  <xsl:for-each select="token">
-    <tr>
-      <td><xsl:value-of select="."/></td>
-      <td><xsl:apply-templates select="@type"/></td>
-      <td><xsl:apply-templates select="@pos"/></td>
-      <td><xsl:apply-templates select="@start"/></td>
-      <td><xsl:apply-templates select="@end"/></td>
-    </tr>
-  </xsl:for-each>
-  </table>
-</div>
-</xsl:template>
-
-</xsl:stylesheet>
diff --git a/src/webapp/resources/admin/distributiondump.jsp b/src/webapp/resources/admin/distributiondump.jsp
deleted file mode 100644
index 71cb416..0000000
--- a/src/webapp/resources/admin/distributiondump.jsp
+++ /dev/null
@@ -1,158 +0,0 @@
-<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-
-<%@ page import="org.apache.solr.core.SolrCore,
-                 org.apache.solr.schema.IndexSchema,
-                 java.io.BufferedReader,
-                 java.io.File,
-                 java.io.FilenameFilter,
-                 java.io.FileReader,
-                 java.net.InetAddress,
-                 java.net.UnknownHostException,
-                 java.util.Date"%>
-
-<%@include file="header.jsp" %>
-
-<%
-  File slaveinfo = new File(solrHome + "logs/snappuller.status");
-
-  StringBuffer buffer = new StringBuffer();
-  StringBuffer buffer2 = new StringBuffer();
-  String mode = "";
-
-  if (slaveinfo.canRead()) {
-    // Slave instance
-    mode = "Slave";
-    File slavevers = new File(solrHome + "logs/snapshot.current");
-    BufferedReader inforeader = new BufferedReader(new FileReader(slaveinfo));
-    BufferedReader versreader = new BufferedReader(new FileReader(slavevers));
-    buffer.append("<tr>\n" +
-                    "<td>\n" +
-                      "Version:" +
-                    "</td>\n" +
-                    "<td>\n")
-          .append(    versreader.readLine())
-          .append(  "<td>\n" +
-                    "</td>\n" +
-                  "</tr>\n" +
-                  "<tr>\n" +
-                    "<td>\n" +
-                      "Status:" +
-                    "</td>\n" +
-                    "<td>\n")
-          .append(    inforeader.readLine())
-          .append(  "</td>\n" +
-                  "</tr>\n");
-  } else {
-    // Master instance
-    mode = "Master";
-    File masterdir = new File(solrHome + "logs/clients");
-    FilenameFilter sfilter = new FilenameFilter() {
-        public boolean accept(File dir, String name) {
-            return name.startsWith("snapshot.status");
-        }
-    };
-    FilenameFilter cfilter = new FilenameFilter() {
-        public boolean accept(File dir, String name) {
-            return name.startsWith("snapshot.current");
-        }
-    };
-    File[] clients = masterdir.listFiles(cfilter);
-    if (clients == null) {
-      buffer.append("<tr>\n" +
-                      "<td>\n" +
-                      "</td>\n" +
-                      "<td>\n" +
-                        "No distribution info present" +
-                      "</td>\n" +
-                    "</tr>\n");
-    } else {
-      buffer.append("<h4>Client Snapshot In Use:</h4>\n" +
-                    "<tr>\n" +
-                      "<th>\n" +
-                      "Client" +
-                      "</th>\n" +
-                      "<th>\n" +
-                      "Version" +
-                      "</th>\n" +
-                    "</tr>\n");
-      int i = 0;
-      while (i < clients.length) {
-        String fileName=clients[i].toString();
-        int p=fileName.indexOf("snapshot.current");
-        String clientName=fileName.substring(p+17);
-        BufferedReader reader = new BufferedReader(new FileReader(clients[i]));
-        buffer.append("<tr>\n" +
-                        "<td>\n" +
-                        clientName +
-                        "</td>\n" +
-                        "<td>\n")
-              .append(    reader.readLine())
-              .append(  "</td>\n" +
-                      "</tr>\n" +
-                      "<tr>\n" +
-                      "</tr>\n");
-        i++;
-      }
-      clients = masterdir.listFiles(sfilter);
-      if (clients!=null) {
-        buffer.append("</table>\n" +
-                      "<h4>Client Snapshot Distribution Status:</h4>\n" +
-                      "<table>\n" +
-                      "<tr>\n" +
-                        "<th>\n" +
-                        "Client" +
-                        "</th>\n" +
-                        "<th>\n" +
-                        "Status" +
-                        "</th>\n" +
-                      "</tr>\n");
-        i = 0;
-        while (i < clients.length) {
-          String fileName=clients[i].toString();
-          int p=fileName.indexOf("snapshot.status");
-          String clientName=fileName.substring(p+16);
-          BufferedReader reader = new BufferedReader(new FileReader(clients[i]));
-          buffer.append("<tr>\n" +
-                          "<td>\n" +
-                          clientName +
-                          "</td>\n" +
-                          "<td>\n")
-                .append(    reader.readLine())
-                .append(  "</td>\n" +
-                        "</tr>\n" +
-                        "<tr>\n" +
-                        "</tr>\n");
-          i++;
-        }
-      }
-    }
-  }
-%>
-
-
-<br clear="all">
-<h2>Distribution Info</h2>
-<h3><%= mode %> Server</h3>
-<table>
-<%= buffer %>
-</table>
-<br><br>
-    <a href=".">Return to Admin Page</a>
-</body>
-</html>
diff --git a/src/webapp/resources/admin/favicon.ico b/src/webapp/resources/admin/favicon.ico
deleted file mode 100755
index 8a77d4f..0000000
Binary files a/src/webapp/resources/admin/favicon.ico and /dev/null differ
diff --git a/src/webapp/resources/admin/form.jsp b/src/webapp/resources/admin/form.jsp
deleted file mode 100644
index 88877f7..0000000
--- a/src/webapp/resources/admin/form.jsp
+++ /dev/null
@@ -1,129 +0,0 @@
-<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@include file="header.jsp" %>
-
-<br clear="all">
-<form name="queryForm" method="GET" action="../select">
-<!-- these are good defaults to have if people bookmark the resulting
-     URLs, but they should not show up in the form since they are very
-     output type specific.
-  -->
-<input name="indent" type="hidden" value="on">
-<input name="version" type="hidden" value="2.2">
-
-<table>
-<tr>
-  <td>
-	<strong>Solr/Lucene Statement</strong>
-  </td>
-  <td>
-	<textarea rows="5" cols="60" name="q"><%= defaultSearch %></textarea>
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Start Row</strong>
-  </td>
-  <td>
-	<input name="start" type="text" value="0">
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Maximum Rows Returned</strong>
-  </td>
-  <td>
-	<input name="rows" type="text" value="10">
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Fields to Return</strong>
-  </td>
-  <td>
-	<input name="fl" type="text" value="*,score">
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Query Type</strong>
-  </td>
-  <td>
-	<input name="qt" type="text" value="standard">
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Output Type</strong>
-  </td>
-  <td>
-	<input name="wt" type="text" value="standard">
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Debug: enable</strong>
-  </td>
-  <td>
-	<input name="debugQuery" type="checkbox" >
-  <em><font size="-1">  Note: you may need to "view source" in your browser to see explain() correctly indented.</font></em>
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Debug: explain others</strong>
-  </td>
-  <td>
-	<input name="explainOther" type="text" >
-  <em><font size="-1">  Apply original query scoring to matches of this query to see how they compare.</font></em>
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Enable Highlighting</strong>
-  </td>
-  <td>
-	<input name="hl" type="checkbox" >
-  </td>
-</tr>
-<tr>
-  <td>
-	<strong>Fields to Highlight</strong>
-  </td>
-  <td>
-	<input name="hl.fl" type="text" >
-  </td>
-</tr>
-<tr>
-  <td>
-  </td>
-  <td>
-    <input class="stdbutton" type="submit" value="search" onclick="if (queryForm.q.value.length==0) { alert('no empty queries, please'); return false; } else { queryForm.submit(); } ">
-  </td>
-</tr>
-</table>
-</form>
-<br clear="all">
-<em>
-This form demonstrates the most common query options available for the
-built in Query Types.  Please consult the Solr Wiki for additional
-Query Parameters.
-</em>
-
-</body>
-</html>
diff --git a/src/webapp/resources/admin/get-file.jsp b/src/webapp/resources/admin/get-file.jsp
deleted file mode 100644
index 74ad4bc..0000000
--- a/src/webapp/resources/admin/get-file.jsp
+++ /dev/null
@@ -1,72 +0,0 @@
-<%@ page contentType="text/plain; charset=utf-8" pageEncoding="UTF-8" %>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.solr.core.Config,
-                 org.apache.solr.core.SolrCore,
-                 org.apache.solr.core.SolrConfig,
-                 java.io.InputStream,
-                 java.io.InputStreamReader,
-                 java.io.Reader,
-                 java.util.StringTokenizer,
-                 java.util.logging.Logger"%>
-<%!
-  static Logger log = Logger.getLogger(SolrCore.class.getName());
-%>
-<%
-  // NOTE -- this file will be removed in a future release
-  log.warning("Using deprecated JSP: " + request.getRequestURL().append("?").append(request.getQueryString()) + " -- check the ShowFileRequestHandler"  );
-
-  Object ocore = request.getAttribute("org.apache.solr.SolrCore");
-  SolrCore core = ocore instanceof SolrCore? (SolrCore) ocore : SolrCore.getSolrCore();
-  String fname = request.getParameter("file");
-  String optional = request.getParameter("optional");
-  String gettableFiles = core.getSolrConfig().get("admin/gettableFiles","");
-  StringTokenizer st = new StringTokenizer(gettableFiles);
-  InputStream is;
-  boolean isValid = false;
-  boolean isOptional = false;
-  if (fname != null) {
-    // Validate fname
-    while(st.hasMoreTokens()) {
-      if (st.nextToken().compareTo(fname) == 0) isValid = true;
-    }
-  }
-  if (optional!=null && optional.equalsIgnoreCase("y")) {
-    isOptional=true;
-  }
-  if (isValid) {
-    try {
-    is= core.getSolrConfig().openResource(fname);
-    Reader input = new InputStreamReader(is);
-    char[] buf = new char[4096];
-    while (true) {
-      int len = input.read(buf);
-      if (len<=0) break;
-      out.write(buf,0,len);
-    }
-    }
-    catch (RuntimeException re) {
-      if (!isOptional) {
-        throw re;
-      }
-    }
-  } else {
-    out.println("<ERROR>");
-    out.println("Permission denied for file "+ fname);
-    out.println("</ERROR>");
-  }
-%>
diff --git a/src/webapp/resources/admin/get-properties.jsp b/src/webapp/resources/admin/get-properties.jsp
deleted file mode 100644
index 50eb668..0000000
--- a/src/webapp/resources/admin/get-properties.jsp
+++ /dev/null
@@ -1,24 +0,0 @@
-<%@ page contentType="text/plain;charset=UTF-8" language="java" %>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%
-  java.util.Enumeration e = System.getProperties().propertyNames();
-  while(e.hasMoreElements()) {
-    String prop = (String)e.nextElement();
-    out.println(prop + " = " + System.getProperty(prop));
-  }
-%>
\ No newline at end of file
diff --git a/src/webapp/resources/admin/header.jsp b/src/webapp/resources/admin/header.jsp
deleted file mode 100644
index 6b61547..0000000
--- a/src/webapp/resources/admin/header.jsp
+++ /dev/null
@@ -1,37 +0,0 @@
-<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@include file="_info.jsp" %>
-<script>
-var host_name="<%= hostname %>"
-</script>
-
-<html>
-<head>
-<link rel="stylesheet" type="text/css" href="solr-admin.css">
-<link rel="icon" href="favicon.ico" type="image/ico"></link>
-<link rel="shortcut icon" href="favicon.ico" type="image/ico"></link>
-<title>Solr admin page</title>
-</head>
-
-<body>
-<a href="."><img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="Solr"></a>
-<h1>Solr Admin (<%= collectionName %>)
-<%= enabledStatus==null ? "" : (isEnabled ? " - Enabled" : " - Disabled") %> </h1>
-
-<%= hostname %>:<%= port %><br/>
-cwd=<%= cwd %>  SolrHome=<%= solrHome %>
diff --git a/src/webapp/resources/admin/index.jsp b/src/webapp/resources/admin/index.jsp
deleted file mode 100644
index 21a8f3c..0000000
--- a/src/webapp/resources/admin/index.jsp
+++ /dev/null
@@ -1,149 +0,0 @@
-<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-
-<%-- $Id$ --%>
-<%-- $Source: /cvs/main/searching/SolrServer/resources/admin/index.jsp,v $ --%>
-<%-- $Name:  $ --%>
-
-<%@ page import="java.util.Date" %>
-
-<%-- jsp:include page="header.jsp"/ --%>
-<%-- do a verbatim include so we can use the local vars --%>
-<%@include file="header.jsp" %>
-
-<br clear="all">
-<table>
-
-<tr>
-  <td>
-	<h3>Solr</h3>
-  </td>
-  <td>
-    [<a href="file/?file=<%=core.getSchemaFile()%>">Schema</a>]
-    [<a href="file/?file=<%=core.getConfigFile()%>">Config</a>]
-    [<a href="analysis.jsp?highlight=on">Analysis</a>]
-    [<a href="schema.jsp">Schema Browser</a>]
-    <br>
-    [<a href="stats.jsp">Statistics</a>]
-    [<a href="registry.jsp">Info</a>]
-    [<a href="distributiondump.jsp">Distribution</a>]
-    [<a href="ping">Ping</a>]
-    [<a href="logging.jsp">Logging</a>]
-  </td>
-</tr>
-
-<%-- List the cores (that arent this one) so we can switch --%>
-<% java.util.Collection<SolrCore> cores = org.apache.solr.core.SolrMultiCore.getInstance().getCores();
-if (cores.size() > 1) {%><tr><td><strong>Cores:</strong><br></td><td><%
-  java.util.Iterator<SolrCore> icore = cores.iterator();
-  while (icore.hasNext()) {
-    SolrCore acore = icore.next();
-    if (acore == core) continue;
-    %>[<a href="../../<%=acore.getName()%>/admin/"><%=acore.getName()%></a>]<%         
-  }%></td></tr><%
-}%>
-
-<tr>
-  <td>
-    <strong>App server:</strong><br>
-  </td>
-  <td>
-    [<a href="get-properties.jsp">Java Properties</a>]
-    [<a href="threaddump.jsp">Thread Dump</a>]
-  <%
-    if (enabledFile!=null)
-    if (isEnabled) {
-  %>
-  [<a href="action.jsp?action=Disable">Disable</a>]
-  <%
-    } else {
-  %>
-  [<a href="action.jsp?action=Enable">Enable</a>]
-  <%
-    }
-  %>
-  </td>
-</tr>
-
-
-<%
- // a quick hack to get rid of get-file.jsp -- note this still spits out invalid HTML
- out.write( org.apache.solr.handler.admin.ShowFileRequestHandler.getFileContents( "admin-extra.html" ) );
-%>
-
-</table><P>
-
-
-<table>
-<tr>
-  <td>
-	<h3>Make a Query</h3>
-  </td>
-  <td>
-[<a href="form.jsp">Full Interface</a>]
-  </td>
-  
-</tr>
-<tr>
-  <td>
-  Query String:
-  </td>
-  <td colspan=2>
-	<form name=queryForm method="GET" action="../select/">
-        <textarea class="std" rows="4" cols="40" name="q"><%= defaultSearch %></textarea>
-        <input name="version" type="hidden" value="2.2">
-	<input name="start" type="hidden" value="0">
-	<input name="rows" type="hidden" value="10">
-	<input name="indent" type="hidden" value="on">
-        <br><input class="stdbutton" type="submit" value="search" 
-        	onclick="if (queryForm.q.value.length==0) { alert('no empty queries, please'); return false; } else { queryForm.submit(); } ">
-	</form>
-  </td>
-</tr>
-</table><p>
-
-<table>
-<tr>
-  <td>
-	<h3>Assistance</h3>
-  </td>
-  <td>
-	[<a href="http://lucene.apache.org/solr/">Documentation</a>]
-	[<a href="http://issues.apache.org/jira/browse/SOLR">Issue Tracker</a>]
-	[<a href="mailto:solr-user@lucene.apache.org">Send Email</a>]
-	<br>
-        [<a href="http://wiki.apache.org/solr/SolrQuerySyntax">Solr Query Syntax</a>]
-  </td>
-</tr>
-<tr>
-  <td>
-  </td>
-  <td>
-  Current Time: <%= new Date() %>
-  </td>
-</tr>
-<tr>
-  <td>
-  </td>
-  <td>
-  Server Start At: <%= new Date(core.getStartTime()) %>
-  </td>
-</tr>
-</table>
-</body>
-</html>
diff --git a/src/webapp/resources/admin/jquery-1.2.3.min.js b/src/webapp/resources/admin/jquery-1.2.3.min.js
deleted file mode 100644
index 3747929..0000000
--- a/src/webapp/resources/admin/jquery-1.2.3.min.js
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * jQuery 1.2.3 - New Wave Javascript
- *
- * Copyright (c) 2008 John Resig (jquery.com)
- * Dual licensed under the MIT (MIT-LICENSE.txt)
- * and GPL (GPL-LICENSE.txt) licenses.
- *
- * $Date: 2008-02-06 00:21:25 -0500 (Wed, 06 Feb 2008) $
- * $Rev: 4663 $
- */
-(function(){if(window.jQuery)var _jQuery=window.jQuery;var jQuery=window.jQuery=function(selector,context){return new jQuery.prototype.init(selector,context);};if(window.$)var _$=window.$;window.$=jQuery;var quickExpr=/^[^<]*(<(.|\s)+>)[^>]*$|^#(\w+)$/;var isSimple=/^.[^:#\[\.]*$/;jQuery.fn=jQuery.prototype={init:function(selector,context){selector=selector||document;if(selector.nodeType){this[0]=selector;this.length=1;return this;}else if(typeof selector=="string"){var match=quickExpr.exec(selector);if(match&&(match[1]||!context)){if(match[1])selector=jQuery.clean([match[1]],context);else{var elem=document.getElementById(match[3]);if(elem)if(elem.id!=match[3])return jQuery().find(selector);else{this[0]=elem;this.length=1;return this;}else
-selector=[];}}else
-return new jQuery(context).find(selector);}else if(jQuery.isFunction(selector))return new jQuery(document)[jQuery.fn.ready?"ready":"load"](selector);return this.setArray(selector.constructor==Array&&selector||(selector.jquery||selector.length&&selector!=window&&!selector.nodeType&&selector[0]!=undefined&&selector[0].nodeType)&&jQuery.makeArray(selector)||[selector]);},jquery:"1.2.3",size:function(){return this.length;},length:0,get:function(num){return num==undefined?jQuery.makeArray(this):this[num];},pushStack:function(elems){var ret=jQuery(elems);ret.prevObject=this;return ret;},setArray:function(elems){this.length=0;Array.prototype.push.apply(this,elems);return this;},each:function(callback,args){return jQuery.each(this,callback,args);},index:function(elem){var ret=-1;this.each(function(i){if(this==elem)ret=i;});return ret;},attr:function(name,value,type){var options=name;if(name.constructor==String)if(value==undefined)return this.length&&jQuery[type||"attr"](this[0],name)||undefined;else{options={};options[name]=value;}return this.each(function(i){for(name in options)jQuery.attr(type?this.style:this,name,jQuery.prop(this,options[name],type,i,name));});},css:function(key,value){if((key=='width'||key=='height')&&parseFloat(value)<0)value=undefined;return this.attr(key,value,"curCSS");},text:function(text){if(typeof text!="object"&&text!=null)return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(text));var ret="";jQuery.each(text||this,function(){jQuery.each(this.childNodes,function(){if(this.nodeType!=8)ret+=this.nodeType!=1?this.nodeValue:jQuery.fn.text([this]);});});return ret;},wrapAll:function(html){if(this[0])jQuery(html,this[0].ownerDocument).clone().insertBefore(this[0]).map(function(){var elem=this;while(elem.firstChild)elem=elem.firstChild;return elem;}).append(this);return this;},wrapInner:function(html){return this.each(function(){jQuery(this).contents().wrapAll(html);});},wrap:function(html){return this.each(function(){jQuery(this).wrapAll(html);});},append:function(){return this.domManip(arguments,true,false,function(elem){if(this.nodeType==1)this.appendChild(elem);});},prepend:function(){return this.domManip(arguments,true,true,function(elem){if(this.nodeType==1)this.insertBefore(elem,this.firstChild);});},before:function(){return this.domManip(arguments,false,false,function(elem){this.parentNode.insertBefore(elem,this);});},after:function(){return this.domManip(arguments,false,true,function(elem){this.parentNode.insertBefore(elem,this.nextSibling);});},end:function(){return this.prevObject||jQuery([]);},find:function(selector){var elems=jQuery.map(this,function(elem){return jQuery.find(selector,elem);});return this.pushStack(/[^+>] [^+>]/.test(selector)||selector.indexOf("..")>-1?jQuery.unique(elems):elems);},clone:function(events){var ret=this.map(function(){if(jQuery.browser.msie&&!jQuery.isXMLDoc(this)){var clone=this.cloneNode(true),container=document.createElement("div");container.appendChild(clone);return jQuery.clean([container.innerHTML])[0];}else
-return this.cloneNode(true);});var clone=ret.find("*").andSelf().each(function(){if(this[expando]!=undefined)this[expando]=null;});if(events===true)this.find("*").andSelf().each(function(i){if(this.nodeType==3)return;var events=jQuery.data(this,"events");for(var type in events)for(var handler in events[type])jQuery.event.add(clone[i],type,events[type][handler],events[type][handler].data);});return ret;},filter:function(selector){return this.pushStack(jQuery.isFunction(selector)&&jQuery.grep(this,function(elem,i){return selector.call(elem,i);})||jQuery.multiFilter(selector,this));},not:function(selector){if(selector.constructor==String)if(isSimple.test(selector))return this.pushStack(jQuery.multiFilter(selector,this,true));else
-selector=jQuery.multiFilter(selector,this);var isArrayLike=selector.length&&selector[selector.length-1]!==undefined&&!selector.nodeType;return this.filter(function(){return isArrayLike?jQuery.inArray(this,selector)<0:this!=selector;});},add:function(selector){return!selector?this:this.pushStack(jQuery.merge(this.get(),selector.constructor==String?jQuery(selector).get():selector.length!=undefined&&(!selector.nodeName||jQuery.nodeName(selector,"form"))?selector:[selector]));},is:function(selector){return selector?jQuery.multiFilter(selector,this).length>0:false;},hasClass:function(selector){return this.is("."+selector);},val:function(value){if(value==undefined){if(this.length){var elem=this[0];if(jQuery.nodeName(elem,"select")){var index=elem.selectedIndex,values=[],options=elem.options,one=elem.type=="select-one";if(index<0)return null;for(var i=one?index:0,max=one?index+1:options.length;i<max;i++){var option=options[i];if(option.selected){value=jQuery.browser.msie&&!option.attributes.value.specified?option.text:option.value;if(one)return value;values.push(value);}}return values;}else
-return(this[0].value||"").replace(/\r/g,"");}return undefined;}return this.each(function(){if(this.nodeType!=1)return;if(value.constructor==Array&&/radio|checkbox/.test(this.type))this.checked=(jQuery.inArray(this.value,value)>=0||jQuery.inArray(this.name,value)>=0);else if(jQuery.nodeName(this,"select")){var values=value.constructor==Array?value:[value];jQuery("option",this).each(function(){this.selected=(jQuery.inArray(this.value,values)>=0||jQuery.inArray(this.text,values)>=0);});if(!values.length)this.selectedIndex=-1;}else
-this.value=value;});},html:function(value){return value==undefined?(this.length?this[0].innerHTML:null):this.empty().append(value);},replaceWith:function(value){return this.after(value).remove();},eq:function(i){return this.slice(i,i+1);},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments));},map:function(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem);}));},andSelf:function(){return this.add(this.prevObject);},data:function(key,value){var parts=key.split(".");parts[1]=parts[1]?"."+parts[1]:"";if(value==null){var data=this.triggerHandler("getData"+parts[1]+"!",[parts[0]]);if(data==undefined&&this.length)data=jQuery.data(this[0],key);return data==null&&parts[1]?this.data(parts[0]):data;}else
-return this.trigger("setData"+parts[1]+"!",[parts[0],value]).each(function(){jQuery.data(this,key,value);});},removeData:function(key){return this.each(function(){jQuery.removeData(this,key);});},domManip:function(args,table,reverse,callback){var clone=this.length>1,elems;return this.each(function(){if(!elems){elems=jQuery.clean(args,this.ownerDocument);if(reverse)elems.reverse();}var obj=this;if(table&&jQuery.nodeName(this,"table")&&jQuery.nodeName(elems[0],"tr"))obj=this.getElementsByTagName("tbody")[0]||this.appendChild(this.ownerDocument.createElement("tbody"));var scripts=jQuery([]);jQuery.each(elems,function(){var elem=clone?jQuery(this).clone(true)[0]:this;if(jQuery.nodeName(elem,"script")){scripts=scripts.add(elem);}else{if(elem.nodeType==1)scripts=scripts.add(jQuery("script",elem).remove());callback.call(obj,elem);}});scripts.each(evalScript);});}};jQuery.prototype.init.prototype=jQuery.prototype;function evalScript(i,elem){if(elem.src)jQuery.ajax({url:elem.src,async:false,dataType:"script"});else
-jQuery.globalEval(elem.text||elem.textContent||elem.innerHTML||"");if(elem.parentNode)elem.parentNode.removeChild(elem);}jQuery.extend=jQuery.fn.extend=function(){var target=arguments[0]||{},i=1,length=arguments.length,deep=false,options;if(target.constructor==Boolean){deep=target;target=arguments[1]||{};i=2;}if(typeof target!="object"&&typeof target!="function")target={};if(length==1){target=this;i=0;}for(;i<length;i++)if((options=arguments[i])!=null)for(var name in options){if(target===options[name])continue;if(deep&&options[name]&&typeof options[name]=="object"&&target[name]&&!options[name].nodeType)target[name]=jQuery.extend(target[name],options[name]);else if(options[name]!=undefined)target[name]=options[name];}return target;};var expando="jQuery"+(new Date()).getTime(),uuid=0,windowData={};var exclude=/z-?index|font-?weight|opacity|zoom|line-?height/i;jQuery.extend({noConflict:function(deep){window.$=_$;if(deep)window.jQuery=_jQuery;return jQuery;},isFunction:function(fn){return!!fn&&typeof fn!="string"&&!fn.nodeName&&fn.constructor!=Array&&/function/i.test(fn+"");},isXMLDoc:function(elem){return elem.documentElement&&!elem.body||elem.tagName&&elem.ownerDocument&&!elem.ownerDocument.body;},globalEval:function(data){data=jQuery.trim(data);if(data){var head=document.getElementsByTagName("head")[0]||document.documentElement,script=document.createElement("script");script.type="text/javascript";if(jQuery.browser.msie)script.text=data;else
-script.appendChild(document.createTextNode(data));head.appendChild(script);head.removeChild(script);}},nodeName:function(elem,name){return elem.nodeName&&elem.nodeName.toUpperCase()==name.toUpperCase();},cache:{},data:function(elem,name,data){elem=elem==window?windowData:elem;var id=elem[expando];if(!id)id=elem[expando]=++uuid;if(name&&!jQuery.cache[id])jQuery.cache[id]={};if(data!=undefined)jQuery.cache[id][name]=data;return name?jQuery.cache[id][name]:id;},removeData:function(elem,name){elem=elem==window?windowData:elem;var id=elem[expando];if(name){if(jQuery.cache[id]){delete jQuery.cache[id][name];name="";for(name in jQuery.cache[id])break;if(!name)jQuery.removeData(elem);}}else{try{delete elem[expando];}catch(e){if(elem.removeAttribute)elem.removeAttribute(expando);}delete jQuery.cache[id];}},each:function(object,callback,args){if(args){if(object.length==undefined){for(var name in object)if(callback.apply(object[name],args)===false)break;}else
-for(var i=0,length=object.length;i<length;i++)if(callback.apply(object[i],args)===false)break;}else{if(object.length==undefined){for(var name in object)if(callback.call(object[name],name,object[name])===false)break;}else
-for(var i=0,length=object.length,value=object[0];i<length&&callback.call(value,i,value)!==false;value=object[++i]){}}return object;},prop:function(elem,value,type,i,name){if(jQuery.isFunction(value))value=value.call(elem,i);return value&&value.constructor==Number&&type=="curCSS"&&!exclude.test(name)?value+"px":value;},className:{add:function(elem,classNames){jQuery.each((classNames||"").split(/\s+/),function(i,className){if(elem.nodeType==1&&!jQuery.className.has(elem.className,className))elem.className+=(elem.className?" ":"")+className;});},remove:function(elem,classNames){if(elem.nodeType==1)elem.className=classNames!=undefined?jQuery.grep(elem.className.split(/\s+/),function(className){return!jQuery.className.has(classNames,className);}).join(" "):"";},has:function(elem,className){return jQuery.inArray(className,(elem.className||elem).toString().split(/\s+/))>-1;}},swap:function(elem,options,callback){var old={};for(var name in options){old[name]=elem.style[name];elem.style[name]=options[name];}callback.call(elem);for(var name in options)elem.style[name]=old[name];},css:function(elem,name,force){if(name=="width"||name=="height"){var val,props={position:"absolute",visibility:"hidden",display:"block"},which=name=="width"?["Left","Right"]:["Top","Bottom"];function getWH(){val=name=="width"?elem.offsetWidth:elem.offsetHeight;var padding=0,border=0;jQuery.each(which,function(){padding+=parseFloat(jQuery.curCSS(elem,"padding"+this,true))||0;border+=parseFloat(jQuery.curCSS(elem,"border"+this+"Width",true))||0;});val-=Math.round(padding+border);}if(jQuery(elem).is(":visible"))getWH();else
-jQuery.swap(elem,props,getWH);return Math.max(0,val);}return jQuery.curCSS(elem,name,force);},curCSS:function(elem,name,force){var ret;function color(elem){if(!jQuery.browser.safari)return false;var ret=document.defaultView.getComputedStyle(elem,null);return!ret||ret.getPropertyValue("color")=="";}if(name=="opacity"&&jQuery.browser.msie){ret=jQuery.attr(elem.style,"opacity");return ret==""?"1":ret;}if(jQuery.browser.opera&&name=="display"){var save=elem.style.outline;elem.style.outline="0 solid black";elem.style.outline=save;}if(name.match(/float/i))name=styleFloat;if(!force&&elem.style&&elem.style[name])ret=elem.style[name];else if(document.defaultView&&document.defaultView.getComputedStyle){if(name.match(/float/i))name="float";name=name.replace(/([A-Z])/g,"-$1").toLowerCase();var getComputedStyle=document.defaultView.getComputedStyle(elem,null);if(getComputedStyle&&!color(elem))ret=getComputedStyle.getPropertyValue(name);else{var swap=[],stack=[];for(var a=elem;a&&color(a);a=a.parentNode)stack.unshift(a);for(var i=0;i<stack.length;i++)if(color(stack[i])){swap[i]=stack[i].style.display;stack[i].style.display="block";}ret=name=="display"&&swap[stack.length-1]!=null?"none":(getComputedStyle&&getComputedStyle.getPropertyValue(name))||"";for(var i=0;i<swap.length;i++)if(swap[i]!=null)stack[i].style.display=swap[i];}if(name=="opacity"&&ret=="")ret="1";}else if(elem.currentStyle){var camelCase=name.replace(/\-(\w)/g,function(all,letter){return letter.toUpperCase();});ret=elem.currentStyle[name]||elem.currentStyle[camelCase];if(!/^\d+(px)?$/i.test(ret)&&/^\d/.test(ret)){var style=elem.style.left,runtimeStyle=elem.runtimeStyle.left;elem.runtimeStyle.left=elem.currentStyle.left;elem.style.left=ret||0;ret=elem.style.pixelLeft+"px";elem.style.left=style;elem.runtimeStyle.left=runtimeStyle;}}return ret;},clean:function(elems,context){var ret=[];context=context||document;if(typeof context.createElement=='undefined')context=context.ownerDocument||context[0]&&context[0].ownerDocument||document;jQuery.each(elems,function(i,elem){if(!elem)return;if(elem.constructor==Number)elem=elem.toString();if(typeof elem=="string"){elem=elem.replace(/(<(\w+)[^>]*?)\/>/g,function(all,front,tag){return tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?all:front+"></"+tag+">";});var tags=jQuery.trim(elem).toLowerCase(),div=context.createElement("div");var wrap=!tags.indexOf("<opt")&&[1,"<select multiple='multiple'>","</select>"]||!tags.indexOf("<leg")&&[1,"<fieldset>","</fieldset>"]||tags.match(/^<(thead|tbody|tfoot|colg|cap)/)&&[1,"<table>","</table>"]||!tags.indexOf("<tr")&&[2,"<table><tbody>","</tbody></table>"]||(!tags.indexOf("<td")||!tags.indexOf("<th"))&&[3,"<table><tbody><tr>","</tr></tbody></table>"]||!tags.indexOf("<col")&&[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"]||jQuery.browser.msie&&[1,"div<div>","</div>"]||[0,"",""];div.innerHTML=wrap[1]+elem+wrap[2];while(wrap[0]--)div=div.lastChild;if(jQuery.browser.msie){var tbody=!tags.indexOf("<table")&&tags.indexOf("<tbody")<0?div.firstChild&&div.firstChild.childNodes:wrap[1]=="<table>"&&tags.indexOf("<tbody")<0?div.childNodes:[];for(var j=tbody.length-1;j>=0;--j)if(jQuery.nodeName(tbody[j],"tbody")&&!tbody[j].childNodes.length)tbody[j].parentNode.removeChild(tbody[j]);if(/^\s/.test(elem))div.insertBefore(context.createTextNode(elem.match(/^\s*/)[0]),div.firstChild);}elem=jQuery.makeArray(div.childNodes);}if(elem.length===0&&(!jQuery.nodeName(elem,"form")&&!jQuery.nodeName(elem,"select")))return;if(elem[0]==undefined||jQuery.nodeName(elem,"form")||elem.options)ret.push(elem);else
-ret=jQuery.merge(ret,elem);});return ret;},attr:function(elem,name,value){if(!elem||elem.nodeType==3||elem.nodeType==8)return undefined;var fix=jQuery.isXMLDoc(elem)?{}:jQuery.props;if(name=="selected"&&jQuery.browser.safari)elem.parentNode.selectedIndex;if(fix[name]){if(value!=undefined)elem[fix[name]]=value;return elem[fix[name]];}else if(jQuery.browser.msie&&name=="style")return jQuery.attr(elem.style,"cssText",value);else if(value==undefined&&jQuery.browser.msie&&jQuery.nodeName(elem,"form")&&(name=="action"||name=="method"))return elem.getAttributeNode(name).nodeValue;else if(elem.tagName){if(value!=undefined){if(name=="type"&&jQuery.nodeName(elem,"input")&&elem.parentNode)throw"type property can't be changed";elem.setAttribute(name,""+value);}if(jQuery.browser.msie&&/href|src/.test(name)&&!jQuery.isXMLDoc(elem))return elem.getAttribute(name,2);return elem.getAttribute(name);}else{if(name=="opacity"&&jQuery.browser.msie){if(value!=undefined){elem.zoom=1;elem.filter=(elem.filter||"").replace(/alpha\([^)]*\)/,"")+(parseFloat(value).toString()=="NaN"?"":"alpha(opacity="+value*100+")");}return elem.filter&&elem.filter.indexOf("opacity=")>=0?(parseFloat(elem.filter.match(/opacity=([^)]*)/)[1])/100).toString():"";}name=name.replace(/-([a-z])/ig,function(all,letter){return letter.toUpperCase();});if(value!=undefined)elem[name]=value;return elem[name];}},trim:function(text){return(text||"").replace(/^\s+|\s+$/g,"");},makeArray:function(array){var ret=[];if(typeof array!="array")for(var i=0,length=array.length;i<length;i++)ret.push(array[i]);else
-ret=array.slice(0);return ret;},inArray:function(elem,array){for(var i=0,length=array.length;i<length;i++)if(array[i]==elem)return i;return-1;},merge:function(first,second){if(jQuery.browser.msie){for(var i=0;second[i];i++)if(second[i].nodeType!=8)first.push(second[i]);}else
-for(var i=0;second[i];i++)first.push(second[i]);return first;},unique:function(array){var ret=[],done={};try{for(var i=0,length=array.length;i<length;i++){var id=jQuery.data(array[i]);if(!done[id]){done[id]=true;ret.push(array[i]);}}}catch(e){ret=array;}return ret;},grep:function(elems,callback,inv){var ret=[];for(var i=0,length=elems.length;i<length;i++)if(!inv&&callback(elems[i],i)||inv&&!callback(elems[i],i))ret.push(elems[i]);return ret;},map:function(elems,callback){var ret=[];for(var i=0,length=elems.length;i<length;i++){var value=callback(elems[i],i);if(value!==null&&value!=undefined){if(value.constructor!=Array)value=[value];ret=ret.concat(value);}}return ret;}});var userAgent=navigator.userAgent.toLowerCase();jQuery.browser={version:(userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/)||[])[1],safari:/webkit/.test(userAgent),opera:/opera/.test(userAgent),msie:/msie/.test(userAgent)&&!/opera/.test(userAgent),mozilla:/mozilla/.test(userAgent)&&!/(compatible|webkit)/.test(userAgent)};var styleFloat=jQuery.browser.msie?"styleFloat":"cssFloat";jQuery.extend({boxModel:!jQuery.browser.msie||document.compatMode=="CSS1Compat",props:{"for":"htmlFor","class":"className","float":styleFloat,cssFloat:styleFloat,styleFloat:styleFloat,innerHTML:"innerHTML",className:"className",value:"value",disabled:"disabled",checked:"checked",readonly:"readOnly",selected:"selected",maxlength:"maxLength",selectedIndex:"selectedIndex",defaultValue:"defaultValue",tagName:"tagName",nodeName:"nodeName"}});jQuery.each({parent:function(elem){return elem.parentNode;},parents:function(elem){return jQuery.dir(elem,"parentNode");},next:function(elem){return jQuery.nth(elem,2,"nextSibling");},prev:function(elem){return jQuery.nth(elem,2,"previousSibling");},nextAll:function(elem){return jQuery.dir(elem,"nextSibling");},prevAll:function(elem){return jQuery.dir(elem,"previousSibling");},siblings:function(elem){return jQuery.sibling(elem.parentNode.firstChild,elem);},children:function(elem){return jQuery.sibling(elem.firstChild);},contents:function(elem){return jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.contentWindow.document:jQuery.makeArray(elem.childNodes);}},function(name,fn){jQuery.fn[name]=function(selector){var ret=jQuery.map(this,fn);if(selector&&typeof selector=="string")ret=jQuery.multiFilter(selector,ret);return this.pushStack(jQuery.unique(ret));};});jQuery.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=function(){var args=arguments;return this.each(function(){for(var i=0,length=args.length;i<length;i++)jQuery(args[i])[original](this);});};});jQuery.each({removeAttr:function(name){jQuery.attr(this,name,"");if(this.nodeType==1)this.removeAttribute(name);},addClass:function(classNames){jQuery.className.add(this,classNames);},removeClass:function(classNames){jQuery.className.remove(this,classNames);},toggleClass:function(classNames){jQuery.className[jQuery.className.has(this,classNames)?"remove":"add"](this,classNames);},remove:function(selector){if(!selector||jQuery.filter(selector,[this]).r.length){jQuery("*",this).add(this).each(function(){jQuery.event.remove(this);jQuery.removeData(this);});if(this.parentNode)this.parentNode.removeChild(this);}},empty:function(){jQuery(">*",this).remove();while(this.firstChild)this.removeChild(this.firstChild);}},function(name,fn){jQuery.fn[name]=function(){return this.each(fn,arguments);};});jQuery.each(["Height","Width"],function(i,name){var type=name.toLowerCase();jQuery.fn[type]=function(size){return this[0]==window?jQuery.browser.opera&&document.body["client"+name]||jQuery.browser.safari&&window["inner"+name]||document.compatMode=="CSS1Compat"&&document.documentElement["client"+name]||document.body["client"+name]:this[0]==document?Math.max(Math.max(document.body["scroll"+name],document.documentElement["scroll"+name]),Math.max(document.body["offset"+name],document.documentElement["offset"+name])):size==undefined?(this.length?jQuery.css(this[0],type):null):this.css(type,size.constructor==String?size:size+"px");};});var chars=jQuery.browser.safari&&parseInt(jQuery.browser.version)<417?"(?:[\\w*_-]|\\\\.)":"(?:[\\w\u0128-\uFFFF*_-]|\\\\.)",quickChild=new RegExp("^>\\s*("+chars+"+)"),quickID=new RegExp("^("+chars+"+)(#)("+chars+"+)"),quickClass=new RegExp("^([#.]?)("+chars+"*)");jQuery.extend({expr:{"":function(a,i,m){return m[2]=="*"||jQuery.nodeName(a,m[2]);},"#":function(a,i,m){return a.getAttribute("id")==m[2];},":":{lt:function(a,i,m){return i<m[3]-0;},gt:function(a,i,m){return i>m[3]-0;},nth:function(a,i,m){return m[3]-0==i;},eq:function(a,i,m){return m[3]-0==i;},first:function(a,i){return i==0;},last:function(a,i,m,r){return i==r.length-1;},even:function(a,i){return i%2==0;},odd:function(a,i){return i%2;},"first-child":function(a){return a.parentNode.getElementsByTagName("*")[0]==a;},"last-child":function(a){return jQuery.nth(a.parentNode.lastChild,1,"previousSibling")==a;},"only-child":function(a){return!jQuery.nth(a.parentNode.lastChild,2,"previousSibling");},parent:function(a){return a.firstChild;},empty:function(a){return!a.firstChild;},contains:function(a,i,m){return(a.textContent||a.innerText||jQuery(a).text()||"").indexOf(m[3])>=0;},visible:function(a){return"hidden"!=a.type&&jQuery.css(a,"display")!="none"&&jQuery.css(a,"visibility")!="hidden";},hidden:function(a){return"hidden"==a.type||jQuery.css(a,"display")=="none"||jQuery.css(a,"visibility")=="hidden";},enabled:function(a){return!a.disabled;},disabled:function(a){return a.disabled;},checked:function(a){return a.checked;},selected:function(a){return a.selected||jQuery.attr(a,"selected");},text:function(a){return"text"==a.type;},radio:function(a){return"radio"==a.type;},checkbox:function(a){return"checkbox"==a.type;},file:function(a){return"file"==a.type;},password:function(a){return"password"==a.type;},submit:function(a){return"submit"==a.type;},image:function(a){return"image"==a.type;},reset:function(a){return"reset"==a.type;},button:function(a){return"button"==a.type||jQuery.nodeName(a,"button");},input:function(a){return/input|select|textarea|button/i.test(a.nodeName);},has:function(a,i,m){return jQuery.find(m[3],a).length;},header:function(a){return/h\d/i.test(a.nodeName);},animated:function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).length;}}},parse:[/^(\[) *@?([\w-]+) *([!*$^~=]*) *('?"?)(.*?)\4 *\]/,/^(:)([\w-]+)\("?'?(.*?(\(.*?\))?[^(]*?)"?'?\)/,new RegExp("^([:.#]*)("+chars+"+)")],multiFilter:function(expr,elems,not){var old,cur=[];while(expr&&expr!=old){old=expr;var f=jQuery.filter(expr,elems,not);expr=f.t.replace(/^\s*,\s*/,"");cur=not?elems=f.r:jQuery.merge(cur,f.r);}return cur;},find:function(t,context){if(typeof t!="string")return[t];if(context&&context.nodeType!=1&&context.nodeType!=9)return[];context=context||document;var ret=[context],done=[],last,nodeName;while(t&&last!=t){var r=[];last=t;t=jQuery.trim(t);var foundToken=false;var re=quickChild;var m=re.exec(t);if(m){nodeName=m[1].toUpperCase();for(var i=0;ret[i];i++)for(var c=ret[i].firstChild;c;c=c.nextSibling)if(c.nodeType==1&&(nodeName=="*"||c.nodeName.toUpperCase()==nodeName))r.push(c);ret=r;t=t.replace(re,"");if(t.indexOf(" ")==0)continue;foundToken=true;}else{re=/^([>+~])\s*(\w*)/i;if((m=re.exec(t))!=null){r=[];var merge={};nodeName=m[2].toUpperCase();m=m[1];for(var j=0,rl=ret.length;j<rl;j++){var n=m=="~"||m=="+"?ret[j].nextSibling:ret[j].firstChild;for(;n;n=n.nextSibling)if(n.nodeType==1){var id=jQuery.data(n);if(m=="~"&&merge[id])break;if(!nodeName||n.nodeName.toUpperCase()==nodeName){if(m=="~")merge[id]=true;r.push(n);}if(m=="+")break;}}ret=r;t=jQuery.trim(t.replace(re,""));foundToken=true;}}if(t&&!foundToken){if(!t.indexOf(",")){if(context==ret[0])ret.shift();done=jQuery.merge(done,ret);r=ret=[context];t=" "+t.substr(1,t.length);}else{var re2=quickID;var m=re2.exec(t);if(m){m=[0,m[2],m[3],m[1]];}else{re2=quickClass;m=re2.exec(t);}m[2]=m[2].replace(/\\/g,"");var elem=ret[ret.length-1];if(m[1]=="#"&&elem&&elem.getElementById&&!jQuery.isXMLDoc(elem)){var oid=elem.getElementById(m[2]);if((jQuery.browser.msie||jQuery.browser.opera)&&oid&&typeof oid.id=="string"&&oid.id!=m[2])oid=jQuery('[@id="'+m[2]+'"]',elem)[0];ret=r=oid&&(!m[3]||jQuery.nodeName(oid,m[3]))?[oid]:[];}else{for(var i=0;ret[i];i++){var tag=m[1]=="#"&&m[3]?m[3]:m[1]!=""||m[0]==""?"*":m[2];if(tag=="*"&&ret[i].nodeName.toLowerCase()=="object")tag="param";r=jQuery.merge(r,ret[i].getElementsByTagName(tag));}if(m[1]==".")r=jQuery.classFilter(r,m[2]);if(m[1]=="#"){var tmp=[];for(var i=0;r[i];i++)if(r[i].getAttribute("id")==m[2]){tmp=[r[i]];break;}r=tmp;}ret=r;}t=t.replace(re2,"");}}if(t){var val=jQuery.filter(t,r);ret=r=val.r;t=jQuery.trim(val.t);}}if(t)ret=[];if(ret&&context==ret[0])ret.shift();done=jQuery.merge(done,ret);return done;},classFilter:function(r,m,not){m=" "+m+" ";var tmp=[];for(var i=0;r[i];i++){var pass=(" "+r[i].className+" ").indexOf(m)>=0;if(!not&&pass||not&&!pass)tmp.push(r[i]);}return tmp;},filter:function(t,r,not){var last;while(t&&t!=last){last=t;var p=jQuery.parse,m;for(var i=0;p[i];i++){m=p[i].exec(t);if(m){t=t.substring(m[0].length);m[2]=m[2].replace(/\\/g,"");break;}}if(!m)break;if(m[1]==":"&&m[2]=="not")r=isSimple.test(m[3])?jQuery.filter(m[3],r,true).r:jQuery(r).not(m[3]);else if(m[1]==".")r=jQuery.classFilter(r,m[2],not);else if(m[1]=="["){var tmp=[],type=m[3];for(var i=0,rl=r.length;i<rl;i++){var a=r[i],z=a[jQuery.props[m[2]]||m[2]];if(z==null||/href|src|selected/.test(m[2]))z=jQuery.attr(a,m[2])||'';if((type==""&&!!z||type=="="&&z==m[5]||type=="!="&&z!=m[5]||type=="^="&&z&&!z.indexOf(m[5])||type=="$="&&z.substr(z.length-m[5].length)==m[5]||(type=="*="||type=="~=")&&z.indexOf(m[5])>=0)^not)tmp.push(a);}r=tmp;}else if(m[1]==":"&&m[2]=="nth-child"){var merge={},tmp=[],test=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(m[3]=="even"&&"2n"||m[3]=="odd"&&"2n+1"||!/\D/.test(m[3])&&"0n+"+m[3]||m[3]),first=(test[1]+(test[2]||1))-0,last=test[3]-0;for(var i=0,rl=r.length;i<rl;i++){var node=r[i],parentNode=node.parentNode,id=jQuery.data(parentNode);if(!merge[id]){var c=1;for(var n=parentNode.firstChild;n;n=n.nextSibling)if(n.nodeType==1)n.nodeIndex=c++;merge[id]=true;}var add=false;if(first==0){if(node.nodeIndex==last)add=true;}else if((node.nodeIndex-last)%first==0&&(node.nodeIndex-last)/first>=0)add=true;if(add^not)tmp.push(node);}r=tmp;}else{var fn=jQuery.expr[m[1]];if(typeof fn=="object")fn=fn[m[2]];if(typeof fn=="string")fn=eval("false||function(a,i){return "+fn+";}");r=jQuery.grep(r,function(elem,i){return fn(elem,i,m,r);},not);}}return{r:r,t:t};},dir:function(elem,dir){var matched=[];var cur=elem[dir];while(cur&&cur!=document){if(cur.nodeType==1)matched.push(cur);cur=cur[dir];}return matched;},nth:function(cur,result,dir,elem){result=result||1;var num=0;for(;cur;cur=cur[dir])if(cur.nodeType==1&&++num==result)break;return cur;},sibling:function(n,elem){var r=[];for(;n;n=n.nextSibling){if(n.nodeType==1&&(!elem||n!=elem))r.push(n);}return r;}});jQuery.event={add:function(elem,types,handler,data){if(elem.nodeType==3||elem.nodeType==8)return;if(jQuery.browser.msie&&elem.setInterval!=undefined)elem=window;if(!handler.guid)handler.guid=this.guid++;if(data!=undefined){var fn=handler;handler=function(){return fn.apply(this,arguments);};handler.data=data;handler.guid=fn.guid;}var events=jQuery.data(elem,"events")||jQuery.data(elem,"events",{}),handle=jQuery.data(elem,"handle")||jQuery.data(elem,"handle",function(){var val;if(typeof jQuery=="undefined"||jQuery.event.triggered)return val;val=jQuery.event.handle.apply(arguments.callee.elem,arguments);return val;});handle.elem=elem;jQuery.each(types.split(/\s+/),function(index,type){var parts=type.split(".");type=parts[0];handler.type=parts[1];var handlers=events[type];if(!handlers){handlers=events[type]={};if(!jQuery.event.special[type]||jQuery.event.special[type].setup.call(elem)===false){if(elem.addEventListener)elem.addEventListener(type,handle,false);else if(elem.attachEvent)elem.attachEvent("on"+type,handle);}}handlers[handler.guid]=handler;jQuery.event.global[type]=true;});elem=null;},guid:1,global:{},remove:function(elem,types,handler){if(elem.nodeType==3||elem.nodeType==8)return;var events=jQuery.data(elem,"events"),ret,index;if(events){if(types==undefined||(typeof types=="string"&&types.charAt(0)=="."))for(var type in events)this.remove(elem,type+(types||""));else{if(types.type){handler=types.handler;types=types.type;}jQuery.each(types.split(/\s+/),function(index,type){var parts=type.split(".");type=parts[0];if(events[type]){if(handler)delete events[type][handler.guid];else
-for(handler in events[type])if(!parts[1]||events[type][handler].type==parts[1])delete events[type][handler];for(ret in events[type])break;if(!ret){if(!jQuery.event.special[type]||jQuery.event.special[type].teardown.call(elem)===false){if(elem.removeEventListener)elem.removeEventListener(type,jQuery.data(elem,"handle"),false);else if(elem.detachEvent)elem.detachEvent("on"+type,jQuery.data(elem,"handle"));}ret=null;delete events[type];}}});}for(ret in events)break;if(!ret){var handle=jQuery.data(elem,"handle");if(handle)handle.elem=null;jQuery.removeData(elem,"events");jQuery.removeData(elem,"handle");}}},trigger:function(type,data,elem,donative,extra){data=jQuery.makeArray(data||[]);if(type.indexOf("!")>=0){type=type.slice(0,-1);var exclusive=true;}if(!elem){if(this.global[type])jQuery("*").add([window,document]).trigger(type,data);}else{if(elem.nodeType==3||elem.nodeType==8)return undefined;var val,ret,fn=jQuery.isFunction(elem[type]||null),event=!data[0]||!data[0].preventDefault;if(event)data.unshift(this.fix({type:type,target:elem}));data[0].type=type;if(exclusive)data[0].exclusive=true;if(jQuery.isFunction(jQuery.data(elem,"handle")))val=jQuery.data(elem,"handle").apply(elem,data);if(!fn&&elem["on"+type]&&elem["on"+type].apply(elem,data)===false)val=false;if(event)data.shift();if(extra&&jQuery.isFunction(extra)){ret=extra.apply(elem,val==null?data:data.concat(val));if(ret!==undefined)val=ret;}if(fn&&donative!==false&&val!==false&&!(jQuery.nodeName(elem,'a')&&type=="click")){this.triggered=true;try{elem[type]();}catch(e){}}this.triggered=false;}return val;},handle:function(event){var val;event=jQuery.event.fix(event||window.event||{});var parts=event.type.split(".");event.type=parts[0];var handlers=jQuery.data(this,"events")&&jQuery.data(this,"events")[event.type],args=Array.prototype.slice.call(arguments,1);args.unshift(event);for(var j in handlers){var handler=handlers[j];args[0].handler=handler;args[0].data=handler.data;if(!parts[1]&&!event.exclusive||handler.type==parts[1]){var ret=handler.apply(this,args);if(val!==false)val=ret;if(ret===false){event.preventDefault();event.stopPropagation();}}}if(jQuery.browser.msie)event.target=event.preventDefault=event.stopPropagation=event.handler=event.data=null;return val;},fix:function(event){var originalEvent=event;event=jQuery.extend({},originalEvent);event.preventDefault=function(){if(originalEvent.preventDefault)originalEvent.preventDefault();originalEvent.returnValue=false;};event.stopPropagation=function(){if(originalEvent.stopPropagation)originalEvent.stopPropagation();originalEvent.cancelBubble=true;};if(!event.target)event.target=event.srcElement||document;if(event.target.nodeType==3)event.target=originalEvent.target.parentNode;if(!event.relatedTarget&&event.fromElement)event.relatedTarget=event.fromElement==event.target?event.toElement:event.fromElement;if(event.pageX==null&&event.clientX!=null){var doc=document.documentElement,body=document.body;event.pageX=event.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc.clientLeft||0);event.pageY=event.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-(doc.clientTop||0);}if(!event.which&&((event.charCode||event.charCode===0)?event.charCode:event.keyCode))event.which=event.charCode||event.keyCode;if(!event.metaKey&&event.ctrlKey)event.metaKey=event.ctrlKey;if(!event.which&&event.button)event.which=(event.button&1?1:(event.button&2?3:(event.button&4?2:0)));return event;},special:{ready:{setup:function(){bindReady();return;},teardown:function(){return;}},mouseenter:{setup:function(){if(jQuery.browser.msie)return false;jQuery(this).bind("mouseover",jQuery.event.special.mouseenter.handler);return true;},teardown:function(){if(jQuery.browser.msie)return false;jQuery(this).unbind("mouseover",jQuery.event.special.mouseenter.handler);return true;},handler:function(event){if(withinElement(event,this))return true;arguments[0].type="mouseenter";return jQuery.event.handle.apply(this,arguments);}},mouseleave:{setup:function(){if(jQuery.browser.msie)return false;jQuery(this).bind("mouseout",jQuery.event.special.mouseleave.handler);return true;},teardown:function(){if(jQuery.browser.msie)return false;jQuery(this).unbind("mouseout",jQuery.event.special.mouseleave.handler);return true;},handler:function(event){if(withinElement(event,this))return true;arguments[0].type="mouseleave";return jQuery.event.handle.apply(this,arguments);}}}};jQuery.fn.extend({bind:function(type,data,fn){return type=="unload"?this.one(type,data,fn):this.each(function(){jQuery.event.add(this,type,fn||data,fn&&data);});},one:function(type,data,fn){return this.each(function(){jQuery.event.add(this,type,function(event){jQuery(this).unbind(event);return(fn||data).apply(this,arguments);},fn&&data);});},unbind:function(type,fn){return this.each(function(){jQuery.event.remove(this,type,fn);});},trigger:function(type,data,fn){return this.each(function(){jQuery.event.trigger(type,data,this,true,fn);});},triggerHandler:function(type,data,fn){if(this[0])return jQuery.event.trigger(type,data,this[0],false,fn);return undefined;},toggle:function(){var args=arguments;return this.click(function(event){this.lastToggle=0==this.lastToggle?1:0;event.preventDefault();return args[this.lastToggle].apply(this,arguments)||false;});},hover:function(fnOver,fnOut){return this.bind('mouseenter',fnOver).bind('mouseleave',fnOut);},ready:function(fn){bindReady();if(jQuery.isReady)fn.call(document,jQuery);else
-jQuery.readyList.push(function(){return fn.call(this,jQuery);});return this;}});jQuery.extend({isReady:false,readyList:[],ready:function(){if(!jQuery.isReady){jQuery.isReady=true;if(jQuery.readyList){jQuery.each(jQuery.readyList,function(){this.apply(document);});jQuery.readyList=null;}jQuery(document).triggerHandler("ready");}}});var readyBound=false;function bindReady(){if(readyBound)return;readyBound=true;if(document.addEventListener&&!jQuery.browser.opera)document.addEventListener("DOMContentLoaded",jQuery.ready,false);if(jQuery.browser.msie&&window==top)(function(){if(jQuery.isReady)return;try{document.documentElement.doScroll("left");}catch(error){setTimeout(arguments.callee,0);return;}jQuery.ready();})();if(jQuery.browser.opera)document.addEventListener("DOMContentLoaded",function(){if(jQuery.isReady)return;for(var i=0;i<document.styleSheets.length;i++)if(document.styleSheets[i].disabled){setTimeout(arguments.callee,0);return;}jQuery.ready();},false);if(jQuery.browser.safari){var numStyles;(function(){if(jQuery.isReady)return;if(document.readyState!="loaded"&&document.readyState!="complete"){setTimeout(arguments.callee,0);return;}if(numStyles===undefined)numStyles=jQuery("style, link[rel=stylesheet]").length;if(document.styleSheets.length!=numStyles){setTimeout(arguments.callee,0);return;}jQuery.ready();})();}jQuery.event.add(window,"load",jQuery.ready);}jQuery.each(("blur,focus,load,resize,scroll,unload,click,dblclick,"+"mousedown,mouseup,mousemove,mouseover,mouseout,change,select,"+"submit,keydown,keypress,keyup,error").split(","),function(i,name){jQuery.fn[name]=function(fn){return fn?this.bind(name,fn):this.trigger(name);};});var withinElement=function(event,elem){var parent=event.relatedTarget;while(parent&&parent!=elem)try{parent=parent.parentNode;}catch(error){parent=elem;}return parent==elem;};jQuery(window).bind("unload",function(){jQuery("*").add(document).unbind();});jQuery.fn.extend({load:function(url,params,callback){if(jQuery.isFunction(url))return this.bind("load",url);var off=url.indexOf(" ");if(off>=0){var selector=url.slice(off,url.length);url=url.slice(0,off);}callback=callback||function(){};var type="GET";if(params)if(jQuery.isFunction(params)){callback=params;params=null;}else{params=jQuery.param(params);type="POST";}var self=this;jQuery.ajax({url:url,type:type,dataType:"html",data:params,complete:function(res,status){if(status=="success"||status=="notmodified")self.html(selector?jQuery("<div/>").append(res.responseText.replace(/<script(.|\s)*?\/script>/g,"")).find(selector):res.responseText);self.each(callback,[res.responseText,status,res]);}});return this;},serialize:function(){return jQuery.param(this.serializeArray());},serializeArray:function(){return this.map(function(){return jQuery.nodeName(this,"form")?jQuery.makeArray(this.elements):this;}).filter(function(){return this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.nodeName)||/text|hidden|password/i.test(this.type));}).map(function(i,elem){var val=jQuery(this).val();return val==null?null:val.constructor==Array?jQuery.map(val,function(val,i){return{name:elem.name,value:val};}):{name:elem.name,value:val};}).get();}});jQuery.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","),function(i,o){jQuery.fn[o]=function(f){return this.bind(o,f);};});var jsc=(new Date).getTime();jQuery.extend({get:function(url,data,callback,type){if(jQuery.isFunction(data)){callback=data;data=null;}return jQuery.ajax({type:"GET",url:url,data:data,success:callback,dataType:type});},getScript:function(url,callback){return jQuery.get(url,null,callback,"script");},getJSON:function(url,data,callback){return jQuery.get(url,data,callback,"json");},post:function(url,data,callback,type){if(jQuery.isFunction(data)){callback=data;data={};}return jQuery.ajax({type:"POST",url:url,data:data,success:callback,dataType:type});},ajaxSetup:function(settings){jQuery.extend(jQuery.ajaxSettings,settings);},ajaxSettings:{global:true,type:"GET",timeout:0,contentType:"application/x-www-form-urlencoded",processData:true,async:true,data:null,username:null,password:null,accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:function(s){var jsonp,jsre=/=\?(&|$)/g,status,data;s=jQuery.extend(true,s,jQuery.extend(true,{},jQuery.ajaxSettings,s));if(s.data&&s.processData&&typeof s.data!="string")s.data=jQuery.param(s.data);if(s.dataType=="jsonp"){if(s.type.toLowerCase()=="get"){if(!s.url.match(jsre))s.url+=(s.url.match(/\?/)?"&":"?")+(s.jsonp||"callback")+"=?";}else if(!s.data||!s.data.match(jsre))s.data=(s.data?s.data+"&":"")+(s.jsonp||"callback")+"=?";s.dataType="json";}if(s.dataType=="json"&&(s.data&&s.data.match(jsre)||s.url.match(jsre))){jsonp="jsonp"+jsc++;if(s.data)s.data=(s.data+"").replace(jsre,"="+jsonp+"$1");s.url=s.url.replace(jsre,"="+jsonp+"$1");s.dataType="script";window[jsonp]=function(tmp){data=tmp;success();complete();window[jsonp]=undefined;try{delete window[jsonp];}catch(e){}if(head)head.removeChild(script);};}if(s.dataType=="script"&&s.cache==null)s.cache=false;if(s.cache===false&&s.type.toLowerCase()=="get"){var ts=(new Date()).getTime();var ret=s.url.replace(/(\?|&)_=.*?(&|$)/,"$1_="+ts+"$2");s.url=ret+((ret==s.url)?(s.url.match(/\?/)?"&":"?")+"_="+ts:"");}if(s.data&&s.type.toLowerCase()=="get"){s.url+=(s.url.match(/\?/)?"&":"?")+s.data;s.data=null;}if(s.global&&!jQuery.active++)jQuery.event.trigger("ajaxStart");if((!s.url.indexOf("http")||!s.url.indexOf("//"))&&s.dataType=="script"&&s.type.toLowerCase()=="get"){var head=document.getElementsByTagName("head")[0];var script=document.createElement("script");script.src=s.url;if(s.scriptCharset)script.charset=s.scriptCharset;if(!jsonp){var done=false;script.onload=script.onreadystatechange=function(){if(!done&&(!this.readyState||this.readyState=="loaded"||this.readyState=="complete")){done=true;success();complete();head.removeChild(script);}};}head.appendChild(script);return undefined;}var requestDone=false;var xml=window.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP"):new XMLHttpRequest();xml.open(s.type,s.url,s.async,s.username,s.password);try{if(s.data)xml.setRequestHeader("Content-Type",s.contentType);if(s.ifModified)xml.setRequestHeader("If-Modified-Since",jQuery.lastModified[s.url]||"Thu, 01 Jan 1970 00:00:00 GMT");xml.setRequestHeader("X-Requested-With","XMLHttpRequest");xml.setRequestHeader("Accept",s.dataType&&s.accepts[s.dataType]?s.accepts[s.dataType]+", */*":s.accepts._default);}catch(e){}if(s.beforeSend)s.beforeSend(xml);if(s.global)jQuery.event.trigger("ajaxSend",[xml,s]);var onreadystatechange=function(isTimeout){if(!requestDone&&xml&&(xml.readyState==4||isTimeout=="timeout")){requestDone=true;if(ival){clearInterval(ival);ival=null;}status=isTimeout=="timeout"&&"timeout"||!jQuery.httpSuccess(xml)&&"error"||s.ifModified&&jQuery.httpNotModified(xml,s.url)&&"notmodified"||"success";if(status=="success"){try{data=jQuery.httpData(xml,s.dataType);}catch(e){status="parsererror";}}if(status=="success"){var modRes;try{modRes=xml.getResponseHeader("Last-Modified");}catch(e){}if(s.ifModified&&modRes)jQuery.lastModified[s.url]=modRes;if(!jsonp)success();}else
-jQuery.handleError(s,xml,status);complete();if(s.async)xml=null;}};if(s.async){var ival=setInterval(onreadystatechange,13);if(s.timeout>0)setTimeout(function(){if(xml){xml.abort();if(!requestDone)onreadystatechange("timeout");}},s.timeout);}try{xml.send(s.data);}catch(e){jQuery.handleError(s,xml,null,e);}if(!s.async)onreadystatechange();function success(){if(s.success)s.success(data,status);if(s.global)jQuery.event.trigger("ajaxSuccess",[xml,s]);}function complete(){if(s.complete)s.complete(xml,status);if(s.global)jQuery.event.trigger("ajaxComplete",[xml,s]);if(s.global&&!--jQuery.active)jQuery.event.trigger("ajaxStop");}return xml;},handleError:function(s,xml,status,e){if(s.error)s.error(xml,status,e);if(s.global)jQuery.event.trigger("ajaxError",[xml,s,e]);},active:0,httpSuccess:function(r){try{return!r.status&&location.protocol=="file:"||(r.status>=200&&r.status<300)||r.status==304||r.status==1223||jQuery.browser.safari&&r.status==undefined;}catch(e){}return false;},httpNotModified:function(xml,url){try{var xmlRes=xml.getResponseHeader("Last-Modified");return xml.status==304||xmlRes==jQuery.lastModified[url]||jQuery.browser.safari&&xml.status==undefined;}catch(e){}return false;},httpData:function(r,type){var ct=r.getResponseHeader("content-type");var xml=type=="xml"||!type&&ct&&ct.indexOf("xml")>=0;var data=xml?r.responseXML:r.responseText;if(xml&&data.documentElement.tagName=="parsererror")throw"parsererror";if(type=="script")jQuery.globalEval(data);if(type=="json")data=eval("("+data+")");return data;},param:function(a){var s=[];if(a.constructor==Array||a.jquery)jQuery.each(a,function(){s.push(encodeURIComponent(this.name)+"="+encodeURIComponent(this.value));});else
-for(var j in a)if(a[j]&&a[j].constructor==Array)jQuery.each(a[j],function(){s.push(encodeURIComponent(j)+"="+encodeURIComponent(this));});else
-s.push(encodeURIComponent(j)+"="+encodeURIComponent(a[j]));return s.join("&").replace(/%20/g,"+");}});jQuery.fn.extend({show:function(speed,callback){return speed?this.animate({height:"show",width:"show",opacity:"show"},speed,callback):this.filter(":hidden").each(function(){this.style.display=this.oldblock||"";if(jQuery.css(this,"display")=="none"){var elem=jQuery("<"+this.tagName+" />").appendTo("body");this.style.display=elem.css("display");if(this.style.display=="none")this.style.display="block";elem.remove();}}).end();},hide:function(speed,callback){return speed?this.animate({height:"hide",width:"hide",opacity:"hide"},speed,callback):this.filter(":visible").each(function(){this.oldblock=this.oldblock||jQuery.css(this,"display");this.style.display="none";}).end();},_toggle:jQuery.fn.toggle,toggle:function(fn,fn2){return jQuery.isFunction(fn)&&jQuery.isFunction(fn2)?this._toggle(fn,fn2):fn?this.animate({height:"toggle",width:"toggle",opacity:"toggle"},fn,fn2):this.each(function(){jQuery(this)[jQuery(this).is(":hidden")?"show":"hide"]();});},slideDown:function(speed,callback){return this.animate({height:"show"},speed,callback);},slideUp:function(speed,callback){return this.animate({height:"hide"},speed,callback);},slideToggle:function(speed,callback){return this.animate({height:"toggle"},speed,callback);},fadeIn:function(speed,callback){return this.animate({opacity:"show"},speed,callback);},fadeOut:function(speed,callback){return this.animate({opacity:"hide"},speed,callback);},fadeTo:function(speed,to,callback){return this.animate({opacity:to},speed,callback);},animate:function(prop,speed,easing,callback){var optall=jQuery.speed(speed,easing,callback);return this[optall.queue===false?"each":"queue"](function(){if(this.nodeType!=1)return false;var opt=jQuery.extend({},optall);var hidden=jQuery(this).is(":hidden"),self=this;for(var p in prop){if(prop[p]=="hide"&&hidden||prop[p]=="show"&&!hidden)return jQuery.isFunction(opt.complete)&&opt.complete.apply(this);if(p=="height"||p=="width"){opt.display=jQuery.css(this,"display");opt.overflow=this.style.overflow;}}if(opt.overflow!=null)this.style.overflow="hidden";opt.curAnim=jQuery.extend({},prop);jQuery.each(prop,function(name,val){var e=new jQuery.fx(self,opt,name);if(/toggle|show|hide/.test(val))e[val=="toggle"?hidden?"show":"hide":val](prop);else{var parts=val.toString().match(/^([+-]=)?([\d+-.]+)(.*)$/),start=e.cur(true)||0;if(parts){var end=parseFloat(parts[2]),unit=parts[3]||"px";if(unit!="px"){self.style[name]=(end||1)+unit;start=((end||1)/e.cur(true))*start;self.style[name]=start+unit;}if(parts[1])end=((parts[1]=="-="?-1:1)*end)+start;e.custom(start,end,unit);}else
-e.custom(start,val,"");}});return true;});},queue:function(type,fn){if(jQuery.isFunction(type)||(type&&type.constructor==Array)){fn=type;type="fx";}if(!type||(typeof type=="string"&&!fn))return queue(this[0],type);return this.each(function(){if(fn.constructor==Array)queue(this,type,fn);else{queue(this,type).push(fn);if(queue(this,type).length==1)fn.apply(this);}});},stop:function(clearQueue,gotoEnd){var timers=jQuery.timers;if(clearQueue)this.queue([]);this.each(function(){for(var i=timers.length-1;i>=0;i--)if(timers[i].elem==this){if(gotoEnd)timers[i](true);timers.splice(i,1);}});if(!gotoEnd)this.dequeue();return this;}});var queue=function(elem,type,array){if(!elem)return undefined;type=type||"fx";var q=jQuery.data(elem,type+"queue");if(!q||array)q=jQuery.data(elem,type+"queue",array?jQuery.makeArray(array):[]);return q;};jQuery.fn.dequeue=function(type){type=type||"fx";return this.each(function(){var q=queue(this,type);q.shift();if(q.length)q[0].apply(this);});};jQuery.extend({speed:function(speed,easing,fn){var opt=speed&&speed.constructor==Object?speed:{complete:fn||!fn&&easing||jQuery.isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&easing.constructor!=Function&&easing};opt.duration=(opt.duration&&opt.duration.constructor==Number?opt.duration:{slow:600,fast:200}[opt.duration])||400;opt.old=opt.complete;opt.complete=function(){if(opt.queue!==false)jQuery(this).dequeue();if(jQuery.isFunction(opt.old))opt.old.apply(this);};return opt;},easing:{linear:function(p,n,firstNum,diff){return firstNum+diff*p;},swing:function(p,n,firstNum,diff){return((-Math.cos(p*Math.PI)/2)+0.5)*diff+firstNum;}},timers:[],timerId:null,fx:function(elem,options,prop){this.options=options;this.elem=elem;this.prop=prop;if(!options.orig)options.orig={};}});jQuery.fx.prototype={update:function(){if(this.options.step)this.options.step.apply(this.elem,[this.now,this]);(jQuery.fx.step[this.prop]||jQuery.fx.step._default)(this);if(this.prop=="height"||this.prop=="width")this.elem.style.display="block";},cur:function(force){if(this.elem[this.prop]!=null&&this.elem.style[this.prop]==null)return this.elem[this.prop];var r=parseFloat(jQuery.css(this.elem,this.prop,force));return r&&r>-10000?r:parseFloat(jQuery.curCSS(this.elem,this.prop))||0;},custom:function(from,to,unit){this.startTime=(new Date()).getTime();this.start=from;this.end=to;this.unit=unit||this.unit||"px";this.now=this.start;this.pos=this.state=0;this.update();var self=this;function t(gotoEnd){return self.step(gotoEnd);}t.elem=this.elem;jQuery.timers.push(t);if(jQuery.timerId==null){jQuery.timerId=setInterval(function(){var timers=jQuery.timers;for(var i=0;i<timers.length;i++)if(!timers[i]())timers.splice(i--,1);if(!timers.length){clearInterval(jQuery.timerId);jQuery.timerId=null;}},13);}},show:function(){this.options.orig[this.prop]=jQuery.attr(this.elem.style,this.prop);this.options.show=true;this.custom(0,this.cur());if(this.prop=="width"||this.prop=="height")this.elem.style[this.prop]="1px";jQuery(this.elem).show();},hide:function(){this.options.orig[this.prop]=jQuery.attr(this.elem.style,this.prop);this.options.hide=true;this.custom(this.cur(),0);},step:function(gotoEnd){var t=(new Date()).getTime();if(gotoEnd||t>this.options.duration+this.startTime){this.now=this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;var done=true;for(var i in this.options.curAnim)if(this.options.curAnim[i]!==true)done=false;if(done){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;this.elem.style.display=this.options.display;if(jQuery.css(this.elem,"display")=="none")this.elem.style.display="block";}if(this.options.hide)this.elem.style.display="none";if(this.options.hide||this.options.show)for(var p in this.options.curAnim)jQuery.attr(this.elem.style,p,this.options.orig[p]);}if(done&&jQuery.isFunction(this.options.complete))this.options.complete.apply(this.elem);return false;}else{var n=t-this.startTime;this.state=n/this.options.duration;this.pos=jQuery.easing[this.options.easing||(jQuery.easing.swing?"swing":"linear")](this.state,n,0,1,this.options.duration);this.now=this.start+((this.end-this.start)*this.pos);this.update();}return true;}};jQuery.fx.step={scrollLeft:function(fx){fx.elem.scrollLeft=fx.now;},scrollTop:function(fx){fx.elem.scrollTop=fx.now;},opacity:function(fx){jQuery.attr(fx.elem.style,"opacity",fx.now);},_default:function(fx){fx.elem.style[fx.prop]=fx.now+fx.unit;}};jQuery.fn.offset=function(){var left=0,top=0,elem=this[0],results;if(elem)with(jQuery.browser){var parent=elem.parentNode,offsetChild=elem,offsetParent=elem.offsetParent,doc=elem.ownerDocument,safari2=safari&&parseInt(version)<522&&!/adobeair/i.test(userAgent),fixed=jQuery.css(elem,"position")=="fixed";if(elem.getBoundingClientRect){var box=elem.getBoundingClientRect();add(box.left+Math.max(doc.documentElement.scrollLeft,doc.body.scrollLeft),box.top+Math.max(doc.documentElement.scrollTop,doc.body.scrollTop));add(-doc.documentElement.clientLeft,-doc.documentElement.clientTop);}else{add(elem.offsetLeft,elem.offsetTop);while(offsetParent){add(offsetParent.offsetLeft,offsetParent.offsetTop);if(mozilla&&!/^t(able|d|h)$/i.test(offsetParent.tagName)||safari&&!safari2)border(offsetParent);if(!fixed&&jQuery.css(offsetParent,"position")=="fixed")fixed=true;offsetChild=/^body$/i.test(offsetParent.tagName)?offsetChild:offsetParent;offsetParent=offsetParent.offsetParent;}while(parent&&parent.tagName&&!/^body|html$/i.test(parent.tagName)){if(!/^inline|table.*$/i.test(jQuery.css(parent,"display")))add(-parent.scrollLeft,-parent.scrollTop);if(mozilla&&jQuery.css(parent,"overflow")!="visible")border(parent);parent=parent.parentNode;}if((safari2&&(fixed||jQuery.css(offsetChild,"position")=="absolute"))||(mozilla&&jQuery.css(offsetChild,"position")!="absolute"))add(-doc.body.offsetLeft,-doc.body.offsetTop);if(fixed)add(Math.max(doc.documentElement.scrollLeft,doc.body.scrollLeft),Math.max(doc.documentElement.scrollTop,doc.body.scrollTop));}results={top:top,left:left};}function border(elem){add(jQuery.curCSS(elem,"borderLeftWidth",true),jQuery.curCSS(elem,"borderTopWidth",true));}function add(l,t){left+=parseInt(l)||0;top+=parseInt(t)||0;}return results;};})();
\ No newline at end of file
diff --git a/src/webapp/resources/admin/logging.jsp b/src/webapp/resources/admin/logging.jsp
deleted file mode 100644
index e94004e..0000000
--- a/src/webapp/resources/admin/logging.jsp
+++ /dev/null
@@ -1,57 +0,0 @@
-<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.solr.core.SolrCore,
-                 org.apache.solr.schema.IndexSchema,
-                 java.io.File,
-                 java.net.InetAddress,
-                 java.net.UnknownHostException"%>
-<%@ page import="java.util.Date"%>
-<%@ page import="java.util.logging.Level"%>
-<%@ page import="java.util.logging.LogManager"%>
-<%@ page import="java.util.logging.Logger"%>
-
-<?xml-stylesheet type="text/xsl" href="logging.xsl"?>
-
-<%
-  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
-  if (core == null) {
-    String coreParam = request.getParameter("core");
-    core = coreParam != null? org.apache.solr.core.SolrMultiCore.getInstance().getCore(coreParam) : null;
-  }
-  if (core == null)
-    core = SolrCore.getSolrCore();
-    
-  Logger log = SolrCore.log;
-  Logger parent = log.getParent();
-  while(parent != null) {
-    log = parent;
-    parent = log.getParent();
-  }
-  Level lvl = log.getLevel();
-      
-%>
-<solr>
-  <core><%=core.getName()%></core>
-  <logging>
-<% if (lvl != null) {%>
-      <logLevel><%= lvl.toString() %></logLevel>
-<% } else { %>
-      <logLevel>null</logLevel>
-<% } %>
-  </logging>
-</solr>
diff --git a/src/webapp/resources/admin/logging.xsl b/src/webapp/resources/admin/logging.xsl
deleted file mode 100644
index 3678ea5..0000000
--- a/src/webapp/resources/admin/logging.xsl
+++ /dev/null
@@ -1,89 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<!-- $Id$ -->
-<!-- $URL$ -->
-
-<xsl:stylesheet
-  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-  version="1.0">
-
-  <xsl:output
-    method="html"
-    indent="yes"
-    doctype-public="-//W3C//DTD HTML 4.01//EN"
-    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
-
-  <xsl:template match="/">
-    <html>
-      <head>
-        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
-	<link rel="icon" href="/favicon.ico" type="image/ico"></link>
-	<link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
-        <title>Solr Admin: Logging</title>
-      </head>
-      <body>
-        <a href="">
-	   <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
-	   </img>
-	</a>
-        <h1>Solr Admin (<xsl:value-of select="solr/meta/collection" />)</h1>
-        <div style="margin-top: 1em;">
-          <xsl:apply-templates/>
-        <div>
-        </div>
-          <a href=".">Return to Admin Page</a>
-        </div>
-      </body>
-    </html>
-  </xsl:template>
-
-  <xsl:include href="meta.xsl"/>
-
-  <xsl:template match="solr/logging">
-
-<br clear="all"/>
-<h2>Solr Logging</h2>
-<table>
-  <tr>
-    <td>
-      <H3>Log Level:</H3>
-    </td>
-    <td>
-<xsl:value-of select="logLevel" />
-    </td>
-  </tr>
-  <tr>
-    <td>
-    Set Level
-    </td>
-    <td>
-    [<a href="action.jsp?log=ALL">ALL</a>]
-    [<a href="action.jsp?log=CONFIG">CONFIG</a>]
-    [<a href="action.jsp?log=FINE">FINE</a>]
-    [<a href="action.jsp?log=FINER">FINER</a>]
-    [<a href="action.jsp?log=FINEST">FINEST</a>]
-    [<a href="action.jsp?log=INFO">INFO</a>]
-    [<a href="action.jsp?log=OFF">OFF</a>]
-    [<a href="action.jsp?log=SEVERE">SEVERE</a>]
-    [<a href="action.jsp?log=WARNING">WARNING</a>]
-    </td>
-  </tr>
-</table>
-
-  </xsl:template>
-</xsl:stylesheet>
diff --git a/src/webapp/resources/admin/meta.xsl b/src/webapp/resources/admin/meta.xsl
deleted file mode 100644
index a1c6085..0000000
--- a/src/webapp/resources/admin/meta.xsl
+++ /dev/null
@@ -1,32 +0,0 @@
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<xsl:stylesheet
-  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-  version="1.0">
-
-  <xsl:output
-    method="html"
-    indent="yes"
-    doctype-public="-//W3C//DTD HTML 4.01//EN"
-    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
-
-  <xsl:template match="solr/meta">
-    <xsl:value-of select="host" />:<xsl:value-of select="port" />
-    cwd=<xsl:value-of select="cwd" /> SolrHome=<xsl:value-of select="solrHome" />
-  </xsl:template>
-
-</xsl:stylesheet>
diff --git a/src/webapp/resources/admin/ping.jsp b/src/webapp/resources/admin/ping.jsp
deleted file mode 100644
index bdc9620..0000000
--- a/src/webapp/resources/admin/ping.jsp
+++ /dev/null
@@ -1,73 +0,0 @@
-<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.solr.core.SolrConfig,
-                 org.apache.solr.core.SolrCore,
-                 org.apache.solr.common.util.XML,
-                 org.apache.solr.core.SolrException"%>
-<%@ page import="org.apache.solr.request.LocalSolrQueryRequest"%>
-<%@ page import="org.apache.solr.request.SolrQueryResponse"%>
-<%@ page import="org.apache.solr.request.ServletSolrParams"%>
-<%@ page import="org.apache.solr.request.SolrQueryRequest"%>
-
-<%
-  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
-  if (core == null) {
-    String coreParam = request.getParameter("core");
-    core = coreParam != null? org.apache.solr.core.SolrMultiCore.getInstance().getCore(coreParam) : null;
-  }
-  if (core == null)
-    core = SolrCore.getSolrCore();
-%>
-<?xml-stylesheet type="text/xsl" href="ping.xsl"?>
-
-<solr>
-  <core><%=core.getName()%></core>
-  <ping>
-<%
-  SolrQueryRequest req = core.getPingQueryRequest();
-  SolrQueryResponse resp = new SolrQueryResponse();
-  try {
-    core.execute(req,resp);
-    if (resp.getException() == null) {
-// No need for explicit status in the body, when the standard HTTP
-// response codes already transmit success/failure message
-//      out.println("<status>200</status>");
-    }
-    else if (resp.getException() != null) {
-// No need for explicit status in the body, when the standard HTTP
-// response codes already transmit success/failure message
-//      out.println("<status>500</status>");
-      out.println("<error>");
-      XML.escapeCharData(SolrException.toStr(resp.getException()), out);
-      out.println("</error>");
-      response.sendError(500);
-    }
-  } catch (Throwable t) {
-// No need for explicit status in the body, when the standard HTTP
-// response codes already transmit success/failure message
-//      out.println("<status>500</status>");
-      out.println("<error>");
-      XML.escapeCharData(SolrException.toStr(t), out);
-      out.println("</error>");
-      response.sendError(500);
-  } finally {
-      req.close();
-  }
-%>
-  </ping>
-</solr>
diff --git a/src/webapp/resources/admin/ping.xsl b/src/webapp/resources/admin/ping.xsl
deleted file mode 100644
index 364577b..0000000
--- a/src/webapp/resources/admin/ping.xsl
+++ /dev/null
@@ -1,69 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<!-- $Id$ -->
-<!-- $URL$ -->
-
-<xsl:stylesheet
-  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-  version="1.0">
-
-  <xsl:output
-    method="html"
-    indent="yes"
-    doctype-public="-//W3C//DTD HTML 4.01//EN"
-    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
-
-  <xsl:template match="/">
-    <html>
-      <head>
-        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
-	<link rel="icon" href="/favicon.ico" type="image/ico"></link>
-	<link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
-        <title>Solr Admin: Ping</title>
-      </head>
-      <body>
-        <a href="">
-	   <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
-	   </img>
-	</a>
-        <h1>Solr Admin (<xsl:value-of select="solr/meta/collection" />)</h1>
-        <div style="margin-top: 1em;">
-          <xsl:apply-templates/>
-        <div>
-        </div>
-          <a href=".">Return to Admin Page</a>
-        </div>
-      </body>
-    </html>
-  </xsl:template>
-
-  <xsl:include href="meta.xsl"/>
-
-  <xsl:template match="solr/ping">
-  <table>
-    <tr>
-      <td>
-        <H3>Ping</H3>
-      </td>
-      <td>
-        <xsl:value-of select="error" />
-      </td>
-    </tr>
-  </table>
-  </xsl:template>
-</xsl:stylesheet>
diff --git a/src/webapp/resources/admin/raw-schema.jsp b/src/webapp/resources/admin/raw-schema.jsp
deleted file mode 100644
index 1a1edc6..0000000
--- a/src/webapp/resources/admin/raw-schema.jsp
+++ /dev/null
@@ -1,46 +0,0 @@
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.solr.core.SolrCore,
-                 org.apache.solr.schema.IndexSchema"%>
-<%@ page import="java.io.InputStreamReader"%>
-<%@ page import="java.io.Reader"%>
-<%@ page import="java.util.logging.Logger"%>
-<%@ page contentType="text/plain;charset=UTF-8" language="java" %>
-<%!
-  static Logger log = Logger.getLogger(SolrCore.class.getName());
-%>
-<%
-  // NOTE -- this file will be removed in a future release
-  log.warning("Using deprecated JSP: " + request.getRequestURL().append("?").append(request.getQueryString()) + " -- check the ShowFileRequestHandler"  );
-
-  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
-  if (core == null) {
-    String coreParam = request.getParameter("core");
-    core = coreParam != null? org.apache.solr.core.SolrMultiCore.getInstance().getCore(coreParam) : null;
-  }
-  if (core == null)
-    core = SolrCore.getSolrCore();
-    
-  IndexSchema schema = core.getSchema();
-  Reader input = new InputStreamReader(schema.getInputStream());
-  char[] buf = new char[4096];
-  while (true) {
-    int len = input.read(buf);
-    if (len<=0) break;
-    out.write(buf,0,len);
-  }
-%>
diff --git a/src/webapp/resources/admin/registry.jsp b/src/webapp/resources/admin/registry.jsp
deleted file mode 100644
index b9ea5b0..0000000
--- a/src/webapp/resources/admin/registry.jsp
+++ /dev/null
@@ -1,107 +0,0 @@
-<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.solr.core.SolrInfoMBean,
-                 org.apache.solr.core.SolrInfoRegistry,
-                 java.net.URL,
-                 java.util.Date,
-                 java.util.Map"%>
-<?xml-stylesheet type="text/xsl" href="registry.xsl"?>
-
-<%@include file="_info.jsp" %>
-
-<solr>
-  <core><%= core.getName()%></core>
-  <schema><%= collectionName %></schema>
-  <host><%= hostname %></host>
-  <now><%= new Date().toString() %></now>
-  <start><%= new Date(core.getStartTime()) %></start>
-  <solr-spec-version><%= solrSpecVersion %></solr-spec-version>
-  <solr-impl-version><%= solrImplVersion %></solr-impl-version>
-  <lucene-spec-version><%= luceneSpecVersion %></lucene-spec-version>
-  <lucene-impl-version><%= luceneImplVersion %></lucene-impl-version>
-  <solr-info>
-<%
-for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) {
-%>
-    <<%= cat.toString() %>>
-<%
- Map<String, SolrInfoMBean> reg = SolrInfoRegistry.getRegistry();
- synchronized(reg) {
-  for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {
-    String key = entry.getKey();
-    SolrInfoMBean m = entry.getValue();
-
-    if (m.getCategory() != cat) continue;
-
-    String na     = "None Provided";
-    String name   = (m.getName()!=null ? m.getName() : na);
-    String vers   = (m.getVersion()!=null ? m.getVersion() : na);
-    String desc   = (m.getDescription()!=null ? m.getDescription() : na);
-    String srcId  = (m.getSourceId()!=null ? m.getSourceId() : na);
-    String src = (m.getSource()!=null ? m.getSource() : na);
-    // print
-%>
-      <entry>
-        <name>
-          <%= key %>
-        </name>
-        <class>
-          <%= name %>
-        </class>
-        <version>
-          <%= vers %>
-        </version>
-        <description>
-          <%= desc %>
-        </description>
-        <sourceid>
-          <%= srcId %>
-        </sourceid>
-        <source>
-          <%= src %>
-        </source>
-
-<%
-    URL[] urls = m.getDocs();
-    if ((urls != null) && (urls.length != 0)) {
-%>
-        <urls>
-<%
-      for (URL u : urls) {
-%>
-          <url>
-            <%= u.toString() %>
-          </url>
-<%
-      }
-%>
-        </urls>
-<%
-    }
-%>
-      </entry>
-<%
-  }
- }
-%>
-    </<%= cat.toString() %>>
-<%
-}
-%>
-  </solr-info>
-</solr>
diff --git a/src/webapp/resources/admin/registry.xsl b/src/webapp/resources/admin/registry.xsl
deleted file mode 100644
index 53ff775..0000000
--- a/src/webapp/resources/admin/registry.xsl
+++ /dev/null
@@ -1,285 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<!-- $Id$ -->
-<!-- $URL$ -->
-
-<xsl:stylesheet
-  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-  version="1.0">
-
-
-  <xsl:output
-    method="html"
-    indent="yes"
-    doctype-public="-//W3C//DTD HTML 4.01//EN"
-    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
-
-
-  <xsl:template match="/">
-    <html>
-      <head>
-        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
-	<link rel="icon" href="/favicon.ico" type="image/ico"></link>
-	<link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
-        <title>SOLR Info</title>
-      </head>
-      <body>
-        <a href="">
-	   <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
-	   </img>
-	</a>
-        <h1>SOLR Info (<xsl:value-of select="solr/schema" />)</h1>
-          <xsl:value-of select="solr/host" />
-          <br clear="all" />
-        <xsl:apply-templates/>
-        <br /><br />
-        <a href="">Return to Admin Page</a>
-      </body>
-    </html>
-  </xsl:template>
-
-  <xsl:template match="solr">
-  <table>
-    <tr>
-      <td>
-        <H3>Category</H3>
-      </td>
-      <td>
-        [<a href="#core">Core</a>]
-        [<a href="#cache">Cache</a>]
-        [<a href="#query">Query</a>]
-        [<a href="#update">Update</a>]
-        [<a href="#other">Other</a>]
-      </td>
-    </tr>
-    <tr><td></td>
-      <td>Solr Specification Version: 
-          <xsl:value-of select="solr-spec-version" />
-      </td>
-    </tr>
-    <tr><td></td>
-      <td>Solr Implementation Version: 
-          <xsl:value-of select="solr-impl-version" />
-      </td>
-    </tr>
-    <tr><td></td>
-      <td>Lucene Specification Version: 
-          <xsl:value-of select="lucene-spec-version" />
-      </td>
-    </tr>
-    <tr><td></td>
-      <td>Lucene Implementation Version: 
-          <xsl:value-of select="lucene-impl-version" />
-      </td>
-    </tr>
-    <tr>
-      <td>
-      </td>
-      <td>
-        Current Time: <xsl:value-of select="now" />
-      </td>
-    </tr>
-    <tr>
-      <td>
-      </td>
-      <td>
-        Server Start Time:<xsl:value-of select="start" />
-      </td>
-    </tr>
-  </table>
-  <xsl:apply-templates/>
-  </xsl:template>
-
-  <xsl:template match="solr/*" priority="-1" />
-
-  <xsl:template match="solr/solr-info">
-  <xsl:apply-templates/>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/CORE">
-    <br />
-    <a name="core"><h2>Core</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/CORE/entry">
-      <xsl:for-each select="*">
-        <tr>
-          <td align="right">
-            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="."/>&#xa0;</tt>
-          </td>
-        </tr>
-      </xsl:for-each>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/CACHE">
-    <br />
-    <a name="cache"><h2>Cache</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/CACHE/entry">
-      <xsl:for-each select="*">
-        <tr>
-          <td align="right">
-            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="."/>&#xa0;</tt>
-          </td>
-        </tr>
-      </xsl:for-each>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/QUERYHANDLER">
-    <br />
-    <a name="query"><h2>Query Handlers</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/QUERYHANDLER/entry">
-      <xsl:for-each select="*">
-        <tr>
-          <td align="right">
-            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="."/>&#xa0;</tt>
-          </td>
-        </tr>
-      </xsl:for-each>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/UPDATEHANDLER">
-    <br />
-    <a name="update"><h2>Update Handlers</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/UPDATEHANDLER/entry">
-      <xsl:for-each select="*">
-        <tr>
-          <td align="right">
-            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="."/>&#xa0;</tt>
-          </td>
-        </tr>
-      </xsl:for-each>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/OTHER">
-    <br />
-    <a name="other"><h2>Other</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/OTHER/entry">
-      <xsl:for-each select="*">
-        <tr>
-          <td align="right">
-            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="."/>&#xa0;</tt>
-          </td>
-        </tr>
-      </xsl:for-each>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-
-</xsl:stylesheet>
diff --git a/src/webapp/resources/admin/schema.jsp b/src/webapp/resources/admin/schema.jsp
deleted file mode 100644
index 1d5d9cd..0000000
--- a/src/webapp/resources/admin/schema.jsp
+++ /dev/null
@@ -1,661 +0,0 @@
-<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-
-<%-- $Id: index.jsp 608150 2008-01-02 17:15:30Z ryan $ --%>
-<%-- $Source: /cvs/main/searching/SolrServer/resources/admin/index.jsp,v $ --%>
-<%-- $Name:  $ --%>
-  
-<script src="/solr/admin/jquery-1.2.3.min.js"></script>
-<script>
-
-(function($, libName) {
-  var solr = {
-    
-    //The default location of the luke handler relative to this page
-    // Can be overridden in the init(url) method
-    pathToLukeHandler: 'luke',  
-    
-    // Base properties to hold schema information
-    schemaInfo: {},
-    schemaFields: {},
-    schemaDynamicFields: {},
-    schemaTypes: {},
-    schemaFlags: {},
-    
-    //The basic function to call to make the initail JSON calls
-    // takes one option parameter, the path to the luke handler
-    // if undefined, it will use the default, 'luke', which means
-    // this is being called from the same relative URL path
-    init: function(pathToLukeHandler) {
-      if (pathToLukeHandler != undefined) {
-        solr.pathToLukeHandler = pathToLukeHandler;
-      }
-      solr.loadSchema(function() {
-        solr.loadFromLukeHandler(function () {
-          solr.createMenu('menu');
-          solr.displaySchemaInfo();
-        });
-      });
-
-    },
-    
-    //load the Schema from the LukeRequestHandler
-    // this loads every field, and in each field the copy source/dests and flags
-    // we also load the list of field types, and the list of flags
-    loadSchema: function(func) {
-			$.getJSON(solr.pathToLukeHandler +'?show=schema&wt=json', function(data) {
-        //populate all non field/type/flag data in the info block
-        $.each(data.index, function(i, item) {
-          solr.schemaInfo[i] = item;
-        });
-        
-        //LukeRequestHandler places these two attributes outside of the "index" node, but
-        // we want it here so we can more easily display it in the "HOME" block
-        solr.schemaInfo['uniqueKeyField'] = data.schema.uniqueKeyField;
-        solr.schemaInfo['defaultSearchField'] = data.schema.defaultSearchField;
-        //a one-off hack, because the directory string is so long and unbroken
-        // that it can break CSS layouts
-        solr.schemaInfo['directory'] = solr.schemaInfo['directory'].substring(0, solr.schemaInfo['directory'].indexOf('@')+1) + ' ' +  solr.schemaInfo['directory'].substring(solr.schemaInfo['directory'].indexOf('@') +1);
-        
-        // populate the list of fields
-				$.each(data.schema.fields, function(i,item){
-					solr.schemaFields[i]=item;
-     		});
-        // populate the list of field types
-	      $.each(data.schema.types, function(type, ft) {
-          solr.schemaTypes[type] = ft;
-        });
-        //populate the list of dynamic fields
-        $.each(data.schema.dynamicFields, function(i, dynField) {
-          solr.schemaDynamicFields[i] = dynField;
-        });
-        //populate the list of flags, so we can convert flags to text in display
-      	$.each(data.info.key, function(i, flag) {
-      		solr.schemaFlags[i] = flag;
- 	    	});
-        
-        //LukeRequestHandler returns copyFields src/dest as the entire toString of the field
-        // we only need the field name, so here we loop through the fields, and replace the full
-        // field definitions with the name in the copySources/copyDests properties
-        $.each(solr.schemaFields, function(i, field) {
-          $.each(['copySources', 'copyDests'], function(i, copyProp) {
-            var newFields = new Array();
-            $.each(field[copyProp], function(i, fullName) {
-              newFields.push(fullName.substring(fullName.lastIndexOf(':')+1, fullName.indexOf('{')));
-            });
-            field[copyProp] = newFields;
-          });
-        
-        });
-        //An additional optional callback
-        // used in init to trigger the 2nd call to LukeRequestHandler only
-        // after the first one is finished
-        if ($.isFunction(func)) {
-          func(solr);
-        }
-      });
-    },
-
-    //further populates the loaded schema with information gathered
-    // from the no argument LukeRequestHandler
-    loadFromLukeHandler: function(func) {
-      $.getJSON(solr.pathToLukeHandler+'?wt=json', function(data) {
-        $.each(data.fields, function(i, item) {
-          var field = solr.schemaFields[i];
-          
-          //If undefined, then we have a dynamicField which does not show up
-          // in the LukeRequestHandler show=schema variant
-          if (field == undefined) {
-            field = item;
-            //Attach this field to its dynamicField
-            var base = field.dynamicBase;
-            var dynField = solr.schemaDynamicFields[base];
-
-            //Some fields in a multicore setting have no dynamic base, either
-            // the name of the core is a field that has no type or flags
-            if (dynField != undefined) {
-            	var synFields = dynField['fields'];
-	            if (synFields== undefined) {
-    	          synFields= new Array();
-        	    }
-            	synFields.push(i);
-            	dynField['fields'] = synFields;
-            }
-            solr.schemaFields[i] = item;
-          }
-          //Populate other data in this field that would not have been loaded in
-          // the show=schema variant
-          $.each(item, function(k, v) {
-            if (k == 'topTerms' || k == 'histogram') {
-              solr.schemaFields[i][k] = solr.lukeArrayToHash(v);
-            } else {
-              solr.schemaFields[i][k] = v;
-            }
-          });
-        });
-        //another optional callback; used in the init case to lay out the page
-        // after the data is loaded
-        if ($.isFunction(func)) {
-          func();
-        }
-      });
-    },
-    //some elements in the JSON response are arrays, where odd/even elements
-    // are the name/value, and convert it to a standard map/associative array
-    // incoming: ['foo', 'bar', 'bat', 'baz']
-    // output: {'foo':'bar', 'bat':baz'}
-    lukeArrayToHash: function(termsArr) {
-        var hash = new Object();
-				var temp;
-        //topTerms comes in as an array, with odd indexes the field name
-        // and even indexes the number
-				$.each(termsArr, function(i, item) {
-					if (i%2 ==0) {
-						temp = item;
-					} else {
-						hash[temp] = item;
-					} 
-				});
-				return hash;
-    },
-    
-    //gets the top Terms via an Ajax call the LukeRequestHandler for that field
-    // The callback is used here to redraw the table after the ajax call returns
-		getTopTerms: function(fieldName, numTerms, func) {
-      if (numTerms == undefined) {
-        var numTerms = 10;
-      }
-      if (isNaN(numTerms) || numTerms <=0 || numTerms.indexOf('.') != -1) {
-        return;
-      }
-			$.getJSON(solr.pathToLukeHandler+'?fl='+fieldName+'&wt=json&numTerms='+numTerms, function(data) {                  
-				solr.schemaFields[fieldName]['topTerms'] = solr.lukeArrayToHash(data.fields[fieldName].topTerms);
-        if ($.isFunction(func)) {
-          func(solr.schemaFields[fieldName]['topTerms'], fieldName);
-        }
-			});
-		},
-    
-    // Displays the SchemaInfo in the main content panel
-    // dispayed on data load, and also when 'Home' is clicked
-    displaySchemaInfo: function() {
-      $('#mainInfo').html('');
-      $('#topTerms').html('');
-      $('#histogram').html('');      
-      $('#mainInfo').append(solr.createSimpleText('Schema Information'));
-      //Make sure the uniqueKeyField and defaultSearchFields come first
-      $.each({'Unique Key':'uniqueKeyField', 'Default Search Field':'defaultSearchField'}, function(text, prop) {
-          if (solr.schemaInfo[prop] != undefined) {
-            $('#mainInfo').append(solr.createNameValueText(text, function(p) {
-              p.appendChild(solr.createLink(solr.schemaInfo[prop], solr.schemaInfo[prop]));
-              return p;
-            }));
-          } 
-      });
-      $.each(solr.schemaInfo, function(i, item) {
-        if (i == 'uniqueKeyField' || i == 'defaultSearchField') {
-          //noop; we took care of this above
-        } else {
-          $('#mainInfo').append(solr.createNameValueText(i, item));
-        }
-      });
-      //Close all menus when we display schema home
-      solr.toggleMenus(undefined, ['fields', 'types', 'dynFields']);
-    },
-    
-    // display a dynamic field in the main content panel
-    displayDynamicField: function(dynamicPattern) {
-      var df = solr.schemaDynamicFields[dynamicPattern];
-      $('#mainInfo').html('');
-      $('#topTerms').html('');
-      $('#histogram').html('');
-      $('#mainInfo').append(solr.createSimpleText('Dynamic Field: ' + dynamicPattern));
-      $('#mainInfo').append(solr.createNameValueText('Fields', function(p) {
-        if (df.fields != undefined) {
-          $.each(df.fields, function(i, item) {
-            p.appendChild(solr.createLink(item, item));
-          });
-        } else {
-          p.appendChild(document.createTextNode(' None currently in index'));
-        }
-        return p;
-      }));
-      var ft = solr.schemaTypes[df.type];
-      $('#mainInfo').append(solr.createNameValueText('Field Type', function(p) {
-        p.appendChild(solr.createLink(df.type, df.type, solr.displayFieldType));
-        return p;
-      }));
-      if (df.flags != undefined) {
-        $('#mainInfo').append(solr.createNameValueText('Properties', solr.createTextFromFlags(df.flags, df.type)));
-      }
-      solr.displayAnalyzer(ft.indexAnalyzer, 'Index Analyzer', true);
-      solr.displayAnalyzer(ft.queryAnalyzer, 'Query Analyzer', true);
-
-      solr.toggleMenus('dynFields', ['fields', 'types'], dynamicPattern);
-    },
-    
-    // display a field type in the main area
-    displayFieldType: function(typeName) {
-      var ft = solr.schemaTypes[typeName];
-      $('#mainInfo').html('');
-      $('#topTerms').html('');
-      $('#histogram').html('');
-			$('#mainInfo').append(solr.createSimpleText('Field Type: ' + typeName));
-        $('#mainInfo').append(solr.createNameValueText('Fields', function(p) {
-          if (ft.fields != undefined) {
-            $.each(ft.fields, function(i, item) {
-              if (solr.schemaFields[item] != undefined) {
-                p.appendChild(solr.createLink(item, item));
-              } else {
-                p.appendChild(solr.createLink(item, item, solr.displayDynamicField));
-              }
-              p.appendChild(document.createTextNode(' '));
-            });
-          } else {
-            p.appendChild(document.createTextNode('No fields in index'));
-          }
-          return p;
-        }));
-      $('#mainInfo').append(solr.createNameValueText('Tokenzied', ft.tokenized));
-      $('#mainInfo').append(solr.createNameValueText('Class Name', ft.className));
-
-      solr.displayAnalyzer(ft.indexAnalyzer, 'Index Analyzer');
-      solr.displayAnalyzer(ft.queryAnalyzer, 'Query Analyzer');
-      solr.toggleMenus('types', ['fields', 'dynFields'], typeName);
-    },
-    
-    //Displays information about an Analyzer in the main content area
-    displayAnalyzer: function(analyzer, type, shouldCollapse) {
-      var tid = type.replace(' ', '');
-      var collapse = shouldCollapse && (analyzer.tokenizer != undefined || analyzer.filters != undefined);
-      $('#mainInfo').append(solr.createNameValueText(type, function(p) {
-        p.appendChild(document.createTextNode(analyzer.className + ' '));
-        if (collapse) {
-          p.appendChild(solr.createLink(type, 'Details', function() {
-            $('#'+tid).toggle("slow");
-          }));
-        }
-        return p;
-      }));
-      var adiv = document.createElement('div');
-      adiv.id=tid;
-      adiv.className='analyzer';
-      if (collapse) {
-        adiv.style.display='none';
-      }
-      if (analyzer.tokenizer != undefined) {
-        adiv.appendChild(solr.createNameValueText("Tokenizer Class", analyzer.tokenizer.className));
-      }
-      if (analyzer.filters != undefined) {
-        adiv.appendChild(solr.createNameValueText('Filters', ''));
-        var f = document.createElement('ol');
-        $.each(analyzer.filters, function(i, item) {
-          var fil = document.createElement('li');
-          var filterText = item.className;
-          if (item.args != undefined) {
-            filterText += ' args:{'
-            $.each(item.args, function(fi, fitem) {
-              filterText += fi + ': ' + fitem + ' ';
-            });
-            filterText +='}';
-            fil.innerHTML = filterText;
-            f.appendChild(fil);
-          }
-        });
-        adiv.appendChild(f);
-      }
-      $('#mainInfo').append(adiv);
-    },
-    
-    // display information about a Field in the main content area
-    // and its TopTerms and Histogram in related divs
-		displayField: function(fieldName) {
-      var field = solr.schemaFields[fieldName];
-      var isDynamic = field.dynamicBase != undefined ? true : false;
-      var ft;
-      var ftName;
-      $('#mainInfo').html('');  
-      $('#topTerms').html('');
-      $('#histogram').html('');
-      $('#mainInfo').append(solr.createSimpleText('Field: ' + fieldName));
-      
-      //For regular fields, we take their properties; for dynamicFields,
-      // we take them from their dynamicField definitions
-      if (isDynamic) {
-        ftName = solr.schemaDynamicFields[field.dynamicBase].type
-        $('#mainInfo').append(solr.createNameValueText('Dynamically Created From Pattern', function(p) {
-          p.appendChild(solr.createLink(field.dynamicBase, field.dynamicBase, solr.displayDynamicField));
-          return p;
-        }));
-      } else {
-        ftName = field.type;
-      }			
-      ft = solr.schemaTypes[field.type];
-      $('#mainInfo').append(solr.createNameValueText('Field Type', function(p) {
-        p.appendChild(solr.createLink(ftName, ftName, solr.displayFieldType));
-        return p;
-      }));
-			if (solr.schemaFlags != '') {
-        $.each({'flags':'Properties', 'schema':'Schema', 'index':'Index'}, function(prop, text) {
-          if (field[prop] != undefined) {
-            $('#mainInfo').append(solr.createNameValueText(text, solr.createTextFromFlags(field[prop], ft)));
-          }
-        });
-      }    
-      $.each({'copySources':'Copied From', 'copyDests':'Copied Into'}, function(prop, text) {
-        if (field[prop] != undefined && field[prop] != '') {
-          $('#mainInfo').append(solr.createNameValueText(text, function(p) {
-            $.each(field[prop], function(i, item) {
-              p.appendChild(solr.createLink(item, item));
-              p.appendChild(document.createTextNode(' '));
-            });
-            return p;
-          }));
-        }
-      });
-      if (field.positionIncrementGap != undefined) {
-        $('#mainInfo').append(solr.createNameValueText('Position Increment Gap', field.positionIncrementGap));
-      }
-      solr.displayAnalyzer(ft.indexAnalyzer, 'Index Analyzer', true);
-      solr.displayAnalyzer(ft.queryAnalyzer, 'Query Analyzer', true);
-      if (field.docs != undefined) {
-        $('#mainInfo').append(solr.createNameValueText('Docs', field.docs));
-      }
-      if (field.distinct != undefined) {
-        $('#mainInfo').append(solr.createNameValueText('Distinct', field.distinct));
-      }
-
-      if (field.topTerms != undefined) {
-        solr.displayTopTerms(field.topTerms, fieldName);
-      }
-
-      if (field.histogram != undefined) {
-        solr.drawHistogram(field.histogram);
-      }
-      solr.toggleMenus('fields', ['types', 'dynFields'], fieldName);
-		},	
-
-    //utility method to create a single sentence list of properties from a flag set
-    // or pass it on, if the flags are (unstored field)
-		createTextFromFlags: function(fieldFlags, fieldType) {
-			var value;
-      if (fieldFlags != '(unstored field)') {
-        var value = '';      
-        for (var i=0;i<fieldFlags.length;i++) {
-          if (fieldFlags.charAt(i) != '-') {
-            value += solr.schemaFlags[fieldFlags.charAt(i)];
-          value += ', ';
-          }
-        }
-        value = value.substring(0, value.length-2);
-			} else {
-      value = fieldFlags;
-      }
-			return value;
-		},
-
-    //Store the currently highlighted menu item, as otherwise we
-    // must traverse all li menu items, which is very slow on schemas with
-    // large number of fields
-    // for example $('#menu ul li').siblings().removeClass('selected');
-    currentlyHighlightedMenuId: undefined,
-    
-    //add a highlight to the currently selected menu item, and remove
-    // the highlights from all other menu items
-    highlightMenuItem: function(idToSelect) {
-      if (solr.currentlyHighlightedMenuId != undefined) {
-        $('#'+solr.currentlyHighlightedMenuId).removeClass('selected');
-      }
-      $('#'+idToSelect).addClass('selected');
-      solr.currentlyHighlightedMenuId = idToSelect;
-    },
-    
-    //Opens one menu group, close the others, and optionally highlight one
-    // item, which should be in the opened menu
-    toggleMenus: function(idToShow, idsToHide, idToSelect) {
-      if (idToSelect != undefined) {
-        solr.highlightMenuItem(idToShow + idToSelect);
-      }
-      $('#'+idToShow).show("slow");
-      $.each(idsToHide, function(i, idToHide) {
-        $('#'+idToHide).hide("slow");
-      });
-    },
-    
-    //A utility method to create a paragraph, which takes two arguments;
-    // an opening text, and either text or a callback function to follow
-    // any callback function must return the node passed into it
-    createNameValueText: function(openingText, func) {
-      var p = document.createElement('p');
-      p.appendChild(solr.createSimpleText(openingText + ': ', 'b'));
-      return solr.applyFuncToNode(p, func);
-    },
-
-    //utility method to create an HTML text element node
-    // with the literal text to place, and an optional function to apply
-    // any callback function must return the node passed into it 
-    createSimpleText: function(text, n, func) {
-      if (n == undefined) {
-        n = 'h2';
-      }
-      var no= document.createElement(n);
-      no.appendChild(document.createTextNode(text));
-      return solr.applyFuncToNode(no, func);
-    },
-    
-    //Utility method that applies a function or a string to append
-    // an additional child to a node
-    applyFuncToNode: function(no, func) {
-      if ($.isFunction(func)) {
-        no = func(no);
-      } else {
-        // if it is not a function, append it as a string
-        if (func != undefined) {
-          no.appendChild(document.createTextNode(' ' + func));
-        }
-      }
-      return no;
-    },
-        
-    //show a table of top terms for a given field
-    displayTopTerms: function(topTerms, fieldName) {
-        $('#topTerms').html('');
-        var tbl = document.createElement('table');
-        tbl.className='topTerms';
-        var thead= document.createElement('thead');
-        var headerRow = document.createElement('tr');
-        $.each(['term', 'frequency'], function() {
-          var cell = document.createElement('th');
-          cell.innerHTML= this;
-          headerRow.appendChild(cell);
-        });
-        thead.appendChild(headerRow);
-        tbl.appendChild(thead);
-        var tbody = document.createElement('tbody');
-        
-        var numTerms = 0;
-        $.each(topTerms, function(term, count) {
-          var row = document.createElement('tr');
-          var c1 = document.createElement('td');
-          c1.innerHTML=term;
-          var c2 = document.createElement('td');
-          c2.innerHTML=count;
-          row.appendChild(c1);
-          row.appendChild(c2);
-          tbody.appendChild(row);
-          numTerms++;
-        });
-        tbl.appendChild(tbody);
-        
-        //create a header along with an input widget so the user
-        // can request a different number of Top Terms
-        var h2 = document.createElement('h2');
-        h2.appendChild(document.createTextNode('Top   '));
-        var termsGetter = document.createElement('input');
-        termsGetter.type='text';
-        termsGetter.size=5;
-        termsGetter.value=numTerms;
-        
-        termsGetter.onchange=function() {
-            solr.getTopTerms(fieldName, this.value, solr.displayTopTerms);
-        }
-        h2.appendChild(termsGetter);
-        h2.appendChild(document.createTextNode(' Terms'));
-        $('#topTerms').append(h2);
-        
-        document.getElementById('topTerms').appendChild(tbl);
-        $('#topTerms').append(tbl);
-    },
-    
-    //draws a histogram, taking a map of values and an optional total height and width for the table
-    drawHistogram: function(histogram, totalHeightArg, totalWidthArg) {
-      $('#histogram').html('');
-      $('#histogram').append(solr.createSimpleText('Histogram'));
-      var max = 0;
-      var bars =0;
-      //find the # of columns and max value in the histogram 
-      // so we can create an appropriately scaled chart
-      $.each(histogram, function(i, item) {
-        if (item > max) max = item;
-        bars += 1;
-      });
-      if (max ==0) {
-        $('#histogram').append(solr.createNameValueText('No histogram available'));
-      } else {
-        var totalHeight = totalHeightArg == undefined ? 208 : totalHeightArg;
-        var totalWidth = totalWidthArg == undefined ? 160 : totalWidthArg;
-        var tbl = document.createElement('table');
-        tbl.style.width=totalWidth+'px';
-        tbl.className = 'histogram';
-        var h = document.createElement('tbody');
-        var r = document.createElement('tr');
-        var r2 = document.createElement('tr');
-        $.each(histogram, function(i, item) {
-          var c = document.createElement('td');
-          c.innerHTML=item+'<div style="width:'+totalWidth/bars+'px;height:'+(item*totalHeight/max)+'px;background:blue">&nbsp</div>';
-          r.appendChild(c);
-          var c2 = document.createElement('td');
-          c2.innerHTML='' + i;
-          r2.appendChild(c2);
-        });
-        h.appendChild(r);
-        h.appendChild(r2);
-        tbl.appendChild(h);
-        $('#histogram').append(tbl);
-      }
-    },
-    
-    //dynamically creates a link to be appended
-    createLink: function(idToDisplay, linkText, linkFunction) {
-      var link = document.createElement('a');
-      if (!$.isFunction(linkFunction)) {
-        linkFunction = solr.displayField
-      }
-      link.onclick=function() {
-        linkFunction(idToDisplay);
-        return false;
-      };
-      link.href='#';
-      link.innerHTML=linkText;
-      return link;
-    },
-    
-    //Creates a menu header that can expand or collapse its children
-    createMenuHeader: function(text, idToShow, idsToHide) {
-      var head = document.createElement('h3');
-      var a = document.createElement('a');
-      a.onclick=function() {
-        solr.toggleMenus(idToShow, idsToHide);
-        return false;
-      };
-      a.href='#';
-      a.innerHTML=text;
-      head.appendChild(a);
-      return head;
-    },
-    
-    //Creates an element in a menu (e.g. each field in a list of fields)
-    createMenuItem: function(tagName, text, link, type, func) {
-        var fieldEle = document.createElement('li');
-        fieldEle.id=type+text;
-        var funct = func == undefined ? undefined : func;
-        fieldEle.appendChild(solr.createLink(text, link, funct));
-        return fieldEle;
-    },
-    
-    //populates the menu div
-    createMenu: function(menuId) {
-      var m = $('#'+menuId);
-      var home = document.createElement('h2');
-      home.appendChild(solr.createLink('Home', 'Home', solr.displaySchemaInfo));
-      m.append(home);
-      m.append(solr.createMenuHeader('Fields', 'fields', ['types', 'dynFields']));
-      var fields= document.createElement('ul');
-      fields.style.display='none';
-      fields.id = 'fields';
-      $.each(solr.schemaFields, function(i, item) {
-        fields.appendChild(solr.createMenuItem('li', i, i, fields.id));
-      });
-      m.append(fields);
-      m.append(solr.createMenuHeader('Dynamic Fields', 'dynFields', ['fields', 'types']));
-      var dyns = document.createElement('ul');
-      dyns.style.display = 'none';
-      dyns.id = 'dynFields';
-      $.each(solr.schemaDynamicFields, function(i, item) {
-        dyns.appendChild(solr.createMenuItem('li', i,i, dyns.id, solr.displayDynamicField));
-      });
-      m.append(dyns);
-      m.append(solr.createMenuHeader('Field Types', 'types', ['fields', 'dynFields']));
-      var types = document.createElement('ul');
-      types.style.display='none';
-      types.id='types';
-      $.each(this.schemaTypes, function(i, item) {
-        types.appendChild(solr.createMenuItem('li', i, i,types.id, solr.displayFieldType));
-      });
-      m.append(types);
-    }
-   };
-   
-	window[libName] = solr;
-})(jQuery, 'solr');
-$(document).ready(function() {
-  solr.init();
-});
-    
-$(window).unload( function() {
-  solr = null;
-  $('#mainInfo').html('');
-  $('#menu').html('');
-  $('#topTerms').html('');
-  $('#histogram').html('');
-});
-  
-</script>
-<%-- do a verbatim include so we can use the local vars --%>
-<%@include file="header.jsp" %>
-<div id="schemaTop">
-<h2>Schema Browser | See <a href="file/?file=schema.xml">Raw Schema.xml</a></h2>
-</div>
-<div id="menu"></div>
-<div id="content">
-<div id="mainInfo"><h2>Please wait...loading and parsing Schema Information from LukeRequestHandler</h2><p>If it does not load or your browser is not javascript or ajax-capable, you may wish to examine your schema using the <a href="luke?wt=xslt&tr=luke.xsl">Server side transformed LukeRequestHandler</a> or the raw <a href="file/?file=schema.xml">schema.xml</a> instead.</div>
-<div id="topTerms"></div>
-<div id="histogram"></div>
-</div>
-</body>
-</html>
diff --git a/src/webapp/resources/admin/solr-admin.css b/src/webapp/resources/admin/solr-admin.css
deleted file mode 100644
index 3af3db3..0000000
--- a/src/webapp/resources/admin/solr-admin.css
+++ /dev/null
@@ -1,206 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-h1, h2, h3, h4, h5 {
-   display: block;
-   font-family: ITC Officina Sans Book, Terminator Two, Helvetica, Arial, sans-serif;
-   font-style: bold;
-   margin: 0;
-}
-
-strong {
-   font-family: ITC Officina Sans Book, Terminator Two, Helvetica, Arial, sans-serif;
-   font-style: bold;
-   margin: 0;
-}
-
-input.std, textarea.std {
-   color: black;
-   border: 2px inset #ff9933;
-   background-color: #ffffff;
-   width:450px;
-   max-width:450px;
-}
-
-input.stdbutton {
-   font-family: ITC Officina Sans Book, Helvetica, Arial, sans-serif;
-   font-style: bold;
-   font-size: 11;
-   text-transform: capitalize;
-   color: black;
-   background-color: #dddddd;
-   border: groove #ff9933;
-}
-
-input.stdbutton:hover {
-   color: #0000ff;
-   border: groove #0000ff;
-}
-
-
-body {
-   background-color: #bbbbbb;
-}
-
-table {
-   display: table;
-   background-color: #FAF7E4;
-   width: 100%;
-   border-top: 4px solid #666666;
-   border-left: 2px solid #666666;
-   text-align: left;
-   vertical-align: top;
-   cellpadding-right: 8px;
-}
-
-table.responseHeader, table.analysis {
-   width: auto;
-}
-
-table {
-   border-collapse: collapse
-}
-
-tr > td:first-child {
-   width: 30%;
-}
-
-td.debugdata, td.highlight, td.responseHeader {
-   width: auto;
-}
-
-td.highlight {
-   background:	#ccccff;
-}
-
-td.responseHeader {
-   width: auto;
-   text-align: right;
-}
-
-td.responseHeader + td {
-   text-align: left;
-   font-family: Courier;
-}
-
-
-th, td {
-   text-align: left;
-   vertical-align: top;
-   border-bottom: 1px solid #ff9933;
-}
-
-a {
-   text-decoration:	none;
-   font-weight:	bold;
-   font-size:	11px;
-   background:	#FAF7E4;
-   text-transform: uppercase;
-}
-		
-a:link {	
-   color:	#0000aa;
-}			
-					
-a:visited {	
-   color:	#0000ff;
-}			
-								
-a:active {
-   color:	#4444ff;
-}			
-
-a:hover {
-   color:	#0000ff;
-   background:	#ccccff;
-}			
-
-a:offsite {	
-   color:	#0000aa;
-}		 
-
-table.analysis th, table.analysis td {
-border-right:1px solid black;
-}
-
-/**
-  * styles for the schema browser
-  */
-
-table.topTerms {
-  width: 450px;
-}
-
-table.histogram {
-   vertical-align: bottom;
-}
-
-table.histogram td, table.histogram th {
-   text-align: center;
-   vertical-align: bottom;
-   border-bottom: 1px solid #ff9933;
-   width: auto;
-}
-
-#menu {
-  background-color: #FAF7E4;
-  height:100%;
-  min-height:100%;
-  width:140px;
-  float:left;
-  margin-right:20px
-}
-#menu h3 {
-  padding-left:10px;
-}
-#menu ul {
-  list-style: none;
-  text-align: right;
-  margin: 0;
-  padding: 0
-}
-#menu li.header {
-  text-align: left;
-}
-#menu li {
-  border: 1px solid #ff9933;
-  margin: 0
-}
-#menu li a {
-  display:block;
-}
-#menu li.selected a {
-  background-color: #ccccff
-}
-#menu a:hover {
-  background: #ccccff
-}
-
-#schemaTop {
-  border-bottom:1px black solid;
-}
-
-#content {
-  margin-left: 160px;
-}
-#topTerms {
-  float:left;
-  margin-right:40px;
-}
-div.analyzer {
-  margin-left:20px;
-}
\ No newline at end of file
diff --git a/src/webapp/resources/admin/solr-head.gif b/src/webapp/resources/admin/solr-head.gif
deleted file mode 100644
index 4bb8f53..0000000
Binary files a/src/webapp/resources/admin/solr-head.gif and /dev/null differ
diff --git a/src/webapp/resources/admin/solr-head.png b/src/webapp/resources/admin/solr-head.png
deleted file mode 100644
index a02bee8..0000000
Binary files a/src/webapp/resources/admin/solr-head.png and /dev/null differ
diff --git a/src/webapp/resources/admin/solr-lowercase.gif b/src/webapp/resources/admin/solr-lowercase.gif
deleted file mode 100644
index 6822920..0000000
Binary files a/src/webapp/resources/admin/solr-lowercase.gif and /dev/null differ
diff --git a/src/webapp/resources/admin/solr-lowercase.png b/src/webapp/resources/admin/solr-lowercase.png
deleted file mode 100644
index 0fe4e94..0000000
Binary files a/src/webapp/resources/admin/solr-lowercase.png and /dev/null differ
diff --git a/src/webapp/resources/admin/stats.jsp b/src/webapp/resources/admin/stats.jsp
deleted file mode 100644
index 89e0caf..0000000
--- a/src/webapp/resources/admin/stats.jsp
+++ /dev/null
@@ -1,91 +0,0 @@
-<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.solr.core.SolrInfoMBean,
-                 org.apache.solr.core.SolrInfoRegistry,
-                 org.apache.solr.common.util.NamedList,
-                 java.util.Date,
-                 java.util.Map"%>
-<?xml-stylesheet type="text/xsl" href="stats.xsl"?>
-<%@include file="_info.jsp" %>
-
-
-<solr>
-  <core><%=core.getName()%></core>
-  <schema><%= collectionName %></schema>
-  <host><%= hostname %></host>
-  <now><%= new Date().toString() %></now>
-  <start><%= new Date(core.getStartTime()) %></start>
-  <solr-info>
-<%
-for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) {
-%>
-    <<%= cat.toString() %>>
-<%
- Map<String,SolrInfoMBean> reg = core.getInfoRegistry();
- synchronized(reg) {
-  for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {
-    String key = entry.getKey();
-    SolrInfoMBean m = entry.getValue();
-
-    if (m.getCategory() != cat) continue;
-
-    NamedList nl = m.getStatistics();
-    if ((nl != null) && (nl.size() != 0)) {
-      String na     = "None Provided";
-      String name   = (m.getName()!=null ? m.getName() : na);
-      String vers   = (m.getVersion()!=null ? m.getVersion() : na);
-      String desc   = (m.getDescription()!=null ? m.getDescription() : na);
-%>
-    <entry>
-      <name>
-        <%= key %>
-      </name>
-      <class>
-        <%= name %>
-      </class>
-      <version>
-        <%= vers %>
-      </version>
-      <description>
-        <%= desc %>
-      </description>
-      <stats>
-<%
-      for (int i = 0; i < nl.size() ; i++) {
-%>
-        <stat name="<%= nl.getName(i) %>" >
-          <%= nl.getVal(i).toString() %>
-        </stat>
-<%
-      }
-%>
-      </stats>
-    </entry>
-<%
-    }
-%>
-<%
-  }
- }
-%>
-    </<%= cat.toString() %>>
-<%
-}
-%>
-  </solr-info>
-</solr>
diff --git a/src/webapp/resources/admin/stats.xsl b/src/webapp/resources/admin/stats.xsl
deleted file mode 100644
index 80ccc91..0000000
--- a/src/webapp/resources/admin/stats.xsl
+++ /dev/null
@@ -1,445 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<!-- $Id$ -->
-<!-- $URL$ -->
-
-<xsl:stylesheet
-  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-  version="1.0">
-
-
-  <xsl:output
-    method="html"
-    indent="yes"
-    doctype-public="-//W3C//DTD HTML 4.01//EN"
-    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
-
-
-  <xsl:template match="/">
-    <html>
-      <head>
-        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
-	<link rel="icon" href="/favicon.ico" type="image/ico"></link>
-	<link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
-        <title>SOLR Statistics</title>
-      </head>
-      <body>
-        <a href=".">
-	   <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
-	   </img>
-	</a>
-        <h1>SOLR Statistics (<xsl:value-of select="solr/schema" />)</h1>
-          <xsl:value-of select="solr/host" />
-          <br clear="all" />
-        <xsl:apply-templates/>
-        <br /><br />
-        <a href=".">Return to Admin Page</a>
-      </body>
-    </html>
-  </xsl:template>
-
-  <xsl:template match="solr">
-  <table>
-    <tr>
-      <td>
-        <H3>Category</H3>
-      </td>
-      <td>
-        [<a href="#core">Core</a>]
-        [<a href="#cache">Cache</a>]
-        [<a href="#query">Query</a>]
-        [<a href="#update">Update</a>]
-        [<a href="#other">Other</a>]
-      </td>
-    </tr>
-    <tr>
-      <td>
-      </td>
-      <td>
-        Current Time: <xsl:value-of select="now" />
-      </td>
-    </tr>
-    <tr>
-      <td>
-      </td>
-      <td>
-        Server Start Time: <xsl:value-of select="start" />
-      </td>
-    </tr>
-  </table>
-  <xsl:apply-templates/>
-  </xsl:template>
-
-  <xsl:template match="solr/schema" />
-
-  <xsl:template match="solr/host" />
-
-  <xsl:template match="solr/now" />
-
-  <xsl:template match="solr/start" />
-
-  <xsl:template match="solr/solr-info">
-  <xsl:apply-templates/>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/CORE">
-    <br />
-    <a name="core"><h2>Core</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/CORE/entry">
-        <tr>
-          <td align="right">
-            <strong>name:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="name"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>class:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="class"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>version:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="version"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>description:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="description"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>stats:&#xa0;</strong>
-          </td>
-          <td>
-            <xsl:for-each select="stats/stat[@name]">
-              <xsl:value-of select="@name"/>
-              <xsl:text> : </xsl:text>
-              <xsl:variable name="name" select="@name" />
-              <xsl:value-of select="." /><br />
-            </xsl:for-each>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/CACHE">
-    <br />
-    <a name="cache"><h2>Cache</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/CACHE/entry">
-        <tr>
-          <td align="right">
-            <strong>name:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="name"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>class:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="class"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>version:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="version"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>description:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="description"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>stats:&#xa0;</strong>
-          </td>
-          <td>
-            <xsl:for-each select="stats/stat[@name]">
-              <xsl:value-of select="@name"/>
-              <xsl:text> : </xsl:text>
-              <xsl:variable name="name" select="@name" />
-              <xsl:value-of select="." /><br />
-            </xsl:for-each>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/QUERYHANDLER">
-    <br />
-    <a name="query"><h2>Query Handlers</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/QUERYHANDLER/entry">
-        <tr>
-          <td align="right">
-            <strong>name:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="name"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>class:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="class"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>version:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="version"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>description:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="description"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>stats:&#xa0;</strong>
-          </td>
-          <td>
-            <xsl:for-each select="stats/stat[@name]">
-              <xsl:value-of select="@name"/>
-              <xsl:text> : </xsl:text>
-              <xsl:variable name="name" select="@name" />
-              <xsl:value-of select="." /><br />
-            </xsl:for-each>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/UPDATEHANDLER">
-    <br />
-    <a name="update"><h2>Update Handlers</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/UPDATEHANDLER/entry">
-        <tr>
-          <td align="right">
-            <strong>name:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="name"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>class:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="class"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>version:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="version"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>description:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="description"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>stats:&#xa0;</strong>
-          </td>
-          <td>
-            <xsl:for-each select="stats/stat[@name]">
-              <xsl:value-of select="@name"/>
-              <xsl:text> : </xsl:text>
-              <xsl:variable name="name" select="@name" />
-              <xsl:value-of select="." /><br />
-            </xsl:for-each>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/OTHER">
-    <br />
-    <a name="other"><h2>Other</h2></a>
-    <table>
-        <tr>
-          <td align="right">
-            &#xa0;
-          </td>
-          <td>
-          </td>
-        </tr>
-    <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-  <xsl:template match="solr/solr-info/OTHER/entry">
-        <tr>
-          <td align="right">
-            <strong>name:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="name"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>class:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="class"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>version:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="version"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>description:&#xa0;</strong>
-          </td>
-          <td>
-            <tt><xsl:value-of select="description"/>&#xa0;</tt>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-            <strong>stats:&#xa0;</strong>
-          </td>
-          <td>
-            <xsl:for-each select="stats/stat[@name]">
-              <xsl:value-of select="@name"/>
-              <xsl:text> : </xsl:text>
-              <xsl:variable name="name" select="@name" />
-              <xsl:value-of select="." /><br />
-            </xsl:for-each>
-          </td>
-        </tr>
-        <tr>
-          <td align="right">
-          </td>
-          <td>
-          </td>
-        </tr>
-  </xsl:template>
-
-</xsl:stylesheet>
diff --git a/src/webapp/resources/admin/tabular.xsl b/src/webapp/resources/admin/tabular.xsl
deleted file mode 100644
index c043bfd..0000000
--- a/src/webapp/resources/admin/tabular.xsl
+++ /dev/null
@@ -1,139 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<!-- $Id$ -->
-<!-- $URL$ -->
-
-
-<xsl:stylesheet
-  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-  version="1.0">
-
-
-  <xsl:output
-    method="html"
-    indent="yes"
-    doctype-public="-//W3C//DTD HTML 4.01//EN"
-    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
-
-
-  <xsl:template match="/">
-    <html>
-      <head>
-        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
-        <link rel="icon" href="/favicon.ico" type="image/ico"></link>
-        <link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
-        <title>SOLR Search Results</title>
-      </head>
-      <body>
-        <a href=".">
-           <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
-           </img>
-        </a>
-        <h1>SOLR Search Results</h1>
-          <br clear="all" />
-        <xsl:apply-templates/>
-        <br /><br />
-        <a href=".">Return to Admin Page</a>
-      </body>
-    </html>
-  </xsl:template>
-
-
-  <xsl:template match="responseHeader">
-    <table name="responseHeader">
-      <xsl:apply-templates/>
-    </table>
-  </xsl:template>
-
-
-  <xsl:template match="status">
-    <tr>
-      <td name="responseHeader"><strong>Status:&#xa0;</strong></td>
-      <td><xsl:value-of select="."></xsl:value-of></td>
-    </tr>
-  </xsl:template>
-
-
-  <xsl:template match="numFields">
-    <tr>
-      <td name="responseHeader"><strong>Number of Fields:&#xa0;</strong></td>
-      <td><xsl:value-of select="."></xsl:value-of></td>
-    </tr>
-  </xsl:template>
-
-
-  <xsl:template match="numRecords">
-    <tr>
-      <td name="responseHeader"><strong>Records Returned:&#xa0;</strong></td>
-      <td><xsl:value-of select="."></xsl:value-of></td>
-    </tr>
-  </xsl:template>
-
-
-  <xsl:template match="numFound">
-    <tr>
-      <td name="responseHeader"><strong>Records Found:&#xa0;</strong></td>
-      <td><xsl:value-of select="."></xsl:value-of></td>
-    </tr>
-  </xsl:template>
-
-
-  <xsl:template match="QTime">
-    <tr>
-      <td name="responseHeader"><strong>Query time:&#xa0;</strong></td>
-      <td><xsl:value-of select="."></xsl:value-of>(ms)</td>
-    </tr>
-  </xsl:template>
-
-  <!-- YCS.. match everything.  How to match only what is not
-       matched above???
-    -->
-  <xsl:template match="responseHeader/*">
-    <tr>
-      <td name="responseHeader"><strong><xsl:value-of select="name(.)"></xsl:value-of>:&#xa0;</strong></td>
-      <td><xsl:value-of select="."></xsl:value-of></td>
-    </tr>
-  </xsl:template>
-
-  <xsl:template match="responseBody">
-    <br></br><br></br>
-    <table border="2">
-
-      <!-- table headers -->
-      <tr>
-        <xsl:for-each select="record[1]/field">
-          <th><xsl:value-of select="name"></xsl:value-of></th>
-        </xsl:for-each>
-      </tr>
-
-      <!-- table rows -->
-      <xsl:for-each select="record">
-        <tr>
-          <xsl:for-each select="field">
-            <td><xsl:value-of select="value"></xsl:value-of>&#xa0;</td>
-          </xsl:for-each>
-        </tr>
-      </xsl:for-each>
-
-    </table>
-
-
-  </xsl:template>
-
-
-</xsl:stylesheet>
diff --git a/src/webapp/resources/admin/threaddump.jsp b/src/webapp/resources/admin/threaddump.jsp
deleted file mode 100644
index 3ce2d10..0000000
--- a/src/webapp/resources/admin/threaddump.jsp
+++ /dev/null
@@ -1,117 +0,0 @@
-<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-<%@ page import="org.apache.solr.core.SolrCore,
-                 java.lang.management.ManagementFactory,
-                 java.lang.management.ThreadMXBean,
-                 java.lang.management.ThreadInfo,
-                 java.io.IOException,
-                 org.apache.solr.util.XML"%>
-
-<?xml-stylesheet type="text/xsl" href="threaddump.xsl"?>
-<%
-  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
-  if (core == null) {
-    String coreParam = request.getParameter("core");
-    core = coreParam != null? org.apache.solr.core.SolrMultiCore.getInstance().getCore(coreParam) : null;
-  }
-  if (core == null)
-    core = SolrCore.getSolrCore();
-%>
-<%!
-  static ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();
-%>
-<solr>
-  <core><%=core.getName()%></core>
-  <system>
-  <jvm>
-    <version><%=System.getProperty("java.vm.version")%></version>
-    <name><%=System.getProperty("java.vm.name")%></name>
-  </jvm>
-  <threadCount>
-    <current><%=tmbean.getThreadCount()%></current>
-    <peak><%=tmbean.getPeakThreadCount()%></peak>
-    <daemon><%=tmbean.getDaemonThreadCount()%></daemon>
-  </threadCount>
-<%
-  long[] tids;
-  ThreadInfo[] tinfos;
-  tids = tmbean.findMonitorDeadlockedThreads();
-  if (tids != null) {
-      out.println("  <deadlocks>");
-      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);
-      for (ThreadInfo ti : tinfos) {
-          printThreadInfo(ti, out);
-      }
-      out.println("  </deadlocks>");
-  }
-%>
-<%
-  tids = tmbean.getAllThreadIds();
-  tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);
-  out.println("  <threadDump>");
-  for (ThreadInfo ti : tinfos) {
-     printThreadInfo(ti, out);
-  }
-  out.println("  </threadDump>");
-%>
-  </system>
-</solr>
-
-<%!
-  static void printThreadInfo(ThreadInfo ti, JspWriter out) throws IOException {
-      long tid = ti.getThreadId();
-      out.println("    <thread>");
-      out.println("      <id>" + tid + "</id>");
-      out.print("      <name>");
-      XML.escapeCharData(ti.getThreadName(), out);
-      out.println("</name>");
-      out.println("      <state>" + ti.getThreadState() + "</state>");
-      if (ti.getLockName() != null) {
-          out.println("      <lock>" + ti.getLockName() + "</lock>");
-      }
-      if (ti.isSuspended()) {
-          out.println("      <suspended/>");
-      }
-      if (ti.isInNative()) {
-          out.println("      <inNative/>");
-      }
-      if (tmbean.isThreadCpuTimeSupported()) {
-          out.println("      <cpuTime>" + formatNanos(tmbean.getThreadCpuTime(tid)) + "</cpuTime>");
-          out.println("      <userTime>" + formatNanos(tmbean.getThreadUserTime(tid)) + "</userTime>");
-      }
-
-      if (ti.getLockOwnerName() != null) {
-          out.println("      <owner>");
-          out.println("        <name>" + ti.getLockOwnerName() + "</name>");
-          out.println("        <id>" + ti.getLockOwnerId() + "</id>");
-          out.println("      </owner>");
-      }
-      out.println("      <stackTrace>");
-      for (StackTraceElement ste : ti.getStackTrace()) {
-          out.print("        <line>");
-          XML.escapeCharData("at " + ste.toString(), out);
-          out.println("        </line>");
-      }
-      out.println("      </stackTrace>");
-      out.println("    </thread>");
-  }
-
-  static String formatNanos(long ns) {
-      return String.format("%.4fms", ns / (double) 1000000);
-  }
-%>
diff --git a/src/webapp/resources/admin/threaddump.xsl b/src/webapp/resources/admin/threaddump.xsl
deleted file mode 100644
index 999b05d..0000000
--- a/src/webapp/resources/admin/threaddump.xsl
+++ /dev/null
@@ -1,101 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<!-- $Id$ -->
-<!-- $URL$ -->
-
-<xsl:stylesheet
-  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-  version="1.0">
-
-  <xsl:output
-    method="html"
-    indent="yes"
-    doctype-public="-//W3C//DTD HTML 4.01//EN"
-    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
-
-  <xsl:template match="/">
-    <html>
-      <head>
-        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
-        <link rel="icon" href="/favicon.ico" type="image/ico"></link>
-        <link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
-        <title>SOLR Info</title>
-      </head>
-      <body>
-        <a href="">
-          <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR"/>
-        </a>
-        <h1>Solr Admin (<xsl:value-of select="solr/meta/collection" />)</h1>
-        <h2>Thread Dump</h2>
-        <div style="margin-top: 1em;">
-          <table>
-            <xsl:apply-templates/>
-          </table>
-          <a href=".">Return to Admin Page</a>
-        </div>
-      </body>
-    </html>
-  </xsl:template>
-
-  <xsl:include href="meta.xsl"/>
-
-  <xsl:template match="solr/system/jvm">
-    <tr>
-      <td><xsl:value-of select="name"/> <xsl:value-of select="version"/></td>
-    </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/system/threadCount">
-    <tr>
-      <td>
-        Thread Count:
-        current=<xsl:value-of select="current"/>,
-        peak=<xsl:value-of select="peak"/>,
-        daemon=<xsl:value-of select="daemon"/></td>
-    </tr>
-  </xsl:template>
-
-  <xsl:template match="solr/system/threadDump">
-    <div>Full Thread Dump:</div>
-    <xsl:for-each select="thread">
-      <!-- OG: TODO: add suspended/native conditionals -->
-      <tr>
-        <td style="margin-left: 1em; font-weight: bold;">
-          '<xsl:value-of select="name"/>' 
-          Id=<xsl:value-of select="id"/>, 
-          <xsl:value-of select="state"/> 
-          on lock=<xsl:value-of select="lock"/>, 
-          total cpu time=<xsl:value-of select="cpuTime"/> 
-          user time=<xsl:value-of select="userTime"/>
-        </td>
-      </tr>
-      <xsl:apply-templates select="stackTrace"/>
-    </xsl:for-each>
-  </xsl:template>
-
-  <xsl:template match="stackTrace">
-    <tr>
-      <td style="margin-left: 1em;">
-        <xsl:for-each select="line">
-          <xsl:value-of select="."/><br/>
-        </xsl:for-each>
-      </td>
-    </tr>
-  </xsl:template>
-
-</xsl:stylesheet>
diff --git a/src/webapp/resources/index.jsp b/src/webapp/resources/index.jsp
deleted file mode 100644
index 4848dc1..0000000
--- a/src/webapp/resources/index.jsp
+++ /dev/null
@@ -1,40 +0,0 @@
-<%--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
---%>
-
-<html>
-<head>
-<link rel="stylesheet" type="text/css" href="solr-admin.css">
-<link rel="icon" href="favicon.ico" type="image/ico"></link>
-<link rel="shortcut icon" href="favicon.ico" type="image/ico"></link>
-<title>Welcome to Solr</title>
-</head>
-
-<body>
-<h1>Welcome to Solr!</h1>
-<a href="."><img border="0" align="right" height="61" width="142" src="admin/solr-head.gif" alt="Solr"/></a>
-
-<% 
-  org.apache.solr.core.MultiCore multicore = org.apache.solr.core.SolrMultiCore.getInstance();
-  if( multicore.isEnabled() ) { 
-    for( org.apache.solr.core.SolrCore core : multicore.getCores() ) {%>
-<a href="<%= core.getName() %>/admin/">Admin <%= core.getName() %> </a><br/>
-<% }} else { %>
-<a href="admin/">Solr Admin</a>
-<% } %>
-
-</body>
-</html>
diff --git a/src/webapp/web/WEB-INF/web.xml b/src/webapp/web/WEB-INF/web.xml
new file mode 100644
index 0000000..13669b3
--- /dev/null
+++ b/src/webapp/web/WEB-INF/web.xml
@@ -0,0 +1,95 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<web-app>
+
+  <!-- Uncomment if you are trying to use a Resin version before 3.0.19.
+    Their XML implementation isn't entirely compatible with Xerces.
+    Below are the implementations to use with Sun's JVM.
+  <system-property javax.xml.xpath.XPathFactory=
+             "com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl"/>
+  <system-property javax.xml.parsers.DocumentBuilderFactory=
+             "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl"/>
+  <system-property javax.xml.parsers.SAXParserFactory=
+             "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl"/>
+   -->
+
+  <!-- Any path (name) registered in solrconfig.xml will be sent to that filter -->
+  <filter>
+    <filter-name>SolrRequestFilter</filter-name>
+    <filter-class>org.apache.solr.servlet.SolrDispatchFilter</filter-class>
+    <!--
+    <init-param>
+      <param-name>path-prefix</param-name>
+      <param-value>/xxx</param-value>
+    </init-param>
+    -->
+  </filter>
+  <filter-mapping>
+    <filter-name>SolrRequestFilter</filter-name>
+    <url-pattern>/*</url-pattern>
+  </filter-mapping>
+
+  <!-- Otherwise it will continue to the old servlets -->
+  
+  <servlet>
+    <servlet-name>SolrServer</servlet-name>
+    <display-name>Solr</display-name>
+    <description>Solr Server</description>
+    <servlet-class>org.apache.solr.servlet.SolrServlet</servlet-class>
+    <load-on-startup>1</load-on-startup>
+  </servlet>
+
+  <servlet>
+    <servlet-name>SolrUpdate</servlet-name>
+    <display-name>SolrUpdate</display-name>
+    <description>Solr Update Handler</description>
+    <servlet-class>org.apache.solr.servlet.SolrUpdateServlet</servlet-class>
+    <load-on-startup>2</load-on-startup>
+  </servlet>
+
+  <!-- @Deprecated -->
+  <servlet>
+    <servlet-name>ping</servlet-name>
+    <jsp-file>/admin/ping.jsp</jsp-file>
+  </servlet>
+
+  <servlet-mapping>
+    <servlet-name>SolrServer</servlet-name>
+    <url-pattern>/select/*</url-pattern>
+  </servlet-mapping>
+
+  <servlet-mapping>
+    <servlet-name>SolrUpdate</servlet-name>
+    <url-pattern>/update/*</url-pattern>
+  </servlet-mapping>
+
+  <!-- @Deprecated -->
+  <servlet-mapping>
+    <servlet-name>ping</servlet-name>
+    <url-pattern>/admin/ping</url-pattern>
+  </servlet-mapping>
+  
+  <mime-mapping>
+    <extension>.xsl</extension>
+    <!-- per http://www.w3.org/TR/2006/PR-xslt20-20061121/ -->
+    <mime-type>application/xslt+xml</mime-type>
+  </mime-mapping>
+
+</web-app>
diff --git a/src/webapp/web/admin/_info.jsp b/src/webapp/web/admin/_info.jsp
new file mode 100644
index 0000000..371f304
--- /dev/null
+++ b/src/webapp/web/admin/_info.jsp
@@ -0,0 +1,109 @@
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.solr.core.SolrConfig,
+                 org.apache.solr.core.SolrCore,
+                 org.apache.solr.schema.IndexSchema,
+                 java.io.File"%>
+<%@ page import="java.net.InetAddress"%>
+<%@ page import="java.io.StringWriter"%>
+<%@ page import="org.apache.solr.core.Config"%>
+<%@ page import="org.apache.solr.util.XML"%>
+<%@ page import="org.apache.lucene.LucenePackage"%>
+<%@ page import="java.net.UnknownHostException" %>
+
+
+<%
+  // 
+  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
+  if (core == null)
+    core = SolrCore.getSolrCore();
+    
+  SolrConfig solrConfig = core.getSolrConfig();
+  int port = request.getServerPort();
+  IndexSchema schema = core.getSchema();
+
+  // enabled/disabled is purely from the point of a load-balancer
+  // and has no effect on local server function.  If there is no healthcheck
+  // configured, don't put any status on the admin pages.
+  String enabledStatus = null;
+  String enabledFile = solrConfig.get("admin/healthcheck/text()",null);
+  boolean isEnabled = false;
+  if (enabledFile!=null) {
+    isEnabled = new File(enabledFile).exists();
+  }
+
+  String collectionName = schema!=null ? schema.getName():"unknown";
+  InetAddress addr = null;
+  String hostname = "unknown";
+  try {
+    addr = InetAddress.getLocalHost();
+    hostname = addr.getCanonicalHostName();
+  } catch (UnknownHostException e) {
+    //default to unknown
+  }
+
+  String defaultSearch = "";
+  { 
+    StringWriter tmp = new StringWriter();
+    XML.escapeCharData
+      (solrConfig.get("admin/defaultQuery/text()", null), tmp);
+    defaultSearch = tmp.toString();
+  }
+
+  String solrImplVersion = "";
+  String solrSpecVersion = "";
+  String luceneImplVersion = "";
+  String luceneSpecVersion = "";
+
+  { 
+    Package p;
+    StringWriter tmp;
+
+    p = SolrCore.class.getPackage();
+
+    tmp = new StringWriter();
+    solrImplVersion = p.getImplementationVersion();
+    if (null != solrImplVersion) {
+      XML.escapeCharData(solrImplVersion, tmp);
+      solrImplVersion = tmp.toString();
+    }
+    tmp = new StringWriter();
+    solrSpecVersion = p.getSpecificationVersion() ;
+    if (null != solrSpecVersion) {
+      XML.escapeCharData(solrSpecVersion, tmp);
+      solrSpecVersion = tmp.toString();
+    }
+  
+    p = LucenePackage.class.getPackage();
+
+    tmp = new StringWriter();
+    luceneImplVersion = p.getImplementationVersion();
+    if (null != luceneImplVersion) {
+      XML.escapeCharData(luceneImplVersion, tmp);
+      luceneImplVersion = tmp.toString();
+    }
+    tmp = new StringWriter();
+    luceneSpecVersion = p.getSpecificationVersion() ;
+    if (null != luceneSpecVersion) {
+      XML.escapeCharData(luceneSpecVersion, tmp);
+      luceneSpecVersion = tmp.toString();
+    }
+  }
+  
+  String cwd=System.getProperty("user.dir");
+  String solrHome= solrConfig.getInstanceDir();
+%>
diff --git a/src/webapp/web/admin/action.jsp b/src/webapp/web/admin/action.jsp
new file mode 100644
index 0000000..978c530
--- /dev/null
+++ b/src/webapp/web/admin/action.jsp
@@ -0,0 +1,116 @@
+<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.solr.util.XML"%>
+<%@ page import="org.apache.solr.core.SolrCore,
+                 org.apache.solr.schema.IndexSchema,
+                 java.io.File,
+                 java.net.InetAddress,
+                 java.net.UnknownHostException"%>
+<%@ page import="java.util.Date"%>
+<%@ page import="java.util.logging.Level"%>
+<%@ page import="java.util.logging.Logger"%>
+<%@include file="header.jsp" %>
+<%
+
+  String action = request.getParameter("action");
+  String logging = request.getParameter("log");
+  String enableActionStatus = "";
+  boolean isValid = false;
+
+  if (action != null) {
+    // Validate fname
+    if ("Enable".compareTo(action) == 0) isValid = true;
+    if ("Disable".compareTo(action) == 0) isValid = true;
+  }
+  if (logging != null) {
+    action = "Set Log Level";
+    isValid = true;
+  }
+  if (isValid) {
+    if ("Enable".compareTo(action) == 0) {
+      try {
+        File enableFile = new File(enabledFile);
+        if (enableFile.createNewFile()) {
+          enableActionStatus += "Enable Succeeded (enable file ";
+          enableActionStatus += enabledFile;
+          enableActionStatus += " created)";
+        } else {
+          enableActionStatus += "Already Enabled";
+        }
+      } catch(Exception e) {
+          enableActionStatus += "Enable Failed: " + e.toString();
+      }
+    }
+    if ("Disable".compareTo(action) == 0) {
+      try {
+        File enableFile = new File(enabledFile);
+        if (enableFile.delete()) {
+          enableActionStatus = "Disable Succeeded (enable file ";
+          enableActionStatus += enabledFile;
+          enableActionStatus += " removed)";
+        } else {
+          enableActionStatus = "Already Disabled";
+        }
+      } catch(Exception e) {
+          enableActionStatus += "Disable Failed: " + e.toString();
+      }
+    }
+    if (logging != null) {
+      try {
+        Logger log = SolrCore.log;
+        Logger parent = log.getParent();
+        while (parent != null) {
+          log = parent;
+          parent = log.getParent();
+        }
+        log.setLevel(Level.parse(logging));
+        enableActionStatus = "Set Log Level (" + logging + ") Succeeded";
+      } catch(Exception e) {
+          enableActionStatus += "Set Log Level (" + logging + ") Failed: "
+                                 + e.toString();
+      }
+    }
+  } else {
+    enableActionStatus = "Illegal Action";
+  }
+  // :TODO: might want to rework this so any logging change happens *after*
+  SolrCore.log.log(Level.INFO, enableActionStatus);
+%>
+<br clear="all">
+<table>
+  <tr>
+    <td>
+      <H3>Action:</H3>
+    </td>
+    <td>
+      <% XML.escapeCharData(action, out); %><br>
+    </td>
+  </tr>
+  <tr>
+    <td>
+      <H4>Result:</H4>
+    </td>
+    <td>
+      <% XML.escapeCharData(enableActionStatus, out); %><br>
+    </td>
+  </tr>
+</table>
+<br><br>
+    <a href=".">Return to Admin Page</a>
+</body>
+</html>
diff --git a/src/webapp/web/admin/analysis.jsp b/src/webapp/web/admin/analysis.jsp
new file mode 100644
index 0000000..fe6d3f4
--- /dev/null
+++ b/src/webapp/web/admin/analysis.jsp
@@ -0,0 +1,418 @@
+<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.lucene.analysis.Analyzer,
+                 org.apache.lucene.analysis.Token,
+                 org.apache.lucene.analysis.TokenStream,
+                 org.apache.solr.analysis.TokenFilterFactory,
+                 org.apache.solr.analysis.TokenizerChain,
+                 org.apache.solr.analysis.TokenizerFactory,
+                 org.apache.solr.schema.FieldType,
+                 org.apache.solr.schema.SchemaField,
+                 org.apache.solr.util.XML,
+                 javax.servlet.jsp.JspWriter,java.io.IOException
+                "%>
+<%@ page import="java.io.Reader"%>
+<%@ page import="java.io.StringReader"%>
+<%@ page import="java.util.*"%>
+
+<%-- $Id$ --%>
+<%-- $Source: /cvs/main/searching/org.apache.solrolarServer/resources/admin/analysis.jsp,v $ --%>
+<%-- $Name:  $ --%>
+
+<%@include file="header.jsp" %>
+
+<%
+  // is name a field name or a type name?
+  String nt = request.getParameter("nt");
+  if (nt==null || nt.length()==0) nt="name"; // assume field name
+  nt = nt.toLowerCase().trim();
+  String name = request.getParameter("name");
+  if (name==null || name.length()==0) name="";
+  String val = request.getParameter("val");
+  if (val==null || val.length()==0) val="";
+  String qval = request.getParameter("qval");
+  if (qval==null || qval.length()==0) qval="";
+  String verboseS = request.getParameter("verbose");
+  boolean verbose = verboseS!=null && verboseS.equalsIgnoreCase("on");
+  String qverboseS = request.getParameter("qverbose");
+  boolean qverbose = qverboseS!=null && qverboseS.equalsIgnoreCase("on");
+  String highlightS = request.getParameter("highlight");
+  boolean highlight = highlightS!=null && highlightS.equalsIgnoreCase("on");
+%>
+
+<br clear="all">
+
+<h2>Field Analysis</h2>
+
+<form method="POST" action="analysis.jsp">
+<table>
+<tr>
+  <td>
+	<strong>Field
+          <select name="nt">
+	  <option <%= nt.equals("name") ? "selected=\"selected\"" : "" %> >name</option>
+	  <option <%= nt.equals("type") ? "selected=\"selected\"" : "" %>>type</option></strong>
+  </td>
+  <td>
+	<input class="std" name="name" type="text" value="<% XML.escapeCharData(name, out); %>">
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Field value (Index)</strong>
+  <br/>
+  verbose output
+  <input name="verbose" type="checkbox"
+     <%= verbose ? "checked=\"true\"" : "" %> >
+    <br/>
+  highlight matches
+  <input name="highlight" type="checkbox"
+     <%= highlight ? "checked=\"true\"" : "" %> >
+  </td>
+  <td>
+	<textarea class="std" rows="8" cols="70" name="val"><% XML.escapeCharData(val,out); %></textarea>
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Field value (Query)</strong>
+  <br/>
+  verbose output
+  <input name="qverbose" type="checkbox"
+     <%= qverbose ? "checked=\"true\"" : "" %> >
+  </td>
+  <td>
+	<textarea class="std" rows="1" cols="70" name="qval"><% XML.escapeCharData(qval,out); %></textarea>
+  </td>
+</tr>
+<tr>
+
+  <td>
+  </td>
+
+  <td>
+	<input class="stdbutton" type="submit" value="analyze">
+  </td>
+
+</tr>
+</table>
+</form>
+
+
+<%
+  SchemaField field=null;
+
+  if (name!="") {
+    if (nt.equals("name")) {
+      try {
+        field = schema.getField(name);
+      } catch (Exception e) {
+        out.println("<strong>Unknown Field: " + name + "</strong>");
+      }
+    } else {
+       FieldType t = schema.getFieldTypes().get(name);
+       if (null == t) {
+         out.println("<strong>Unknown Field Type: " + name + "</strong>");
+       } else {
+         field = new SchemaField("fakefieldoftype:"+name, t);
+       }
+    }
+  }
+
+  if (field!=null) {
+    HashSet<Tok> matches = null;
+    if (qval!="" && highlight) {
+      Reader reader = new StringReader(qval);
+      Analyzer analyzer =  field.getType().getQueryAnalyzer();
+      TokenStream tstream = analyzer.tokenStream(field.getName(),reader);
+      List<Token> tokens = getTokens(tstream);
+      matches = new HashSet<Tok>();
+      for (Token t : tokens) { matches.add( new Tok(t,0)); }
+    }
+
+    if (val!="") {
+      out.println("<h3>Index Analyzer</h3>");
+      doAnalyzer(out, field, val, false, verbose,matches);
+    }
+    if (qval!="") {
+      out.println("<h3>Query Analyzer</h3>");
+      doAnalyzer(out, field, qval, true, qverbose,null);
+    }
+  }
+
+%>
+
+
+</body>
+</html>
+
+
+<%!
+  private static void doAnalyzer(JspWriter out, SchemaField field, String val, boolean queryAnalyser, boolean verbose, Set<Tok> match) throws Exception {
+    Reader reader = new StringReader(val);
+
+    FieldType ft = field.getType();
+     Analyzer analyzer = queryAnalyser ?
+             ft.getQueryAnalyzer() : ft.getAnalyzer();
+     if (analyzer instanceof TokenizerChain) {
+       TokenizerChain tchain = (TokenizerChain)analyzer;
+       TokenizerFactory tfac = tchain.getTokenizerFactory();
+       TokenFilterFactory[] filtfacs = tchain.getTokenFilterFactories();
+
+       TokenStream tstream = tfac.create(reader);
+       List<Token> tokens = getTokens(tstream);
+       tstream = tfac.create(reader);
+       if (verbose) {
+         writeHeader(out, tfac.getClass(), tfac.getArgs());
+       }
+
+       writeTokens(out, tokens, ft, verbose, match);
+
+       for (TokenFilterFactory filtfac : filtfacs) {
+         if (verbose) {
+           writeHeader(out, filtfac.getClass(), filtfac.getArgs());
+         }
+
+         final Iterator<Token> iter = tokens.iterator();
+         tstream = filtfac.create( new TokenStream() {
+           public Token next() throws IOException {
+             return iter.hasNext() ? iter.next() : null;
+           }
+          }
+         );
+         tokens = getTokens(tstream);
+
+         writeTokens(out, tokens, ft, verbose, match);
+       }
+
+     } else {
+       TokenStream tstream = analyzer.tokenStream(field.getName(),reader);
+       List<Token> tokens = getTokens(tstream);
+       if (verbose) {
+         writeHeader(out, analyzer.getClass(), new HashMap<String,String>());
+       }
+       writeTokens(out, tokens, ft, verbose, match);
+     }
+  }
+
+
+  static List<Token> getTokens(TokenStream tstream) throws IOException {
+    List<Token> tokens = new ArrayList<Token>();
+    while (true) {
+      Token t = tstream.next();
+      if (t==null) break;
+      tokens.add(t);
+    }
+    return tokens;
+  }
+
+
+  private static class Tok {
+    Token token;
+    int pos;
+    Tok(Token token, int pos) {
+      this.token=token;
+      this.pos=pos;
+    }
+
+    public boolean equals(Object o) {
+      return ((Tok)o).token.termText().equals(token.termText());
+    }
+    public int hashCode() {
+      return token.termText().hashCode();
+    }
+    public String toString() {
+      return token.termText();
+    }
+  }
+
+  private static interface ToStr {
+    public String toStr(Object o);
+  }
+
+  private static void printRow(JspWriter out, String header, List[] arrLst, ToStr converter, boolean multival, boolean verbose, Set<Tok> match) throws IOException {
+    // find the maximum number of terms for any position
+    int maxSz=1;
+    if (multival) {
+      for (List lst : arrLst) {
+        maxSz = Math.max(lst.size(), maxSz);
+      }
+    }
+
+
+    for (int idx=0; idx<maxSz; idx++) {
+      out.println("<tr>");
+      if (idx==0 && verbose) {
+        if (header != null) {
+          out.print("<th NOWRAP rowspan=\""+maxSz+"\">");
+          XML.escapeCharData(header,out);
+          out.println("</th>");
+        }
+      }
+
+      for (int posIndex=0; posIndex<arrLst.length; posIndex++) {
+        List<Tok> lst = arrLst[posIndex];
+        if (lst.size() <= idx) continue;
+        if (match!=null && match.contains(lst.get(idx))) {
+          out.print("<td class=\"highlight\"");
+        } else {
+          out.print("<td class=\"debugdata\"");
+        }
+
+        // if the last value in the column, use up
+        // the rest of the space via rowspan.
+        if (lst.size() == idx+1 && lst.size() < maxSz) {
+          out.print("rowspan=\""+(maxSz-lst.size()+1)+'"');
+        }
+
+        out.print('>');
+
+        XML.escapeCharData(converter.toStr(lst.get(idx)), out);
+        out.print("</td>");
+      }
+
+      out.println("</tr>");
+    }
+
+  }
+
+
+
+  static void writeHeader(JspWriter out, Class clazz, Map<String,String> args) throws IOException {
+    out.print("<h4>");
+    out.print(clazz.getName());
+    XML.escapeCharData("   "+args,out);
+    out.println("</h4>");
+  }
+
+
+
+  // readable, raw, pos, type, start/end
+  static void writeTokens(JspWriter out, List<Token> tokens, final FieldType ft, boolean verbose, Set<Tok> match) throws IOException {
+
+    // Use a map to tell what tokens are in what positions
+    // because some tokenizers/filters may do funky stuff with
+    // very large increments, or negative increments.
+    HashMap<Integer,List<Tok>> map = new HashMap<Integer,List<Tok>>();
+    boolean needRaw=false;
+    int pos=0;
+    for (Token t : tokens) {
+      if (!t.termText().equals(ft.indexedToReadable(t.termText()))) {
+        needRaw=true;
+      }
+
+      pos += t.getPositionIncrement();
+      List lst = map.get(pos);
+      if (lst==null) {
+        lst = new ArrayList(1);
+        map.put(pos,lst);
+      }
+      Tok tok = new Tok(t,pos);
+      lst.add(tok);
+    }
+
+    List<Tok>[] arr = (List<Tok>[])map.values().toArray(new ArrayList[map.size()]);
+
+    /* Jetty 6.1.3 miscompiles this generics version...
+    Arrays.sort(arr, new Comparator<List<Tok>>() {
+      public int compare(List<Tok> toks, List<Tok> toks1) {
+        return toks.get(0).pos - toks1.get(0).pos;
+      }
+    }
+    */
+
+    Arrays.sort(arr, new Comparator() {
+      public int compare(Object toks, Object toks1) {
+        return ((List<Tok>)toks).get(0).pos - ((List<Tok>)toks1).get(0).pos;
+      }
+    }
+
+
+    );
+
+    out.println("<table width=\"auto\" class=\"analysis\" border=\"1\">");
+
+    if (verbose) {
+      printRow(out,"term position", arr, new ToStr() {
+        public String toStr(Object o) {
+          return Integer.toString(((Tok)o).pos);
+        }
+      }
+              ,false
+              ,verbose
+              ,null);
+    }
+
+
+    printRow(out,"term text", arr, new ToStr() {
+      public String toStr(Object o) {
+        return ft.indexedToReadable( ((Tok)o).token.termText() );
+      }
+    }
+            ,true
+            ,verbose
+            ,match
+   );
+
+    if (needRaw) {
+      printRow(out,"raw text", arr, new ToStr() {
+        public String toStr(Object o) {
+          // page is UTF-8, so anything goes.
+          return ((Tok)o).token.termText();
+        }
+      }
+              ,true
+              ,verbose
+              ,match
+      );
+    }
+
+    if (verbose) {
+      printRow(out,"term type", arr, new ToStr() {
+        public String toStr(Object o) {
+          String tt =  ((Tok)o).token.type();
+          if (tt == null) {
+             return "null";
+          } else {
+             return tt;
+          }
+        }
+      }
+              ,true
+              ,verbose,
+              null
+      );
+    }
+
+    if (verbose) {
+      printRow(out,"source start,end", arr, new ToStr() {
+        public String toStr(Object o) {
+          Token t = ((Tok)o).token;
+          return Integer.toString(t.startOffset()) + ',' + t.endOffset() ;
+        }
+      }
+              ,true
+              ,verbose
+              ,null
+      );
+    }
+
+    out.println("</table>");
+  }
+
+%>
diff --git a/src/webapp/web/admin/analysis.xsl b/src/webapp/web/admin/analysis.xsl
new file mode 100644
index 0000000..e2b48f2
--- /dev/null
+++ b/src/webapp/web/admin/analysis.xsl
@@ -0,0 +1,177 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!-- $Id$ -->
+<!-- $URL$ -->
+
+<xsl:stylesheet
+  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+  version="1.0">
+
+  <xsl:output
+    method="html"
+    indent="yes"
+    doctype-public="-//W3C//DTD HTML 4.01//EN"
+    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
+
+  <xsl:template match="/">
+    <html>
+      <head>
+        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
+        <link rel="icon" href="/favicon.ico" type="image/ico"></link>
+        <link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
+        <title>SOLR Info</title>
+      </head>
+      <body>
+        <a href="">
+          <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR"/>
+  </a>
+        <h1>Solr Admin (<xsl:value-of select="solr/meta/collection" />)</h1>
+        <div style="margin-top: 1em;">
+          <h2>Field Analysis</h2>
+          <xsl:apply-templates/>
+          <a href=".">Return to Admin Page</a>
+        </div>
+      </body>
+    </html>
+  </xsl:template>
+
+  <xsl:include href="meta.xsl"/>
+
+  <xsl:template match="solr/analysis/form">
+  <form method="POST" action="analysis.jsp">
+    <table>
+      <tr>
+        <td>
+        <strong>Field name</strong>
+        </td>
+        <td>
+          <input class="std" name="name" type="text" value="{field}"/>
+        </td>
+      </tr>
+      <tr>
+        <td>
+        <strong>Field value (Index)</strong>
+        <br/>
+        verbose output <input name="verbose" type="checkbox" checked="true"/>
+        <br/>
+        highlight matches <input name="highlight" type="checkbox" checked="true"/>
+        </td>
+        <td>
+        <textarea class="std" rows="8" cols="70" name="val"><xsl:value-of select="fieldIndexValue" /></textarea>
+        </td>
+      </tr>
+      <tr>
+        <td>
+        <strong>Field value (Query)</strong>
+        <br/>
+        verbose output <input name="qverbose" type="checkbox" checked="true"/>
+        </td>
+        <td>
+        <textarea class="std" rows="1" cols="70" name="qval"><xsl:value-of select="fieldQueryValue" /></textarea>
+        </td>
+      </tr>
+      <tr>
+        <td>
+        </td>
+        <td>
+          <input class="stdbutton" type="submit" value="analyze"/>
+        </td>
+      </tr>
+    </table>
+  </form>
+</xsl:template>
+
+<xsl:template match="solr/analysis/results/indexAnalyzer">
+  <h4>Index Analyzer</h4>
+  <xsl:for-each select="factory">
+    <h5 style="margin-left: 1em;"><xsl:apply-templates select="@class"/></h5>
+    <xsl:apply-templates/>
+  </xsl:for-each>
+</xsl:template>
+
+<xsl:template match="solr/analysis/results/indexAnalyzer/factory/args">
+  <div style="margin-left: 2em; font-weight: bold;">{
+  <xsl:for-each select="arg">
+    <xsl:apply-templates select="@name"/>=<xsl:value-of select="."/>, 
+  </xsl:for-each>
+  }</div>
+</xsl:template>
+
+<xsl:template match="solr/analysis/results/indexAnalyzer/factory/tokens">
+<div style="margin-left: 2em;">
+  <table width="auto" class="analysis" border="1">
+    <tr>
+      <th>text</th>
+      <th>type</th>
+      <th>position</th>
+      <th>start</th>
+      <th>end</th>
+    </tr>
+  <xsl:for-each select="token">
+    <tr>
+      <td><xsl:value-of select="."/></td>
+      <td><xsl:apply-templates select="@type"/></td>
+      <td><xsl:apply-templates select="@pos"/></td>
+      <td><xsl:apply-templates select="@start"/></td>
+      <td><xsl:apply-templates select="@end"/></td>
+    </tr>
+  </xsl:for-each>
+  </table>
+</div>
+</xsl:template>
+
+<xsl:template match="solr/analysis/results/queryAnalyzer">
+  <h4>Query Analyzer</h4>
+  <xsl:for-each select="factory">
+    <h5 style="margin-left: 1em;"><xsl:apply-templates select="@class"/></h5>
+    <xsl:apply-templates/>
+  </xsl:for-each>
+</xsl:template>
+
+<xsl:template match="solr/analysis/results/queryAnalyzer/factory/args">
+  <div style="margin-left: 2em; font-weight: bold;">{
+  <xsl:for-each select="arg">
+    <xsl:apply-templates select="@name"/>=<xsl:value-of select="."/>, 
+  </xsl:for-each>
+  }</div>
+</xsl:template>
+
+<xsl:template match="solr/analysis/results/queryAnalyzer/factory/tokens">
+<div style="margin-left: 2em;">
+  <table width="auto" class="analysis" border="1">
+    <tr>
+      <th>text</th>
+      <th>type</th>
+      <th>position</th>
+      <th>start</th>
+      <th>end</th>
+    </tr>
+  <xsl:for-each select="token">
+    <tr>
+      <td><xsl:value-of select="."/></td>
+      <td><xsl:apply-templates select="@type"/></td>
+      <td><xsl:apply-templates select="@pos"/></td>
+      <td><xsl:apply-templates select="@start"/></td>
+      <td><xsl:apply-templates select="@end"/></td>
+    </tr>
+  </xsl:for-each>
+  </table>
+</div>
+</xsl:template>
+
+</xsl:stylesheet>
diff --git a/src/webapp/web/admin/distributiondump.jsp b/src/webapp/web/admin/distributiondump.jsp
new file mode 100644
index 0000000..71cb416
--- /dev/null
+++ b/src/webapp/web/admin/distributiondump.jsp
@@ -0,0 +1,158 @@
+<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+
+<%@ page import="org.apache.solr.core.SolrCore,
+                 org.apache.solr.schema.IndexSchema,
+                 java.io.BufferedReader,
+                 java.io.File,
+                 java.io.FilenameFilter,
+                 java.io.FileReader,
+                 java.net.InetAddress,
+                 java.net.UnknownHostException,
+                 java.util.Date"%>
+
+<%@include file="header.jsp" %>
+
+<%
+  File slaveinfo = new File(solrHome + "logs/snappuller.status");
+
+  StringBuffer buffer = new StringBuffer();
+  StringBuffer buffer2 = new StringBuffer();
+  String mode = "";
+
+  if (slaveinfo.canRead()) {
+    // Slave instance
+    mode = "Slave";
+    File slavevers = new File(solrHome + "logs/snapshot.current");
+    BufferedReader inforeader = new BufferedReader(new FileReader(slaveinfo));
+    BufferedReader versreader = new BufferedReader(new FileReader(slavevers));
+    buffer.append("<tr>\n" +
+                    "<td>\n" +
+                      "Version:" +
+                    "</td>\n" +
+                    "<td>\n")
+          .append(    versreader.readLine())
+          .append(  "<td>\n" +
+                    "</td>\n" +
+                  "</tr>\n" +
+                  "<tr>\n" +
+                    "<td>\n" +
+                      "Status:" +
+                    "</td>\n" +
+                    "<td>\n")
+          .append(    inforeader.readLine())
+          .append(  "</td>\n" +
+                  "</tr>\n");
+  } else {
+    // Master instance
+    mode = "Master";
+    File masterdir = new File(solrHome + "logs/clients");
+    FilenameFilter sfilter = new FilenameFilter() {
+        public boolean accept(File dir, String name) {
+            return name.startsWith("snapshot.status");
+        }
+    };
+    FilenameFilter cfilter = new FilenameFilter() {
+        public boolean accept(File dir, String name) {
+            return name.startsWith("snapshot.current");
+        }
+    };
+    File[] clients = masterdir.listFiles(cfilter);
+    if (clients == null) {
+      buffer.append("<tr>\n" +
+                      "<td>\n" +
+                      "</td>\n" +
+                      "<td>\n" +
+                        "No distribution info present" +
+                      "</td>\n" +
+                    "</tr>\n");
+    } else {
+      buffer.append("<h4>Client Snapshot In Use:</h4>\n" +
+                    "<tr>\n" +
+                      "<th>\n" +
+                      "Client" +
+                      "</th>\n" +
+                      "<th>\n" +
+                      "Version" +
+                      "</th>\n" +
+                    "</tr>\n");
+      int i = 0;
+      while (i < clients.length) {
+        String fileName=clients[i].toString();
+        int p=fileName.indexOf("snapshot.current");
+        String clientName=fileName.substring(p+17);
+        BufferedReader reader = new BufferedReader(new FileReader(clients[i]));
+        buffer.append("<tr>\n" +
+                        "<td>\n" +
+                        clientName +
+                        "</td>\n" +
+                        "<td>\n")
+              .append(    reader.readLine())
+              .append(  "</td>\n" +
+                      "</tr>\n" +
+                      "<tr>\n" +
+                      "</tr>\n");
+        i++;
+      }
+      clients = masterdir.listFiles(sfilter);
+      if (clients!=null) {
+        buffer.append("</table>\n" +
+                      "<h4>Client Snapshot Distribution Status:</h4>\n" +
+                      "<table>\n" +
+                      "<tr>\n" +
+                        "<th>\n" +
+                        "Client" +
+                        "</th>\n" +
+                        "<th>\n" +
+                        "Status" +
+                        "</th>\n" +
+                      "</tr>\n");
+        i = 0;
+        while (i < clients.length) {
+          String fileName=clients[i].toString();
+          int p=fileName.indexOf("snapshot.status");
+          String clientName=fileName.substring(p+16);
+          BufferedReader reader = new BufferedReader(new FileReader(clients[i]));
+          buffer.append("<tr>\n" +
+                          "<td>\n" +
+                          clientName +
+                          "</td>\n" +
+                          "<td>\n")
+                .append(    reader.readLine())
+                .append(  "</td>\n" +
+                        "</tr>\n" +
+                        "<tr>\n" +
+                        "</tr>\n");
+          i++;
+        }
+      }
+    }
+  }
+%>
+
+
+<br clear="all">
+<h2>Distribution Info</h2>
+<h3><%= mode %> Server</h3>
+<table>
+<%= buffer %>
+</table>
+<br><br>
+    <a href=".">Return to Admin Page</a>
+</body>
+</html>
diff --git a/src/webapp/web/admin/favicon.ico b/src/webapp/web/admin/favicon.ico
new file mode 100755
index 0000000..8a77d4f
Binary files /dev/null and b/src/webapp/web/admin/favicon.ico differ
diff --git a/src/webapp/web/admin/form.jsp b/src/webapp/web/admin/form.jsp
new file mode 100644
index 0000000..88877f7
--- /dev/null
+++ b/src/webapp/web/admin/form.jsp
@@ -0,0 +1,129 @@
+<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@include file="header.jsp" %>
+
+<br clear="all">
+<form name="queryForm" method="GET" action="../select">
+<!-- these are good defaults to have if people bookmark the resulting
+     URLs, but they should not show up in the form since they are very
+     output type specific.
+  -->
+<input name="indent" type="hidden" value="on">
+<input name="version" type="hidden" value="2.2">
+
+<table>
+<tr>
+  <td>
+	<strong>Solr/Lucene Statement</strong>
+  </td>
+  <td>
+	<textarea rows="5" cols="60" name="q"><%= defaultSearch %></textarea>
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Start Row</strong>
+  </td>
+  <td>
+	<input name="start" type="text" value="0">
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Maximum Rows Returned</strong>
+  </td>
+  <td>
+	<input name="rows" type="text" value="10">
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Fields to Return</strong>
+  </td>
+  <td>
+	<input name="fl" type="text" value="*,score">
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Query Type</strong>
+  </td>
+  <td>
+	<input name="qt" type="text" value="standard">
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Output Type</strong>
+  </td>
+  <td>
+	<input name="wt" type="text" value="standard">
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Debug: enable</strong>
+  </td>
+  <td>
+	<input name="debugQuery" type="checkbox" >
+  <em><font size="-1">  Note: you may need to "view source" in your browser to see explain() correctly indented.</font></em>
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Debug: explain others</strong>
+  </td>
+  <td>
+	<input name="explainOther" type="text" >
+  <em><font size="-1">  Apply original query scoring to matches of this query to see how they compare.</font></em>
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Enable Highlighting</strong>
+  </td>
+  <td>
+	<input name="hl" type="checkbox" >
+  </td>
+</tr>
+<tr>
+  <td>
+	<strong>Fields to Highlight</strong>
+  </td>
+  <td>
+	<input name="hl.fl" type="text" >
+  </td>
+</tr>
+<tr>
+  <td>
+  </td>
+  <td>
+    <input class="stdbutton" type="submit" value="search" onclick="if (queryForm.q.value.length==0) { alert('no empty queries, please'); return false; } else { queryForm.submit(); } ">
+  </td>
+</tr>
+</table>
+</form>
+<br clear="all">
+<em>
+This form demonstrates the most common query options available for the
+built in Query Types.  Please consult the Solr Wiki for additional
+Query Parameters.
+</em>
+
+</body>
+</html>
diff --git a/src/webapp/web/admin/get-file.jsp b/src/webapp/web/admin/get-file.jsp
new file mode 100644
index 0000000..74ad4bc
--- /dev/null
+++ b/src/webapp/web/admin/get-file.jsp
@@ -0,0 +1,72 @@
+<%@ page contentType="text/plain; charset=utf-8" pageEncoding="UTF-8" %>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.solr.core.Config,
+                 org.apache.solr.core.SolrCore,
+                 org.apache.solr.core.SolrConfig,
+                 java.io.InputStream,
+                 java.io.InputStreamReader,
+                 java.io.Reader,
+                 java.util.StringTokenizer,
+                 java.util.logging.Logger"%>
+<%!
+  static Logger log = Logger.getLogger(SolrCore.class.getName());
+%>
+<%
+  // NOTE -- this file will be removed in a future release
+  log.warning("Using deprecated JSP: " + request.getRequestURL().append("?").append(request.getQueryString()) + " -- check the ShowFileRequestHandler"  );
+
+  Object ocore = request.getAttribute("org.apache.solr.SolrCore");
+  SolrCore core = ocore instanceof SolrCore? (SolrCore) ocore : SolrCore.getSolrCore();
+  String fname = request.getParameter("file");
+  String optional = request.getParameter("optional");
+  String gettableFiles = core.getSolrConfig().get("admin/gettableFiles","");
+  StringTokenizer st = new StringTokenizer(gettableFiles);
+  InputStream is;
+  boolean isValid = false;
+  boolean isOptional = false;
+  if (fname != null) {
+    // Validate fname
+    while(st.hasMoreTokens()) {
+      if (st.nextToken().compareTo(fname) == 0) isValid = true;
+    }
+  }
+  if (optional!=null && optional.equalsIgnoreCase("y")) {
+    isOptional=true;
+  }
+  if (isValid) {
+    try {
+    is= core.getSolrConfig().openResource(fname);
+    Reader input = new InputStreamReader(is);
+    char[] buf = new char[4096];
+    while (true) {
+      int len = input.read(buf);
+      if (len<=0) break;
+      out.write(buf,0,len);
+    }
+    }
+    catch (RuntimeException re) {
+      if (!isOptional) {
+        throw re;
+      }
+    }
+  } else {
+    out.println("<ERROR>");
+    out.println("Permission denied for file "+ fname);
+    out.println("</ERROR>");
+  }
+%>
diff --git a/src/webapp/web/admin/get-properties.jsp b/src/webapp/web/admin/get-properties.jsp
new file mode 100644
index 0000000..50eb668
--- /dev/null
+++ b/src/webapp/web/admin/get-properties.jsp
@@ -0,0 +1,24 @@
+<%@ page contentType="text/plain;charset=UTF-8" language="java" %>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%
+  java.util.Enumeration e = System.getProperties().propertyNames();
+  while(e.hasMoreElements()) {
+    String prop = (String)e.nextElement();
+    out.println(prop + " = " + System.getProperty(prop));
+  }
+%>
\ No newline at end of file
diff --git a/src/webapp/web/admin/header.jsp b/src/webapp/web/admin/header.jsp
new file mode 100644
index 0000000..6b61547
--- /dev/null
+++ b/src/webapp/web/admin/header.jsp
@@ -0,0 +1,37 @@
+<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@include file="_info.jsp" %>
+<script>
+var host_name="<%= hostname %>"
+</script>
+
+<html>
+<head>
+<link rel="stylesheet" type="text/css" href="solr-admin.css">
+<link rel="icon" href="favicon.ico" type="image/ico"></link>
+<link rel="shortcut icon" href="favicon.ico" type="image/ico"></link>
+<title>Solr admin page</title>
+</head>
+
+<body>
+<a href="."><img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="Solr"></a>
+<h1>Solr Admin (<%= collectionName %>)
+<%= enabledStatus==null ? "" : (isEnabled ? " - Enabled" : " - Disabled") %> </h1>
+
+<%= hostname %>:<%= port %><br/>
+cwd=<%= cwd %>  SolrHome=<%= solrHome %>
diff --git a/src/webapp/web/admin/index.jsp b/src/webapp/web/admin/index.jsp
new file mode 100644
index 0000000..21a8f3c
--- /dev/null
+++ b/src/webapp/web/admin/index.jsp
@@ -0,0 +1,149 @@
+<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+
+<%-- $Id$ --%>
+<%-- $Source: /cvs/main/searching/SolrServer/resources/admin/index.jsp,v $ --%>
+<%-- $Name:  $ --%>
+
+<%@ page import="java.util.Date" %>
+
+<%-- jsp:include page="header.jsp"/ --%>
+<%-- do a verbatim include so we can use the local vars --%>
+<%@include file="header.jsp" %>
+
+<br clear="all">
+<table>
+
+<tr>
+  <td>
+	<h3>Solr</h3>
+  </td>
+  <td>
+    [<a href="file/?file=<%=core.getSchemaFile()%>">Schema</a>]
+    [<a href="file/?file=<%=core.getConfigFile()%>">Config</a>]
+    [<a href="analysis.jsp?highlight=on">Analysis</a>]
+    [<a href="schema.jsp">Schema Browser</a>]
+    <br>
+    [<a href="stats.jsp">Statistics</a>]
+    [<a href="registry.jsp">Info</a>]
+    [<a href="distributiondump.jsp">Distribution</a>]
+    [<a href="ping">Ping</a>]
+    [<a href="logging.jsp">Logging</a>]
+  </td>
+</tr>
+
+<%-- List the cores (that arent this one) so we can switch --%>
+<% java.util.Collection<SolrCore> cores = org.apache.solr.core.SolrMultiCore.getInstance().getCores();
+if (cores.size() > 1) {%><tr><td><strong>Cores:</strong><br></td><td><%
+  java.util.Iterator<SolrCore> icore = cores.iterator();
+  while (icore.hasNext()) {
+    SolrCore acore = icore.next();
+    if (acore == core) continue;
+    %>[<a href="../../<%=acore.getName()%>/admin/"><%=acore.getName()%></a>]<%         
+  }%></td></tr><%
+}%>
+
+<tr>
+  <td>
+    <strong>App server:</strong><br>
+  </td>
+  <td>
+    [<a href="get-properties.jsp">Java Properties</a>]
+    [<a href="threaddump.jsp">Thread Dump</a>]
+  <%
+    if (enabledFile!=null)
+    if (isEnabled) {
+  %>
+  [<a href="action.jsp?action=Disable">Disable</a>]
+  <%
+    } else {
+  %>
+  [<a href="action.jsp?action=Enable">Enable</a>]
+  <%
+    }
+  %>
+  </td>
+</tr>
+
+
+<%
+ // a quick hack to get rid of get-file.jsp -- note this still spits out invalid HTML
+ out.write( org.apache.solr.handler.admin.ShowFileRequestHandler.getFileContents( "admin-extra.html" ) );
+%>
+
+</table><P>
+
+
+<table>
+<tr>
+  <td>
+	<h3>Make a Query</h3>
+  </td>
+  <td>
+[<a href="form.jsp">Full Interface</a>]
+  </td>
+  
+</tr>
+<tr>
+  <td>
+  Query String:
+  </td>
+  <td colspan=2>
+	<form name=queryForm method="GET" action="../select/">
+        <textarea class="std" rows="4" cols="40" name="q"><%= defaultSearch %></textarea>
+        <input name="version" type="hidden" value="2.2">
+	<input name="start" type="hidden" value="0">
+	<input name="rows" type="hidden" value="10">
+	<input name="indent" type="hidden" value="on">
+        <br><input class="stdbutton" type="submit" value="search" 
+        	onclick="if (queryForm.q.value.length==0) { alert('no empty queries, please'); return false; } else { queryForm.submit(); } ">
+	</form>
+  </td>
+</tr>
+</table><p>
+
+<table>
+<tr>
+  <td>
+	<h3>Assistance</h3>
+  </td>
+  <td>
+	[<a href="http://lucene.apache.org/solr/">Documentation</a>]
+	[<a href="http://issues.apache.org/jira/browse/SOLR">Issue Tracker</a>]
+	[<a href="mailto:solr-user@lucene.apache.org">Send Email</a>]
+	<br>
+        [<a href="http://wiki.apache.org/solr/SolrQuerySyntax">Solr Query Syntax</a>]
+  </td>
+</tr>
+<tr>
+  <td>
+  </td>
+  <td>
+  Current Time: <%= new Date() %>
+  </td>
+</tr>
+<tr>
+  <td>
+  </td>
+  <td>
+  Server Start At: <%= new Date(core.getStartTime()) %>
+  </td>
+</tr>
+</table>
+</body>
+</html>
diff --git a/src/webapp/web/admin/jquery-1.2.3.min.js b/src/webapp/web/admin/jquery-1.2.3.min.js
new file mode 100644
index 0000000..3747929
--- /dev/null
+++ b/src/webapp/web/admin/jquery-1.2.3.min.js
@@ -0,0 +1,32 @@
+/*
+ * jQuery 1.2.3 - New Wave Javascript
+ *
+ * Copyright (c) 2008 John Resig (jquery.com)
+ * Dual licensed under the MIT (MIT-LICENSE.txt)
+ * and GPL (GPL-LICENSE.txt) licenses.
+ *
+ * $Date: 2008-02-06 00:21:25 -0500 (Wed, 06 Feb 2008) $
+ * $Rev: 4663 $
+ */
+(function(){if(window.jQuery)var _jQuery=window.jQuery;var jQuery=window.jQuery=function(selector,context){return new jQuery.prototype.init(selector,context);};if(window.$)var _$=window.$;window.$=jQuery;var quickExpr=/^[^<]*(<(.|\s)+>)[^>]*$|^#(\w+)$/;var isSimple=/^.[^:#\[\.]*$/;jQuery.fn=jQuery.prototype={init:function(selector,context){selector=selector||document;if(selector.nodeType){this[0]=selector;this.length=1;return this;}else if(typeof selector=="string"){var match=quickExpr.exec(selector);if(match&&(match[1]||!context)){if(match[1])selector=jQuery.clean([match[1]],context);else{var elem=document.getElementById(match[3]);if(elem)if(elem.id!=match[3])return jQuery().find(selector);else{this[0]=elem;this.length=1;return this;}else
+selector=[];}}else
+return new jQuery(context).find(selector);}else if(jQuery.isFunction(selector))return new jQuery(document)[jQuery.fn.ready?"ready":"load"](selector);return this.setArray(selector.constructor==Array&&selector||(selector.jquery||selector.length&&selector!=window&&!selector.nodeType&&selector[0]!=undefined&&selector[0].nodeType)&&jQuery.makeArray(selector)||[selector]);},jquery:"1.2.3",size:function(){return this.length;},length:0,get:function(num){return num==undefined?jQuery.makeArray(this):this[num];},pushStack:function(elems){var ret=jQuery(elems);ret.prevObject=this;return ret;},setArray:function(elems){this.length=0;Array.prototype.push.apply(this,elems);return this;},each:function(callback,args){return jQuery.each(this,callback,args);},index:function(elem){var ret=-1;this.each(function(i){if(this==elem)ret=i;});return ret;},attr:function(name,value,type){var options=name;if(name.constructor==String)if(value==undefined)return this.length&&jQuery[type||"attr"](this[0],name)||undefined;else{options={};options[name]=value;}return this.each(function(i){for(name in options)jQuery.attr(type?this.style:this,name,jQuery.prop(this,options[name],type,i,name));});},css:function(key,value){if((key=='width'||key=='height')&&parseFloat(value)<0)value=undefined;return this.attr(key,value,"curCSS");},text:function(text){if(typeof text!="object"&&text!=null)return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(text));var ret="";jQuery.each(text||this,function(){jQuery.each(this.childNodes,function(){if(this.nodeType!=8)ret+=this.nodeType!=1?this.nodeValue:jQuery.fn.text([this]);});});return ret;},wrapAll:function(html){if(this[0])jQuery(html,this[0].ownerDocument).clone().insertBefore(this[0]).map(function(){var elem=this;while(elem.firstChild)elem=elem.firstChild;return elem;}).append(this);return this;},wrapInner:function(html){return this.each(function(){jQuery(this).contents().wrapAll(html);});},wrap:function(html){return this.each(function(){jQuery(this).wrapAll(html);});},append:function(){return this.domManip(arguments,true,false,function(elem){if(this.nodeType==1)this.appendChild(elem);});},prepend:function(){return this.domManip(arguments,true,true,function(elem){if(this.nodeType==1)this.insertBefore(elem,this.firstChild);});},before:function(){return this.domManip(arguments,false,false,function(elem){this.parentNode.insertBefore(elem,this);});},after:function(){return this.domManip(arguments,false,true,function(elem){this.parentNode.insertBefore(elem,this.nextSibling);});},end:function(){return this.prevObject||jQuery([]);},find:function(selector){var elems=jQuery.map(this,function(elem){return jQuery.find(selector,elem);});return this.pushStack(/[^+>] [^+>]/.test(selector)||selector.indexOf("..")>-1?jQuery.unique(elems):elems);},clone:function(events){var ret=this.map(function(){if(jQuery.browser.msie&&!jQuery.isXMLDoc(this)){var clone=this.cloneNode(true),container=document.createElement("div");container.appendChild(clone);return jQuery.clean([container.innerHTML])[0];}else
+return this.cloneNode(true);});var clone=ret.find("*").andSelf().each(function(){if(this[expando]!=undefined)this[expando]=null;});if(events===true)this.find("*").andSelf().each(function(i){if(this.nodeType==3)return;var events=jQuery.data(this,"events");for(var type in events)for(var handler in events[type])jQuery.event.add(clone[i],type,events[type][handler],events[type][handler].data);});return ret;},filter:function(selector){return this.pushStack(jQuery.isFunction(selector)&&jQuery.grep(this,function(elem,i){return selector.call(elem,i);})||jQuery.multiFilter(selector,this));},not:function(selector){if(selector.constructor==String)if(isSimple.test(selector))return this.pushStack(jQuery.multiFilter(selector,this,true));else
+selector=jQuery.multiFilter(selector,this);var isArrayLike=selector.length&&selector[selector.length-1]!==undefined&&!selector.nodeType;return this.filter(function(){return isArrayLike?jQuery.inArray(this,selector)<0:this!=selector;});},add:function(selector){return!selector?this:this.pushStack(jQuery.merge(this.get(),selector.constructor==String?jQuery(selector).get():selector.length!=undefined&&(!selector.nodeName||jQuery.nodeName(selector,"form"))?selector:[selector]));},is:function(selector){return selector?jQuery.multiFilter(selector,this).length>0:false;},hasClass:function(selector){return this.is("."+selector);},val:function(value){if(value==undefined){if(this.length){var elem=this[0];if(jQuery.nodeName(elem,"select")){var index=elem.selectedIndex,values=[],options=elem.options,one=elem.type=="select-one";if(index<0)return null;for(var i=one?index:0,max=one?index+1:options.length;i<max;i++){var option=options[i];if(option.selected){value=jQuery.browser.msie&&!option.attributes.value.specified?option.text:option.value;if(one)return value;values.push(value);}}return values;}else
+return(this[0].value||"").replace(/\r/g,"");}return undefined;}return this.each(function(){if(this.nodeType!=1)return;if(value.constructor==Array&&/radio|checkbox/.test(this.type))this.checked=(jQuery.inArray(this.value,value)>=0||jQuery.inArray(this.name,value)>=0);else if(jQuery.nodeName(this,"select")){var values=value.constructor==Array?value:[value];jQuery("option",this).each(function(){this.selected=(jQuery.inArray(this.value,values)>=0||jQuery.inArray(this.text,values)>=0);});if(!values.length)this.selectedIndex=-1;}else
+this.value=value;});},html:function(value){return value==undefined?(this.length?this[0].innerHTML:null):this.empty().append(value);},replaceWith:function(value){return this.after(value).remove();},eq:function(i){return this.slice(i,i+1);},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments));},map:function(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem);}));},andSelf:function(){return this.add(this.prevObject);},data:function(key,value){var parts=key.split(".");parts[1]=parts[1]?"."+parts[1]:"";if(value==null){var data=this.triggerHandler("getData"+parts[1]+"!",[parts[0]]);if(data==undefined&&this.length)data=jQuery.data(this[0],key);return data==null&&parts[1]?this.data(parts[0]):data;}else
+return this.trigger("setData"+parts[1]+"!",[parts[0],value]).each(function(){jQuery.data(this,key,value);});},removeData:function(key){return this.each(function(){jQuery.removeData(this,key);});},domManip:function(args,table,reverse,callback){var clone=this.length>1,elems;return this.each(function(){if(!elems){elems=jQuery.clean(args,this.ownerDocument);if(reverse)elems.reverse();}var obj=this;if(table&&jQuery.nodeName(this,"table")&&jQuery.nodeName(elems[0],"tr"))obj=this.getElementsByTagName("tbody")[0]||this.appendChild(this.ownerDocument.createElement("tbody"));var scripts=jQuery([]);jQuery.each(elems,function(){var elem=clone?jQuery(this).clone(true)[0]:this;if(jQuery.nodeName(elem,"script")){scripts=scripts.add(elem);}else{if(elem.nodeType==1)scripts=scripts.add(jQuery("script",elem).remove());callback.call(obj,elem);}});scripts.each(evalScript);});}};jQuery.prototype.init.prototype=jQuery.prototype;function evalScript(i,elem){if(elem.src)jQuery.ajax({url:elem.src,async:false,dataType:"script"});else
+jQuery.globalEval(elem.text||elem.textContent||elem.innerHTML||"");if(elem.parentNode)elem.parentNode.removeChild(elem);}jQuery.extend=jQuery.fn.extend=function(){var target=arguments[0]||{},i=1,length=arguments.length,deep=false,options;if(target.constructor==Boolean){deep=target;target=arguments[1]||{};i=2;}if(typeof target!="object"&&typeof target!="function")target={};if(length==1){target=this;i=0;}for(;i<length;i++)if((options=arguments[i])!=null)for(var name in options){if(target===options[name])continue;if(deep&&options[name]&&typeof options[name]=="object"&&target[name]&&!options[name].nodeType)target[name]=jQuery.extend(target[name],options[name]);else if(options[name]!=undefined)target[name]=options[name];}return target;};var expando="jQuery"+(new Date()).getTime(),uuid=0,windowData={};var exclude=/z-?index|font-?weight|opacity|zoom|line-?height/i;jQuery.extend({noConflict:function(deep){window.$=_$;if(deep)window.jQuery=_jQuery;return jQuery;},isFunction:function(fn){return!!fn&&typeof fn!="string"&&!fn.nodeName&&fn.constructor!=Array&&/function/i.test(fn+"");},isXMLDoc:function(elem){return elem.documentElement&&!elem.body||elem.tagName&&elem.ownerDocument&&!elem.ownerDocument.body;},globalEval:function(data){data=jQuery.trim(data);if(data){var head=document.getElementsByTagName("head")[0]||document.documentElement,script=document.createElement("script");script.type="text/javascript";if(jQuery.browser.msie)script.text=data;else
+script.appendChild(document.createTextNode(data));head.appendChild(script);head.removeChild(script);}},nodeName:function(elem,name){return elem.nodeName&&elem.nodeName.toUpperCase()==name.toUpperCase();},cache:{},data:function(elem,name,data){elem=elem==window?windowData:elem;var id=elem[expando];if(!id)id=elem[expando]=++uuid;if(name&&!jQuery.cache[id])jQuery.cache[id]={};if(data!=undefined)jQuery.cache[id][name]=data;return name?jQuery.cache[id][name]:id;},removeData:function(elem,name){elem=elem==window?windowData:elem;var id=elem[expando];if(name){if(jQuery.cache[id]){delete jQuery.cache[id][name];name="";for(name in jQuery.cache[id])break;if(!name)jQuery.removeData(elem);}}else{try{delete elem[expando];}catch(e){if(elem.removeAttribute)elem.removeAttribute(expando);}delete jQuery.cache[id];}},each:function(object,callback,args){if(args){if(object.length==undefined){for(var name in object)if(callback.apply(object[name],args)===false)break;}else
+for(var i=0,length=object.length;i<length;i++)if(callback.apply(object[i],args)===false)break;}else{if(object.length==undefined){for(var name in object)if(callback.call(object[name],name,object[name])===false)break;}else
+for(var i=0,length=object.length,value=object[0];i<length&&callback.call(value,i,value)!==false;value=object[++i]){}}return object;},prop:function(elem,value,type,i,name){if(jQuery.isFunction(value))value=value.call(elem,i);return value&&value.constructor==Number&&type=="curCSS"&&!exclude.test(name)?value+"px":value;},className:{add:function(elem,classNames){jQuery.each((classNames||"").split(/\s+/),function(i,className){if(elem.nodeType==1&&!jQuery.className.has(elem.className,className))elem.className+=(elem.className?" ":"")+className;});},remove:function(elem,classNames){if(elem.nodeType==1)elem.className=classNames!=undefined?jQuery.grep(elem.className.split(/\s+/),function(className){return!jQuery.className.has(classNames,className);}).join(" "):"";},has:function(elem,className){return jQuery.inArray(className,(elem.className||elem).toString().split(/\s+/))>-1;}},swap:function(elem,options,callback){var old={};for(var name in options){old[name]=elem.style[name];elem.style[name]=options[name];}callback.call(elem);for(var name in options)elem.style[name]=old[name];},css:function(elem,name,force){if(name=="width"||name=="height"){var val,props={position:"absolute",visibility:"hidden",display:"block"},which=name=="width"?["Left","Right"]:["Top","Bottom"];function getWH(){val=name=="width"?elem.offsetWidth:elem.offsetHeight;var padding=0,border=0;jQuery.each(which,function(){padding+=parseFloat(jQuery.curCSS(elem,"padding"+this,true))||0;border+=parseFloat(jQuery.curCSS(elem,"border"+this+"Width",true))||0;});val-=Math.round(padding+border);}if(jQuery(elem).is(":visible"))getWH();else
+jQuery.swap(elem,props,getWH);return Math.max(0,val);}return jQuery.curCSS(elem,name,force);},curCSS:function(elem,name,force){var ret;function color(elem){if(!jQuery.browser.safari)return false;var ret=document.defaultView.getComputedStyle(elem,null);return!ret||ret.getPropertyValue("color")=="";}if(name=="opacity"&&jQuery.browser.msie){ret=jQuery.attr(elem.style,"opacity");return ret==""?"1":ret;}if(jQuery.browser.opera&&name=="display"){var save=elem.style.outline;elem.style.outline="0 solid black";elem.style.outline=save;}if(name.match(/float/i))name=styleFloat;if(!force&&elem.style&&elem.style[name])ret=elem.style[name];else if(document.defaultView&&document.defaultView.getComputedStyle){if(name.match(/float/i))name="float";name=name.replace(/([A-Z])/g,"-$1").toLowerCase();var getComputedStyle=document.defaultView.getComputedStyle(elem,null);if(getComputedStyle&&!color(elem))ret=getComputedStyle.getPropertyValue(name);else{var swap=[],stack=[];for(var a=elem;a&&color(a);a=a.parentNode)stack.unshift(a);for(var i=0;i<stack.length;i++)if(color(stack[i])){swap[i]=stack[i].style.display;stack[i].style.display="block";}ret=name=="display"&&swap[stack.length-1]!=null?"none":(getComputedStyle&&getComputedStyle.getPropertyValue(name))||"";for(var i=0;i<swap.length;i++)if(swap[i]!=null)stack[i].style.display=swap[i];}if(name=="opacity"&&ret=="")ret="1";}else if(elem.currentStyle){var camelCase=name.replace(/\-(\w)/g,function(all,letter){return letter.toUpperCase();});ret=elem.currentStyle[name]||elem.currentStyle[camelCase];if(!/^\d+(px)?$/i.test(ret)&&/^\d/.test(ret)){var style=elem.style.left,runtimeStyle=elem.runtimeStyle.left;elem.runtimeStyle.left=elem.currentStyle.left;elem.style.left=ret||0;ret=elem.style.pixelLeft+"px";elem.style.left=style;elem.runtimeStyle.left=runtimeStyle;}}return ret;},clean:function(elems,context){var ret=[];context=context||document;if(typeof context.createElement=='undefined')context=context.ownerDocument||context[0]&&context[0].ownerDocument||document;jQuery.each(elems,function(i,elem){if(!elem)return;if(elem.constructor==Number)elem=elem.toString();if(typeof elem=="string"){elem=elem.replace(/(<(\w+)[^>]*?)\/>/g,function(all,front,tag){return tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?all:front+"></"+tag+">";});var tags=jQuery.trim(elem).toLowerCase(),div=context.createElement("div");var wrap=!tags.indexOf("<opt")&&[1,"<select multiple='multiple'>","</select>"]||!tags.indexOf("<leg")&&[1,"<fieldset>","</fieldset>"]||tags.match(/^<(thead|tbody|tfoot|colg|cap)/)&&[1,"<table>","</table>"]||!tags.indexOf("<tr")&&[2,"<table><tbody>","</tbody></table>"]||(!tags.indexOf("<td")||!tags.indexOf("<th"))&&[3,"<table><tbody><tr>","</tr></tbody></table>"]||!tags.indexOf("<col")&&[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"]||jQuery.browser.msie&&[1,"div<div>","</div>"]||[0,"",""];div.innerHTML=wrap[1]+elem+wrap[2];while(wrap[0]--)div=div.lastChild;if(jQuery.browser.msie){var tbody=!tags.indexOf("<table")&&tags.indexOf("<tbody")<0?div.firstChild&&div.firstChild.childNodes:wrap[1]=="<table>"&&tags.indexOf("<tbody")<0?div.childNodes:[];for(var j=tbody.length-1;j>=0;--j)if(jQuery.nodeName(tbody[j],"tbody")&&!tbody[j].childNodes.length)tbody[j].parentNode.removeChild(tbody[j]);if(/^\s/.test(elem))div.insertBefore(context.createTextNode(elem.match(/^\s*/)[0]),div.firstChild);}elem=jQuery.makeArray(div.childNodes);}if(elem.length===0&&(!jQuery.nodeName(elem,"form")&&!jQuery.nodeName(elem,"select")))return;if(elem[0]==undefined||jQuery.nodeName(elem,"form")||elem.options)ret.push(elem);else
+ret=jQuery.merge(ret,elem);});return ret;},attr:function(elem,name,value){if(!elem||elem.nodeType==3||elem.nodeType==8)return undefined;var fix=jQuery.isXMLDoc(elem)?{}:jQuery.props;if(name=="selected"&&jQuery.browser.safari)elem.parentNode.selectedIndex;if(fix[name]){if(value!=undefined)elem[fix[name]]=value;return elem[fix[name]];}else if(jQuery.browser.msie&&name=="style")return jQuery.attr(elem.style,"cssText",value);else if(value==undefined&&jQuery.browser.msie&&jQuery.nodeName(elem,"form")&&(name=="action"||name=="method"))return elem.getAttributeNode(name).nodeValue;else if(elem.tagName){if(value!=undefined){if(name=="type"&&jQuery.nodeName(elem,"input")&&elem.parentNode)throw"type property can't be changed";elem.setAttribute(name,""+value);}if(jQuery.browser.msie&&/href|src/.test(name)&&!jQuery.isXMLDoc(elem))return elem.getAttribute(name,2);return elem.getAttribute(name);}else{if(name=="opacity"&&jQuery.browser.msie){if(value!=undefined){elem.zoom=1;elem.filter=(elem.filter||"").replace(/alpha\([^)]*\)/,"")+(parseFloat(value).toString()=="NaN"?"":"alpha(opacity="+value*100+")");}return elem.filter&&elem.filter.indexOf("opacity=")>=0?(parseFloat(elem.filter.match(/opacity=([^)]*)/)[1])/100).toString():"";}name=name.replace(/-([a-z])/ig,function(all,letter){return letter.toUpperCase();});if(value!=undefined)elem[name]=value;return elem[name];}},trim:function(text){return(text||"").replace(/^\s+|\s+$/g,"");},makeArray:function(array){var ret=[];if(typeof array!="array")for(var i=0,length=array.length;i<length;i++)ret.push(array[i]);else
+ret=array.slice(0);return ret;},inArray:function(elem,array){for(var i=0,length=array.length;i<length;i++)if(array[i]==elem)return i;return-1;},merge:function(first,second){if(jQuery.browser.msie){for(var i=0;second[i];i++)if(second[i].nodeType!=8)first.push(second[i]);}else
+for(var i=0;second[i];i++)first.push(second[i]);return first;},unique:function(array){var ret=[],done={};try{for(var i=0,length=array.length;i<length;i++){var id=jQuery.data(array[i]);if(!done[id]){done[id]=true;ret.push(array[i]);}}}catch(e){ret=array;}return ret;},grep:function(elems,callback,inv){var ret=[];for(var i=0,length=elems.length;i<length;i++)if(!inv&&callback(elems[i],i)||inv&&!callback(elems[i],i))ret.push(elems[i]);return ret;},map:function(elems,callback){var ret=[];for(var i=0,length=elems.length;i<length;i++){var value=callback(elems[i],i);if(value!==null&&value!=undefined){if(value.constructor!=Array)value=[value];ret=ret.concat(value);}}return ret;}});var userAgent=navigator.userAgent.toLowerCase();jQuery.browser={version:(userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/)||[])[1],safari:/webkit/.test(userAgent),opera:/opera/.test(userAgent),msie:/msie/.test(userAgent)&&!/opera/.test(userAgent),mozilla:/mozilla/.test(userAgent)&&!/(compatible|webkit)/.test(userAgent)};var styleFloat=jQuery.browser.msie?"styleFloat":"cssFloat";jQuery.extend({boxModel:!jQuery.browser.msie||document.compatMode=="CSS1Compat",props:{"for":"htmlFor","class":"className","float":styleFloat,cssFloat:styleFloat,styleFloat:styleFloat,innerHTML:"innerHTML",className:"className",value:"value",disabled:"disabled",checked:"checked",readonly:"readOnly",selected:"selected",maxlength:"maxLength",selectedIndex:"selectedIndex",defaultValue:"defaultValue",tagName:"tagName",nodeName:"nodeName"}});jQuery.each({parent:function(elem){return elem.parentNode;},parents:function(elem){return jQuery.dir(elem,"parentNode");},next:function(elem){return jQuery.nth(elem,2,"nextSibling");},prev:function(elem){return jQuery.nth(elem,2,"previousSibling");},nextAll:function(elem){return jQuery.dir(elem,"nextSibling");},prevAll:function(elem){return jQuery.dir(elem,"previousSibling");},siblings:function(elem){return jQuery.sibling(elem.parentNode.firstChild,elem);},children:function(elem){return jQuery.sibling(elem.firstChild);},contents:function(elem){return jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.contentWindow.document:jQuery.makeArray(elem.childNodes);}},function(name,fn){jQuery.fn[name]=function(selector){var ret=jQuery.map(this,fn);if(selector&&typeof selector=="string")ret=jQuery.multiFilter(selector,ret);return this.pushStack(jQuery.unique(ret));};});jQuery.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=function(){var args=arguments;return this.each(function(){for(var i=0,length=args.length;i<length;i++)jQuery(args[i])[original](this);});};});jQuery.each({removeAttr:function(name){jQuery.attr(this,name,"");if(this.nodeType==1)this.removeAttribute(name);},addClass:function(classNames){jQuery.className.add(this,classNames);},removeClass:function(classNames){jQuery.className.remove(this,classNames);},toggleClass:function(classNames){jQuery.className[jQuery.className.has(this,classNames)?"remove":"add"](this,classNames);},remove:function(selector){if(!selector||jQuery.filter(selector,[this]).r.length){jQuery("*",this).add(this).each(function(){jQuery.event.remove(this);jQuery.removeData(this);});if(this.parentNode)this.parentNode.removeChild(this);}},empty:function(){jQuery(">*",this).remove();while(this.firstChild)this.removeChild(this.firstChild);}},function(name,fn){jQuery.fn[name]=function(){return this.each(fn,arguments);};});jQuery.each(["Height","Width"],function(i,name){var type=name.toLowerCase();jQuery.fn[type]=function(size){return this[0]==window?jQuery.browser.opera&&document.body["client"+name]||jQuery.browser.safari&&window["inner"+name]||document.compatMode=="CSS1Compat"&&document.documentElement["client"+name]||document.body["client"+name]:this[0]==document?Math.max(Math.max(document.body["scroll"+name],document.documentElement["scroll"+name]),Math.max(document.body["offset"+name],document.documentElement["offset"+name])):size==undefined?(this.length?jQuery.css(this[0],type):null):this.css(type,size.constructor==String?size:size+"px");};});var chars=jQuery.browser.safari&&parseInt(jQuery.browser.version)<417?"(?:[\\w*_-]|\\\\.)":"(?:[\\w\u0128-\uFFFF*_-]|\\\\.)",quickChild=new RegExp("^>\\s*("+chars+"+)"),quickID=new RegExp("^("+chars+"+)(#)("+chars+"+)"),quickClass=new RegExp("^([#.]?)("+chars+"*)");jQuery.extend({expr:{"":function(a,i,m){return m[2]=="*"||jQuery.nodeName(a,m[2]);},"#":function(a,i,m){return a.getAttribute("id")==m[2];},":":{lt:function(a,i,m){return i<m[3]-0;},gt:function(a,i,m){return i>m[3]-0;},nth:function(a,i,m){return m[3]-0==i;},eq:function(a,i,m){return m[3]-0==i;},first:function(a,i){return i==0;},last:function(a,i,m,r){return i==r.length-1;},even:function(a,i){return i%2==0;},odd:function(a,i){return i%2;},"first-child":function(a){return a.parentNode.getElementsByTagName("*")[0]==a;},"last-child":function(a){return jQuery.nth(a.parentNode.lastChild,1,"previousSibling")==a;},"only-child":function(a){return!jQuery.nth(a.parentNode.lastChild,2,"previousSibling");},parent:function(a){return a.firstChild;},empty:function(a){return!a.firstChild;},contains:function(a,i,m){return(a.textContent||a.innerText||jQuery(a).text()||"").indexOf(m[3])>=0;},visible:function(a){return"hidden"!=a.type&&jQuery.css(a,"display")!="none"&&jQuery.css(a,"visibility")!="hidden";},hidden:function(a){return"hidden"==a.type||jQuery.css(a,"display")=="none"||jQuery.css(a,"visibility")=="hidden";},enabled:function(a){return!a.disabled;},disabled:function(a){return a.disabled;},checked:function(a){return a.checked;},selected:function(a){return a.selected||jQuery.attr(a,"selected");},text:function(a){return"text"==a.type;},radio:function(a){return"radio"==a.type;},checkbox:function(a){return"checkbox"==a.type;},file:function(a){return"file"==a.type;},password:function(a){return"password"==a.type;},submit:function(a){return"submit"==a.type;},image:function(a){return"image"==a.type;},reset:function(a){return"reset"==a.type;},button:function(a){return"button"==a.type||jQuery.nodeName(a,"button");},input:function(a){return/input|select|textarea|button/i.test(a.nodeName);},has:function(a,i,m){return jQuery.find(m[3],a).length;},header:function(a){return/h\d/i.test(a.nodeName);},animated:function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).length;}}},parse:[/^(\[) *@?([\w-]+) *([!*$^~=]*) *('?"?)(.*?)\4 *\]/,/^(:)([\w-]+)\("?'?(.*?(\(.*?\))?[^(]*?)"?'?\)/,new RegExp("^([:.#]*)("+chars+"+)")],multiFilter:function(expr,elems,not){var old,cur=[];while(expr&&expr!=old){old=expr;var f=jQuery.filter(expr,elems,not);expr=f.t.replace(/^\s*,\s*/,"");cur=not?elems=f.r:jQuery.merge(cur,f.r);}return cur;},find:function(t,context){if(typeof t!="string")return[t];if(context&&context.nodeType!=1&&context.nodeType!=9)return[];context=context||document;var ret=[context],done=[],last,nodeName;while(t&&last!=t){var r=[];last=t;t=jQuery.trim(t);var foundToken=false;var re=quickChild;var m=re.exec(t);if(m){nodeName=m[1].toUpperCase();for(var i=0;ret[i];i++)for(var c=ret[i].firstChild;c;c=c.nextSibling)if(c.nodeType==1&&(nodeName=="*"||c.nodeName.toUpperCase()==nodeName))r.push(c);ret=r;t=t.replace(re,"");if(t.indexOf(" ")==0)continue;foundToken=true;}else{re=/^([>+~])\s*(\w*)/i;if((m=re.exec(t))!=null){r=[];var merge={};nodeName=m[2].toUpperCase();m=m[1];for(var j=0,rl=ret.length;j<rl;j++){var n=m=="~"||m=="+"?ret[j].nextSibling:ret[j].firstChild;for(;n;n=n.nextSibling)if(n.nodeType==1){var id=jQuery.data(n);if(m=="~"&&merge[id])break;if(!nodeName||n.nodeName.toUpperCase()==nodeName){if(m=="~")merge[id]=true;r.push(n);}if(m=="+")break;}}ret=r;t=jQuery.trim(t.replace(re,""));foundToken=true;}}if(t&&!foundToken){if(!t.indexOf(",")){if(context==ret[0])ret.shift();done=jQuery.merge(done,ret);r=ret=[context];t=" "+t.substr(1,t.length);}else{var re2=quickID;var m=re2.exec(t);if(m){m=[0,m[2],m[3],m[1]];}else{re2=quickClass;m=re2.exec(t);}m[2]=m[2].replace(/\\/g,"");var elem=ret[ret.length-1];if(m[1]=="#"&&elem&&elem.getElementById&&!jQuery.isXMLDoc(elem)){var oid=elem.getElementById(m[2]);if((jQuery.browser.msie||jQuery.browser.opera)&&oid&&typeof oid.id=="string"&&oid.id!=m[2])oid=jQuery('[@id="'+m[2]+'"]',elem)[0];ret=r=oid&&(!m[3]||jQuery.nodeName(oid,m[3]))?[oid]:[];}else{for(var i=0;ret[i];i++){var tag=m[1]=="#"&&m[3]?m[3]:m[1]!=""||m[0]==""?"*":m[2];if(tag=="*"&&ret[i].nodeName.toLowerCase()=="object")tag="param";r=jQuery.merge(r,ret[i].getElementsByTagName(tag));}if(m[1]==".")r=jQuery.classFilter(r,m[2]);if(m[1]=="#"){var tmp=[];for(var i=0;r[i];i++)if(r[i].getAttribute("id")==m[2]){tmp=[r[i]];break;}r=tmp;}ret=r;}t=t.replace(re2,"");}}if(t){var val=jQuery.filter(t,r);ret=r=val.r;t=jQuery.trim(val.t);}}if(t)ret=[];if(ret&&context==ret[0])ret.shift();done=jQuery.merge(done,ret);return done;},classFilter:function(r,m,not){m=" "+m+" ";var tmp=[];for(var i=0;r[i];i++){var pass=(" "+r[i].className+" ").indexOf(m)>=0;if(!not&&pass||not&&!pass)tmp.push(r[i]);}return tmp;},filter:function(t,r,not){var last;while(t&&t!=last){last=t;var p=jQuery.parse,m;for(var i=0;p[i];i++){m=p[i].exec(t);if(m){t=t.substring(m[0].length);m[2]=m[2].replace(/\\/g,"");break;}}if(!m)break;if(m[1]==":"&&m[2]=="not")r=isSimple.test(m[3])?jQuery.filter(m[3],r,true).r:jQuery(r).not(m[3]);else if(m[1]==".")r=jQuery.classFilter(r,m[2],not);else if(m[1]=="["){var tmp=[],type=m[3];for(var i=0,rl=r.length;i<rl;i++){var a=r[i],z=a[jQuery.props[m[2]]||m[2]];if(z==null||/href|src|selected/.test(m[2]))z=jQuery.attr(a,m[2])||'';if((type==""&&!!z||type=="="&&z==m[5]||type=="!="&&z!=m[5]||type=="^="&&z&&!z.indexOf(m[5])||type=="$="&&z.substr(z.length-m[5].length)==m[5]||(type=="*="||type=="~=")&&z.indexOf(m[5])>=0)^not)tmp.push(a);}r=tmp;}else if(m[1]==":"&&m[2]=="nth-child"){var merge={},tmp=[],test=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(m[3]=="even"&&"2n"||m[3]=="odd"&&"2n+1"||!/\D/.test(m[3])&&"0n+"+m[3]||m[3]),first=(test[1]+(test[2]||1))-0,last=test[3]-0;for(var i=0,rl=r.length;i<rl;i++){var node=r[i],parentNode=node.parentNode,id=jQuery.data(parentNode);if(!merge[id]){var c=1;for(var n=parentNode.firstChild;n;n=n.nextSibling)if(n.nodeType==1)n.nodeIndex=c++;merge[id]=true;}var add=false;if(first==0){if(node.nodeIndex==last)add=true;}else if((node.nodeIndex-last)%first==0&&(node.nodeIndex-last)/first>=0)add=true;if(add^not)tmp.push(node);}r=tmp;}else{var fn=jQuery.expr[m[1]];if(typeof fn=="object")fn=fn[m[2]];if(typeof fn=="string")fn=eval("false||function(a,i){return "+fn+";}");r=jQuery.grep(r,function(elem,i){return fn(elem,i,m,r);},not);}}return{r:r,t:t};},dir:function(elem,dir){var matched=[];var cur=elem[dir];while(cur&&cur!=document){if(cur.nodeType==1)matched.push(cur);cur=cur[dir];}return matched;},nth:function(cur,result,dir,elem){result=result||1;var num=0;for(;cur;cur=cur[dir])if(cur.nodeType==1&&++num==result)break;return cur;},sibling:function(n,elem){var r=[];for(;n;n=n.nextSibling){if(n.nodeType==1&&(!elem||n!=elem))r.push(n);}return r;}});jQuery.event={add:function(elem,types,handler,data){if(elem.nodeType==3||elem.nodeType==8)return;if(jQuery.browser.msie&&elem.setInterval!=undefined)elem=window;if(!handler.guid)handler.guid=this.guid++;if(data!=undefined){var fn=handler;handler=function(){return fn.apply(this,arguments);};handler.data=data;handler.guid=fn.guid;}var events=jQuery.data(elem,"events")||jQuery.data(elem,"events",{}),handle=jQuery.data(elem,"handle")||jQuery.data(elem,"handle",function(){var val;if(typeof jQuery=="undefined"||jQuery.event.triggered)return val;val=jQuery.event.handle.apply(arguments.callee.elem,arguments);return val;});handle.elem=elem;jQuery.each(types.split(/\s+/),function(index,type){var parts=type.split(".");type=parts[0];handler.type=parts[1];var handlers=events[type];if(!handlers){handlers=events[type]={};if(!jQuery.event.special[type]||jQuery.event.special[type].setup.call(elem)===false){if(elem.addEventListener)elem.addEventListener(type,handle,false);else if(elem.attachEvent)elem.attachEvent("on"+type,handle);}}handlers[handler.guid]=handler;jQuery.event.global[type]=true;});elem=null;},guid:1,global:{},remove:function(elem,types,handler){if(elem.nodeType==3||elem.nodeType==8)return;var events=jQuery.data(elem,"events"),ret,index;if(events){if(types==undefined||(typeof types=="string"&&types.charAt(0)=="."))for(var type in events)this.remove(elem,type+(types||""));else{if(types.type){handler=types.handler;types=types.type;}jQuery.each(types.split(/\s+/),function(index,type){var parts=type.split(".");type=parts[0];if(events[type]){if(handler)delete events[type][handler.guid];else
+for(handler in events[type])if(!parts[1]||events[type][handler].type==parts[1])delete events[type][handler];for(ret in events[type])break;if(!ret){if(!jQuery.event.special[type]||jQuery.event.special[type].teardown.call(elem)===false){if(elem.removeEventListener)elem.removeEventListener(type,jQuery.data(elem,"handle"),false);else if(elem.detachEvent)elem.detachEvent("on"+type,jQuery.data(elem,"handle"));}ret=null;delete events[type];}}});}for(ret in events)break;if(!ret){var handle=jQuery.data(elem,"handle");if(handle)handle.elem=null;jQuery.removeData(elem,"events");jQuery.removeData(elem,"handle");}}},trigger:function(type,data,elem,donative,extra){data=jQuery.makeArray(data||[]);if(type.indexOf("!")>=0){type=type.slice(0,-1);var exclusive=true;}if(!elem){if(this.global[type])jQuery("*").add([window,document]).trigger(type,data);}else{if(elem.nodeType==3||elem.nodeType==8)return undefined;var val,ret,fn=jQuery.isFunction(elem[type]||null),event=!data[0]||!data[0].preventDefault;if(event)data.unshift(this.fix({type:type,target:elem}));data[0].type=type;if(exclusive)data[0].exclusive=true;if(jQuery.isFunction(jQuery.data(elem,"handle")))val=jQuery.data(elem,"handle").apply(elem,data);if(!fn&&elem["on"+type]&&elem["on"+type].apply(elem,data)===false)val=false;if(event)data.shift();if(extra&&jQuery.isFunction(extra)){ret=extra.apply(elem,val==null?data:data.concat(val));if(ret!==undefined)val=ret;}if(fn&&donative!==false&&val!==false&&!(jQuery.nodeName(elem,'a')&&type=="click")){this.triggered=true;try{elem[type]();}catch(e){}}this.triggered=false;}return val;},handle:function(event){var val;event=jQuery.event.fix(event||window.event||{});var parts=event.type.split(".");event.type=parts[0];var handlers=jQuery.data(this,"events")&&jQuery.data(this,"events")[event.type],args=Array.prototype.slice.call(arguments,1);args.unshift(event);for(var j in handlers){var handler=handlers[j];args[0].handler=handler;args[0].data=handler.data;if(!parts[1]&&!event.exclusive||handler.type==parts[1]){var ret=handler.apply(this,args);if(val!==false)val=ret;if(ret===false){event.preventDefault();event.stopPropagation();}}}if(jQuery.browser.msie)event.target=event.preventDefault=event.stopPropagation=event.handler=event.data=null;return val;},fix:function(event){var originalEvent=event;event=jQuery.extend({},originalEvent);event.preventDefault=function(){if(originalEvent.preventDefault)originalEvent.preventDefault();originalEvent.returnValue=false;};event.stopPropagation=function(){if(originalEvent.stopPropagation)originalEvent.stopPropagation();originalEvent.cancelBubble=true;};if(!event.target)event.target=event.srcElement||document;if(event.target.nodeType==3)event.target=originalEvent.target.parentNode;if(!event.relatedTarget&&event.fromElement)event.relatedTarget=event.fromElement==event.target?event.toElement:event.fromElement;if(event.pageX==null&&event.clientX!=null){var doc=document.documentElement,body=document.body;event.pageX=event.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc.clientLeft||0);event.pageY=event.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-(doc.clientTop||0);}if(!event.which&&((event.charCode||event.charCode===0)?event.charCode:event.keyCode))event.which=event.charCode||event.keyCode;if(!event.metaKey&&event.ctrlKey)event.metaKey=event.ctrlKey;if(!event.which&&event.button)event.which=(event.button&1?1:(event.button&2?3:(event.button&4?2:0)));return event;},special:{ready:{setup:function(){bindReady();return;},teardown:function(){return;}},mouseenter:{setup:function(){if(jQuery.browser.msie)return false;jQuery(this).bind("mouseover",jQuery.event.special.mouseenter.handler);return true;},teardown:function(){if(jQuery.browser.msie)return false;jQuery(this).unbind("mouseover",jQuery.event.special.mouseenter.handler);return true;},handler:function(event){if(withinElement(event,this))return true;arguments[0].type="mouseenter";return jQuery.event.handle.apply(this,arguments);}},mouseleave:{setup:function(){if(jQuery.browser.msie)return false;jQuery(this).bind("mouseout",jQuery.event.special.mouseleave.handler);return true;},teardown:function(){if(jQuery.browser.msie)return false;jQuery(this).unbind("mouseout",jQuery.event.special.mouseleave.handler);return true;},handler:function(event){if(withinElement(event,this))return true;arguments[0].type="mouseleave";return jQuery.event.handle.apply(this,arguments);}}}};jQuery.fn.extend({bind:function(type,data,fn){return type=="unload"?this.one(type,data,fn):this.each(function(){jQuery.event.add(this,type,fn||data,fn&&data);});},one:function(type,data,fn){return this.each(function(){jQuery.event.add(this,type,function(event){jQuery(this).unbind(event);return(fn||data).apply(this,arguments);},fn&&data);});},unbind:function(type,fn){return this.each(function(){jQuery.event.remove(this,type,fn);});},trigger:function(type,data,fn){return this.each(function(){jQuery.event.trigger(type,data,this,true,fn);});},triggerHandler:function(type,data,fn){if(this[0])return jQuery.event.trigger(type,data,this[0],false,fn);return undefined;},toggle:function(){var args=arguments;return this.click(function(event){this.lastToggle=0==this.lastToggle?1:0;event.preventDefault();return args[this.lastToggle].apply(this,arguments)||false;});},hover:function(fnOver,fnOut){return this.bind('mouseenter',fnOver).bind('mouseleave',fnOut);},ready:function(fn){bindReady();if(jQuery.isReady)fn.call(document,jQuery);else
+jQuery.readyList.push(function(){return fn.call(this,jQuery);});return this;}});jQuery.extend({isReady:false,readyList:[],ready:function(){if(!jQuery.isReady){jQuery.isReady=true;if(jQuery.readyList){jQuery.each(jQuery.readyList,function(){this.apply(document);});jQuery.readyList=null;}jQuery(document).triggerHandler("ready");}}});var readyBound=false;function bindReady(){if(readyBound)return;readyBound=true;if(document.addEventListener&&!jQuery.browser.opera)document.addEventListener("DOMContentLoaded",jQuery.ready,false);if(jQuery.browser.msie&&window==top)(function(){if(jQuery.isReady)return;try{document.documentElement.doScroll("left");}catch(error){setTimeout(arguments.callee,0);return;}jQuery.ready();})();if(jQuery.browser.opera)document.addEventListener("DOMContentLoaded",function(){if(jQuery.isReady)return;for(var i=0;i<document.styleSheets.length;i++)if(document.styleSheets[i].disabled){setTimeout(arguments.callee,0);return;}jQuery.ready();},false);if(jQuery.browser.safari){var numStyles;(function(){if(jQuery.isReady)return;if(document.readyState!="loaded"&&document.readyState!="complete"){setTimeout(arguments.callee,0);return;}if(numStyles===undefined)numStyles=jQuery("style, link[rel=stylesheet]").length;if(document.styleSheets.length!=numStyles){setTimeout(arguments.callee,0);return;}jQuery.ready();})();}jQuery.event.add(window,"load",jQuery.ready);}jQuery.each(("blur,focus,load,resize,scroll,unload,click,dblclick,"+"mousedown,mouseup,mousemove,mouseover,mouseout,change,select,"+"submit,keydown,keypress,keyup,error").split(","),function(i,name){jQuery.fn[name]=function(fn){return fn?this.bind(name,fn):this.trigger(name);};});var withinElement=function(event,elem){var parent=event.relatedTarget;while(parent&&parent!=elem)try{parent=parent.parentNode;}catch(error){parent=elem;}return parent==elem;};jQuery(window).bind("unload",function(){jQuery("*").add(document).unbind();});jQuery.fn.extend({load:function(url,params,callback){if(jQuery.isFunction(url))return this.bind("load",url);var off=url.indexOf(" ");if(off>=0){var selector=url.slice(off,url.length);url=url.slice(0,off);}callback=callback||function(){};var type="GET";if(params)if(jQuery.isFunction(params)){callback=params;params=null;}else{params=jQuery.param(params);type="POST";}var self=this;jQuery.ajax({url:url,type:type,dataType:"html",data:params,complete:function(res,status){if(status=="success"||status=="notmodified")self.html(selector?jQuery("<div/>").append(res.responseText.replace(/<script(.|\s)*?\/script>/g,"")).find(selector):res.responseText);self.each(callback,[res.responseText,status,res]);}});return this;},serialize:function(){return jQuery.param(this.serializeArray());},serializeArray:function(){return this.map(function(){return jQuery.nodeName(this,"form")?jQuery.makeArray(this.elements):this;}).filter(function(){return this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.nodeName)||/text|hidden|password/i.test(this.type));}).map(function(i,elem){var val=jQuery(this).val();return val==null?null:val.constructor==Array?jQuery.map(val,function(val,i){return{name:elem.name,value:val};}):{name:elem.name,value:val};}).get();}});jQuery.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","),function(i,o){jQuery.fn[o]=function(f){return this.bind(o,f);};});var jsc=(new Date).getTime();jQuery.extend({get:function(url,data,callback,type){if(jQuery.isFunction(data)){callback=data;data=null;}return jQuery.ajax({type:"GET",url:url,data:data,success:callback,dataType:type});},getScript:function(url,callback){return jQuery.get(url,null,callback,"script");},getJSON:function(url,data,callback){return jQuery.get(url,data,callback,"json");},post:function(url,data,callback,type){if(jQuery.isFunction(data)){callback=data;data={};}return jQuery.ajax({type:"POST",url:url,data:data,success:callback,dataType:type});},ajaxSetup:function(settings){jQuery.extend(jQuery.ajaxSettings,settings);},ajaxSettings:{global:true,type:"GET",timeout:0,contentType:"application/x-www-form-urlencoded",processData:true,async:true,data:null,username:null,password:null,accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:function(s){var jsonp,jsre=/=\?(&|$)/g,status,data;s=jQuery.extend(true,s,jQuery.extend(true,{},jQuery.ajaxSettings,s));if(s.data&&s.processData&&typeof s.data!="string")s.data=jQuery.param(s.data);if(s.dataType=="jsonp"){if(s.type.toLowerCase()=="get"){if(!s.url.match(jsre))s.url+=(s.url.match(/\?/)?"&":"?")+(s.jsonp||"callback")+"=?";}else if(!s.data||!s.data.match(jsre))s.data=(s.data?s.data+"&":"")+(s.jsonp||"callback")+"=?";s.dataType="json";}if(s.dataType=="json"&&(s.data&&s.data.match(jsre)||s.url.match(jsre))){jsonp="jsonp"+jsc++;if(s.data)s.data=(s.data+"").replace(jsre,"="+jsonp+"$1");s.url=s.url.replace(jsre,"="+jsonp+"$1");s.dataType="script";window[jsonp]=function(tmp){data=tmp;success();complete();window[jsonp]=undefined;try{delete window[jsonp];}catch(e){}if(head)head.removeChild(script);};}if(s.dataType=="script"&&s.cache==null)s.cache=false;if(s.cache===false&&s.type.toLowerCase()=="get"){var ts=(new Date()).getTime();var ret=s.url.replace(/(\?|&)_=.*?(&|$)/,"$1_="+ts+"$2");s.url=ret+((ret==s.url)?(s.url.match(/\?/)?"&":"?")+"_="+ts:"");}if(s.data&&s.type.toLowerCase()=="get"){s.url+=(s.url.match(/\?/)?"&":"?")+s.data;s.data=null;}if(s.global&&!jQuery.active++)jQuery.event.trigger("ajaxStart");if((!s.url.indexOf("http")||!s.url.indexOf("//"))&&s.dataType=="script"&&s.type.toLowerCase()=="get"){var head=document.getElementsByTagName("head")[0];var script=document.createElement("script");script.src=s.url;if(s.scriptCharset)script.charset=s.scriptCharset;if(!jsonp){var done=false;script.onload=script.onreadystatechange=function(){if(!done&&(!this.readyState||this.readyState=="loaded"||this.readyState=="complete")){done=true;success();complete();head.removeChild(script);}};}head.appendChild(script);return undefined;}var requestDone=false;var xml=window.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP"):new XMLHttpRequest();xml.open(s.type,s.url,s.async,s.username,s.password);try{if(s.data)xml.setRequestHeader("Content-Type",s.contentType);if(s.ifModified)xml.setRequestHeader("If-Modified-Since",jQuery.lastModified[s.url]||"Thu, 01 Jan 1970 00:00:00 GMT");xml.setRequestHeader("X-Requested-With","XMLHttpRequest");xml.setRequestHeader("Accept",s.dataType&&s.accepts[s.dataType]?s.accepts[s.dataType]+", */*":s.accepts._default);}catch(e){}if(s.beforeSend)s.beforeSend(xml);if(s.global)jQuery.event.trigger("ajaxSend",[xml,s]);var onreadystatechange=function(isTimeout){if(!requestDone&&xml&&(xml.readyState==4||isTimeout=="timeout")){requestDone=true;if(ival){clearInterval(ival);ival=null;}status=isTimeout=="timeout"&&"timeout"||!jQuery.httpSuccess(xml)&&"error"||s.ifModified&&jQuery.httpNotModified(xml,s.url)&&"notmodified"||"success";if(status=="success"){try{data=jQuery.httpData(xml,s.dataType);}catch(e){status="parsererror";}}if(status=="success"){var modRes;try{modRes=xml.getResponseHeader("Last-Modified");}catch(e){}if(s.ifModified&&modRes)jQuery.lastModified[s.url]=modRes;if(!jsonp)success();}else
+jQuery.handleError(s,xml,status);complete();if(s.async)xml=null;}};if(s.async){var ival=setInterval(onreadystatechange,13);if(s.timeout>0)setTimeout(function(){if(xml){xml.abort();if(!requestDone)onreadystatechange("timeout");}},s.timeout);}try{xml.send(s.data);}catch(e){jQuery.handleError(s,xml,null,e);}if(!s.async)onreadystatechange();function success(){if(s.success)s.success(data,status);if(s.global)jQuery.event.trigger("ajaxSuccess",[xml,s]);}function complete(){if(s.complete)s.complete(xml,status);if(s.global)jQuery.event.trigger("ajaxComplete",[xml,s]);if(s.global&&!--jQuery.active)jQuery.event.trigger("ajaxStop");}return xml;},handleError:function(s,xml,status,e){if(s.error)s.error(xml,status,e);if(s.global)jQuery.event.trigger("ajaxError",[xml,s,e]);},active:0,httpSuccess:function(r){try{return!r.status&&location.protocol=="file:"||(r.status>=200&&r.status<300)||r.status==304||r.status==1223||jQuery.browser.safari&&r.status==undefined;}catch(e){}return false;},httpNotModified:function(xml,url){try{var xmlRes=xml.getResponseHeader("Last-Modified");return xml.status==304||xmlRes==jQuery.lastModified[url]||jQuery.browser.safari&&xml.status==undefined;}catch(e){}return false;},httpData:function(r,type){var ct=r.getResponseHeader("content-type");var xml=type=="xml"||!type&&ct&&ct.indexOf("xml")>=0;var data=xml?r.responseXML:r.responseText;if(xml&&data.documentElement.tagName=="parsererror")throw"parsererror";if(type=="script")jQuery.globalEval(data);if(type=="json")data=eval("("+data+")");return data;},param:function(a){var s=[];if(a.constructor==Array||a.jquery)jQuery.each(a,function(){s.push(encodeURIComponent(this.name)+"="+encodeURIComponent(this.value));});else
+for(var j in a)if(a[j]&&a[j].constructor==Array)jQuery.each(a[j],function(){s.push(encodeURIComponent(j)+"="+encodeURIComponent(this));});else
+s.push(encodeURIComponent(j)+"="+encodeURIComponent(a[j]));return s.join("&").replace(/%20/g,"+");}});jQuery.fn.extend({show:function(speed,callback){return speed?this.animate({height:"show",width:"show",opacity:"show"},speed,callback):this.filter(":hidden").each(function(){this.style.display=this.oldblock||"";if(jQuery.css(this,"display")=="none"){var elem=jQuery("<"+this.tagName+" />").appendTo("body");this.style.display=elem.css("display");if(this.style.display=="none")this.style.display="block";elem.remove();}}).end();},hide:function(speed,callback){return speed?this.animate({height:"hide",width:"hide",opacity:"hide"},speed,callback):this.filter(":visible").each(function(){this.oldblock=this.oldblock||jQuery.css(this,"display");this.style.display="none";}).end();},_toggle:jQuery.fn.toggle,toggle:function(fn,fn2){return jQuery.isFunction(fn)&&jQuery.isFunction(fn2)?this._toggle(fn,fn2):fn?this.animate({height:"toggle",width:"toggle",opacity:"toggle"},fn,fn2):this.each(function(){jQuery(this)[jQuery(this).is(":hidden")?"show":"hide"]();});},slideDown:function(speed,callback){return this.animate({height:"show"},speed,callback);},slideUp:function(speed,callback){return this.animate({height:"hide"},speed,callback);},slideToggle:function(speed,callback){return this.animate({height:"toggle"},speed,callback);},fadeIn:function(speed,callback){return this.animate({opacity:"show"},speed,callback);},fadeOut:function(speed,callback){return this.animate({opacity:"hide"},speed,callback);},fadeTo:function(speed,to,callback){return this.animate({opacity:to},speed,callback);},animate:function(prop,speed,easing,callback){var optall=jQuery.speed(speed,easing,callback);return this[optall.queue===false?"each":"queue"](function(){if(this.nodeType!=1)return false;var opt=jQuery.extend({},optall);var hidden=jQuery(this).is(":hidden"),self=this;for(var p in prop){if(prop[p]=="hide"&&hidden||prop[p]=="show"&&!hidden)return jQuery.isFunction(opt.complete)&&opt.complete.apply(this);if(p=="height"||p=="width"){opt.display=jQuery.css(this,"display");opt.overflow=this.style.overflow;}}if(opt.overflow!=null)this.style.overflow="hidden";opt.curAnim=jQuery.extend({},prop);jQuery.each(prop,function(name,val){var e=new jQuery.fx(self,opt,name);if(/toggle|show|hide/.test(val))e[val=="toggle"?hidden?"show":"hide":val](prop);else{var parts=val.toString().match(/^([+-]=)?([\d+-.]+)(.*)$/),start=e.cur(true)||0;if(parts){var end=parseFloat(parts[2]),unit=parts[3]||"px";if(unit!="px"){self.style[name]=(end||1)+unit;start=((end||1)/e.cur(true))*start;self.style[name]=start+unit;}if(parts[1])end=((parts[1]=="-="?-1:1)*end)+start;e.custom(start,end,unit);}else
+e.custom(start,val,"");}});return true;});},queue:function(type,fn){if(jQuery.isFunction(type)||(type&&type.constructor==Array)){fn=type;type="fx";}if(!type||(typeof type=="string"&&!fn))return queue(this[0],type);return this.each(function(){if(fn.constructor==Array)queue(this,type,fn);else{queue(this,type).push(fn);if(queue(this,type).length==1)fn.apply(this);}});},stop:function(clearQueue,gotoEnd){var timers=jQuery.timers;if(clearQueue)this.queue([]);this.each(function(){for(var i=timers.length-1;i>=0;i--)if(timers[i].elem==this){if(gotoEnd)timers[i](true);timers.splice(i,1);}});if(!gotoEnd)this.dequeue();return this;}});var queue=function(elem,type,array){if(!elem)return undefined;type=type||"fx";var q=jQuery.data(elem,type+"queue");if(!q||array)q=jQuery.data(elem,type+"queue",array?jQuery.makeArray(array):[]);return q;};jQuery.fn.dequeue=function(type){type=type||"fx";return this.each(function(){var q=queue(this,type);q.shift();if(q.length)q[0].apply(this);});};jQuery.extend({speed:function(speed,easing,fn){var opt=speed&&speed.constructor==Object?speed:{complete:fn||!fn&&easing||jQuery.isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&easing.constructor!=Function&&easing};opt.duration=(opt.duration&&opt.duration.constructor==Number?opt.duration:{slow:600,fast:200}[opt.duration])||400;opt.old=opt.complete;opt.complete=function(){if(opt.queue!==false)jQuery(this).dequeue();if(jQuery.isFunction(opt.old))opt.old.apply(this);};return opt;},easing:{linear:function(p,n,firstNum,diff){return firstNum+diff*p;},swing:function(p,n,firstNum,diff){return((-Math.cos(p*Math.PI)/2)+0.5)*diff+firstNum;}},timers:[],timerId:null,fx:function(elem,options,prop){this.options=options;this.elem=elem;this.prop=prop;if(!options.orig)options.orig={};}});jQuery.fx.prototype={update:function(){if(this.options.step)this.options.step.apply(this.elem,[this.now,this]);(jQuery.fx.step[this.prop]||jQuery.fx.step._default)(this);if(this.prop=="height"||this.prop=="width")this.elem.style.display="block";},cur:function(force){if(this.elem[this.prop]!=null&&this.elem.style[this.prop]==null)return this.elem[this.prop];var r=parseFloat(jQuery.css(this.elem,this.prop,force));return r&&r>-10000?r:parseFloat(jQuery.curCSS(this.elem,this.prop))||0;},custom:function(from,to,unit){this.startTime=(new Date()).getTime();this.start=from;this.end=to;this.unit=unit||this.unit||"px";this.now=this.start;this.pos=this.state=0;this.update();var self=this;function t(gotoEnd){return self.step(gotoEnd);}t.elem=this.elem;jQuery.timers.push(t);if(jQuery.timerId==null){jQuery.timerId=setInterval(function(){var timers=jQuery.timers;for(var i=0;i<timers.length;i++)if(!timers[i]())timers.splice(i--,1);if(!timers.length){clearInterval(jQuery.timerId);jQuery.timerId=null;}},13);}},show:function(){this.options.orig[this.prop]=jQuery.attr(this.elem.style,this.prop);this.options.show=true;this.custom(0,this.cur());if(this.prop=="width"||this.prop=="height")this.elem.style[this.prop]="1px";jQuery(this.elem).show();},hide:function(){this.options.orig[this.prop]=jQuery.attr(this.elem.style,this.prop);this.options.hide=true;this.custom(this.cur(),0);},step:function(gotoEnd){var t=(new Date()).getTime();if(gotoEnd||t>this.options.duration+this.startTime){this.now=this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;var done=true;for(var i in this.options.curAnim)if(this.options.curAnim[i]!==true)done=false;if(done){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;this.elem.style.display=this.options.display;if(jQuery.css(this.elem,"display")=="none")this.elem.style.display="block";}if(this.options.hide)this.elem.style.display="none";if(this.options.hide||this.options.show)for(var p in this.options.curAnim)jQuery.attr(this.elem.style,p,this.options.orig[p]);}if(done&&jQuery.isFunction(this.options.complete))this.options.complete.apply(this.elem);return false;}else{var n=t-this.startTime;this.state=n/this.options.duration;this.pos=jQuery.easing[this.options.easing||(jQuery.easing.swing?"swing":"linear")](this.state,n,0,1,this.options.duration);this.now=this.start+((this.end-this.start)*this.pos);this.update();}return true;}};jQuery.fx.step={scrollLeft:function(fx){fx.elem.scrollLeft=fx.now;},scrollTop:function(fx){fx.elem.scrollTop=fx.now;},opacity:function(fx){jQuery.attr(fx.elem.style,"opacity",fx.now);},_default:function(fx){fx.elem.style[fx.prop]=fx.now+fx.unit;}};jQuery.fn.offset=function(){var left=0,top=0,elem=this[0],results;if(elem)with(jQuery.browser){var parent=elem.parentNode,offsetChild=elem,offsetParent=elem.offsetParent,doc=elem.ownerDocument,safari2=safari&&parseInt(version)<522&&!/adobeair/i.test(userAgent),fixed=jQuery.css(elem,"position")=="fixed";if(elem.getBoundingClientRect){var box=elem.getBoundingClientRect();add(box.left+Math.max(doc.documentElement.scrollLeft,doc.body.scrollLeft),box.top+Math.max(doc.documentElement.scrollTop,doc.body.scrollTop));add(-doc.documentElement.clientLeft,-doc.documentElement.clientTop);}else{add(elem.offsetLeft,elem.offsetTop);while(offsetParent){add(offsetParent.offsetLeft,offsetParent.offsetTop);if(mozilla&&!/^t(able|d|h)$/i.test(offsetParent.tagName)||safari&&!safari2)border(offsetParent);if(!fixed&&jQuery.css(offsetParent,"position")=="fixed")fixed=true;offsetChild=/^body$/i.test(offsetParent.tagName)?offsetChild:offsetParent;offsetParent=offsetParent.offsetParent;}while(parent&&parent.tagName&&!/^body|html$/i.test(parent.tagName)){if(!/^inline|table.*$/i.test(jQuery.css(parent,"display")))add(-parent.scrollLeft,-parent.scrollTop);if(mozilla&&jQuery.css(parent,"overflow")!="visible")border(parent);parent=parent.parentNode;}if((safari2&&(fixed||jQuery.css(offsetChild,"position")=="absolute"))||(mozilla&&jQuery.css(offsetChild,"position")!="absolute"))add(-doc.body.offsetLeft,-doc.body.offsetTop);if(fixed)add(Math.max(doc.documentElement.scrollLeft,doc.body.scrollLeft),Math.max(doc.documentElement.scrollTop,doc.body.scrollTop));}results={top:top,left:left};}function border(elem){add(jQuery.curCSS(elem,"borderLeftWidth",true),jQuery.curCSS(elem,"borderTopWidth",true));}function add(l,t){left+=parseInt(l)||0;top+=parseInt(t)||0;}return results;};})();
\ No newline at end of file
diff --git a/src/webapp/web/admin/logging.jsp b/src/webapp/web/admin/logging.jsp
new file mode 100644
index 0000000..e94004e
--- /dev/null
+++ b/src/webapp/web/admin/logging.jsp
@@ -0,0 +1,57 @@
+<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.solr.core.SolrCore,
+                 org.apache.solr.schema.IndexSchema,
+                 java.io.File,
+                 java.net.InetAddress,
+                 java.net.UnknownHostException"%>
+<%@ page import="java.util.Date"%>
+<%@ page import="java.util.logging.Level"%>
+<%@ page import="java.util.logging.LogManager"%>
+<%@ page import="java.util.logging.Logger"%>
+
+<?xml-stylesheet type="text/xsl" href="logging.xsl"?>
+
+<%
+  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
+  if (core == null) {
+    String coreParam = request.getParameter("core");
+    core = coreParam != null? org.apache.solr.core.SolrMultiCore.getInstance().getCore(coreParam) : null;
+  }
+  if (core == null)
+    core = SolrCore.getSolrCore();
+    
+  Logger log = SolrCore.log;
+  Logger parent = log.getParent();
+  while(parent != null) {
+    log = parent;
+    parent = log.getParent();
+  }
+  Level lvl = log.getLevel();
+      
+%>
+<solr>
+  <core><%=core.getName()%></core>
+  <logging>
+<% if (lvl != null) {%>
+      <logLevel><%= lvl.toString() %></logLevel>
+<% } else { %>
+      <logLevel>null</logLevel>
+<% } %>
+  </logging>
+</solr>
diff --git a/src/webapp/web/admin/logging.xsl b/src/webapp/web/admin/logging.xsl
new file mode 100644
index 0000000..3678ea5
--- /dev/null
+++ b/src/webapp/web/admin/logging.xsl
@@ -0,0 +1,89 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!-- $Id$ -->
+<!-- $URL$ -->
+
+<xsl:stylesheet
+  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+  version="1.0">
+
+  <xsl:output
+    method="html"
+    indent="yes"
+    doctype-public="-//W3C//DTD HTML 4.01//EN"
+    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
+
+  <xsl:template match="/">
+    <html>
+      <head>
+        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
+	<link rel="icon" href="/favicon.ico" type="image/ico"></link>
+	<link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
+        <title>Solr Admin: Logging</title>
+      </head>
+      <body>
+        <a href="">
+	   <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
+	   </img>
+	</a>
+        <h1>Solr Admin (<xsl:value-of select="solr/meta/collection" />)</h1>
+        <div style="margin-top: 1em;">
+          <xsl:apply-templates/>
+        <div>
+        </div>
+          <a href=".">Return to Admin Page</a>
+        </div>
+      </body>
+    </html>
+  </xsl:template>
+
+  <xsl:include href="meta.xsl"/>
+
+  <xsl:template match="solr/logging">
+
+<br clear="all"/>
+<h2>Solr Logging</h2>
+<table>
+  <tr>
+    <td>
+      <H3>Log Level:</H3>
+    </td>
+    <td>
+<xsl:value-of select="logLevel" />
+    </td>
+  </tr>
+  <tr>
+    <td>
+    Set Level
+    </td>
+    <td>
+    [<a href="action.jsp?log=ALL">ALL</a>]
+    [<a href="action.jsp?log=CONFIG">CONFIG</a>]
+    [<a href="action.jsp?log=FINE">FINE</a>]
+    [<a href="action.jsp?log=FINER">FINER</a>]
+    [<a href="action.jsp?log=FINEST">FINEST</a>]
+    [<a href="action.jsp?log=INFO">INFO</a>]
+    [<a href="action.jsp?log=OFF">OFF</a>]
+    [<a href="action.jsp?log=SEVERE">SEVERE</a>]
+    [<a href="action.jsp?log=WARNING">WARNING</a>]
+    </td>
+  </tr>
+</table>
+
+  </xsl:template>
+</xsl:stylesheet>
diff --git a/src/webapp/web/admin/meta.xsl b/src/webapp/web/admin/meta.xsl
new file mode 100644
index 0000000..a1c6085
--- /dev/null
+++ b/src/webapp/web/admin/meta.xsl
@@ -0,0 +1,32 @@
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<xsl:stylesheet
+  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+  version="1.0">
+
+  <xsl:output
+    method="html"
+    indent="yes"
+    doctype-public="-//W3C//DTD HTML 4.01//EN"
+    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
+
+  <xsl:template match="solr/meta">
+    <xsl:value-of select="host" />:<xsl:value-of select="port" />
+    cwd=<xsl:value-of select="cwd" /> SolrHome=<xsl:value-of select="solrHome" />
+  </xsl:template>
+
+</xsl:stylesheet>
diff --git a/src/webapp/web/admin/ping.jsp b/src/webapp/web/admin/ping.jsp
new file mode 100644
index 0000000..bdc9620
--- /dev/null
+++ b/src/webapp/web/admin/ping.jsp
@@ -0,0 +1,73 @@
+<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.solr.core.SolrConfig,
+                 org.apache.solr.core.SolrCore,
+                 org.apache.solr.common.util.XML,
+                 org.apache.solr.core.SolrException"%>
+<%@ page import="org.apache.solr.request.LocalSolrQueryRequest"%>
+<%@ page import="org.apache.solr.request.SolrQueryResponse"%>
+<%@ page import="org.apache.solr.request.ServletSolrParams"%>
+<%@ page import="org.apache.solr.request.SolrQueryRequest"%>
+
+<%
+  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
+  if (core == null) {
+    String coreParam = request.getParameter("core");
+    core = coreParam != null? org.apache.solr.core.SolrMultiCore.getInstance().getCore(coreParam) : null;
+  }
+  if (core == null)
+    core = SolrCore.getSolrCore();
+%>
+<?xml-stylesheet type="text/xsl" href="ping.xsl"?>
+
+<solr>
+  <core><%=core.getName()%></core>
+  <ping>
+<%
+  SolrQueryRequest req = core.getPingQueryRequest();
+  SolrQueryResponse resp = new SolrQueryResponse();
+  try {
+    core.execute(req,resp);
+    if (resp.getException() == null) {
+// No need for explicit status in the body, when the standard HTTP
+// response codes already transmit success/failure message
+//      out.println("<status>200</status>");
+    }
+    else if (resp.getException() != null) {
+// No need for explicit status in the body, when the standard HTTP
+// response codes already transmit success/failure message
+//      out.println("<status>500</status>");
+      out.println("<error>");
+      XML.escapeCharData(SolrException.toStr(resp.getException()), out);
+      out.println("</error>");
+      response.sendError(500);
+    }
+  } catch (Throwable t) {
+// No need for explicit status in the body, when the standard HTTP
+// response codes already transmit success/failure message
+//      out.println("<status>500</status>");
+      out.println("<error>");
+      XML.escapeCharData(SolrException.toStr(t), out);
+      out.println("</error>");
+      response.sendError(500);
+  } finally {
+      req.close();
+  }
+%>
+  </ping>
+</solr>
diff --git a/src/webapp/web/admin/ping.xsl b/src/webapp/web/admin/ping.xsl
new file mode 100644
index 0000000..364577b
--- /dev/null
+++ b/src/webapp/web/admin/ping.xsl
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!-- $Id$ -->
+<!-- $URL$ -->
+
+<xsl:stylesheet
+  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+  version="1.0">
+
+  <xsl:output
+    method="html"
+    indent="yes"
+    doctype-public="-//W3C//DTD HTML 4.01//EN"
+    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
+
+  <xsl:template match="/">
+    <html>
+      <head>
+        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
+	<link rel="icon" href="/favicon.ico" type="image/ico"></link>
+	<link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
+        <title>Solr Admin: Ping</title>
+      </head>
+      <body>
+        <a href="">
+	   <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
+	   </img>
+	</a>
+        <h1>Solr Admin (<xsl:value-of select="solr/meta/collection" />)</h1>
+        <div style="margin-top: 1em;">
+          <xsl:apply-templates/>
+        <div>
+        </div>
+          <a href=".">Return to Admin Page</a>
+        </div>
+      </body>
+    </html>
+  </xsl:template>
+
+  <xsl:include href="meta.xsl"/>
+
+  <xsl:template match="solr/ping">
+  <table>
+    <tr>
+      <td>
+        <H3>Ping</H3>
+      </td>
+      <td>
+        <xsl:value-of select="error" />
+      </td>
+    </tr>
+  </table>
+  </xsl:template>
+</xsl:stylesheet>
diff --git a/src/webapp/web/admin/raw-schema.jsp b/src/webapp/web/admin/raw-schema.jsp
new file mode 100644
index 0000000..1a1edc6
--- /dev/null
+++ b/src/webapp/web/admin/raw-schema.jsp
@@ -0,0 +1,46 @@
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.solr.core.SolrCore,
+                 org.apache.solr.schema.IndexSchema"%>
+<%@ page import="java.io.InputStreamReader"%>
+<%@ page import="java.io.Reader"%>
+<%@ page import="java.util.logging.Logger"%>
+<%@ page contentType="text/plain;charset=UTF-8" language="java" %>
+<%!
+  static Logger log = Logger.getLogger(SolrCore.class.getName());
+%>
+<%
+  // NOTE -- this file will be removed in a future release
+  log.warning("Using deprecated JSP: " + request.getRequestURL().append("?").append(request.getQueryString()) + " -- check the ShowFileRequestHandler"  );
+
+  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
+  if (core == null) {
+    String coreParam = request.getParameter("core");
+    core = coreParam != null? org.apache.solr.core.SolrMultiCore.getInstance().getCore(coreParam) : null;
+  }
+  if (core == null)
+    core = SolrCore.getSolrCore();
+    
+  IndexSchema schema = core.getSchema();
+  Reader input = new InputStreamReader(schema.getInputStream());
+  char[] buf = new char[4096];
+  while (true) {
+    int len = input.read(buf);
+    if (len<=0) break;
+    out.write(buf,0,len);
+  }
+%>
diff --git a/src/webapp/web/admin/registry.jsp b/src/webapp/web/admin/registry.jsp
new file mode 100644
index 0000000..b9ea5b0
--- /dev/null
+++ b/src/webapp/web/admin/registry.jsp
@@ -0,0 +1,107 @@
+<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.solr.core.SolrInfoMBean,
+                 org.apache.solr.core.SolrInfoRegistry,
+                 java.net.URL,
+                 java.util.Date,
+                 java.util.Map"%>
+<?xml-stylesheet type="text/xsl" href="registry.xsl"?>
+
+<%@include file="_info.jsp" %>
+
+<solr>
+  <core><%= core.getName()%></core>
+  <schema><%= collectionName %></schema>
+  <host><%= hostname %></host>
+  <now><%= new Date().toString() %></now>
+  <start><%= new Date(core.getStartTime()) %></start>
+  <solr-spec-version><%= solrSpecVersion %></solr-spec-version>
+  <solr-impl-version><%= solrImplVersion %></solr-impl-version>
+  <lucene-spec-version><%= luceneSpecVersion %></lucene-spec-version>
+  <lucene-impl-version><%= luceneImplVersion %></lucene-impl-version>
+  <solr-info>
+<%
+for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) {
+%>
+    <<%= cat.toString() %>>
+<%
+ Map<String, SolrInfoMBean> reg = SolrInfoRegistry.getRegistry();
+ synchronized(reg) {
+  for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {
+    String key = entry.getKey();
+    SolrInfoMBean m = entry.getValue();
+
+    if (m.getCategory() != cat) continue;
+
+    String na     = "None Provided";
+    String name   = (m.getName()!=null ? m.getName() : na);
+    String vers   = (m.getVersion()!=null ? m.getVersion() : na);
+    String desc   = (m.getDescription()!=null ? m.getDescription() : na);
+    String srcId  = (m.getSourceId()!=null ? m.getSourceId() : na);
+    String src = (m.getSource()!=null ? m.getSource() : na);
+    // print
+%>
+      <entry>
+        <name>
+          <%= key %>
+        </name>
+        <class>
+          <%= name %>
+        </class>
+        <version>
+          <%= vers %>
+        </version>
+        <description>
+          <%= desc %>
+        </description>
+        <sourceid>
+          <%= srcId %>
+        </sourceid>
+        <source>
+          <%= src %>
+        </source>
+
+<%
+    URL[] urls = m.getDocs();
+    if ((urls != null) && (urls.length != 0)) {
+%>
+        <urls>
+<%
+      for (URL u : urls) {
+%>
+          <url>
+            <%= u.toString() %>
+          </url>
+<%
+      }
+%>
+        </urls>
+<%
+    }
+%>
+      </entry>
+<%
+  }
+ }
+%>
+    </<%= cat.toString() %>>
+<%
+}
+%>
+  </solr-info>
+</solr>
diff --git a/src/webapp/web/admin/registry.xsl b/src/webapp/web/admin/registry.xsl
new file mode 100644
index 0000000..53ff775
--- /dev/null
+++ b/src/webapp/web/admin/registry.xsl
@@ -0,0 +1,285 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!-- $Id$ -->
+<!-- $URL$ -->
+
+<xsl:stylesheet
+  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+  version="1.0">
+
+
+  <xsl:output
+    method="html"
+    indent="yes"
+    doctype-public="-//W3C//DTD HTML 4.01//EN"
+    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
+
+
+  <xsl:template match="/">
+    <html>
+      <head>
+        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
+	<link rel="icon" href="/favicon.ico" type="image/ico"></link>
+	<link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
+        <title>SOLR Info</title>
+      </head>
+      <body>
+        <a href="">
+	   <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
+	   </img>
+	</a>
+        <h1>SOLR Info (<xsl:value-of select="solr/schema" />)</h1>
+          <xsl:value-of select="solr/host" />
+          <br clear="all" />
+        <xsl:apply-templates/>
+        <br /><br />
+        <a href="">Return to Admin Page</a>
+      </body>
+    </html>
+  </xsl:template>
+
+  <xsl:template match="solr">
+  <table>
+    <tr>
+      <td>
+        <H3>Category</H3>
+      </td>
+      <td>
+        [<a href="#core">Core</a>]
+        [<a href="#cache">Cache</a>]
+        [<a href="#query">Query</a>]
+        [<a href="#update">Update</a>]
+        [<a href="#other">Other</a>]
+      </td>
+    </tr>
+    <tr><td></td>
+      <td>Solr Specification Version: 
+          <xsl:value-of select="solr-spec-version" />
+      </td>
+    </tr>
+    <tr><td></td>
+      <td>Solr Implementation Version: 
+          <xsl:value-of select="solr-impl-version" />
+      </td>
+    </tr>
+    <tr><td></td>
+      <td>Lucene Specification Version: 
+          <xsl:value-of select="lucene-spec-version" />
+      </td>
+    </tr>
+    <tr><td></td>
+      <td>Lucene Implementation Version: 
+          <xsl:value-of select="lucene-impl-version" />
+      </td>
+    </tr>
+    <tr>
+      <td>
+      </td>
+      <td>
+        Current Time: <xsl:value-of select="now" />
+      </td>
+    </tr>
+    <tr>
+      <td>
+      </td>
+      <td>
+        Server Start Time:<xsl:value-of select="start" />
+      </td>
+    </tr>
+  </table>
+  <xsl:apply-templates/>
+  </xsl:template>
+
+  <xsl:template match="solr/*" priority="-1" />
+
+  <xsl:template match="solr/solr-info">
+  <xsl:apply-templates/>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/CORE">
+    <br />
+    <a name="core"><h2>Core</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/CORE/entry">
+      <xsl:for-each select="*">
+        <tr>
+          <td align="right">
+            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="."/>&#xa0;</tt>
+          </td>
+        </tr>
+      </xsl:for-each>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/CACHE">
+    <br />
+    <a name="cache"><h2>Cache</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/CACHE/entry">
+      <xsl:for-each select="*">
+        <tr>
+          <td align="right">
+            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="."/>&#xa0;</tt>
+          </td>
+        </tr>
+      </xsl:for-each>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/QUERYHANDLER">
+    <br />
+    <a name="query"><h2>Query Handlers</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/QUERYHANDLER/entry">
+      <xsl:for-each select="*">
+        <tr>
+          <td align="right">
+            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="."/>&#xa0;</tt>
+          </td>
+        </tr>
+      </xsl:for-each>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/UPDATEHANDLER">
+    <br />
+    <a name="update"><h2>Update Handlers</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/UPDATEHANDLER/entry">
+      <xsl:for-each select="*">
+        <tr>
+          <td align="right">
+            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="."/>&#xa0;</tt>
+          </td>
+        </tr>
+      </xsl:for-each>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/OTHER">
+    <br />
+    <a name="other"><h2>Other</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/OTHER/entry">
+      <xsl:for-each select="*">
+        <tr>
+          <td align="right">
+            <strong><xsl:value-of select="name()"/>:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="."/>&#xa0;</tt>
+          </td>
+        </tr>
+      </xsl:for-each>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+
+</xsl:stylesheet>
diff --git a/src/webapp/web/admin/schema.jsp b/src/webapp/web/admin/schema.jsp
new file mode 100644
index 0000000..1d5d9cd
--- /dev/null
+++ b/src/webapp/web/admin/schema.jsp
@@ -0,0 +1,661 @@
+<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+
+<%-- $Id: index.jsp 608150 2008-01-02 17:15:30Z ryan $ --%>
+<%-- $Source: /cvs/main/searching/SolrServer/resources/admin/index.jsp,v $ --%>
+<%-- $Name:  $ --%>
+  
+<script src="/solr/admin/jquery-1.2.3.min.js"></script>
+<script>
+
+(function($, libName) {
+  var solr = {
+    
+    //The default location of the luke handler relative to this page
+    // Can be overridden in the init(url) method
+    pathToLukeHandler: 'luke',  
+    
+    // Base properties to hold schema information
+    schemaInfo: {},
+    schemaFields: {},
+    schemaDynamicFields: {},
+    schemaTypes: {},
+    schemaFlags: {},
+    
+    //The basic function to call to make the initail JSON calls
+    // takes one option parameter, the path to the luke handler
+    // if undefined, it will use the default, 'luke', which means
+    // this is being called from the same relative URL path
+    init: function(pathToLukeHandler) {
+      if (pathToLukeHandler != undefined) {
+        solr.pathToLukeHandler = pathToLukeHandler;
+      }
+      solr.loadSchema(function() {
+        solr.loadFromLukeHandler(function () {
+          solr.createMenu('menu');
+          solr.displaySchemaInfo();
+        });
+      });
+
+    },
+    
+    //load the Schema from the LukeRequestHandler
+    // this loads every field, and in each field the copy source/dests and flags
+    // we also load the list of field types, and the list of flags
+    loadSchema: function(func) {
+			$.getJSON(solr.pathToLukeHandler +'?show=schema&wt=json', function(data) {
+        //populate all non field/type/flag data in the info block
+        $.each(data.index, function(i, item) {
+          solr.schemaInfo[i] = item;
+        });
+        
+        //LukeRequestHandler places these two attributes outside of the "index" node, but
+        // we want it here so we can more easily display it in the "HOME" block
+        solr.schemaInfo['uniqueKeyField'] = data.schema.uniqueKeyField;
+        solr.schemaInfo['defaultSearchField'] = data.schema.defaultSearchField;
+        //a one-off hack, because the directory string is so long and unbroken
+        // that it can break CSS layouts
+        solr.schemaInfo['directory'] = solr.schemaInfo['directory'].substring(0, solr.schemaInfo['directory'].indexOf('@')+1) + ' ' +  solr.schemaInfo['directory'].substring(solr.schemaInfo['directory'].indexOf('@') +1);
+        
+        // populate the list of fields
+				$.each(data.schema.fields, function(i,item){
+					solr.schemaFields[i]=item;
+     		});
+        // populate the list of field types
+	      $.each(data.schema.types, function(type, ft) {
+          solr.schemaTypes[type] = ft;
+        });
+        //populate the list of dynamic fields
+        $.each(data.schema.dynamicFields, function(i, dynField) {
+          solr.schemaDynamicFields[i] = dynField;
+        });
+        //populate the list of flags, so we can convert flags to text in display
+      	$.each(data.info.key, function(i, flag) {
+      		solr.schemaFlags[i] = flag;
+ 	    	});
+        
+        //LukeRequestHandler returns copyFields src/dest as the entire toString of the field
+        // we only need the field name, so here we loop through the fields, and replace the full
+        // field definitions with the name in the copySources/copyDests properties
+        $.each(solr.schemaFields, function(i, field) {
+          $.each(['copySources', 'copyDests'], function(i, copyProp) {
+            var newFields = new Array();
+            $.each(field[copyProp], function(i, fullName) {
+              newFields.push(fullName.substring(fullName.lastIndexOf(':')+1, fullName.indexOf('{')));
+            });
+            field[copyProp] = newFields;
+          });
+        
+        });
+        //An additional optional callback
+        // used in init to trigger the 2nd call to LukeRequestHandler only
+        // after the first one is finished
+        if ($.isFunction(func)) {
+          func(solr);
+        }
+      });
+    },
+
+    //further populates the loaded schema with information gathered
+    // from the no argument LukeRequestHandler
+    loadFromLukeHandler: function(func) {
+      $.getJSON(solr.pathToLukeHandler+'?wt=json', function(data) {
+        $.each(data.fields, function(i, item) {
+          var field = solr.schemaFields[i];
+          
+          //If undefined, then we have a dynamicField which does not show up
+          // in the LukeRequestHandler show=schema variant
+          if (field == undefined) {
+            field = item;
+            //Attach this field to its dynamicField
+            var base = field.dynamicBase;
+            var dynField = solr.schemaDynamicFields[base];
+
+            //Some fields in a multicore setting have no dynamic base, either
+            // the name of the core is a field that has no type or flags
+            if (dynField != undefined) {
+            	var synFields = dynField['fields'];
+	            if (synFields== undefined) {
+    	          synFields= new Array();
+        	    }
+            	synFields.push(i);
+            	dynField['fields'] = synFields;
+            }
+            solr.schemaFields[i] = item;
+          }
+          //Populate other data in this field that would not have been loaded in
+          // the show=schema variant
+          $.each(item, function(k, v) {
+            if (k == 'topTerms' || k == 'histogram') {
+              solr.schemaFields[i][k] = solr.lukeArrayToHash(v);
+            } else {
+              solr.schemaFields[i][k] = v;
+            }
+          });
+        });
+        //another optional callback; used in the init case to lay out the page
+        // after the data is loaded
+        if ($.isFunction(func)) {
+          func();
+        }
+      });
+    },
+    //some elements in the JSON response are arrays, where odd/even elements
+    // are the name/value, and convert it to a standard map/associative array
+    // incoming: ['foo', 'bar', 'bat', 'baz']
+    // output: {'foo':'bar', 'bat':baz'}
+    lukeArrayToHash: function(termsArr) {
+        var hash = new Object();
+				var temp;
+        //topTerms comes in as an array, with odd indexes the field name
+        // and even indexes the number
+				$.each(termsArr, function(i, item) {
+					if (i%2 ==0) {
+						temp = item;
+					} else {
+						hash[temp] = item;
+					} 
+				});
+				return hash;
+    },
+    
+    //gets the top Terms via an Ajax call the LukeRequestHandler for that field
+    // The callback is used here to redraw the table after the ajax call returns
+		getTopTerms: function(fieldName, numTerms, func) {
+      if (numTerms == undefined) {
+        var numTerms = 10;
+      }
+      if (isNaN(numTerms) || numTerms <=0 || numTerms.indexOf('.') != -1) {
+        return;
+      }
+			$.getJSON(solr.pathToLukeHandler+'?fl='+fieldName+'&wt=json&numTerms='+numTerms, function(data) {                  
+				solr.schemaFields[fieldName]['topTerms'] = solr.lukeArrayToHash(data.fields[fieldName].topTerms);
+        if ($.isFunction(func)) {
+          func(solr.schemaFields[fieldName]['topTerms'], fieldName);
+        }
+			});
+		},
+    
+    // Displays the SchemaInfo in the main content panel
+    // dispayed on data load, and also when 'Home' is clicked
+    displaySchemaInfo: function() {
+      $('#mainInfo').html('');
+      $('#topTerms').html('');
+      $('#histogram').html('');      
+      $('#mainInfo').append(solr.createSimpleText('Schema Information'));
+      //Make sure the uniqueKeyField and defaultSearchFields come first
+      $.each({'Unique Key':'uniqueKeyField', 'Default Search Field':'defaultSearchField'}, function(text, prop) {
+          if (solr.schemaInfo[prop] != undefined) {
+            $('#mainInfo').append(solr.createNameValueText(text, function(p) {
+              p.appendChild(solr.createLink(solr.schemaInfo[prop], solr.schemaInfo[prop]));
+              return p;
+            }));
+          } 
+      });
+      $.each(solr.schemaInfo, function(i, item) {
+        if (i == 'uniqueKeyField' || i == 'defaultSearchField') {
+          //noop; we took care of this above
+        } else {
+          $('#mainInfo').append(solr.createNameValueText(i, item));
+        }
+      });
+      //Close all menus when we display schema home
+      solr.toggleMenus(undefined, ['fields', 'types', 'dynFields']);
+    },
+    
+    // display a dynamic field in the main content panel
+    displayDynamicField: function(dynamicPattern) {
+      var df = solr.schemaDynamicFields[dynamicPattern];
+      $('#mainInfo').html('');
+      $('#topTerms').html('');
+      $('#histogram').html('');
+      $('#mainInfo').append(solr.createSimpleText('Dynamic Field: ' + dynamicPattern));
+      $('#mainInfo').append(solr.createNameValueText('Fields', function(p) {
+        if (df.fields != undefined) {
+          $.each(df.fields, function(i, item) {
+            p.appendChild(solr.createLink(item, item));
+          });
+        } else {
+          p.appendChild(document.createTextNode(' None currently in index'));
+        }
+        return p;
+      }));
+      var ft = solr.schemaTypes[df.type];
+      $('#mainInfo').append(solr.createNameValueText('Field Type', function(p) {
+        p.appendChild(solr.createLink(df.type, df.type, solr.displayFieldType));
+        return p;
+      }));
+      if (df.flags != undefined) {
+        $('#mainInfo').append(solr.createNameValueText('Properties', solr.createTextFromFlags(df.flags, df.type)));
+      }
+      solr.displayAnalyzer(ft.indexAnalyzer, 'Index Analyzer', true);
+      solr.displayAnalyzer(ft.queryAnalyzer, 'Query Analyzer', true);
+
+      solr.toggleMenus('dynFields', ['fields', 'types'], dynamicPattern);
+    },
+    
+    // display a field type in the main area
+    displayFieldType: function(typeName) {
+      var ft = solr.schemaTypes[typeName];
+      $('#mainInfo').html('');
+      $('#topTerms').html('');
+      $('#histogram').html('');
+			$('#mainInfo').append(solr.createSimpleText('Field Type: ' + typeName));
+        $('#mainInfo').append(solr.createNameValueText('Fields', function(p) {
+          if (ft.fields != undefined) {
+            $.each(ft.fields, function(i, item) {
+              if (solr.schemaFields[item] != undefined) {
+                p.appendChild(solr.createLink(item, item));
+              } else {
+                p.appendChild(solr.createLink(item, item, solr.displayDynamicField));
+              }
+              p.appendChild(document.createTextNode(' '));
+            });
+          } else {
+            p.appendChild(document.createTextNode('No fields in index'));
+          }
+          return p;
+        }));
+      $('#mainInfo').append(solr.createNameValueText('Tokenzied', ft.tokenized));
+      $('#mainInfo').append(solr.createNameValueText('Class Name', ft.className));
+
+      solr.displayAnalyzer(ft.indexAnalyzer, 'Index Analyzer');
+      solr.displayAnalyzer(ft.queryAnalyzer, 'Query Analyzer');
+      solr.toggleMenus('types', ['fields', 'dynFields'], typeName);
+    },
+    
+    //Displays information about an Analyzer in the main content area
+    displayAnalyzer: function(analyzer, type, shouldCollapse) {
+      var tid = type.replace(' ', '');
+      var collapse = shouldCollapse && (analyzer.tokenizer != undefined || analyzer.filters != undefined);
+      $('#mainInfo').append(solr.createNameValueText(type, function(p) {
+        p.appendChild(document.createTextNode(analyzer.className + ' '));
+        if (collapse) {
+          p.appendChild(solr.createLink(type, 'Details', function() {
+            $('#'+tid).toggle("slow");
+          }));
+        }
+        return p;
+      }));
+      var adiv = document.createElement('div');
+      adiv.id=tid;
+      adiv.className='analyzer';
+      if (collapse) {
+        adiv.style.display='none';
+      }
+      if (analyzer.tokenizer != undefined) {
+        adiv.appendChild(solr.createNameValueText("Tokenizer Class", analyzer.tokenizer.className));
+      }
+      if (analyzer.filters != undefined) {
+        adiv.appendChild(solr.createNameValueText('Filters', ''));
+        var f = document.createElement('ol');
+        $.each(analyzer.filters, function(i, item) {
+          var fil = document.createElement('li');
+          var filterText = item.className;
+          if (item.args != undefined) {
+            filterText += ' args:{'
+            $.each(item.args, function(fi, fitem) {
+              filterText += fi + ': ' + fitem + ' ';
+            });
+            filterText +='}';
+            fil.innerHTML = filterText;
+            f.appendChild(fil);
+          }
+        });
+        adiv.appendChild(f);
+      }
+      $('#mainInfo').append(adiv);
+    },
+    
+    // display information about a Field in the main content area
+    // and its TopTerms and Histogram in related divs
+		displayField: function(fieldName) {
+      var field = solr.schemaFields[fieldName];
+      var isDynamic = field.dynamicBase != undefined ? true : false;
+      var ft;
+      var ftName;
+      $('#mainInfo').html('');  
+      $('#topTerms').html('');
+      $('#histogram').html('');
+      $('#mainInfo').append(solr.createSimpleText('Field: ' + fieldName));
+      
+      //For regular fields, we take their properties; for dynamicFields,
+      // we take them from their dynamicField definitions
+      if (isDynamic) {
+        ftName = solr.schemaDynamicFields[field.dynamicBase].type
+        $('#mainInfo').append(solr.createNameValueText('Dynamically Created From Pattern', function(p) {
+          p.appendChild(solr.createLink(field.dynamicBase, field.dynamicBase, solr.displayDynamicField));
+          return p;
+        }));
+      } else {
+        ftName = field.type;
+      }			
+      ft = solr.schemaTypes[field.type];
+      $('#mainInfo').append(solr.createNameValueText('Field Type', function(p) {
+        p.appendChild(solr.createLink(ftName, ftName, solr.displayFieldType));
+        return p;
+      }));
+			if (solr.schemaFlags != '') {
+        $.each({'flags':'Properties', 'schema':'Schema', 'index':'Index'}, function(prop, text) {
+          if (field[prop] != undefined) {
+            $('#mainInfo').append(solr.createNameValueText(text, solr.createTextFromFlags(field[prop], ft)));
+          }
+        });
+      }    
+      $.each({'copySources':'Copied From', 'copyDests':'Copied Into'}, function(prop, text) {
+        if (field[prop] != undefined && field[prop] != '') {
+          $('#mainInfo').append(solr.createNameValueText(text, function(p) {
+            $.each(field[prop], function(i, item) {
+              p.appendChild(solr.createLink(item, item));
+              p.appendChild(document.createTextNode(' '));
+            });
+            return p;
+          }));
+        }
+      });
+      if (field.positionIncrementGap != undefined) {
+        $('#mainInfo').append(solr.createNameValueText('Position Increment Gap', field.positionIncrementGap));
+      }
+      solr.displayAnalyzer(ft.indexAnalyzer, 'Index Analyzer', true);
+      solr.displayAnalyzer(ft.queryAnalyzer, 'Query Analyzer', true);
+      if (field.docs != undefined) {
+        $('#mainInfo').append(solr.createNameValueText('Docs', field.docs));
+      }
+      if (field.distinct != undefined) {
+        $('#mainInfo').append(solr.createNameValueText('Distinct', field.distinct));
+      }
+
+      if (field.topTerms != undefined) {
+        solr.displayTopTerms(field.topTerms, fieldName);
+      }
+
+      if (field.histogram != undefined) {
+        solr.drawHistogram(field.histogram);
+      }
+      solr.toggleMenus('fields', ['types', 'dynFields'], fieldName);
+		},	
+
+    //utility method to create a single sentence list of properties from a flag set
+    // or pass it on, if the flags are (unstored field)
+		createTextFromFlags: function(fieldFlags, fieldType) {
+			var value;
+      if (fieldFlags != '(unstored field)') {
+        var value = '';      
+        for (var i=0;i<fieldFlags.length;i++) {
+          if (fieldFlags.charAt(i) != '-') {
+            value += solr.schemaFlags[fieldFlags.charAt(i)];
+          value += ', ';
+          }
+        }
+        value = value.substring(0, value.length-2);
+			} else {
+      value = fieldFlags;
+      }
+			return value;
+		},
+
+    //Store the currently highlighted menu item, as otherwise we
+    // must traverse all li menu items, which is very slow on schemas with
+    // large number of fields
+    // for example $('#menu ul li').siblings().removeClass('selected');
+    currentlyHighlightedMenuId: undefined,
+    
+    //add a highlight to the currently selected menu item, and remove
+    // the highlights from all other menu items
+    highlightMenuItem: function(idToSelect) {
+      if (solr.currentlyHighlightedMenuId != undefined) {
+        $('#'+solr.currentlyHighlightedMenuId).removeClass('selected');
+      }
+      $('#'+idToSelect).addClass('selected');
+      solr.currentlyHighlightedMenuId = idToSelect;
+    },
+    
+    //Opens one menu group, close the others, and optionally highlight one
+    // item, which should be in the opened menu
+    toggleMenus: function(idToShow, idsToHide, idToSelect) {
+      if (idToSelect != undefined) {
+        solr.highlightMenuItem(idToShow + idToSelect);
+      }
+      $('#'+idToShow).show("slow");
+      $.each(idsToHide, function(i, idToHide) {
+        $('#'+idToHide).hide("slow");
+      });
+    },
+    
+    //A utility method to create a paragraph, which takes two arguments;
+    // an opening text, and either text or a callback function to follow
+    // any callback function must return the node passed into it
+    createNameValueText: function(openingText, func) {
+      var p = document.createElement('p');
+      p.appendChild(solr.createSimpleText(openingText + ': ', 'b'));
+      return solr.applyFuncToNode(p, func);
+    },
+
+    //utility method to create an HTML text element node
+    // with the literal text to place, and an optional function to apply
+    // any callback function must return the node passed into it 
+    createSimpleText: function(text, n, func) {
+      if (n == undefined) {
+        n = 'h2';
+      }
+      var no= document.createElement(n);
+      no.appendChild(document.createTextNode(text));
+      return solr.applyFuncToNode(no, func);
+    },
+    
+    //Utility method that applies a function or a string to append
+    // an additional child to a node
+    applyFuncToNode: function(no, func) {
+      if ($.isFunction(func)) {
+        no = func(no);
+      } else {
+        // if it is not a function, append it as a string
+        if (func != undefined) {
+          no.appendChild(document.createTextNode(' ' + func));
+        }
+      }
+      return no;
+    },
+        
+    //show a table of top terms for a given field
+    displayTopTerms: function(topTerms, fieldName) {
+        $('#topTerms').html('');
+        var tbl = document.createElement('table');
+        tbl.className='topTerms';
+        var thead= document.createElement('thead');
+        var headerRow = document.createElement('tr');
+        $.each(['term', 'frequency'], function() {
+          var cell = document.createElement('th');
+          cell.innerHTML= this;
+          headerRow.appendChild(cell);
+        });
+        thead.appendChild(headerRow);
+        tbl.appendChild(thead);
+        var tbody = document.createElement('tbody');
+        
+        var numTerms = 0;
+        $.each(topTerms, function(term, count) {
+          var row = document.createElement('tr');
+          var c1 = document.createElement('td');
+          c1.innerHTML=term;
+          var c2 = document.createElement('td');
+          c2.innerHTML=count;
+          row.appendChild(c1);
+          row.appendChild(c2);
+          tbody.appendChild(row);
+          numTerms++;
+        });
+        tbl.appendChild(tbody);
+        
+        //create a header along with an input widget so the user
+        // can request a different number of Top Terms
+        var h2 = document.createElement('h2');
+        h2.appendChild(document.createTextNode('Top   '));
+        var termsGetter = document.createElement('input');
+        termsGetter.type='text';
+        termsGetter.size=5;
+        termsGetter.value=numTerms;
+        
+        termsGetter.onchange=function() {
+            solr.getTopTerms(fieldName, this.value, solr.displayTopTerms);
+        }
+        h2.appendChild(termsGetter);
+        h2.appendChild(document.createTextNode(' Terms'));
+        $('#topTerms').append(h2);
+        
+        document.getElementById('topTerms').appendChild(tbl);
+        $('#topTerms').append(tbl);
+    },
+    
+    //draws a histogram, taking a map of values and an optional total height and width for the table
+    drawHistogram: function(histogram, totalHeightArg, totalWidthArg) {
+      $('#histogram').html('');
+      $('#histogram').append(solr.createSimpleText('Histogram'));
+      var max = 0;
+      var bars =0;
+      //find the # of columns and max value in the histogram 
+      // so we can create an appropriately scaled chart
+      $.each(histogram, function(i, item) {
+        if (item > max) max = item;
+        bars += 1;
+      });
+      if (max ==0) {
+        $('#histogram').append(solr.createNameValueText('No histogram available'));
+      } else {
+        var totalHeight = totalHeightArg == undefined ? 208 : totalHeightArg;
+        var totalWidth = totalWidthArg == undefined ? 160 : totalWidthArg;
+        var tbl = document.createElement('table');
+        tbl.style.width=totalWidth+'px';
+        tbl.className = 'histogram';
+        var h = document.createElement('tbody');
+        var r = document.createElement('tr');
+        var r2 = document.createElement('tr');
+        $.each(histogram, function(i, item) {
+          var c = document.createElement('td');
+          c.innerHTML=item+'<div style="width:'+totalWidth/bars+'px;height:'+(item*totalHeight/max)+'px;background:blue">&nbsp</div>';
+          r.appendChild(c);
+          var c2 = document.createElement('td');
+          c2.innerHTML='' + i;
+          r2.appendChild(c2);
+        });
+        h.appendChild(r);
+        h.appendChild(r2);
+        tbl.appendChild(h);
+        $('#histogram').append(tbl);
+      }
+    },
+    
+    //dynamically creates a link to be appended
+    createLink: function(idToDisplay, linkText, linkFunction) {
+      var link = document.createElement('a');
+      if (!$.isFunction(linkFunction)) {
+        linkFunction = solr.displayField
+      }
+      link.onclick=function() {
+        linkFunction(idToDisplay);
+        return false;
+      };
+      link.href='#';
+      link.innerHTML=linkText;
+      return link;
+    },
+    
+    //Creates a menu header that can expand or collapse its children
+    createMenuHeader: function(text, idToShow, idsToHide) {
+      var head = document.createElement('h3');
+      var a = document.createElement('a');
+      a.onclick=function() {
+        solr.toggleMenus(idToShow, idsToHide);
+        return false;
+      };
+      a.href='#';
+      a.innerHTML=text;
+      head.appendChild(a);
+      return head;
+    },
+    
+    //Creates an element in a menu (e.g. each field in a list of fields)
+    createMenuItem: function(tagName, text, link, type, func) {
+        var fieldEle = document.createElement('li');
+        fieldEle.id=type+text;
+        var funct = func == undefined ? undefined : func;
+        fieldEle.appendChild(solr.createLink(text, link, funct));
+        return fieldEle;
+    },
+    
+    //populates the menu div
+    createMenu: function(menuId) {
+      var m = $('#'+menuId);
+      var home = document.createElement('h2');
+      home.appendChild(solr.createLink('Home', 'Home', solr.displaySchemaInfo));
+      m.append(home);
+      m.append(solr.createMenuHeader('Fields', 'fields', ['types', 'dynFields']));
+      var fields= document.createElement('ul');
+      fields.style.display='none';
+      fields.id = 'fields';
+      $.each(solr.schemaFields, function(i, item) {
+        fields.appendChild(solr.createMenuItem('li', i, i, fields.id));
+      });
+      m.append(fields);
+      m.append(solr.createMenuHeader('Dynamic Fields', 'dynFields', ['fields', 'types']));
+      var dyns = document.createElement('ul');
+      dyns.style.display = 'none';
+      dyns.id = 'dynFields';
+      $.each(solr.schemaDynamicFields, function(i, item) {
+        dyns.appendChild(solr.createMenuItem('li', i,i, dyns.id, solr.displayDynamicField));
+      });
+      m.append(dyns);
+      m.append(solr.createMenuHeader('Field Types', 'types', ['fields', 'dynFields']));
+      var types = document.createElement('ul');
+      types.style.display='none';
+      types.id='types';
+      $.each(this.schemaTypes, function(i, item) {
+        types.appendChild(solr.createMenuItem('li', i, i,types.id, solr.displayFieldType));
+      });
+      m.append(types);
+    }
+   };
+   
+	window[libName] = solr;
+})(jQuery, 'solr');
+$(document).ready(function() {
+  solr.init();
+});
+    
+$(window).unload( function() {
+  solr = null;
+  $('#mainInfo').html('');
+  $('#menu').html('');
+  $('#topTerms').html('');
+  $('#histogram').html('');
+});
+  
+</script>
+<%-- do a verbatim include so we can use the local vars --%>
+<%@include file="header.jsp" %>
+<div id="schemaTop">
+<h2>Schema Browser | See <a href="file/?file=schema.xml">Raw Schema.xml</a></h2>
+</div>
+<div id="menu"></div>
+<div id="content">
+<div id="mainInfo"><h2>Please wait...loading and parsing Schema Information from LukeRequestHandler</h2><p>If it does not load or your browser is not javascript or ajax-capable, you may wish to examine your schema using the <a href="luke?wt=xslt&tr=luke.xsl">Server side transformed LukeRequestHandler</a> or the raw <a href="file/?file=schema.xml">schema.xml</a> instead.</div>
+<div id="topTerms"></div>
+<div id="histogram"></div>
+</div>
+</body>
+</html>
diff --git a/src/webapp/web/admin/solr-admin.css b/src/webapp/web/admin/solr-admin.css
new file mode 100644
index 0000000..3af3db3
--- /dev/null
+++ b/src/webapp/web/admin/solr-admin.css
@@ -0,0 +1,206 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+h1, h2, h3, h4, h5 {
+   display: block;
+   font-family: ITC Officina Sans Book, Terminator Two, Helvetica, Arial, sans-serif;
+   font-style: bold;
+   margin: 0;
+}
+
+strong {
+   font-family: ITC Officina Sans Book, Terminator Two, Helvetica, Arial, sans-serif;
+   font-style: bold;
+   margin: 0;
+}
+
+input.std, textarea.std {
+   color: black;
+   border: 2px inset #ff9933;
+   background-color: #ffffff;
+   width:450px;
+   max-width:450px;
+}
+
+input.stdbutton {
+   font-family: ITC Officina Sans Book, Helvetica, Arial, sans-serif;
+   font-style: bold;
+   font-size: 11;
+   text-transform: capitalize;
+   color: black;
+   background-color: #dddddd;
+   border: groove #ff9933;
+}
+
+input.stdbutton:hover {
+   color: #0000ff;
+   border: groove #0000ff;
+}
+
+
+body {
+   background-color: #bbbbbb;
+}
+
+table {
+   display: table;
+   background-color: #FAF7E4;
+   width: 100%;
+   border-top: 4px solid #666666;
+   border-left: 2px solid #666666;
+   text-align: left;
+   vertical-align: top;
+   cellpadding-right: 8px;
+}
+
+table.responseHeader, table.analysis {
+   width: auto;
+}
+
+table {
+   border-collapse: collapse
+}
+
+tr > td:first-child {
+   width: 30%;
+}
+
+td.debugdata, td.highlight, td.responseHeader {
+   width: auto;
+}
+
+td.highlight {
+   background:	#ccccff;
+}
+
+td.responseHeader {
+   width: auto;
+   text-align: right;
+}
+
+td.responseHeader + td {
+   text-align: left;
+   font-family: Courier;
+}
+
+
+th, td {
+   text-align: left;
+   vertical-align: top;
+   border-bottom: 1px solid #ff9933;
+}
+
+a {
+   text-decoration:	none;
+   font-weight:	bold;
+   font-size:	11px;
+   background:	#FAF7E4;
+   text-transform: uppercase;
+}
+		
+a:link {	
+   color:	#0000aa;
+}			
+					
+a:visited {	
+   color:	#0000ff;
+}			
+								
+a:active {
+   color:	#4444ff;
+}			
+
+a:hover {
+   color:	#0000ff;
+   background:	#ccccff;
+}			
+
+a:offsite {	
+   color:	#0000aa;
+}		 
+
+table.analysis th, table.analysis td {
+border-right:1px solid black;
+}
+
+/**
+  * styles for the schema browser
+  */
+
+table.topTerms {
+  width: 450px;
+}
+
+table.histogram {
+   vertical-align: bottom;
+}
+
+table.histogram td, table.histogram th {
+   text-align: center;
+   vertical-align: bottom;
+   border-bottom: 1px solid #ff9933;
+   width: auto;
+}
+
+#menu {
+  background-color: #FAF7E4;
+  height:100%;
+  min-height:100%;
+  width:140px;
+  float:left;
+  margin-right:20px
+}
+#menu h3 {
+  padding-left:10px;
+}
+#menu ul {
+  list-style: none;
+  text-align: right;
+  margin: 0;
+  padding: 0
+}
+#menu li.header {
+  text-align: left;
+}
+#menu li {
+  border: 1px solid #ff9933;
+  margin: 0
+}
+#menu li a {
+  display:block;
+}
+#menu li.selected a {
+  background-color: #ccccff
+}
+#menu a:hover {
+  background: #ccccff
+}
+
+#schemaTop {
+  border-bottom:1px black solid;
+}
+
+#content {
+  margin-left: 160px;
+}
+#topTerms {
+  float:left;
+  margin-right:40px;
+}
+div.analyzer {
+  margin-left:20px;
+}
\ No newline at end of file
diff --git a/src/webapp/web/admin/solr-head.gif b/src/webapp/web/admin/solr-head.gif
new file mode 100644
index 0000000..4bb8f53
Binary files /dev/null and b/src/webapp/web/admin/solr-head.gif differ
diff --git a/src/webapp/web/admin/solr-head.png b/src/webapp/web/admin/solr-head.png
new file mode 100644
index 0000000..a02bee8
Binary files /dev/null and b/src/webapp/web/admin/solr-head.png differ
diff --git a/src/webapp/web/admin/solr-lowercase.gif b/src/webapp/web/admin/solr-lowercase.gif
new file mode 100644
index 0000000..6822920
Binary files /dev/null and b/src/webapp/web/admin/solr-lowercase.gif differ
diff --git a/src/webapp/web/admin/solr-lowercase.png b/src/webapp/web/admin/solr-lowercase.png
new file mode 100644
index 0000000..0fe4e94
Binary files /dev/null and b/src/webapp/web/admin/solr-lowercase.png differ
diff --git a/src/webapp/web/admin/stats.jsp b/src/webapp/web/admin/stats.jsp
new file mode 100644
index 0000000..89e0caf
--- /dev/null
+++ b/src/webapp/web/admin/stats.jsp
@@ -0,0 +1,91 @@
+<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.solr.core.SolrInfoMBean,
+                 org.apache.solr.core.SolrInfoRegistry,
+                 org.apache.solr.common.util.NamedList,
+                 java.util.Date,
+                 java.util.Map"%>
+<?xml-stylesheet type="text/xsl" href="stats.xsl"?>
+<%@include file="_info.jsp" %>
+
+
+<solr>
+  <core><%=core.getName()%></core>
+  <schema><%= collectionName %></schema>
+  <host><%= hostname %></host>
+  <now><%= new Date().toString() %></now>
+  <start><%= new Date(core.getStartTime()) %></start>
+  <solr-info>
+<%
+for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) {
+%>
+    <<%= cat.toString() %>>
+<%
+ Map<String,SolrInfoMBean> reg = core.getInfoRegistry();
+ synchronized(reg) {
+  for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {
+    String key = entry.getKey();
+    SolrInfoMBean m = entry.getValue();
+
+    if (m.getCategory() != cat) continue;
+
+    NamedList nl = m.getStatistics();
+    if ((nl != null) && (nl.size() != 0)) {
+      String na     = "None Provided";
+      String name   = (m.getName()!=null ? m.getName() : na);
+      String vers   = (m.getVersion()!=null ? m.getVersion() : na);
+      String desc   = (m.getDescription()!=null ? m.getDescription() : na);
+%>
+    <entry>
+      <name>
+        <%= key %>
+      </name>
+      <class>
+        <%= name %>
+      </class>
+      <version>
+        <%= vers %>
+      </version>
+      <description>
+        <%= desc %>
+      </description>
+      <stats>
+<%
+      for (int i = 0; i < nl.size() ; i++) {
+%>
+        <stat name="<%= nl.getName(i) %>" >
+          <%= nl.getVal(i).toString() %>
+        </stat>
+<%
+      }
+%>
+      </stats>
+    </entry>
+<%
+    }
+%>
+<%
+  }
+ }
+%>
+    </<%= cat.toString() %>>
+<%
+}
+%>
+  </solr-info>
+</solr>
diff --git a/src/webapp/web/admin/stats.xsl b/src/webapp/web/admin/stats.xsl
new file mode 100644
index 0000000..80ccc91
--- /dev/null
+++ b/src/webapp/web/admin/stats.xsl
@@ -0,0 +1,445 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!-- $Id$ -->
+<!-- $URL$ -->
+
+<xsl:stylesheet
+  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+  version="1.0">
+
+
+  <xsl:output
+    method="html"
+    indent="yes"
+    doctype-public="-//W3C//DTD HTML 4.01//EN"
+    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
+
+
+  <xsl:template match="/">
+    <html>
+      <head>
+        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
+	<link rel="icon" href="/favicon.ico" type="image/ico"></link>
+	<link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
+        <title>SOLR Statistics</title>
+      </head>
+      <body>
+        <a href=".">
+	   <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
+	   </img>
+	</a>
+        <h1>SOLR Statistics (<xsl:value-of select="solr/schema" />)</h1>
+          <xsl:value-of select="solr/host" />
+          <br clear="all" />
+        <xsl:apply-templates/>
+        <br /><br />
+        <a href=".">Return to Admin Page</a>
+      </body>
+    </html>
+  </xsl:template>
+
+  <xsl:template match="solr">
+  <table>
+    <tr>
+      <td>
+        <H3>Category</H3>
+      </td>
+      <td>
+        [<a href="#core">Core</a>]
+        [<a href="#cache">Cache</a>]
+        [<a href="#query">Query</a>]
+        [<a href="#update">Update</a>]
+        [<a href="#other">Other</a>]
+      </td>
+    </tr>
+    <tr>
+      <td>
+      </td>
+      <td>
+        Current Time: <xsl:value-of select="now" />
+      </td>
+    </tr>
+    <tr>
+      <td>
+      </td>
+      <td>
+        Server Start Time: <xsl:value-of select="start" />
+      </td>
+    </tr>
+  </table>
+  <xsl:apply-templates/>
+  </xsl:template>
+
+  <xsl:template match="solr/schema" />
+
+  <xsl:template match="solr/host" />
+
+  <xsl:template match="solr/now" />
+
+  <xsl:template match="solr/start" />
+
+  <xsl:template match="solr/solr-info">
+  <xsl:apply-templates/>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/CORE">
+    <br />
+    <a name="core"><h2>Core</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/CORE/entry">
+        <tr>
+          <td align="right">
+            <strong>name:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="name"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>class:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="class"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>version:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="version"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>description:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="description"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>stats:&#xa0;</strong>
+          </td>
+          <td>
+            <xsl:for-each select="stats/stat[@name]">
+              <xsl:value-of select="@name"/>
+              <xsl:text> : </xsl:text>
+              <xsl:variable name="name" select="@name" />
+              <xsl:value-of select="." /><br />
+            </xsl:for-each>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/CACHE">
+    <br />
+    <a name="cache"><h2>Cache</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/CACHE/entry">
+        <tr>
+          <td align="right">
+            <strong>name:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="name"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>class:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="class"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>version:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="version"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>description:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="description"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>stats:&#xa0;</strong>
+          </td>
+          <td>
+            <xsl:for-each select="stats/stat[@name]">
+              <xsl:value-of select="@name"/>
+              <xsl:text> : </xsl:text>
+              <xsl:variable name="name" select="@name" />
+              <xsl:value-of select="." /><br />
+            </xsl:for-each>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/QUERYHANDLER">
+    <br />
+    <a name="query"><h2>Query Handlers</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/QUERYHANDLER/entry">
+        <tr>
+          <td align="right">
+            <strong>name:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="name"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>class:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="class"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>version:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="version"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>description:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="description"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>stats:&#xa0;</strong>
+          </td>
+          <td>
+            <xsl:for-each select="stats/stat[@name]">
+              <xsl:value-of select="@name"/>
+              <xsl:text> : </xsl:text>
+              <xsl:variable name="name" select="@name" />
+              <xsl:value-of select="." /><br />
+            </xsl:for-each>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/UPDATEHANDLER">
+    <br />
+    <a name="update"><h2>Update Handlers</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/UPDATEHANDLER/entry">
+        <tr>
+          <td align="right">
+            <strong>name:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="name"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>class:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="class"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>version:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="version"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>description:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="description"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>stats:&#xa0;</strong>
+          </td>
+          <td>
+            <xsl:for-each select="stats/stat[@name]">
+              <xsl:value-of select="@name"/>
+              <xsl:text> : </xsl:text>
+              <xsl:variable name="name" select="@name" />
+              <xsl:value-of select="." /><br />
+            </xsl:for-each>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/OTHER">
+    <br />
+    <a name="other"><h2>Other</h2></a>
+    <table>
+        <tr>
+          <td align="right">
+            &#xa0;
+          </td>
+          <td>
+          </td>
+        </tr>
+    <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+  <xsl:template match="solr/solr-info/OTHER/entry">
+        <tr>
+          <td align="right">
+            <strong>name:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="name"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>class:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="class"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>version:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="version"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>description:&#xa0;</strong>
+          </td>
+          <td>
+            <tt><xsl:value-of select="description"/>&#xa0;</tt>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+            <strong>stats:&#xa0;</strong>
+          </td>
+          <td>
+            <xsl:for-each select="stats/stat[@name]">
+              <xsl:value-of select="@name"/>
+              <xsl:text> : </xsl:text>
+              <xsl:variable name="name" select="@name" />
+              <xsl:value-of select="." /><br />
+            </xsl:for-each>
+          </td>
+        </tr>
+        <tr>
+          <td align="right">
+          </td>
+          <td>
+          </td>
+        </tr>
+  </xsl:template>
+
+</xsl:stylesheet>
diff --git a/src/webapp/web/admin/tabular.xsl b/src/webapp/web/admin/tabular.xsl
new file mode 100644
index 0000000..c043bfd
--- /dev/null
+++ b/src/webapp/web/admin/tabular.xsl
@@ -0,0 +1,139 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!-- $Id$ -->
+<!-- $URL$ -->
+
+
+<xsl:stylesheet
+  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+  version="1.0">
+
+
+  <xsl:output
+    method="html"
+    indent="yes"
+    doctype-public="-//W3C//DTD HTML 4.01//EN"
+    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
+
+
+  <xsl:template match="/">
+    <html>
+      <head>
+        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
+        <link rel="icon" href="/favicon.ico" type="image/ico"></link>
+        <link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
+        <title>SOLR Search Results</title>
+      </head>
+      <body>
+        <a href=".">
+           <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR">
+           </img>
+        </a>
+        <h1>SOLR Search Results</h1>
+          <br clear="all" />
+        <xsl:apply-templates/>
+        <br /><br />
+        <a href=".">Return to Admin Page</a>
+      </body>
+    </html>
+  </xsl:template>
+
+
+  <xsl:template match="responseHeader">
+    <table name="responseHeader">
+      <xsl:apply-templates/>
+    </table>
+  </xsl:template>
+
+
+  <xsl:template match="status">
+    <tr>
+      <td name="responseHeader"><strong>Status:&#xa0;</strong></td>
+      <td><xsl:value-of select="."></xsl:value-of></td>
+    </tr>
+  </xsl:template>
+
+
+  <xsl:template match="numFields">
+    <tr>
+      <td name="responseHeader"><strong>Number of Fields:&#xa0;</strong></td>
+      <td><xsl:value-of select="."></xsl:value-of></td>
+    </tr>
+  </xsl:template>
+
+
+  <xsl:template match="numRecords">
+    <tr>
+      <td name="responseHeader"><strong>Records Returned:&#xa0;</strong></td>
+      <td><xsl:value-of select="."></xsl:value-of></td>
+    </tr>
+  </xsl:template>
+
+
+  <xsl:template match="numFound">
+    <tr>
+      <td name="responseHeader"><strong>Records Found:&#xa0;</strong></td>
+      <td><xsl:value-of select="."></xsl:value-of></td>
+    </tr>
+  </xsl:template>
+
+
+  <xsl:template match="QTime">
+    <tr>
+      <td name="responseHeader"><strong>Query time:&#xa0;</strong></td>
+      <td><xsl:value-of select="."></xsl:value-of>(ms)</td>
+    </tr>
+  </xsl:template>
+
+  <!-- YCS.. match everything.  How to match only what is not
+       matched above???
+    -->
+  <xsl:template match="responseHeader/*">
+    <tr>
+      <td name="responseHeader"><strong><xsl:value-of select="name(.)"></xsl:value-of>:&#xa0;</strong></td>
+      <td><xsl:value-of select="."></xsl:value-of></td>
+    </tr>
+  </xsl:template>
+
+  <xsl:template match="responseBody">
+    <br></br><br></br>
+    <table border="2">
+
+      <!-- table headers -->
+      <tr>
+        <xsl:for-each select="record[1]/field">
+          <th><xsl:value-of select="name"></xsl:value-of></th>
+        </xsl:for-each>
+      </tr>
+
+      <!-- table rows -->
+      <xsl:for-each select="record">
+        <tr>
+          <xsl:for-each select="field">
+            <td><xsl:value-of select="value"></xsl:value-of>&#xa0;</td>
+          </xsl:for-each>
+        </tr>
+      </xsl:for-each>
+
+    </table>
+
+
+  </xsl:template>
+
+
+</xsl:stylesheet>
diff --git a/src/webapp/web/admin/threaddump.jsp b/src/webapp/web/admin/threaddump.jsp
new file mode 100644
index 0000000..3ce2d10
--- /dev/null
+++ b/src/webapp/web/admin/threaddump.jsp
@@ -0,0 +1,117 @@
+<%@ page contentType="text/xml; charset=utf-8" pageEncoding="UTF-8" language="java" %>
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+<%@ page import="org.apache.solr.core.SolrCore,
+                 java.lang.management.ManagementFactory,
+                 java.lang.management.ThreadMXBean,
+                 java.lang.management.ThreadInfo,
+                 java.io.IOException,
+                 org.apache.solr.util.XML"%>
+
+<?xml-stylesheet type="text/xsl" href="threaddump.xsl"?>
+<%
+  SolrCore  core = (SolrCore) request.getAttribute("org.apache.solr.SolrCore");
+  if (core == null) {
+    String coreParam = request.getParameter("core");
+    core = coreParam != null? org.apache.solr.core.SolrMultiCore.getInstance().getCore(coreParam) : null;
+  }
+  if (core == null)
+    core = SolrCore.getSolrCore();
+%>
+<%!
+  static ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();
+%>
+<solr>
+  <core><%=core.getName()%></core>
+  <system>
+  <jvm>
+    <version><%=System.getProperty("java.vm.version")%></version>
+    <name><%=System.getProperty("java.vm.name")%></name>
+  </jvm>
+  <threadCount>
+    <current><%=tmbean.getThreadCount()%></current>
+    <peak><%=tmbean.getPeakThreadCount()%></peak>
+    <daemon><%=tmbean.getDaemonThreadCount()%></daemon>
+  </threadCount>
+<%
+  long[] tids;
+  ThreadInfo[] tinfos;
+  tids = tmbean.findMonitorDeadlockedThreads();
+  if (tids != null) {
+      out.println("  <deadlocks>");
+      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);
+      for (ThreadInfo ti : tinfos) {
+          printThreadInfo(ti, out);
+      }
+      out.println("  </deadlocks>");
+  }
+%>
+<%
+  tids = tmbean.getAllThreadIds();
+  tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);
+  out.println("  <threadDump>");
+  for (ThreadInfo ti : tinfos) {
+     printThreadInfo(ti, out);
+  }
+  out.println("  </threadDump>");
+%>
+  </system>
+</solr>
+
+<%!
+  static void printThreadInfo(ThreadInfo ti, JspWriter out) throws IOException {
+      long tid = ti.getThreadId();
+      out.println("    <thread>");
+      out.println("      <id>" + tid + "</id>");
+      out.print("      <name>");
+      XML.escapeCharData(ti.getThreadName(), out);
+      out.println("</name>");
+      out.println("      <state>" + ti.getThreadState() + "</state>");
+      if (ti.getLockName() != null) {
+          out.println("      <lock>" + ti.getLockName() + "</lock>");
+      }
+      if (ti.isSuspended()) {
+          out.println("      <suspended/>");
+      }
+      if (ti.isInNative()) {
+          out.println("      <inNative/>");
+      }
+      if (tmbean.isThreadCpuTimeSupported()) {
+          out.println("      <cpuTime>" + formatNanos(tmbean.getThreadCpuTime(tid)) + "</cpuTime>");
+          out.println("      <userTime>" + formatNanos(tmbean.getThreadUserTime(tid)) + "</userTime>");
+      }
+
+      if (ti.getLockOwnerName() != null) {
+          out.println("      <owner>");
+          out.println("        <name>" + ti.getLockOwnerName() + "</name>");
+          out.println("        <id>" + ti.getLockOwnerId() + "</id>");
+          out.println("      </owner>");
+      }
+      out.println("      <stackTrace>");
+      for (StackTraceElement ste : ti.getStackTrace()) {
+          out.print("        <line>");
+          XML.escapeCharData("at " + ste.toString(), out);
+          out.println("        </line>");
+      }
+      out.println("      </stackTrace>");
+      out.println("    </thread>");
+  }
+
+  static String formatNanos(long ns) {
+      return String.format("%.4fms", ns / (double) 1000000);
+  }
+%>
diff --git a/src/webapp/web/admin/threaddump.xsl b/src/webapp/web/admin/threaddump.xsl
new file mode 100644
index 0000000..999b05d
--- /dev/null
+++ b/src/webapp/web/admin/threaddump.xsl
@@ -0,0 +1,101 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!-- $Id$ -->
+<!-- $URL$ -->
+
+<xsl:stylesheet
+  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+  version="1.0">
+
+  <xsl:output
+    method="html"
+    indent="yes"
+    doctype-public="-//W3C//DTD HTML 4.01//EN"
+    doctype-system="http://www.w3.org/TR/html4/strict.dtd" />
+
+  <xsl:template match="/">
+    <html>
+      <head>
+        <link rel="stylesheet" type="text/css" href="solr-admin.css"></link>
+        <link rel="icon" href="/favicon.ico" type="image/ico"></link>
+        <link rel="shortcut icon" href="/favicon.ico" type="image/ico"></link>
+        <title>SOLR Info</title>
+      </head>
+      <body>
+        <a href="">
+          <img border="0" align="right" height="61" width="142" src="solr-head.gif" alt="SOLR"/>
+        </a>
+        <h1>Solr Admin (<xsl:value-of select="solr/meta/collection" />)</h1>
+        <h2>Thread Dump</h2>
+        <div style="margin-top: 1em;">
+          <table>
+            <xsl:apply-templates/>
+          </table>
+          <a href=".">Return to Admin Page</a>
+        </div>
+      </body>
+    </html>
+  </xsl:template>
+
+  <xsl:include href="meta.xsl"/>
+
+  <xsl:template match="solr/system/jvm">
+    <tr>
+      <td><xsl:value-of select="name"/> <xsl:value-of select="version"/></td>
+    </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/system/threadCount">
+    <tr>
+      <td>
+        Thread Count:
+        current=<xsl:value-of select="current"/>,
+        peak=<xsl:value-of select="peak"/>,
+        daemon=<xsl:value-of select="daemon"/></td>
+    </tr>
+  </xsl:template>
+
+  <xsl:template match="solr/system/threadDump">
+    <div>Full Thread Dump:</div>
+    <xsl:for-each select="thread">
+      <!-- OG: TODO: add suspended/native conditionals -->
+      <tr>
+        <td style="margin-left: 1em; font-weight: bold;">
+          '<xsl:value-of select="name"/>' 
+          Id=<xsl:value-of select="id"/>, 
+          <xsl:value-of select="state"/> 
+          on lock=<xsl:value-of select="lock"/>, 
+          total cpu time=<xsl:value-of select="cpuTime"/> 
+          user time=<xsl:value-of select="userTime"/>
+        </td>
+      </tr>
+      <xsl:apply-templates select="stackTrace"/>
+    </xsl:for-each>
+  </xsl:template>
+
+  <xsl:template match="stackTrace">
+    <tr>
+      <td style="margin-left: 1em;">
+        <xsl:for-each select="line">
+          <xsl:value-of select="."/><br/>
+        </xsl:for-each>
+      </td>
+    </tr>
+  </xsl:template>
+
+</xsl:stylesheet>
diff --git a/src/webapp/web/index.jsp b/src/webapp/web/index.jsp
new file mode 100644
index 0000000..4848dc1
--- /dev/null
+++ b/src/webapp/web/index.jsp
@@ -0,0 +1,40 @@
+<%--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+--%>
+
+<html>
+<head>
+<link rel="stylesheet" type="text/css" href="solr-admin.css">
+<link rel="icon" href="favicon.ico" type="image/ico"></link>
+<link rel="shortcut icon" href="favicon.ico" type="image/ico"></link>
+<title>Welcome to Solr</title>
+</head>
+
+<body>
+<h1>Welcome to Solr!</h1>
+<a href="."><img border="0" align="right" height="61" width="142" src="admin/solr-head.gif" alt="Solr"/></a>
+
+<% 
+  org.apache.solr.core.MultiCore multicore = org.apache.solr.core.SolrMultiCore.getInstance();
+  if( multicore.isEnabled() ) { 
+    for( org.apache.solr.core.SolrCore core : multicore.getCores() ) {%>
+<a href="<%= core.getName() %>/admin/">Admin <%= core.getName() %> </a><br/>
+<% }} else { %>
+<a href="admin/">Solr Admin</a>
+<% } %>
+
+</body>
+</html>

