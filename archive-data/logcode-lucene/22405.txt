GitDiffStart: d7c0af3f30e62e34c63c12678b223735449b9e6f | Fri Jul 6 16:34:40 2007 +0000
diff --git a/src/java/org/apache/lucene/index/DocumentWriter.java b/src/java/org/apache/lucene/index/DocumentWriter.java
index d95bf7f..4cb2013 100644
--- a/src/java/org/apache/lucene/index/DocumentWriter.java
+++ b/src/java/org/apache/lucene/index/DocumentWriter.java
@@ -323,7 +323,7 @@ final class DocumentWriter {
     if (lo >= hi)
       return;
 
-    int mid = (lo + hi) / 2;
+    int mid = (lo + hi) >>> 1;
 
     if (postings[lo].term.compareTo(postings[mid].term) > 0) {
       Posting tmp = postings[lo];
diff --git a/src/java/org/apache/lucene/index/DocumentsWriter.java b/src/java/org/apache/lucene/index/DocumentsWriter.java
index c7083ee..450d1cb 100644
--- a/src/java/org/apache/lucene/index/DocumentsWriter.java
+++ b/src/java/org/apache/lucene/index/DocumentsWriter.java
@@ -734,7 +734,7 @@ final class DocumentsWriter {
       if (lo >= hi)
         return;
 
-      int mid = (lo + hi) / 2;
+      int mid = (lo + hi) >>> 1;
 
       if (comparePostings(postings[lo], postings[mid]) > 0) {
         Posting tmp = postings[lo];
@@ -792,7 +792,7 @@ final class DocumentsWriter {
       if (lo >= hi)
         return;
 
-      int mid = (lo + hi) / 2;
+      int mid = (lo + hi) >>> 1;
 
       if (comparePostings(postings[lo].p, postings[mid].p) > 0) {
         PostingVector tmp = postings[lo];
@@ -880,9 +880,9 @@ final class DocumentsWriter {
             int hashSize = fp.postingsHashSize;
 
             // Reduce hash so it's between 25-50% full
-            while (fp.numPostings < hashSize/2 && hashSize >= 2)
-              hashSize /= 2;
-            hashSize *= 2;
+            while (fp.numPostings < (hashSize>>1) && hashSize >= 2)
+              hashSize >>= 1;
+            hashSize <<= 1;
 
             if (hashSize != fp.postingsHash.length)
               fp.rehashPostings(hashSize);
@@ -1598,7 +1598,7 @@ final class DocumentsWriter {
 
         postingsHash = newHash;
         postingsHashSize = newSize;
-        postingsHashHalfSize = newSize/2;
+        postingsHashHalfSize = newSize >> 1;
       }
       
       final ByteSliceReader vectorSliceReader = new ByteSliceReader();
diff --git a/src/java/org/apache/lucene/index/FieldsReader.java b/src/java/org/apache/lucene/index/FieldsReader.java
index c36bbcc..cd0c7e1 100644
--- a/src/java/org/apache/lucene/index/FieldsReader.java
+++ b/src/java/org/apache/lucene/index/FieldsReader.java
@@ -82,7 +82,7 @@ final class FieldsReader {
       assert ((int) (indexStream.length()/8)) >= size + this.docStoreOffset;
     } else {
       this.docStoreOffset = 0;
-      this.size = (int) (indexStream.length() / 8);
+      this.size = (int) (indexStream.length() >> 3);
     }
   }
 
diff --git a/src/java/org/apache/lucene/index/TermVectorsReader.java b/src/java/org/apache/lucene/index/TermVectorsReader.java
index a0eeeed..a03a729 100644
--- a/src/java/org/apache/lucene/index/TermVectorsReader.java
+++ b/src/java/org/apache/lucene/index/TermVectorsReader.java
@@ -62,7 +62,7 @@ class TermVectorsReader implements Cloneable {
       tvfFormat = checkValidFormat(tvf);
       if (-1 == docStoreOffset) {
         this.docStoreOffset = 0;
-        this.size = (int) (tvx.length() / 8);
+        this.size = (int) (tvx.length() >> 3);
       } else {
         this.docStoreOffset = docStoreOffset;
         this.size = size;

