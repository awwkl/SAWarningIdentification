GitDiffStart: 459a3481f2406ec916478dcbd59abd581aba2530 | Sat Jun 2 18:24:28 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java b/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java
index 4876755..7083132 100644
--- a/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java
+++ b/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java
@@ -1,11 +1,5 @@
 package org.apache.lucene.util.packed;
 
-import java.io.IOException;
-import java.util.Arrays;
-
-import org.apache.lucene.store.DataInput;
-import org.apache.lucene.util.RamUsageEstimator;
-
 /**
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements. See the NOTICE file distributed with this
@@ -23,6 +17,12 @@ import org.apache.lucene.util.RamUsageEstimator;
  * the License.
  */
 
+import java.io.IOException;
+import java.util.Arrays;
+
+import org.apache.lucene.store.DataInput;
+import org.apache.lucene.util.RamUsageEstimator;
+
 /**
  * This class is similar to {@link Packed64} except that it trades space for
  * speed by ensuring that a single block needs to be read/written in order to
@@ -142,7 +142,6 @@ abstract class Packed64SingleBlock extends PackedInts.MutableImpl {
   public int get(int index, long[] arr, int off, int len) {
     assert len > 0;
     assert index >= 0 && index < valueCount;
-    final int origLen = len;
     len = Math.min(len, valueCount - index);
     assert off + len <= arr.length;
 

