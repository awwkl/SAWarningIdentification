GitDiffStart: 9892d10205539d9656ca93dfbb5e4d18996d84fb | Sat Dec 19 10:45:00 2009 +0000
diff --git a/src/java/org/apache/lucene/index/DirectoryReader.java b/src/java/org/apache/lucene/index/DirectoryReader.java
index 898f4ea..1493594 100644
--- a/src/java/org/apache/lucene/index/DirectoryReader.java
+++ b/src/java/org/apache/lucene/index/DirectoryReader.java
@@ -302,8 +302,17 @@ class DirectoryReader extends IndexReader implements Cloneable {
   /** {@inheritDoc} */
   @Override
   public String toString() {
-    final SegmentInfos infos = writer != null ? segmentInfosStart : segmentInfos;
-    return "DirectoryReader(" + infos.toString(directory) + ")";
+    final StringBuilder buffer = new StringBuilder();
+    if (hasChanges) {
+      buffer.append("*");
+    }
+    buffer.append(getClass().getSimpleName());
+    buffer.append('(');
+    for(SegmentReader r : subReaders) {
+      buffer.append(r);
+    }
+    buffer.append(')');
+    return buffer.toString();
   }
 
   private void initialize(SegmentReader[] subReaders) {
diff --git a/src/java/org/apache/lucene/index/IndexReader.java b/src/java/org/apache/lucene/index/IndexReader.java
index a2f3e1e..569a95a 100644
--- a/src/java/org/apache/lucene/index/IndexReader.java
+++ b/src/java/org/apache/lucene/index/IndexReader.java
@@ -148,13 +148,17 @@ public abstract class IndexReader implements Cloneable,Closeable {
   /** {@inheritDoc} */
   @Override
   public String toString() {
-    final StringBuilder buffer = new StringBuilder(getClass().getSimpleName());
+    final StringBuilder buffer = new StringBuilder();
+    if (hasChanges) {
+      buffer.append('*');
+    }
+    buffer.append(getClass().getSimpleName());
     buffer.append('(');
     final IndexReader[] subReaders = getSequentialSubReaders();
     if ((subReaders != null) && (subReaders.length > 0)) {
       buffer.append(subReaders[0]);
       for (int i = 1; i < subReaders.length; ++i) {
-        buffer.append(", ").append(subReaders[i]);
+        buffer.append(" ").append(subReaders[i]);
       }
     }
     buffer.append(')');
diff --git a/src/java/org/apache/lucene/index/IndexWriter.java b/src/java/org/apache/lucene/index/IndexWriter.java
index 8b61842..d5661b0 100644
--- a/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/src/java/org/apache/lucene/index/IndexWriter.java
@@ -4484,7 +4484,7 @@ public class IndexWriter implements Closeable {
         buffer.append(' ');
       }
       final SegmentInfo info = infos.info(i);
-      buffer.append(info.toString(directory));
+      buffer.append(info.toString(directory, 0));
       if (info.dir != directory)
         buffer.append("**");
     }
diff --git a/src/java/org/apache/lucene/index/MergePolicy.java b/src/java/org/apache/lucene/index/MergePolicy.java
index 04f249f..0ffc729 100644
--- a/src/java/org/apache/lucene/index/MergePolicy.java
+++ b/src/java/org/apache/lucene/index/MergePolicy.java
@@ -127,7 +127,7 @@ public abstract class MergePolicy implements java.io.Closeable {
       final int numSegments = segments.size();
       for(int i=0;i<numSegments;i++) {
         if (i > 0) b.append(' ');
-        b.append(segments.info(i).toString(dir));
+        b.append(segments.info(i).toString(dir, 0));
       }
       if (info != null)
         b.append(" into ").append(info.name);
diff --git a/src/java/org/apache/lucene/index/SegmentInfo.java b/src/java/org/apache/lucene/index/SegmentInfo.java
index f72f80f..ccaa5f0 100644
--- a/src/java/org/apache/lucene/index/SegmentInfo.java
+++ b/src/java/org/apache/lucene/index/SegmentInfo.java
@@ -681,7 +681,7 @@ public final class SegmentInfo {
   /** {@inheritDoc} */
   @Override
   public String toString() {
-    return toString(dir);
+    return toString(dir, 0);
   }
 
   /** Used for debugging.  Format may suddenly change.
@@ -695,7 +695,7 @@ public final class SegmentInfo {
    *  shared doc stores named <code>_1</code> (this part is
    *  left off if doc stores are private).</p>
    */
-  public String toString(Directory dir) {
+  public String toString(Directory dir, int pendingDelCount) {
 
     StringBuilder s = new StringBuilder();
     s.append(name).append(':');
@@ -723,6 +723,9 @@ public final class SegmentInfo {
     } catch (IOException ioe) {
       delCount = -1;
     }
+    if (delCount != -1) {
+      delCount += pendingDelCount;
+    }
     if (delCount != 0) {
       s.append('/');
       if (delCount == -1) {
diff --git a/src/java/org/apache/lucene/index/SegmentInfos.java b/src/java/org/apache/lucene/index/SegmentInfos.java
index 337dbea..1fa6b86 100644
--- a/src/java/org/apache/lucene/index/SegmentInfos.java
+++ b/src/java/org/apache/lucene/index/SegmentInfos.java
@@ -876,7 +876,7 @@ public final class SegmentInfos extends Vector<SegmentInfo> {
         buffer.append(' ');
       }
       final SegmentInfo info = info(i);
-      buffer.append(info.toString(directory));
+      buffer.append(info.toString(directory, 0));
     }
     return buffer.toString();
   }
diff --git a/src/java/org/apache/lucene/index/SegmentReader.java b/src/java/org/apache/lucene/index/SegmentReader.java
index 52e84f4..6529dd1 100644
--- a/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/src/java/org/apache/lucene/index/SegmentReader.java
@@ -682,10 +682,10 @@ public class SegmentReader extends IndexReader implements Cloneable {
       clone.readOnly = openReadOnly;
       clone.si = si;
       clone.readBufferSize = readBufferSize;
+      clone.pendingDeleteCount = pendingDeleteCount;
 
       if (!openReadOnly && hasChanges) {
         // My pending changes transfer to the new reader
-        clone.pendingDeleteCount = pendingDeleteCount;
         clone.deletedDocsDirty = deletedDocsDirty;
         clone.normsDirty = normsDirty;
         clone.hasChanges = hasChanges;
@@ -1201,7 +1201,12 @@ public class SegmentReader extends IndexReader implements Cloneable {
   /** {@inheritDoc} */
   @Override
   public String toString() {
-    return si.toString();
+    final StringBuilder buffer = new StringBuilder();
+    if (hasChanges) {
+      buffer.append('*');
+    }
+    buffer.append(si.toString(core.dir, pendingDeleteCount));
+    return buffer.toString();
   }
 
   /**

