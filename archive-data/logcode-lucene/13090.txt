GitDiffStart: a278ba7a0cf3660984579e330318b2bc55275c4d | Sun Mar 25 17:51:26 2012 +0000
diff --git a/modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/KuromojiTokenizer.java b/modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/KuromojiTokenizer.java
index c315283..0277228 100644
--- a/modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/KuromojiTokenizer.java
+++ b/modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/KuromojiTokenizer.java
@@ -648,7 +648,7 @@ public final class KuromojiTokenizer extends Tokenizer {
           final Position posData2 = positions.get(pos2);
           for(int idx=0;idx<posData2.count;idx++) {
             //System.out.println("    idx=" + idx + " cost=" + cost);
-            final int cost = posData.costs[idx];
+            final int cost = posData2.costs[idx];
             if (cost < leastCost) {
               leastCost = cost;
               leastIDX = idx;
diff --git a/modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer.java b/modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer.java
index d39cf87..4c667e8 100644
--- a/modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer.java
+++ b/modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer.java
@@ -153,4 +153,14 @@ public class TestKuromojiAnalyzer extends BaseTokenStreamTestCase {
                               new Integer(4)
     );
   }
+
+  // LUCENE-3897: this string (found by running all jawiki
+  // XML through KuromojiAnalyzer) caused AIOOBE
+  public void testCuriousString() throws Exception {
+    final String s = "&lt;li&gt;06:26 2004骞?3??21?? [[?╃???:Kzhr|Kzhr]] &quot;???瀛??瀹舵?&quot; ????ゃ??俱??? &lt;em&gt;&lt;nowiki&gt;(?虫????: ??????瀹?: &amp;#39;锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?极锛?&amp;#39;)&lt;/nowiki&gt;&lt;/em&gt;&lt;/li&gt;";
+    final Analyzer a = new KuromojiAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,
+                                            KuromojiAnalyzer.getDefaultStopSet(),
+                                            KuromojiAnalyzer.getDefaultStopTags());
+    checkAnalysisConsistency(random, a, random.nextBoolean(), s);
+  }
 }

