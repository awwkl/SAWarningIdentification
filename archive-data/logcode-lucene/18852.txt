GitDiffStart: 7370094ead79e5163991277c6383b39dc9593c58 | Mon Nov 16 11:08:25 2009 +0000
diff --git a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleMatrixFilter.java b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleMatrixFilter.java
index 5c2dc9e..ce1c22e 100644
--- a/contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleMatrixFilter.java
+++ b/contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleMatrixFilter.java
@@ -215,7 +215,7 @@ public final class ShingleMatrixFilter extends TokenStream {
    * The filter /will/ delete columns from the input matrix! You will not be able to reset the filter if you used this constructor.
    * todo: don't touch the matrix! use a boolean, set the input stream to null or something, and keep track of where in the matrix we are at.
    *
-   * @param matrix the input based for creating shingles. Does not need to contain any information until {@link org.apache.lucene.analysis.shingle.ShingleMatrixFilter#next(org.apache.lucene.analysis.Token)} is called the first time.
+   * @param matrix the input based for creating shingles. Does not need to contain any information until {@link #incrementToken()} is called the first time.
    * @param minimumShingleSize minimum number of tokens in any shingle.
    * @param maximumShingleSize maximum number of tokens in any shingle.
    * @param spacerCharacter character to use between texts of the token parts in a shingle. null for none.
@@ -341,7 +341,7 @@ public final class ShingleMatrixFilter extends TokenStream {
   private int currentShingleLength;
 
   /**
-   * a set containing shingles that has been the result of a call to next(Token),
+   * a set containing shingles that has been the result of a call to {@link #incrementToken()},
    * used to avoid producing the same shingle more than once.
    */
   private Set<List<Token>> shinglesSeen = new HashSet<List<Token>>();
@@ -569,7 +569,7 @@ public final class ShingleMatrixFilter extends TokenStream {
   }
 
   /**
-   * Final touch of a shingle token before it is passed on to the consumer from method {@link #next(org.apache.lucene.analysis.Token)}.
+   * Final touch of a shingle token before it is passed on to the consumer from method {@link #incrementToken()}.
    *
    * Calculates and sets type, flags, position increment, start/end offsets and weight.
    *
diff --git a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask.java b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask.java
index 902de5b..84798f5 100644
--- a/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask.java
+++ b/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask.java
@@ -36,7 +36,7 @@ import org.apache.lucene.document.Field;
  * A task which writes documents, one line per document. Each line is in the
  * following format: title &lt;TAB&gt; date &lt;TAB&gt; body. The output of this
  * task can be consumed by
- * {@link org.apache.lucene.benchmark.byTask.feeds.LineDocMaker} and is intended
+ * {@link org.apache.lucene.benchmark.byTask.feeds.LineDocSource} and is intended
  * to save the IO overhead of opening a file per document to be indexed.<br>
  * Supports the following parameters:
  * <ul>
diff --git a/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/nodes/RangeQueryNode.java b/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/nodes/RangeQueryNode.java
index 62a52d3..6578ab0 100644
--- a/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/nodes/RangeQueryNode.java
+++ b/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/nodes/RangeQueryNode.java
@@ -30,7 +30,7 @@ import org.apache.lucene.queryParser.standard.processors.ParametricRangeQueryNod
  * 
  * @see ParametricRangeQueryNodeProcessor
  * @see RangeCollatorAttribute
- * @see org.apache.lucene.search.RangeQuery
+ * @see org.apache.lucene.search.TermRangeQuery
  */
 public class RangeQueryNode extends ParametricRangeQueryNode {
 

