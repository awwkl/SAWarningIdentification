GitDiffStart: 2bf47f6bc79d090261d1bca07e1e15a9a311c854 | Fri Dec 31 18:08:42 2010 +0000
diff --git a/solr/src/java/org/apache/solr/core/SolrConfig.java b/solr/src/java/org/apache/solr/core/SolrConfig.java
index 408ebef..f842194 100644
--- a/solr/src/java/org/apache/solr/core/SolrConfig.java
+++ b/solr/src/java/org/apache/solr/core/SolrConfig.java
@@ -71,12 +71,6 @@ public class SolrConfig extends Config {
   
   public static final String DEFAULT_CONF_FILE = "solrconfig.xml";
 
-  /**
-   * Compatibility feature for single-core (pre-solr{215,350} patch); should go away at solr-2.0
-   * @deprecated Use {@link SolrCore#getSolrConfig()} instead.
-   */
-  @Deprecated
-  public static SolrConfig config = null; 
 
   /**
    * Singleton keeping track of configuration errors
@@ -176,8 +170,6 @@ public class SolrConfig extends Config {
 
     hashSetInverseLoadFactor = 1.0f / getFloat("//HashDocSet/@loadFactor",0.75f);
     hashDocSetMaxSize= getInt("//HashDocSet/@maxSize",3000);
-    
-    pingQueryParams = readPingQueryParams(this);
 
     httpCachingConfig = new HttpCachingConfig(this);
     
@@ -211,17 +203,9 @@ public class SolrConfig extends Config {
      loadPluginInfo(IndexReaderFactory.class,"indexReaderFactory",false, true);
      loadPluginInfo(UpdateRequestProcessorChain.class,"updateRequestProcessorChain",false, false);
 
-     //TODO deprecated remove it later
-     loadPluginInfo(SolrHighlighter.class,"highlighting",false, false);
-     if( pluginStore.containsKey( SolrHighlighter.class.getName() ) )
-       log.warn( "Deprecated syntax found. <highlighting/> should move to <searchComponent/>" );
-
      updateHandlerInfo = loadUpdatehandlerInfo();
 
     Config.log.info("Loaded SolrConfig: " + name);
-    
-    // TODO -- at solr 2.0. this should go away
-    config = this;
   }
 
   protected UpdateHandlerInfo loadUpdatehandlerInfo() {
@@ -288,47 +272,6 @@ public class SolrConfig extends Config {
   public HttpCachingConfig getHttpCachingConfig() {
     return httpCachingConfig;
   }
-  
-  /**
-   * ping query request parameters
-   * @deprecated Use {@link PingRequestHandler} instead.
-   */
-  @Deprecated
-  private final NamedList pingQueryParams;
-
-  static private NamedList readPingQueryParams(SolrConfig config) {  
-    String urlSnippet = config.get("admin/pingQuery", "").trim();
-    
-    StringTokenizer qtokens = new StringTokenizer(urlSnippet,"&");
-    String tok;
-    NamedList params = new NamedList();
-    while (qtokens.hasMoreTokens()) {
-      tok = qtokens.nextToken();
-      String[] split = tok.split("=", 2);
-      params.add(split[0], split[1]);
-    }
-    if (0 < params.size()) {
-      log.warn("The <pingQuery> syntax is deprecated, " +
-               "please use PingRequestHandler instead");
-    }
-    return params;
-  }
-  
-  /**
-   * Returns a Request object based on the admin/pingQuery section
-   * of the Solr config file.
-   * 
-   * @deprecated use {@link PingRequestHandler} instead 
-   */
-  @Deprecated
-  public SolrQueryRequest getPingQueryRequest(SolrCore core) {
-    if(pingQueryParams.size() == 0) {
-      throw new IllegalStateException
-        ("<pingQuery> not configured (consider registering " +
-         "PingRequestHandler with the name '/admin/ping' instead)");
-    }
-    return new LocalSolrQueryRequest(core, pingQueryParams);
-  }
 
   public static class JmxConfiguration {
     public boolean enabled = false;
@@ -336,12 +279,6 @@ public class SolrConfig extends Config {
     public String serviceUrl;
     public String rootName;
 
-    @Deprecated
-    public JmxConfiguration(boolean enabled, 
-                            String agentId, 
-                            String serviceUrl) {
-      this(enabled,agentId,serviceUrl,null);
-    }
     public JmxConfiguration(boolean enabled, 
                             String agentId, 
                             String serviceUrl,
diff --git a/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java b/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java
index 160a69d..2356df8 100644
--- a/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java
+++ b/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java
@@ -70,7 +70,7 @@ public class TestJmxMonitoredMap extends LuceneTestCase {
           throw e;
         }
         String url = "service:jmx:rmi:///jndi/rmi://:" + port + "/solrjmx";
-        JmxConfiguration config = new JmxConfiguration(true, null, url);
+        JmxConfiguration config = new JmxConfiguration(true, null, url, null);
         monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);
         JMXServiceURL u = new JMXServiceURL(url);
         connector = JMXConnectorFactory.connect(u);

