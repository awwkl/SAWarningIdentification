GitDiffStart: 37e03cbfa5efc43035895cf34029fb6c39c9b04f | Tue Jan 17 09:41:33 2012 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 71af98a..62a295c 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -59,6 +59,10 @@ Upgrading from Solr 3.6-dev
   and it needs to be registered in solrconfig.xml like this:
     <queryResponseWriter name="velocity" class="solr.VelocityResponseWriter"/>
 
+* The update request parameter to choose Update Request Processor Chain is 
+  renamed from "update.processor" to "update.chain". The old parameter was
+  deprecated but still working since Solr3.2, but is now removed entirely.
+
 Detailed Change List
 ----------------------
 
@@ -383,6 +387,9 @@ Other Changes
   Errors should be caught and logged at the top-most level or logged and NOT propagated up the 
   chain. (Erick Erickson)
 
+* SOLR-2105: Remove support for deprecated "update.processor" (since 3.2), in favor of 
+  "update.chain" (janhoy)
+
 
 Documentation
 ----------------------
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java
index 15997b9..b285e98 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java
@@ -22,6 +22,7 @@ import org.apache.solr.common.SolrInputDocument;
 import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.params.ModifiableSolrParams;
 import org.apache.solr.common.params.SolrParams;
+import org.apache.solr.common.params.UpdateParams;
 import org.apache.solr.common.util.ContentStreamBase;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.util.ContentStream;
@@ -190,7 +191,7 @@ public class DataImportHandler extends RequestHandlerBase implements
               IMPORT_CMD.equals(command)) {
 
         UpdateRequestProcessorChain processorChain =
-                req.getCore().getUpdateProcessingChain(SolrPluginUtils.resolveUpdateChainParam(params, LOG));
+                req.getCore().getUpdateProcessingChain(params.get(UpdateParams.UPDATE_CHAIN));
         UpdateRequestProcessor processor = processorChain.createProcessor(req, rsp);
         SolrResourceLoader loader = req.getCore().getResourceLoader();
         SolrWriter sw = getSolrWriter(processor, loader, requestParams, req);
diff --git a/solr/core/src/java/org/apache/solr/handler/ContentStreamHandlerBase.java b/solr/core/src/java/org/apache/solr/handler/ContentStreamHandlerBase.java
index c431b45..3513124 100644
--- a/solr/core/src/java/org/apache/solr/handler/ContentStreamHandlerBase.java
+++ b/solr/core/src/java/org/apache/solr/handler/ContentStreamHandlerBase.java
@@ -18,6 +18,7 @@ package org.apache.solr.handler;
 
 import org.apache.solr.common.SolrException;
 import org.apache.solr.common.params.SolrParams;
+import org.apache.solr.common.params.UpdateParams;
 import org.apache.solr.common.util.ContentStream;
 import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.response.SolrQueryResponse;
@@ -39,7 +40,7 @@ public abstract class ContentStreamHandlerBase extends RequestHandlerBase {
   public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {
     SolrParams params = req.getParams();
     UpdateRequestProcessorChain processorChain =
-            req.getCore().getUpdateProcessingChain(SolrPluginUtils.resolveUpdateChainParam(params, log));
+            req.getCore().getUpdateProcessingChain(params.get(UpdateParams.UPDATE_CHAIN));
 
     UpdateRequestProcessor processor = processorChain.createProcessor(req, rsp);
 
diff --git a/solr/core/src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java b/solr/core/src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java
index 136b65f..d0b0d3f 100644
--- a/solr/core/src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/XmlUpdateRequestHandler.java
@@ -33,8 +33,6 @@ public class XmlUpdateRequestHandler extends ContentStreamHandlerBase {
   public static Logger log = LoggerFactory.getLogger(XmlUpdateRequestHandler.class);
   private static final XMLErrorLogger xmllog = new XMLErrorLogger(log);
 
-  public static final String UPDATE_PROCESSOR = "update.processor";
-
   // XML Constants
   public static final String ADD = "add";
   public static final String DELETE = "delete";
diff --git a/solr/core/src/java/org/apache/solr/handler/XsltUpdateRequestHandler.java b/solr/core/src/java/org/apache/solr/handler/XsltUpdateRequestHandler.java
index 9bc0052..1bd1780 100644
--- a/solr/core/src/java/org/apache/solr/handler/XsltUpdateRequestHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/XsltUpdateRequestHandler.java
@@ -34,9 +34,6 @@ public class XsltUpdateRequestHandler extends ContentStreamHandlerBase {
   public static Logger log = LoggerFactory.getLogger(XsltUpdateRequestHandler.class);
   public static final XMLErrorLogger xmllog = new XMLErrorLogger(log);
 
-  public static final String UPDATE_PROCESSOR = "update.processor";
-
-
   public static final int XSLT_CACHE_DEFAULT = 60;
   private static final String XSLT_CACHE_PARAM = "xsltCacheLifetimeSeconds"; 
 
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
index 5471ac1..0896bbd 100644
--- a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
@@ -233,7 +233,7 @@ public class CoreAdminHandler extends RequestHandlerBase {
         }
 
         UpdateRequestProcessorChain processorChain =
-                core.getUpdateProcessingChain(SolrPluginUtils.resolveUpdateChainParam(params, log));
+                core.getUpdateProcessingChain(params.get(UpdateParams.UPDATE_CHAIN));
         wrappedReq = new LocalSolrQueryRequest(core, req.getParams());
         UpdateRequestProcessor processor =
                 processorChain.createProcessor(wrappedReq, rsp);
diff --git a/solr/core/src/java/org/apache/solr/util/SolrPluginUtils.java b/solr/core/src/java/org/apache/solr/util/SolrPluginUtils.java
index 70d9398..45305ef 100644
--- a/solr/core/src/java/org/apache/solr/util/SolrPluginUtils.java
+++ b/solr/core/src/java/org/apache/solr/util/SolrPluginUtils.java
@@ -852,27 +852,6 @@ public class SolrPluginUtils {
       }
     }
   }
-
-
-  /**
-   * This method helps resolve if the deprecated "update.processor" request parameter is used  
-   * and logs a warning if it is. In a future version, this method will be removed and
-   * Solr will assume "update.chain" and not look for "update.processor"
-   * @param params an instance of SolrParams from the request
-   * @param log an instance of a slf4j logger to log a warning in case of deprecated param usage
-   * @return null if neither is specified, else the value of the param specified
-   * @deprecated
-   */
-  public static String resolveUpdateChainParam(SolrParams params, Logger log) {
-    if(params.get(UpdateParams.UPDATE_CHAIN_DEPRECATED) != null && log != null) {
-      log.warn("Use of deprecated update request parameter "+UpdateParams.UPDATE_CHAIN_DEPRECATED+
-           " detected. Please use the new parameter "+UpdateParams.UPDATE_CHAIN+" instead, as support"+
-           " for "+UpdateParams.UPDATE_CHAIN_DEPRECATED+" will be removed in a later version.");
-    }
-    return (params.get(UpdateParams.UPDATE_CHAIN) != null) 
-      ? params.get(UpdateParams.UPDATE_CHAIN) 
-      : params.get(UpdateParams.UPDATE_CHAIN_DEPRECATED);
-  }
   
 }
 
diff --git a/solr/core/src/test/org/apache/solr/update/UpdateParamsTest.java b/solr/core/src/test/org/apache/solr/update/UpdateParamsTest.java
index f553fa2..bbfdebe 100644
--- a/solr/core/src/test/org/apache/solr/update/UpdateParamsTest.java
+++ b/solr/core/src/test/org/apache/solr/update/UpdateParamsTest.java
@@ -37,17 +37,16 @@ public class UpdateParamsTest extends AbstractSolrTestCase {
   public String getSolrConfigFile() { return "solrconfig.xml"; }
 
   /**
-   * Tests that both update.chain and update.processor works
-   * NOTE: This test will fail when support for update.processor is removed and should then be removed
+   * Tests that only update.chain and not update.processor works (SOLR-2105)
    */
-  public void testUpdateProcessorParamDeprecation() throws Exception {
+  public void testUpdateProcessorParamDeprecationRemoved() throws Exception {
     SolrCore core = h.getCore();
     
     XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();
     handler.init( null );
     
     MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );
-    params.getMap().put(UpdateParams.UPDATE_CHAIN_DEPRECATED, "nonexistant");
+    params.getMap().put("update.processor", "nonexistant");
 
     // Add a single document
     SolrQueryResponse rsp = new SolrQueryResponse();
@@ -56,13 +55,13 @@ public class UpdateParamsTest extends AbstractSolrTestCase {
     // First check that the old param behaves as it should
     try {
     	handler.handleRequestBody(req, rsp);
-    	assertFalse("Faulty update.processor parameter (deprecated but should work) not causing an error - i.e. it is not detected", true);
+    	assertTrue("Old param update.processor should not have any effect anymore", true);
     } catch (Exception e) {
-    	assertEquals("Got wrong exception while testing update.chain", e.getMessage(), "unknown UpdateRequestProcessorChain: nonexistant");
+      assertFalse("Got wrong exception while testing update.chain", e.getMessage().equals("unknown UpdateRequestProcessorChain: nonexistant"));
     }
     
     // Then check that the new param behaves correctly
-    params.getMap().remove(UpdateParams.UPDATE_CHAIN_DEPRECATED);
+    params.getMap().remove("update.processor");
     params.getMap().put(UpdateParams.UPDATE_CHAIN, "nonexistant");    
     req.setParams(params);
     try {
diff --git a/solr/solrj/src/java/org/apache/solr/common/params/UpdateParams.java b/solr/solrj/src/java/org/apache/solr/common/params/UpdateParams.java
index 6798ccc..c05d755 100644
--- a/solr/solrj/src/java/org/apache/solr/common/params/UpdateParams.java
+++ b/solr/solrj/src/java/org/apache/solr/common/params/UpdateParams.java
@@ -51,8 +51,6 @@ public interface UpdateParams
 
   /** Select the update processor chain to use.  A RequestHandler may or may not respect this parameter */
   public static final String UPDATE_CHAIN = "update.chain";
-  // TODO: Include the old deprecated param, for removal in Solr 4.0
-  public static final String UPDATE_CHAIN_DEPRECATED = "update.processor";
 
   /**
    * If optimizing, set the maximum number of segments left in the index after optimization.  1 is the default (and is equivalent to calling IndexWriter.optimize() in Lucene).

