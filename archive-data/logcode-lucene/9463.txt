GitDiffStart: 7acd9906d66ebb640517ac35ffbd5c265f0511b8 | Mon Feb 11 23:46:25 2013 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/index/DocTermOrds.java b/lucene/core/src/java/org/apache/lucene/index/DocTermOrds.java
index bd066ce..f91a31d 100644
--- a/lucene/core/src/java/org/apache/lucene/index/DocTermOrds.java
+++ b/lucene/core/src/java/org/apache/lucene/index/DocTermOrds.java
@@ -857,8 +857,7 @@ public class DocTermOrds {
     }
   }
   
-  // nocommit: make private (just public to enable hack to cutover gradually)
-  public class Iterator extends SortedSetDocValues {
+  private class Iterator extends SortedSetDocValues {
     final TermsEnum te;
     final TermOrdsIterator in = new TermOrdsIterator(); // nocommit: don't wrap this other iterator
     final int buffer[] = new int[5];
@@ -908,10 +907,5 @@ public class DocTermOrds {
     public long getValueCount() {
       return numTerms();
     }
-    
-    // nocommit: just a hack for gradual cutover
-    public DocTermOrds getParent() {
-      return DocTermOrds.this;
-    }
   }
 }
diff --git a/lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil.java b/lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil.java
index c812fac..8083cde 100644
--- a/lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil.java
+++ b/lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil.java
@@ -567,51 +567,33 @@ public class TestJoinUtil extends LuceneTestCase {
         } else {
           toSearcher.search(new MatchAllDocsQuery(), new Collector() {
 
-            private DocTermOrds docTermOrds;
-            private TermsEnum docTermsEnum;
-            private DocTermOrds.TermOrdsIterator reuse;
+            private SortedSetDocValues docTermOrds;
+            private final BytesRef scratch = new BytesRef();
             private int docBase;
 
             @Override
             public void collect(int doc) throws IOException {
-              if (docTermOrds.isEmpty()) {
-                return;
-              }
-
-              reuse = docTermOrds.lookup(doc, reuse);
-              int[] buffer = new int[5];
-
-              int chunk;
-              do {
-                chunk = reuse.read(buffer);
-                if (chunk == 0) {
-                  return;
+              docTermOrds.setDocument(doc);
+              long ord;
+              while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {
+                docTermOrds.lookupOrd(ord, scratch);
+                JoinScore joinScore = joinValueToJoinScores.get(scratch);
+                if (joinScore == null) {
+                  continue;
                 }
-
-                for (int idx = 0; idx < chunk; idx++) {
-                  int key = buffer[idx];
-                  docTermsEnum.seekExact((long) key);
-                  JoinScore joinScore = joinValueToJoinScores.get(docTermsEnum.term());
-                  if (joinScore == null) {
-                    continue;
-                  }
-                  Integer basedDoc = docBase + doc;
-                  // First encountered join value determines the score.
-                  // Something to keep in mind for many-to-many relations.
-                  if (!docToJoinScore.containsKey(basedDoc)) {
-                    docToJoinScore.put(basedDoc, joinScore);
-                  }
+                Integer basedDoc = docBase + doc;
+                // First encountered join value determines the score.
+                // Something to keep in mind for many-to-many relations.
+                if (!docToJoinScore.containsKey(basedDoc)) {
+                  docToJoinScore.put(basedDoc, joinScore);
                 }
-              } while (chunk >= buffer.length);
+              }
             }
 
             @Override
             public void setNextReader(AtomicReaderContext context) throws IOException {
               docBase = context.docBase;
-              DocTermOrds.Iterator iterator = (DocTermOrds.Iterator) FieldCache.DEFAULT.getDocTermOrds(context.reader(), toField);
-              docTermOrds = iterator.getParent();
-              docTermsEnum = docTermOrds.getOrdTermsEnum(context.reader());
-              reuse = null;
+              docTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), toField);
             }
 
             @Override

