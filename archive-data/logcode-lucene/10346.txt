GitDiffStart: 1c15a279d3b6f56dcb2189f77c271b84850fa00a | Tue Dec 4 18:11:08 2012 +0000
diff --git a/lucene/core/src/java/org/apache/lucene/index/AtomicReader.java b/lucene/core/src/java/org/apache/lucene/index/AtomicReader.java
index c94182f..309e277 100644
--- a/lucene/core/src/java/org/apache/lucene/index/AtomicReader.java
+++ b/lucene/core/src/java/org/apache/lucene/index/AtomicReader.java
@@ -163,22 +163,22 @@ public abstract class AtomicReader extends IndexReader {
    */
   public abstract DocValues docValues(String field) throws IOException;
 
-  // nocommit document that these are thread-private:
   /** Returns {@link NumericDocValues} for this field, or
    *  null if no {@link NumericDocValues} were indexed for
-   *  this field. */
+   *  this field.  The returned instance should only be
+   *  used by a single thread. */
   public abstract NumericDocValues getNumericDocValues(String field) throws IOException;
 
-  // nocommit document that these are thread-private:
   /** Returns {@link BinaryDocValues} for this field, or
    *  null if no {@link BinaryDocValues} were indexed for
-   *  this field. */
+   *  this field.  The returned instance should only be
+   *  used by a single thread. */
   public abstract BinaryDocValues getBinaryDocValues(String field) throws IOException;
 
-  // nocommit document that these are thread-private:
   /** Returns {@link SortedDocValues} for this field, or
    *  null if no {@link SortedDocValues} were indexed for
-   *  this field. */
+   *  this field.  The returned instance should only be
+   *  used by a single thread. */
   public abstract SortedDocValues getSortedDocValues(String field) throws IOException;
 
   /**
diff --git a/lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders.java b/lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders.java
index 1d71927..f019696 100644
--- a/lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders.java
+++ b/lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders.java
@@ -65,8 +65,9 @@ final class SegmentCoreReaders {
   final TermVectorsReader termVectorsReaderOrig;
   final CompoundFileDirectory cfsReader;
 
-  // nocommit we should make a single thread local w/ a
-  // class holding these N things...?
+  // TODO: make a single thread local w/ a
+  // Thingy class holding fieldsReader, termVectorsReader,
+  // simpleNormsProducer, simpleDVProducer
 
   final CloseableThreadLocal<StoredFieldsReader> fieldsReaderLocal = new CloseableThreadLocal<StoredFieldsReader>() {
     @Override
@@ -82,8 +83,6 @@ final class SegmentCoreReaders {
     }
   };
 
-  // nocommit not great to hold onto lots-o-ram in a thread
-  // local...?  do we need a "needsClone"/"isThreadSafe"!?
   final CloseableThreadLocal<SimpleDVProducer> simpleDocValuesLocal = new CloseableThreadLocal<SimpleDVProducer>() {
     @Override
     protected SimpleDVProducer initialValue() {
@@ -92,8 +91,6 @@ final class SegmentCoreReaders {
     }
   };
 
-  // nocommit not great to hold onto lots-o-ram in a thread
-  // local...?  do we need a "needsClone"/"isThreadSafe"!?
   final CloseableThreadLocal<SimpleDVProducer> simpleNormsLocal = new CloseableThreadLocal<SimpleDVProducer>() {
     @Override
     protected SimpleDVProducer initialValue() {

