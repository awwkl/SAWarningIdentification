GitDiffStart: 59847bd6d2d19325a7acefa7e4bc15509c524088 | Thu Aug 30 23:29:00 2012 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 13cab07..eb87798 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -48,6 +48,9 @@ New Features
 * SOLR-3670: New CountFieldValuesUpdateProcessorFactory makes it easy to index 
   the number of values in another field for later use at query time. (hossman)
 
+* SOLR-2768: new "mod(x,y)" function for computing the modulus of two value 
+  sources. (hossman)
+
 Optimizations
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java b/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java
index ff28e3d..7e78ecc 100755
--- a/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java
+++ b/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java
@@ -177,6 +177,23 @@ public abstract class ValueSourceParser implements NamedListInitializedPlugin {
         return new DivFloatFunction(a, b);
       }
     });
+    addParser("mod", new ValueSourceParser() {
+      @Override
+      public ValueSource parse(FunctionQParser fp) throws ParseException {
+        ValueSource a = fp.parseValueSource();
+        ValueSource b = fp.parseValueSource();
+        return new DualFloatFunction(a, b) {
+          @Override
+          protected String name() {
+            return "mod";
+          }
+          @Override
+          protected float func(int doc, FunctionValues aVals, FunctionValues bVals) {
+            return aVals.floatVal(doc) % bVals.floatVal(doc);
+          }
+        };
+      }
+    });
     addParser("map", new ValueSourceParser() {
       @Override
       public ValueSource parse(FunctionQParser fp) throws ParseException {
diff --git a/solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java b/solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java
index d00dbf2..33e678c 100644
--- a/solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java
+++ b/solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java
@@ -329,6 +329,13 @@ public class QueryEqualityTest extends SolrTestCaseJ4 {
                      "div(field(foo_i), sub(4,bar_i))");
 
   }
+  public void testFuncMod() throws Exception {
+    assertFuncEquals("mod(5,4)", "mod(5, 4)");
+    assertFuncEquals("mod(foo_i,4)", "mod(foo_i, 4)", 
+                     "mod(field('foo_i'), 4)");
+    assertFuncEquals("mod(foo_i,sub(4,field('bar_i')))", 
+                     "mod(field(foo_i), sub(4,bar_i))");
+  }
   public void testFuncMap() throws Exception {
     assertFuncEquals("map(field(foo_i), 0, 45, 100)",
                      "map(foo_i, 0.0, 45, 100)");

