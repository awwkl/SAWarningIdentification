GitDiffStart: a00f94c4a9e9044824c17966537c5ae0af2915f6 | Wed Jun 11 14:38:49 2008 +0000
diff --git a/client/java/solrj/src/org/apache/solr/client/solrj/SolrServer.java b/client/java/solrj/src/org/apache/solr/client/solrj/SolrServer.java
index bc8f17d..fb8fe6d 100644
--- a/client/java/solrj/src/org/apache/solr/client/solrj/SolrServer.java
+++ b/client/java/solrj/src/org/apache/solr/client/solrj/SolrServer.java
@@ -20,6 +20,7 @@ package org.apache.solr.client.solrj;
 import java.io.IOException;
 import java.io.Serializable;
 import java.util.Collection;
+import java.util.ArrayList;
 
 import org.apache.solr.client.solrj.request.QueryRequest;
 import org.apache.solr.client.solrj.request.SolrPing;
@@ -27,6 +28,7 @@ import org.apache.solr.client.solrj.request.UpdateRequest;
 import org.apache.solr.client.solrj.response.QueryResponse;
 import org.apache.solr.client.solrj.response.SolrPingResponse;
 import org.apache.solr.client.solrj.response.UpdateResponse;
+import org.apache.solr.client.solrj.beans.DocumentObjectBinder;
 import org.apache.solr.common.SolrInputDocument;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
@@ -37,6 +39,8 @@ import org.apache.solr.common.util.NamedList;
  */
 public abstract class SolrServer implements Serializable
 {
+  private DocumentObjectBinder binder;
+
   public UpdateResponse add(Collection<SolrInputDocument> docs, boolean overwrite ) throws SolrServerException, IOException {
     UpdateRequest req = new UpdateRequest();
     req.add(docs);
@@ -44,6 +48,15 @@ public abstract class SolrServer implements Serializable
     return req.process(this);
   }
 
+  public UpdateResponse addBeans(Collection<Object> beans, boolean overwrite ) throws SolrServerException, IOException {
+    DocumentObjectBinder binder = this.getBinder();
+    ArrayList<SolrInputDocument> docs =  new ArrayList<SolrInputDocument>(beans.size());
+    for (Object bean : beans) {
+      docs.add(binder.toSolrInputDocument(bean));
+    }
+    return add(docs,overwrite);
+  }
+
   public UpdateResponse add(SolrInputDocument doc, boolean overwrite ) throws SolrServerException, IOException {
     UpdateRequest req = new UpdateRequest();
     req.add(doc);
@@ -51,14 +64,26 @@ public abstract class SolrServer implements Serializable
     return req.process(this);
   }
 
+  public UpdateResponse addBean(Object obj, boolean overwrite) throws IOException, SolrServerException {
+    return add(getBinder().toSolrInputDocument(obj), overwrite);
+  }
+
   public UpdateResponse add(SolrInputDocument doc) throws SolrServerException, IOException {
     return add(doc, true);
   }
 
+  public UpdateResponse addBean(Object obj) throws IOException, SolrServerException {
+    return add(getBinder().toSolrInputDocument(obj), true);
+  }
+
   public UpdateResponse add(Collection<SolrInputDocument> docs) throws SolrServerException, IOException {
     return add(docs, true);
   }
 
+  public UpdateResponse addBeans(Collection<Object> beans ) throws SolrServerException, IOException {
+    return addBeans(beans,true);
+  }
+
   /** waitFlush=true and waitSearcher=true to be inline with the defaults for plain HTTP access
    * @throws IOException 
    */
@@ -100,5 +125,12 @@ public abstract class SolrServer implements Serializable
   /**
    * SolrServer implementations need to implement a how a request is actually processed
    */ 
-  public abstract NamedList<Object> request( final SolrRequest request ) throws SolrServerException, IOException; 
+  public abstract NamedList<Object> request( final SolrRequest request ) throws SolrServerException, IOException;
+
+  public DocumentObjectBinder getBinder() {
+    if(binder == null){
+      binder = new DocumentObjectBinder();
+    }
+    return binder;
+  }
 }
\ No newline at end of file
diff --git a/client/java/solrj/src/org/apache/solr/client/solrj/request/QueryRequest.java b/client/java/solrj/src/org/apache/solr/client/solrj/request/QueryRequest.java
index 9f25d73..7f17f65 100644
--- a/client/java/solrj/src/org/apache/solr/client/solrj/request/QueryRequest.java
+++ b/client/java/solrj/src/org/apache/solr/client/solrj/request/QueryRequest.java
@@ -81,7 +81,7 @@ public class QueryRequest extends SolrRequest
     try 
     {
       long startTime = System.currentTimeMillis();
-      QueryResponse res = new QueryResponse( server.request( this ) );
+      QueryResponse res = new QueryResponse( server.request( this ), server);
       res.setElapsedTime( System.currentTimeMillis()-startTime );
       return res;
     } 
diff --git a/client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse.java b/client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse.java
index 5f77347..6d4533c 100644
--- a/client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse.java
+++ b/client/java/solrj/src/org/apache/solr/client/solrj/response/QueryResponse.java
@@ -26,6 +26,8 @@ import java.util.Map;
 
 import org.apache.solr.common.SolrDocumentList;
 import org.apache.solr.common.util.NamedList;
+import org.apache.solr.client.solrj.SolrServer;
+import org.apache.solr.client.solrj.beans.DocumentObjectBinder;
 
 /**
  * 
@@ -47,15 +49,21 @@ public class QueryResponse extends SolrResponseBase
   private List<FacetField> _facetFields = null;
   private List<FacetField> _limitingFacets = null;
   private List<FacetField> _facetDates = null;
-  
+
   // Highlight Info
   private Map<String,Map<String,List<String>>> _highlighting = null;
   
   // Debug Info
   private Map<String,Object> _debugMap = null;
   private Map<String,String> _explainMap = null;
+  private SolrServer solrServer;
+  public QueryResponse( NamedList<Object> res , SolrServer solrServer){
+    this(res);
+    this.solrServer = solrServer;
+  }
 
-  public QueryResponse( NamedList<Object> res ) 
+
+  public QueryResponse( NamedList<Object> res )
   {
     super( res );
     
@@ -241,6 +249,12 @@ public class QueryResponse extends SolrResponseBase
   public List<FacetField> getLimitingFacets() {
     return _limitingFacets;
   }
+
+  public <T> List<T> getBeans(Class<T> type){
+    return solrServer == null ? 
+            new DocumentObjectBinder().getBeans(type,_results):
+            solrServer.getBinder().getBeans(type, _results);
+  }
 }
 
 

