GitDiffStart: 2e5960f5e69d19d87318a93acf5826e8925ee2a8 | Mon Jun 8 14:47:23 2009 +0000
diff --git a/src/java/org/apache/solr/search/function/BoostedQuery.java b/src/java/org/apache/solr/search/function/BoostedQuery.java
index 9355114..37f518d 100755
--- a/src/java/org/apache/solr/search/function/BoostedQuery.java
+++ b/src/java/org/apache/solr/search/function/BoostedQuery.java
@@ -122,9 +122,10 @@ public class BoostedQuery extends Query {
     public float score() throws IOException {
       float score = qWeight * scorer.score() * vals.floatVal(scorer.doc());
 
-      // current Lucene sorting priority queues can't handle NaN (score!=score is true for NaN) and -Infinity
-      if (score != score || score==Float.NEGATIVE_INFINITY) return -Float.MAX_VALUE;
-      return score;
+      // Current Lucene priority queues can't handle NaN and -Infinity, so
+      // map to -Float.MAX_VALUE. This conditional handles both -infinity
+      // and NaN since comparisons with NaN are always false.
+      return score>Float.NEGATIVE_INFINITY ? score : -Float.MAX_VALUE;
     }
 
     public boolean skipTo(int target) throws IOException {
diff --git a/src/java/org/apache/solr/search/function/FunctionQuery.java b/src/java/org/apache/solr/search/function/FunctionQuery.java
index 07a718f..b643ad9 100644
--- a/src/java/org/apache/solr/search/function/FunctionQuery.java
+++ b/src/java/org/apache/solr/search/function/FunctionQuery.java
@@ -133,9 +133,10 @@ public class FunctionQuery extends Query {
     public float score() throws IOException {
       float score = qWeight * vals.floatVal(doc);
 
-      // current Lucene sorting priority queues can't handle NaN (score!=score is true for NaN) and -Infinity
-      if (score != score || score==Float.NEGATIVE_INFINITY) return -Float.MAX_VALUE;
-      return score;
+      // Current Lucene priority queues can't handle NaN and -Infinity, so
+      // map to -Float.MAX_VALUE. This conditional handles both -infinity
+      // and NaN since comparisons with NaN are always false.
+      return score>Float.NEGATIVE_INFINITY ? score : -Float.MAX_VALUE;
     }
 
     public boolean skipTo(int target) throws IOException {

