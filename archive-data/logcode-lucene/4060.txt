GitDiffStart: 1968413943cbd7fdd2c3fbef3f5f9592fee39069 | Mon Mar 9 09:15:57 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index ab4b82e..0314430 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -200,6 +200,9 @@ Bug Fixes
 * SOLR-6657:  DocumentDictionaryFactory requires weightField to be mandatory, but it shouldn't
   (Erick Erickson)
 
+* SOLR-7206: MiniSolrCloudCluster wasn't dealing with SSL mode correctly (Alan
+  Woodward)
+
 * SOLR-4464: DIH Processed documents counter resets to zero after first entity is processed.
   (Dave Cook, Shawn Heisey, Aaron Greenspan, Thomas Champagne via shalin)
 
diff --git a/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettyConfig.java b/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettyConfig.java
index 3cedd48..dce51e3 100644
--- a/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettyConfig.java
+++ b/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettyConfig.java
@@ -25,17 +25,17 @@ import java.util.TreeMap;
 
 public class JettyConfig {
 
-  final int port;
+  public final int port;
 
   public final String context;
 
-  final boolean stopAtShutdown;
+  public final boolean stopAtShutdown;
 
-  final Map<ServletHolder, String> extraServlets;
+  public final Map<ServletHolder, String> extraServlets;
 
-  final Map<Class<? extends Filter>, String> extraFilters;
+  public final Map<Class<? extends Filter>, String> extraFilters;
 
-  final SSLConfig sslConfig;
+  public final SSLConfig sslConfig;
 
   private JettyConfig(int port, String context, boolean stopAtShutdown, Map<ServletHolder, String> extraServlets,
                       Map<Class<? extends Filter>, String> extraFilters, SSLConfig sslConfig) {
diff --git a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java
index 9789a10..8493531 100644
--- a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java
+++ b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java
@@ -17,6 +17,7 @@ package org.apache.solr.cloud;
  * limitations under the License.
  */
 
+import com.google.common.base.Charsets;
 import org.apache.solr.client.solrj.SolrServerException;
 import org.apache.solr.client.solrj.embedded.JettyConfig;
 import org.apache.solr.client.solrj.embedded.JettySolrRunner;
@@ -25,6 +26,7 @@ import org.apache.solr.client.solrj.impl.CloudSolrClient;
 import org.apache.solr.client.solrj.request.QueryRequest;
 import org.apache.solr.common.cloud.SolrZkClient;
 import org.apache.solr.common.cloud.ZkConfigManager;
+import org.apache.solr.common.cloud.ZkStateReader;
 import org.apache.solr.common.params.CollectionParams.CollectionAction;
 import org.apache.solr.common.params.CoreAdminParams;
 import org.apache.solr.common.params.ModifiableSolrParams;
@@ -103,6 +105,9 @@ public class MiniSolrCloudCluster {
     try(SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(),
         AbstractZkTestCase.TIMEOUT, 45000, null)) {
       zkClient.makePath("/solr/solr.xml", solrXml, false, true);
+      if (jettyConfig.sslConfig != null && jettyConfig.sslConfig.isSSLMode()) {
+        zkClient.makePath("/solr" + ZkStateReader.CLUSTER_PROPS, "{'urlScheme':'https'}".getBytes(Charsets.UTF_8), true);
+      }
     }
 
     // tell solr to look in zookeeper for solr.xml

