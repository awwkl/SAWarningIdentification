GitDiffStart: b730cdaa49d28fef3f15a45dadc21fd2c1cd3c54 | Mon Mar 9 00:16:25 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 2288a5f..ea8a1b3 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -144,6 +144,9 @@ New Features
 * SOLR-6359: Allow number of logs and records kept by UpdateLog to be configured
   (Ramkumar Aiyengar)
 
+* SOLR-7189: Allow DIH to extract content from embedded documents via Tika.
+  (Tim Allison via shalin)
+
 Bug Fixes
 ----------------------
 
diff --git a/solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/TikaEntityProcessor.java b/solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/TikaEntityProcessor.java
index 575bf31..fc16113 100644
--- a/solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/TikaEntityProcessor.java
+++ b/solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/TikaEntityProcessor.java
@@ -63,6 +63,7 @@ public class TikaEntityProcessor extends EntityProcessorBase {
   private static final Logger LOG = LoggerFactory.getLogger(TikaEntityProcessor.class);
   private String format = "text";
   private boolean done = false;
+  private boolean extractEmbedded = false;
   private String parser;
   static final String AUTO_PARSER = "org.apache.tika.parser.AutoDetectParser";
   private String htmlMapper;
@@ -92,6 +93,10 @@ public class TikaEntityProcessor extends EntityProcessorBase {
       wrapAndThrow (SEVERE, e,"Unable to load Tika Config");
     }
 
+    String extractEmbeddedString = context.getResolvedEntityAttribute("extractEmbedded");
+    if ("true".equals(extractEmbeddedString)) {
+      extractEmbedded = true;
+    }
     format = context.getResolvedEntityAttribute("format");
     if(format == null)
       format = "text";
@@ -143,6 +148,9 @@ public class TikaEntityProcessor extends EntityProcessorBase {
         if ("identity".equals(htmlMapper)){
           context.set(HtmlMapper.class, IdentityHtmlMapper.INSTANCE);
         }
+        if (extractEmbedded) {
+          context.set(Parser.class, tikaParser);
+        }
         tikaParser.parse(is, contentHandler, metadata , context);
     } catch (Exception e) {
       if(SKIP.equals(onError)) {
diff --git a/solr/contrib/dataimporthandler-extras/src/test-files/dihextras/test_recursive_embedded.docx b/solr/contrib/dataimporthandler-extras/src/test-files/dihextras/test_recursive_embedded.docx
new file mode 100644
index 0000000..cd562cb
--- /dev/null
+++ b/solr/contrib/dataimporthandler-extras/src/test-files/dihextras/test_recursive_embedded.docx
@@ -0,0 +1,3 @@
+embed_0  
+
+
diff --git a/solr/contrib/dataimporthandler-extras/src/test/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java b/solr/contrib/dataimporthandler-extras/src/test/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java
index ded0113..3d4b1ab 100644
--- a/solr/contrib/dataimporthandler-extras/src/test/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java
+++ b/solr/contrib/dataimporthandler-extras/src/test/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java
@@ -18,18 +18,7 @@ package org.apache.solr.handler.dataimport;
 
 import org.junit.BeforeClass;
 import org.junit.Test;
-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
-import org.xml.sax.InputSource;
-
-import javax.xml.parsers.DocumentBuilder;
-import javax.xml.parsers.DocumentBuilderFactory;
-import javax.xml.transform.Transformer;
-import javax.xml.transform.TransformerFactory;
-import javax.xml.transform.dom.DOMSource;
-import javax.xml.transform.stream.StreamResult;
-import java.io.StringReader;
-import java.io.StringWriter;
+
 import java.util.Locale;
 
 /**Testcase for TikaEntityProcessor
@@ -85,6 +74,16 @@ public class TestTikaEntityProcessor extends AbstractDataImportHandlerTestCase {
       , "//str[@name='text'][contains(.,'class=\"classAttribute\"')]" //attributes are lower-cased
   };
 
+  private String[] testsEmbedded = {
+      "//*[@numFound='1']",
+      "//str[@name='text'][contains(.,'When in the Course')]"
+  };
+
+  private String[] testsIgnoreEmbedded = {
+      "//*[@numFound='1']",
+      "//str[@name='text'][not(contains(.,'When in the Course'))]"
+  };
+
   @BeforeClass
   public static void beforeClass() throws Exception {
     assumeFalse("This test fails on UNIX with Turkish default locale (https://issues.apache.org/jira/browse/SOLR-6387)",
@@ -136,4 +135,39 @@ public class TestTikaEntityProcessor extends AbstractDataImportHandlerTestCase {
             "</dataConfig>";
 
   }
+
+  @Test
+  public void testEmbeddedDocsLegacy() throws Exception {
+    //test legacy behavior: ignore embedded docs
+    runFullImport(conf);
+    assertQ(req("*:*"), testsIgnoreEmbedded);
+  }
+
+  @Test
+  public void testEmbeddedDocsTrue() throws Exception {
+    runFullImport(getConfigEmbedded(true));
+    assertQ(req("*:*"), testsEmbedded);
+  }
+
+  @Test
+  public void testEmbeddedDocsFalse() throws Exception {
+    runFullImport(getConfigEmbedded(false));
+    assertQ(req("*:*"), testsIgnoreEmbedded);
+  }
+
+  private String getConfigEmbedded(boolean extractEmbedded) {
+    return
+        "<dataConfig>" +
+            "  <dataSource type=\"BinFileDataSource\"/>" +
+            "  <document>" +
+            "    <entity name=\"Tika\" processor=\"TikaEntityProcessor\" url=\"" +
+                    getFile("dihextras/test_recursive_embedded.docx").getAbsolutePath() + "\" " +
+            "       extractEmbedded=\""+extractEmbedded+"\">" +
+            "      <field column=\"Author\" meta=\"true\" name=\"author\"/>" +
+            "      <field column=\"title\" meta=\"true\" name=\"title\"/>" +
+            "      <field column=\"text\"/>" +
+            "     </entity>" +
+            "  </document>" +
+            "</dataConfig>";
+  }
 }

