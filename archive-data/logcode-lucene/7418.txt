GitDiffStart: 0302eeb254479e762f01f4f3c206dfee22f825b6 | Tue Nov 26 07:02:17 2013 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index e735325..142b1c0 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -177,6 +177,9 @@ Other Changes
 * SOLR-5487: Replication factor error message doesn't match constraint.
   (Patrick Hunt via shalin)
 
+* SOLR-5499: Log a warning if /get is not registered when using SolrCloud.
+  (Daniel Collins via shalin)
+
 ==================  4.6.0 ==================
 
 Versions of Major Components
diff --git a/solr/core/src/java/org/apache/solr/core/SolrCore.java b/solr/core/src/java/org/apache/solr/core/SolrCore.java
index 3ebd68e..ddc1723 100644
--- a/solr/core/src/java/org/apache/solr/core/SolrCore.java
+++ b/solr/core/src/java/org/apache/solr/core/SolrCore.java
@@ -770,7 +770,7 @@ public final class SolrCore implements SolrInfoMBean {
       updateProcessorChains = loadUpdateProcessorChains();
       reqHandlers = new RequestHandlers(this);
       reqHandlers.initHandlersFromConfig(solrConfig);
-      
+
       // Handle things that should eventually go away
       initDeprecatedSupport();
       
@@ -854,13 +854,21 @@ public final class SolrCore implements SolrInfoMBean {
     
     CoreContainer cc = cd.getCoreContainer();
 
-    if (cc != null && cc.isZooKeeperAware() && Slice.CONSTRUCTION.equals(cd.getCloudDescriptor().getShardState())) {
-      // set update log to buffer before publishing the core
-      getUpdateHandler().getUpdateLog().bufferUpdates();
-      
-      cd.getCloudDescriptor().setShardState(null);
-      cd.getCloudDescriptor().setShardRange(null);
-      cd.getCloudDescriptor().setShardParent(null);
+    if (cc != null && cc.isZooKeeperAware()) {
+      SolrRequestHandler realtimeGetHandler = reqHandlers.get("/get");
+      if (realtimeGetHandler == null) {
+        log.warn("WARNING: RealTimeGetHandler is not registered at /get. " +
+            "SolrCloud will always use full index replication instead of the more efficient PeerSync method.");
+      }
+
+      if (Slice.CONSTRUCTION.equals(cd.getCloudDescriptor().getShardState())) {
+        // set update log to buffer before publishing the core
+        getUpdateHandler().getUpdateLog().bufferUpdates();
+
+        cd.getCloudDescriptor().setShardState(null);
+        cd.getCloudDescriptor().setShardRange(null);
+        cd.getCloudDescriptor().setShardParent(null);
+      }
     }
     // For debugging   
 //    numOpens.incrementAndGet();
diff --git a/solr/core/src/java/org/apache/solr/update/PeerSync.java b/solr/core/src/java/org/apache/solr/update/PeerSync.java
index 543042c..57f8e74 100644
--- a/solr/core/src/java/org/apache/solr/update/PeerSync.java
+++ b/solr/core/src/java/org/apache/solr/update/PeerSync.java
@@ -305,7 +305,8 @@ public class PeerSync  {
       }
       
       if (cantReachIsSuccess && sreq.purpose == 1 && srsp.getException() instanceof SolrException && ((SolrException) srsp.getException()).code() == 404) {
-        log.warn(msg() + " got a 404 from " + srsp.getShardAddress() + ", counting as success");
+        log.warn(msg() + " got a 404 from " + srsp.getShardAddress() + ", counting as success. " +
+            "Perhaps /get is not registered?");
         return true;
       }
       // TODO: at least log???

