GitDiffStart: 46c827e31a5534bb032d0803318d01309bf0195c | Sat Jun 25 14:49:28 2016 -0400
diff --git a/dev-tools/scripts/addVersion.py b/dev-tools/scripts/addVersion.py
index 92a49b3..262e099 100644
--- a/dev-tools/scripts/addVersion.py
+++ b/dev-tools/scripts/addVersion.py
@@ -173,13 +173,13 @@ def check_solr_version_tests():
   os.chdir(base_dir)
   print('ok')
 
-def read_config():
+def read_config(current_version):
   parser = argparse.ArgumentParser(description='Add a new version')
   parser.add_argument('version', type=Version.parse)
   c = parser.parse_args()
 
   c.branch_type = find_branch_type()
-  c.is_latest_version = c.version.on_or_after(Version.parse(find_current_version()))
+  c.is_latest_version = c.version.on_or_after(current_version)
 
   print ("branch_type is %s " % c.branch_type)
 
@@ -210,12 +210,17 @@ def get_solr_init_changes():
     ''' % parse_properties_file('lucene/ivy-versions.properties'))
   
 def main():
-  c = read_config() 
+  current_version = Version.parse(find_current_version())
+  c = read_config(current_version)
 
   print('\nAdding new version %s' % c.version)
   update_changes('lucene/CHANGES.txt', c.version)
   update_changes('solr/CHANGES.txt', c.version, get_solr_init_changes())
-  add_constant(c.version, not c.is_latest_version)
+
+  if current_version.is_back_compat_with(c.version):
+    add_constant(c.version, not c.is_latest_version)
+  else:
+    print('\nNot adding constant for version %s because it is no longer supported' % c.version)
 
   if c.is_latest_version:
     print('\nUpdating latest version')
@@ -227,7 +232,7 @@ def main():
     print('\nTODO: ')
     print('  - Move backcompat oldIndexes to unsupportedIndexes in TestBackwardsCompatibility')
     print('  - Update IndexFormatTooOldException throw cases')
-  else:
+  elif current_version.is_back_compat_with(c.version):
     print('\nTesting changes')
     check_lucene_version_tests()
     check_solr_version_tests()

