GitDiffStart: 074923dda7eeb3389959cc85eb7cb9fbc260574f | Sat Mar 1 11:44:49 2014 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index 9d61eee..c0adcb4 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -84,6 +84,9 @@ New Features
 * LUCENE-5482: Improve default TurkishAnalyzer by adding apostrophe
   handling suitable for Turkish.  (Ahmet Arslan via Robert Muir)
 
+* LUCENE-5479: FacetsConfig subclass can now customize the default
+  per-dim facets configuration.  (Rob Audenaerde via Mike McCandless)
+
 API Changes
 
 * LUCENE-5454: Add RandomAccessOrds, an optional extension of SortedSetDocValues
diff --git a/lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig.java b/lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig.java
index 6a97a3b..12351a1 100644
--- a/lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig.java
+++ b/lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig.java
@@ -98,11 +98,22 @@ public class FacetsConfig {
   public FacetsConfig() {
   }
 
+  /** Get the default configuration for new dimensions.  Useful when
+   *  the dimension is not known beforehand and may need different 
+   *  global default settings, like {@code multivalue =
+   *  true}.
+   *
+   *  @return The default configuration to be used for dimensions that 
+   *  are not yet set in the {@link FacetsConfig} */
+  protected DimConfig getDefaultDimConfig(){
+    return DEFAULT_DIM_CONFIG;
+  }
+  
   /** Get the current configuration for a dimension. */
   public synchronized DimConfig getDimConfig(String dimName) {
     DimConfig ft = fieldTypes.get(dimName);
     if (ft == null) {
-      ft = DEFAULT_DIM_CONFIG;
+      ft = getDefaultDimConfig();
     }
     return ft;
   }
diff --git a/lucene/facet/src/test/org/apache/lucene/facet/TestFacetsConfig.java b/lucene/facet/src/test/org/apache/lucene/facet/TestFacetsConfig.java
index c221681..7118237 100644
--- a/lucene/facet/src/test/org/apache/lucene/facet/TestFacetsConfig.java
+++ b/lucene/facet/src/test/org/apache/lucene/facet/TestFacetsConfig.java
@@ -84,5 +84,18 @@ public class TestFacetsConfig extends FacetTestCase {
     
     IOUtils.close(indexDir, taxoDir);
   }
-  
+
+  /** LUCENE-5479 */
+  public void testCustomDefault() {
+    FacetsConfig config = new FacetsConfig() {
+        @Override
+        protected DimConfig getDefaultDimConfig() {
+          DimConfig config = new DimConfig();
+          config.hierarchical = true;
+          return config;
+        }
+      };
+
+    assertTrue(config.getDimConfig("foobar").hierarchical);
+  }
 }

