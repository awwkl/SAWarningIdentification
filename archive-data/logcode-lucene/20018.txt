GitDiffStart: 73b462a8230e35233c2cbf7b99d8a66d1841e32a | Tue Jun 23 10:48:55 2009 +0000
diff --git a/src/java/org/apache/lucene/search/FieldValueHitQueue.java b/src/java/org/apache/lucene/search/FieldValueHitQueue.java
index 5d330d6..13a1911 100644
--- a/src/java/org/apache/lucene/search/FieldValueHitQueue.java
+++ b/src/java/org/apache/lucene/search/FieldValueHitQueue.java
@@ -173,6 +173,9 @@ public abstract class FieldValueHitQueue extends PriorityQueue {
   /**
    * Creates a hit queue sorted by the given list of fields.
    * 
+   * <p><b>NOTE</b>: The instances returned by this method
+   * pre-allocate a full array of length <code>numHits</code>.
+   * 
    * @param fields
    *          SortField array we are sorting by in priority order (highest
    *          priority first); cannot be <code>null</code> or empty
diff --git a/src/java/org/apache/lucene/search/HitQueue.java b/src/java/org/apache/lucene/search/HitQueue.java
index 24f3d63..3aa12dd 100644
--- a/src/java/org/apache/lucene/search/HitQueue.java
+++ b/src/java/org/apache/lucene/search/HitQueue.java
@@ -53,6 +53,9 @@ final class HitQueue extends PriorityQueue {
    * }
    * </pre>
    * 
+   * <p><b>NOTE</b>: This class pre-allocate a full array of
+   * length <code>size</code>.
+   * 
    * @param size
    *          the requested size of this queue.
    * @param prePopulate
diff --git a/src/java/org/apache/lucene/search/TopFieldCollector.java b/src/java/org/apache/lucene/search/TopFieldCollector.java
index 1ffe058..88d814f 100644
--- a/src/java/org/apache/lucene/search/TopFieldCollector.java
+++ b/src/java/org/apache/lucene/search/TopFieldCollector.java
@@ -810,7 +810,12 @@ public abstract class TopFieldCollector extends TopDocsCollector {
   }
 
   /**
-   * Creates a new {@link TopFieldCollector} from the given arguments.
+   * Creates a new {@link TopFieldCollector} from the given
+   * arguments.
+   *
+   * <p><b>NOTE</b>: The instances returned by this method
+   * pre-allocate a full array of length
+   * <code>numHits</code>.
    * 
    * @param sort
    *          the sort criteria (SortFields).
diff --git a/src/java/org/apache/lucene/search/TopScoreDocCollector.java b/src/java/org/apache/lucene/search/TopScoreDocCollector.java
index ec9a1f6..9b049f3 100644
--- a/src/java/org/apache/lucene/search/TopScoreDocCollector.java
+++ b/src/java/org/apache/lucene/search/TopScoreDocCollector.java
@@ -80,6 +80,11 @@ public abstract class TopScoreDocCollector extends TopDocsCollector {
    * Creates a new {@link TopScoreDocCollector} given the number of hits to
    * collect and whether documents are scored in order by the input
    * {@link Scorer} to {@link #setScorer(Scorer)}.
+   *
+   * <p><b>NOTE</b>: The instances returned by this method
+   * pre-allocate a full array of length
+   * <code>numHits</code>, and fill the array with sentinel
+   * objects.
    */
   public static TopScoreDocCollector create(int numHits, boolean docsScoredInOrder) {
     
diff --git a/src/java/org/apache/lucene/util/PriorityQueue.java b/src/java/org/apache/lucene/util/PriorityQueue.java
index e12e3ec..2adcb77 100644
--- a/src/java/org/apache/lucene/util/PriorityQueue.java
+++ b/src/java/org/apache/lucene/util/PriorityQueue.java
@@ -18,8 +18,13 @@ package org.apache.lucene.util;
  */
 
 /** A PriorityQueue maintains a partial ordering of its elements such that the
-  least element can always be found in constant time.  Put()'s and pop()'s
-  require log(size) time. */
+ * least element can always be found in constant time.  Put()'s and pop()'s
+ * require log(size) time.
+ *
+ * <p><b>NOTE</b>: This class pre-allocates a full array of
+ * length <code>maxSize+1</code>, in {@link #initialize}.
+  * 
+*/
 public abstract class PriorityQueue {
   private int size;
   private int maxSize;

