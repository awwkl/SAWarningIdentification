GitDiffStart: eff9c7c3cfc118325c28300e0ea1b918728f445f | Fri Aug 27 21:59:31 2004 +0000
diff --git a/src/test/org/apache/lucene/search/TestPhraseQuery.java b/src/test/org/apache/lucene/search/TestPhraseQuery.java
index fb98217..cbcc803 100644
--- a/src/test/org/apache/lucene/search/TestPhraseQuery.java
+++ b/src/test/org/apache/lucene/search/TestPhraseQuery.java
@@ -204,8 +204,8 @@ public class TestPhraseQuery extends TestCase {
     
     TermQuery termQuery = new TermQuery(new Term("contents","foobar"));
     BooleanQuery booleanQuery = new BooleanQuery();
-    booleanQuery.add(termQuery, true, false);
-    booleanQuery.add(phraseQuery, true, false);
+    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);
+    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);
     hits = searcher.search(booleanQuery);
     assertEquals(1, hits.length());
     
@@ -240,14 +240,14 @@ public class TestPhraseQuery extends TestCase {
     assertEquals(2, hits.length());
     
     booleanQuery = new BooleanQuery();
-    booleanQuery.add(termQuery, true, false);
-    booleanQuery.add(phraseQuery, true, false);
+    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);
+    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);
     hits = searcher.search(booleanQuery);
     assertEquals(2, hits.length());
     
     booleanQuery = new BooleanQuery();
-    booleanQuery.add(phraseQuery, true, false);
-    booleanQuery.add(termQuery, true, false);
+    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);
+    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);
     hits = searcher.search(booleanQuery);
     assertEquals(2, hits.length());
     
diff --git a/src/test/org/apache/lucene/search/TestRemoteSearchable.java b/src/test/org/apache/lucene/search/TestRemoteSearchable.java
index 8a1b8d1..390ef75 100644
--- a/src/test/org/apache/lucene/search/TestRemoteSearchable.java
+++ b/src/test/org/apache/lucene/search/TestRemoteSearchable.java
@@ -82,7 +82,7 @@ public class TestRemoteSearchable extends TestCase {
 
   public void testBooleanQuery() throws Exception {
     BooleanQuery query = new BooleanQuery();
-    query.add(new TermQuery(new Term("test", "test")), true, false);
+    query.add(new TermQuery(new Term("test", "test")), BooleanClause.Occur.MUST);
     search(query);
   }
 
diff --git a/src/test/org/apache/lucene/search/TestSimilarity.java b/src/test/org/apache/lucene/search/TestSimilarity.java
index c45f92c..4babb86 100644
--- a/src/test/org/apache/lucene/search/TestSimilarity.java
+++ b/src/test/org/apache/lucene/search/TestSimilarity.java
@@ -80,8 +80,8 @@ public class TestSimilarity extends TestCase {
        });
 
     BooleanQuery bq = new BooleanQuery();
-    bq.add(new TermQuery(a), false, false);
-    bq.add(new TermQuery(b), false, false);
+    bq.add(new TermQuery(a), BooleanClause.Occur.SHOULD);
+    bq.add(new TermQuery(b), BooleanClause.Occur.SHOULD);
     //System.out.println(bq.toString("field"));
     searcher.search
       (bq,
diff --git a/src/test/org/apache/lucene/search/TestWildcard.java b/src/test/org/apache/lucene/search/TestWildcard.java
index 499b8c0..9301861 100644
--- a/src/test/org/apache/lucene/search/TestWildcard.java
+++ b/src/test/org/apache/lucene/search/TestWildcard.java
@@ -64,11 +64,11 @@ public class TestWildcard
         Query query5 = new WildcardQuery(new Term("body", "m*tals"));
 
         BooleanQuery query6 = new BooleanQuery();
-        query6.add(query5, false, false);
+        query6.add(query5, BooleanClause.Occur.SHOULD);
 
         BooleanQuery query7 = new BooleanQuery();
-        query7.add(query3, false, false);
-        query7.add(query5, false, false);
+        query7.add(query3, BooleanClause.Occur.SHOULD);
+        query7.add(query5, BooleanClause.Occur.SHOULD);
 
 	// Queries do not automatically lower-case search terms:
         Query query8 = new WildcardQuery(new Term("body", "M*tal*"));

