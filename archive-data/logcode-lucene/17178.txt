GitDiffStart: 6d269ad8071252ed9f61e71a869246992a766f53 | Sat Oct 16 21:27:39 2010 +0000
diff --git a/lucene/src/java/org/apache/lucene/search/cache/DocTermsCreator.java b/lucene/src/java/org/apache/lucene/search/cache/DocTermsCreator.java
index 43c267d..c7eeb51 100644
--- a/lucene/src/java/org/apache/lucene/search/cache/DocTermsCreator.java
+++ b/lucene/src/java/org/apache/lucene/search/cache/DocTermsCreator.java
@@ -34,7 +34,7 @@ import org.apache.lucene.util.packed.GrowableWriter;
 import org.apache.lucene.util.packed.PackedInts;
 
 // TODO: this if DocTermsIndex was already created, we should share it...
-public class DocTermsCreator<T extends DocTerms> extends EntryCreatorWithOptions<T>
+public class DocTermsCreator extends EntryCreatorWithOptions<DocTerms>
 {
   public static final int FASTER_BUT_MORE_RAM = 2;
 
@@ -64,7 +64,7 @@ public class DocTermsCreator<T extends DocTerms> extends EntryCreatorWithOptions
   }
 
   @Override
-  public T create(IndexReader reader) throws IOException {
+  public DocTerms create(IndexReader reader) throws IOException {
 
     String field = StringHelper.intern(this.field); // TODO?? necessary?
     Terms terms = MultiFields.getTerms(reader, field);
@@ -134,13 +134,11 @@ public class DocTermsCreator<T extends DocTerms> extends EntryCreatorWithOptions
     }
 
     // maybe an int-only impl?
-    @SuppressWarnings("unchecked") final T t =
-      (T)new DocTermsImpl(bytes.freeze(true), docToOffset.getMutable());
-    return t;
+    return new DocTermsImpl(bytes.freeze(true), docToOffset.getMutable());
   }
 
   @Override
-  public T validate(T entry, IndexReader reader) throws IOException {
+  public DocTerms validate(DocTerms entry, IndexReader reader) throws IOException {
     // TODO? nothing? perhaps subsequent call with FASTER_BUT_MORE_RAM?
     return entry;
   }
diff --git a/lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.java b/lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.java
index 6e8aeb6..b2893f0 100644
--- a/lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.java
+++ b/lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.java
@@ -36,7 +36,7 @@ import org.apache.lucene.util.StringHelper;
 import org.apache.lucene.util.packed.GrowableWriter;
 import org.apache.lucene.util.packed.PackedInts;
 
-public class DocTermsIndexCreator<T extends DocTermsIndex> extends EntryCreatorWithOptions<T>
+public class DocTermsIndexCreator extends EntryCreatorWithOptions<DocTermsIndex>
 {
   public static final int FASTER_BUT_MORE_RAM = 2;
 
@@ -66,7 +66,7 @@ public class DocTermsIndexCreator<T extends DocTermsIndex> extends EntryCreatorW
   }
 
   @Override
-  public T create(IndexReader reader) throws IOException
+  public DocTermsIndex create(IndexReader reader) throws IOException
   {
     String field = StringHelper.intern(this.field); // TODO?? necessary?
     Terms terms = MultiFields.getTerms(reader, field);
@@ -166,13 +166,11 @@ public class DocTermsIndexCreator<T extends DocTermsIndex> extends EntryCreatorW
     }
 
     // maybe an int-only impl?
-    @SuppressWarnings("unchecked") final T t =
-      (T)new DocTermsIndexImpl(bytes.freeze(true), termOrdToBytesOffset.getMutable(), docToTermOrd.getMutable(), termOrd);
-    return t;
+    return new DocTermsIndexImpl(bytes.freeze(true), termOrdToBytesOffset.getMutable(), docToTermOrd.getMutable(), termOrd);
   }
 
   @Override
-  public T validate(T entry, IndexReader reader) throws IOException {
+  public DocTermsIndex validate(DocTermsIndex entry, IndexReader reader) throws IOException {
     // TODO? nothing? perhaps subsequent call with FASTER_BUT_MORE_RAM?
     return entry;
   }

