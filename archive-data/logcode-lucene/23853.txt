GitDiffStart: f606d78b190202ae08389f60d194f417cd4aa758 | Fri Mar 3 01:43:03 2006 +0000
diff --git a/src/apps/SolrTest/conf/schema.xml b/src/apps/SolrTest/conf/schema.xml
index 2f88f3b..5df0f62 100644
--- a/src/apps/SolrTest/conf/schema.xml
+++ b/src/apps/SolrTest/conf/schema.xml
@@ -2,7 +2,7 @@
 <!-- The Solr schema file. This file should be named "schema.xml" and
      should be located where the classloader for the Solr webapp can find it.
 
-     $Id: schema.xml,v 1.1 2005/06/09 03:01:13 yonik Exp $
+     $Id$
      $Source: /cvs/main/searching/solr-configs/test/WEB-INF/classes/schema.xml,v $
      $Name:  $
   -->
diff --git a/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java b/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java
index 14d0e3d..767b4e1 100644
--- a/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/BaseTokenFilterFactory.java
@@ -21,7 +21,7 @@ import java.util.Map;
 
 /**
  * @author yonik
- * @version $Id: BaseTokenFilterFactory.java,v 1.5 2005/12/06 04:16:16 yonik Exp $
+ * @version $Id$
  */
 public abstract class BaseTokenFilterFactory implements TokenFilterFactory {
   protected Map<String,String> args;
diff --git a/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java b/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java
index 191f116..0bcc892 100644
--- a/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/BaseTokenizerFactory.java
@@ -20,7 +20,7 @@ import java.util.Map;
 
 /**
  * @author yonik
- * @version $Id: BaseTokenizerFactory.java,v 1.3 2005/09/20 04:57:50 yonik Exp $
+ * @version $Id$
  */
 public abstract class BaseTokenizerFactory implements TokenizerFactory {
   protected Map<String,String> args;
diff --git a/src/java/org/apache/solr/analysis/HTMLStripReader.java b/src/java/org/apache/solr/analysis/HTMLStripReader.java
index d2f817e..9598131 100644
--- a/src/java/org/apache/solr/analysis/HTMLStripReader.java
+++ b/src/java/org/apache/solr/analysis/HTMLStripReader.java
@@ -28,7 +28,7 @@ import java.util.HashMap;
  *
  *
  * @author yonik
- * @version $Id: HTMLStripReader.java,v 1.2 2005/08/30 15:31:42 yonik Exp $
+ * @version $Id$
  */
 
 public class HTMLStripReader extends Reader {
diff --git a/src/java/org/apache/solr/analysis/LengthFilter.java b/src/java/org/apache/solr/analysis/LengthFilter.java
index 6d88a9d..6eaadd6 100644
--- a/src/java/org/apache/solr/analysis/LengthFilter.java
+++ b/src/java/org/apache/solr/analysis/LengthFilter.java
@@ -24,7 +24,7 @@ import java.io.IOException;
 
 /**
  * @author yonik
- * @version $Id: LengthFilter.java,v 1.2 2005/04/24 02:53:35 yonik Exp $
+ * @version $Id$
  */
 public final class LengthFilter extends TokenFilter {
   final int min,max;
diff --git a/src/java/org/apache/solr/analysis/SynonymFilter.java b/src/java/org/apache/solr/analysis/SynonymFilter.java
index 18340f5..bd9b76b 100644
--- a/src/java/org/apache/solr/analysis/SynonymFilter.java
+++ b/src/java/org/apache/solr/analysis/SynonymFilter.java
@@ -34,7 +34,7 @@ import java.util.LinkedList;
  * Generated synonyms will start at the same position as the first matched source token.
  *
  * @author yonik
- * @version $Id: SynonymFilter.java,v 1.3 2005/12/13 05:14:52 yonik Exp $
+ * @version $Id$
  */
 public class SynonymFilter extends TokenFilter {
 
diff --git a/src/java/org/apache/solr/analysis/SynonymMap.java b/src/java/org/apache/solr/analysis/SynonymMap.java
index f9d8c61..9a06bc9 100644
--- a/src/java/org/apache/solr/analysis/SynonymMap.java
+++ b/src/java/org/apache/solr/analysis/SynonymMap.java
@@ -23,7 +23,7 @@ import java.util.*;
 /** Mapping rules for use with {@link org.apache.solr.analysis.SynonymFilter}
  *
  * @author yonik
- * @version $Id: SynonymMap.java,v 1.2 2005/12/13 05:15:08 yonik Exp $
+ * @version $Id$
  */
 public class SynonymMap {
   Map submap; // recursive: Map<String, SynonymMap>
diff --git a/src/java/org/apache/solr/analysis/TokenFilterFactory.java b/src/java/org/apache/solr/analysis/TokenFilterFactory.java
index 6b9d6ba..f8cb0c1 100644
--- a/src/java/org/apache/solr/analysis/TokenFilterFactory.java
+++ b/src/java/org/apache/solr/analysis/TokenFilterFactory.java
@@ -24,7 +24,7 @@ import java.util.Map;
  * Factory to create a token filter that transforms one TokenStream to another.
  * 
  * @author yonik
- * @version $Id: TokenFilterFactory.java,v 1.3 2005/09/20 04:58:28 yonik Exp $
+ * @version $Id$
  */
 
 public interface TokenFilterFactory {
diff --git a/src/java/org/apache/solr/analysis/TokenizerChain.java b/src/java/org/apache/solr/analysis/TokenizerChain.java
index dbc53a3..30ccb9d 100644
--- a/src/java/org/apache/solr/analysis/TokenizerChain.java
+++ b/src/java/org/apache/solr/analysis/TokenizerChain.java
@@ -24,7 +24,7 @@ import java.io.Reader;
 
 /**
  * @author yonik
- * @version $Id: TokenizerChain.java,v 1.3 2005/08/26 05:21:08 yonik Exp $
+ * @version $Id$
  */
 
 //
diff --git a/src/java/org/apache/solr/analysis/TokenizerFactory.java b/src/java/org/apache/solr/analysis/TokenizerFactory.java
index 45069b1..c35ab07 100644
--- a/src/java/org/apache/solr/analysis/TokenizerFactory.java
+++ b/src/java/org/apache/solr/analysis/TokenizerFactory.java
@@ -27,7 +27,7 @@ import org.apache.lucene.analysis.*;
  * that breaks up a stream of characters into tokens.
  *
  * @author yonik
- * @version $Id: TokenizerFactory.java,v 1.10 2005/12/13 05:16:03 yonik Exp $
+ * @version $Id$
  */
 public interface TokenizerFactory {
   public void init(Map<String,String> args);
diff --git a/src/java/org/apache/solr/analysis/WordDelimiterFilter.java b/src/java/org/apache/solr/analysis/WordDelimiterFilter.java
index ea47c08..47ff9bd 100644
--- a/src/java/org/apache/solr/analysis/WordDelimiterFilter.java
+++ b/src/java/org/apache/solr/analysis/WordDelimiterFilter.java
@@ -58,7 +58,7 @@ import java.util.List;
  *  (such as WhitespaceTokenizer).
  *
  *  @author yonik
- *  @version $Id: WordDelimiterFilter.java,v 1.6 2005/09/20 03:54:05 yonik Exp $
+ *  @version $Id$
  */
 final class WordDelimiterFilter extends TokenFilter {
   private final byte[] charTypeTable;
diff --git a/src/java/org/apache/solr/core/SolrConfig.java b/src/java/org/apache/solr/core/SolrConfig.java
index 89ce8e9..604d4a2 100644
--- a/src/java/org/apache/solr/core/SolrConfig.java
+++ b/src/java/org/apache/solr/core/SolrConfig.java
@@ -21,7 +21,7 @@ import java.io.InputStream;
 
 /**
  * @author yonik
- * @version $Id: SolrConfig.java,v 1.3 2005/12/02 04:31:06 yonik Exp $
+ * @version $Id$
  */
 public class SolrConfig {
   public static Config config;
diff --git a/src/java/org/apache/solr/core/SolrCore.java b/src/java/org/apache/solr/core/SolrCore.java
index 3849e24..a25dd3a 100644
--- a/src/java/org/apache/solr/core/SolrCore.java
+++ b/src/java/org/apache/solr/core/SolrCore.java
@@ -52,11 +52,11 @@ import java.util.logging.Logger;
 
 /**
  * @author yonik
- * @version $Id: SolrCore.java,v 1.47 2006/01/10 05:04:44 yonik Exp $
+ * @version $Id$
  */
 
 public final class SolrCore {
-  public static final String cvsId="$Id: SolrCore.java,v 1.47 2006/01/10 05:04:44 yonik Exp $";
+  public static final String cvsId="$Id$";
   public static final String cvsSource="$Source: /cvs/main/searching/solr/solarcore/src/solr/SolrCore.java,v $";
   public static final String cvsTag="$Name:  $";
   public static final String version="1.0";  
diff --git a/src/java/org/apache/solr/core/SolrEventListener.java b/src/java/org/apache/solr/core/SolrEventListener.java
index a41721f..9649eef 100644
--- a/src/java/org/apache/solr/core/SolrEventListener.java
+++ b/src/java/org/apache/solr/core/SolrEventListener.java
@@ -23,7 +23,7 @@ import java.util.logging.Logger;
 
 /**
  * @author yonik
- * @version $Id: SolrEventListener.java,v 1.4 2005/05/25 04:26:47 yonik Exp $
+ * @version $Id$
  */
 public interface SolrEventListener {
   static final Logger log = Logger.getLogger(SolrCore.class.getName());
diff --git a/src/java/org/apache/solr/core/SolrException.java b/src/java/org/apache/solr/core/SolrException.java
index a493861..ccc6a92 100644
--- a/src/java/org/apache/solr/core/SolrException.java
+++ b/src/java/org/apache/solr/core/SolrException.java
@@ -22,7 +22,7 @@ import java.io.PrintWriter;
 
 /**
  * @author yonik
- * @version $Id: SolrException.java,v 1.6 2005/06/14 20:42:26 yonik Exp $
+ * @version $Id$
  */
 
 
diff --git a/src/java/org/apache/solr/core/SolrInfo.java b/src/java/org/apache/solr/core/SolrInfo.java
index ec640e8..9f8d9dd 100644
--- a/src/java/org/apache/solr/core/SolrInfo.java
+++ b/src/java/org/apache/solr/core/SolrInfo.java
@@ -21,7 +21,7 @@ import org.apache.solr.util.*;
 
 /**
  * @author ronp
- * @version $Id: SolrInfo.java,v 1.3 2005/05/02 19:04:59 ronp Exp $
+ * @version $Id$
  */
 
 // MBean pattern for holding various ui friendly strings and URLs
@@ -36,7 +36,7 @@ import org.apache.solr.util.*;
   // docs        - URL list: TWIKI, Faq, Design doc, something! :)
 
 abstract class SolrInfo implements SolrInfoMBean {
-  public static String _cvsId="$Id: SolrInfo.java,v 1.3 2005/05/02 19:04:59 ronp Exp $";
+  public static String _cvsId="$Id$";
   public static String _cvsSource="$Source: /cvs/main/searching/solr/solarcore/src/solr/SolrInfo.java,v $";
   public static String _cvsName="$Name:  $";
 
@@ -45,9 +45,9 @@ abstract class SolrInfo implements SolrInfoMBean {
   public String getVersion()       { return this.version;     }
   public String getDescription()   { return this.description; }
   public Category getCategory()    { return SolrInfoMBean.Category.QUERYHANDLER; }
-  public String getCvsId()         { return this.cvsId;       }
+  public String getSourceId()         { return this.cvsId;       }
   public String getCvsName()       { return this.cvsName;     }
-  public String getCvsSource()     { return this.cvsSource;   }
+  public String getSource()     { return this.cvsSource;   }
   public URL[] getDocs()           { return this.docs;        }
   public NamedList getStatistics() { return null;        }
 
diff --git a/src/java/org/apache/solr/core/SolrInfoMBean.java b/src/java/org/apache/solr/core/SolrInfoMBean.java
index ed8dba0..8c5f61e 100644
--- a/src/java/org/apache/solr/core/SolrInfoMBean.java
+++ b/src/java/org/apache/solr/core/SolrInfoMBean.java
@@ -21,7 +21,7 @@ import org.apache.solr.util.*;
 
 /**
  * @author ronp
- * @version $Id: SolrInfoMBean.java,v 1.3 2005/05/04 19:15:23 ronp Exp $
+ * @version $Id$
  */
 
 // MBean interface for getting various ui friendly strings and URLs
@@ -30,9 +30,8 @@ import org.apache.solr.util.*;
   // name        - simple common usage name, e.g. BasicQueryHandler
   // version     - simple common usage version, e.g. 2.0
   // description - simple one or two line description
-  // cvsId       - yes, really the CVS Id      (type 'man co')
-  // cvsName     - yes, really the CVS Name    (type 'man co')
-  // cvsSource   - yes, really the CVS Source  (type 'man co')
+  // SourceId    - CVS Id, SVN Id, etc
+  // Source      - CVS Source, SVN Source, etc
   // docs        - URL list: TWIKI, Faq, Design doc, something! :)
 
 public interface SolrInfoMBean {
@@ -43,9 +42,8 @@ public interface SolrInfoMBean {
   public String getVersion();
   public String getDescription();
   public Category getCategory();
-  public String getCvsId();
-  public String getCvsName();
-  public String getCvsSource();
+  public String getSourceId();
+  public String getSource();
   public URL[] getDocs();
   public NamedList getStatistics();
 
diff --git a/src/java/org/apache/solr/core/SolrInfoRegistry.java b/src/java/org/apache/solr/core/SolrInfoRegistry.java
index bd61bc7..a529fc6 100644
--- a/src/java/org/apache/solr/core/SolrInfoRegistry.java
+++ b/src/java/org/apache/solr/core/SolrInfoRegistry.java
@@ -22,13 +22,13 @@ import java.util.*;
 
 /**
  * @author ronp
- * @version $Id: SolrInfoRegistry.java,v 1.5 2005/05/14 03:34:39 yonik Exp $
+ * @version $Id$
  */
 
 // A Registry to hold a collection of SolrInfo objects
 
 public class SolrInfoRegistry {
-  public static final String cvsId="$Id: SolrInfoRegistry.java,v 1.5 2005/05/14 03:34:39 yonik Exp $";
+  public static final String cvsId="$Id$";
   public static final String cvsSource="$Source: /cvs/main/searching/solr/solarcore/src/solr/SolrInfoRegistry.java,v $";
   public static final String cvsName="$Name:  $";
 
diff --git a/src/java/org/apache/solr/request/LocalSolrQueryRequest.java b/src/java/org/apache/solr/request/LocalSolrQueryRequest.java
index 4de38a5..000448b 100644
--- a/src/java/org/apache/solr/request/LocalSolrQueryRequest.java
+++ b/src/java/org/apache/solr/request/LocalSolrQueryRequest.java
@@ -28,7 +28,7 @@ import java.util.HashMap;
 
 /**
  * @author yonik
- * @version $Id: LocalSolrQueryRequest.java,v 1.6 2005/06/02 22:03:38 yonik Exp $
+ * @version $Id$
  */
 public class LocalSolrQueryRequest extends SolrQueryRequestBase {
   private final NamedList args;
diff --git a/src/java/org/apache/solr/request/QueryResponseWriter.java b/src/java/org/apache/solr/request/QueryResponseWriter.java
index 09022b8..5f9a636 100644
--- a/src/java/org/apache/solr/request/QueryResponseWriter.java
+++ b/src/java/org/apache/solr/request/QueryResponseWriter.java
@@ -21,7 +21,7 @@ import java.io.IOException;
 
 /**
  * @author yonik
- * @version $Id: QueryResponseWriter.java,v 1.2 2005/04/24 02:53:35 yonik Exp $
+ * @version $Id$
  */
 public interface QueryResponseWriter {
   public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException;
diff --git a/src/java/org/apache/solr/request/SolrQueryRequest.java b/src/java/org/apache/solr/request/SolrQueryRequest.java
index eb3531f..f8c5fd3 100644
--- a/src/java/org/apache/solr/request/SolrQueryRequest.java
+++ b/src/java/org/apache/solr/request/SolrQueryRequest.java
@@ -22,7 +22,7 @@ import org.apache.solr.core.SolrCore;
 
 /**
  * @author yonik
- * @version $Id: SolrQueryRequest.java,v 1.3 2005/05/10 19:40:12 yonik Exp $
+ * @version $Id$
  */
 public interface SolrQueryRequest {
   public String getParam(String name);
diff --git a/src/java/org/apache/solr/request/SolrQueryRequestBase.java b/src/java/org/apache/solr/request/SolrQueryRequestBase.java
index b5a940d..ac73797 100644
--- a/src/java/org/apache/solr/request/SolrQueryRequestBase.java
+++ b/src/java/org/apache/solr/request/SolrQueryRequestBase.java
@@ -24,7 +24,7 @@ import org.apache.solr.core.SolrException;
 
 /**
 * @author yonik
-* @version $Id: SolrQueryRequestBase.java,v 1.6 2005/06/12 02:36:09 yonik Exp $
+* @version $Id$
 */
 public abstract class SolrQueryRequestBase implements SolrQueryRequest {
  // some standard query argument names
diff --git a/src/java/org/apache/solr/request/SolrQueryResponse.java b/src/java/org/apache/solr/request/SolrQueryResponse.java
index 3b86f6a..f25c070 100644
--- a/src/java/org/apache/solr/request/SolrQueryResponse.java
+++ b/src/java/org/apache/solr/request/SolrQueryResponse.java
@@ -24,7 +24,7 @@ import java.util.*;
  * <code>SolrQueryResponse</code> is used by a query handler to return
  * the response to a query.
  * @author yonik
- * @version $Id: SolrQueryResponse.java,v 1.5 2005/08/10 04:27:04 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 
diff --git a/src/java/org/apache/solr/request/SolrRequestHandler.java b/src/java/org/apache/solr/request/SolrRequestHandler.java
index fcbd831..cc0ceda 100644
--- a/src/java/org/apache/solr/request/SolrRequestHandler.java
+++ b/src/java/org/apache/solr/request/SolrRequestHandler.java
@@ -36,7 +36,7 @@ import org.apache.solr.core.SolrInfoMBean;
  * via the default constructor and is reused for all relevant queries.
  *
  * @author yonik
- * @version $Id: SolrRequestHandler.java,v 1.7 2005/12/02 04:31:06 yonik Exp $
+ * @version $Id$
  */
 public interface SolrRequestHandler extends SolrInfoMBean {
 
diff --git a/src/java/org/apache/solr/request/StandardRequestHandler.java b/src/java/org/apache/solr/request/StandardRequestHandler.java
index 2244223..8b17966 100644
--- a/src/java/org/apache/solr/request/StandardRequestHandler.java
+++ b/src/java/org/apache/solr/request/StandardRequestHandler.java
@@ -37,7 +37,7 @@ import org.apache.solr.core.SolrException;
 
 /**
  * @author yonik
- * @version $Id: StandardRequestHandler.java,v 1.17 2005/12/02 04:31:06 yonik Exp $
+ * @version $Id$
  */
 public class StandardRequestHandler implements SolrRequestHandler, SolrInfoMBean {
 
@@ -199,16 +199,12 @@ public class StandardRequestHandler implements SolrRequestHandler, SolrInfoMBean
     return Category.QUERYHANDLER;
   }
 
-  public String getCvsId() {
-    return "$Id: StandardRequestHandler.java,v 1.17 2005/12/02 04:31:06 yonik Exp $";
+  public String getSourceId() {
+    return "$Id$";
   }
 
-  public String getCvsName() {
-    return "$Name:  $";
-  }
-
-  public String getCvsSource() {
-    return "$Source: /cvs/main/searching/solr/solarcore/src/solr/StandardRequestHandler.java,v $";
+  public String getSource() {
+    return "$URL$";
   }
 
   public URL[] getDocs() {
diff --git a/src/java/org/apache/solr/request/XMLResponseWriter.java b/src/java/org/apache/solr/request/XMLResponseWriter.java
index a41a25f..046b7de 100644
--- a/src/java/org/apache/solr/request/XMLResponseWriter.java
+++ b/src/java/org/apache/solr/request/XMLResponseWriter.java
@@ -21,7 +21,7 @@ import java.io.IOException;
 
 /**
  * @author yonik
- * @version $Id: XMLResponseWriter.java,v 1.6 2005/04/24 02:53:35 yonik Exp $
+ * @version $Id$
  */
 
 public class XMLResponseWriter implements QueryResponseWriter {
diff --git a/src/java/org/apache/solr/request/XMLWriter.java b/src/java/org/apache/solr/request/XMLWriter.java
index b5ad05a..565e249 100644
--- a/src/java/org/apache/solr/request/XMLWriter.java
+++ b/src/java/org/apache/solr/request/XMLWriter.java
@@ -33,7 +33,7 @@ import org.apache.lucene.document.Field;
 import org.apache.lucene.document.Document;
 /**
  * @author yonik
- * @version $Id: XMLWriter.java,v 1.16 2005/12/02 04:31:06 yonik Exp $
+ * @version $Id$
  */
 final public class XMLWriter {
   //
diff --git a/src/java/org/apache/solr/schema/FieldType.java b/src/java/org/apache/solr/schema/FieldType.java
index 7d457ac..7e9d3b2 100644
--- a/src/java/org/apache/solr/schema/FieldType.java
+++ b/src/java/org/apache/solr/schema/FieldType.java
@@ -38,7 +38,7 @@ import java.io.IOException;
  * Base class for all field types used by an index schema.
  *
  * @author yonik
- * @version $Id: FieldType.java,v 1.14 2006/01/06 04:23:15 yonik Exp $
+ * @version $Id$
  */
 public abstract class FieldType extends FieldProperties {
   public static final Logger log = Logger.getLogger(FieldType.class.getName());
diff --git a/src/java/org/apache/solr/schema/IndexSchema.java b/src/java/org/apache/solr/schema/IndexSchema.java
index 17db3de..6af22a9 100644
--- a/src/java/org/apache/solr/schema/IndexSchema.java
+++ b/src/java/org/apache/solr/schema/IndexSchema.java
@@ -46,7 +46,7 @@ import java.util.logging.Logger;
  * and the types of those fields.
  *
  * @author yonik
- * @version $Id: IndexSchema.java,v 1.21 2005/12/20 16:05:46 yonik Exp $
+ * @version $Id$
  */
 
 public final class IndexSchema {
diff --git a/src/java/org/apache/solr/schema/SchemaField.java b/src/java/org/apache/solr/schema/SchemaField.java
index cee51ec..44a0726 100644
--- a/src/java/org/apache/solr/schema/SchemaField.java
+++ b/src/java/org/apache/solr/schema/SchemaField.java
@@ -25,7 +25,7 @@ import java.io.IOException;
 
 /**
  * @author yonik
- * @version $Id: SchemaField.java,v 1.8 2005/11/28 06:03:19 yonik Exp $
+ * @version $Id$
  */
 
 
diff --git a/src/java/org/apache/solr/search/BitDocSet.java b/src/java/org/apache/solr/search/BitDocSet.java
index b3ad13f..ebc0174 100644
--- a/src/java/org/apache/solr/search/BitDocSet.java
+++ b/src/java/org/apache/solr/search/BitDocSet.java
@@ -23,7 +23,7 @@ import java.util.BitSet;
  * using a BitSet.  A set bit represents inclusion in the set for that document.
  *
  * @author yonik
- * @version $Id: BitDocSet.java,v 1.4 2005/10/27 04:14:49 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 public class BitDocSet extends DocSetBase {
diff --git a/src/java/org/apache/solr/search/CacheConfig.java b/src/java/org/apache/solr/search/CacheConfig.java
index b0e52c1..9b19a99 100644
--- a/src/java/org/apache/solr/search/CacheConfig.java
+++ b/src/java/org/apache/solr/search/CacheConfig.java
@@ -34,7 +34,7 @@ import javax.xml.xpath.XPathConstants;
  * factory to create caches.
  *
  * @author yonik
- * @version $Id: CacheConfig.java,v 1.2 2005/09/07 20:37:57 yonik Exp $
+ * @version $Id$
  */
 class CacheConfig {
   private String nodeName;
diff --git a/src/java/org/apache/solr/search/CacheRegenerator.java b/src/java/org/apache/solr/search/CacheRegenerator.java
index e78e40c..4081704 100644
--- a/src/java/org/apache/solr/search/CacheRegenerator.java
+++ b/src/java/org/apache/solr/search/CacheRegenerator.java
@@ -26,7 +26,7 @@ import java.io.IOException;
  * used for all cache autowarmings).
  *
  * @author yonik
- * @version $Id: CacheRegenerator.java,v 1.2 2005/09/07 20:37:57 yonik Exp $
+ * @version $Id$
  */
 public interface CacheRegenerator {
   /**
diff --git a/src/java/org/apache/solr/search/ConstantScorePrefixQuery.java b/src/java/org/apache/solr/search/ConstantScorePrefixQuery.java
index edff093..4731cf7 100644
--- a/src/java/org/apache/solr/search/ConstantScorePrefixQuery.java
+++ b/src/java/org/apache/solr/search/ConstantScorePrefixQuery.java
@@ -25,7 +25,7 @@ import java.io.IOException;
 
 /**
  * @author yonik
- * @version $Id: ConstantScorePrefixQuery.java,v 1.2 2005/09/15 14:32:41 yonik Exp $
+ * @version $Id$
  */
 public class ConstantScorePrefixQuery extends Query {
   private final Term prefix;
diff --git a/src/java/org/apache/solr/search/DocList.java b/src/java/org/apache/solr/search/DocList.java
index 6471ed9..821aaf8 100644
--- a/src/java/org/apache/solr/search/DocList.java
+++ b/src/java/org/apache/solr/search/DocList.java
@@ -23,7 +23,7 @@ package org.apache.solr.search;
  * document ids starting at <code>offset()</code>.
  *
  * @author yonik
- * @version $Id: DocList.java,v 1.6 2005/11/11 21:57:56 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 public interface DocList extends DocSet {
diff --git a/src/java/org/apache/solr/search/DocListAndSet.java b/src/java/org/apache/solr/search/DocListAndSet.java
index c00dd65..4fb620e 100644
--- a/src/java/org/apache/solr/search/DocListAndSet.java
+++ b/src/java/org/apache/solr/search/DocListAndSet.java
@@ -28,7 +28,7 @@ package org.apache.solr.search;
  * <p>
  *
  * @author yonik
- * @version $Id: DocListAndSet.java,v 1.3 2005/04/08 05:38:05 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 public final class DocListAndSet {
diff --git a/src/java/org/apache/solr/search/DocSet.java b/src/java/org/apache/solr/search/DocSet.java
index f9e93df..b2a9b4f 100644
--- a/src/java/org/apache/solr/search/DocSet.java
+++ b/src/java/org/apache/solr/search/DocSet.java
@@ -26,7 +26,7 @@ import java.util.BitSet;
  * WARNING: Any DocSet returned from SolrIndexSearcher should <b>not</b> be modified as it may have been retrieved from
  * a cache and could be shared.
  * @author yonik
- * @version $Id: DocSet.java,v 1.6 2005/05/13 21:20:15 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 public interface DocSet /* extends Collection<Integer> */ {
diff --git a/src/java/org/apache/solr/search/DocSlice.java b/src/java/org/apache/solr/search/DocSlice.java
index 764f6cc..e465711 100644
--- a/src/java/org/apache/solr/search/DocSlice.java
+++ b/src/java/org/apache/solr/search/DocSlice.java
@@ -20,7 +20,7 @@ package org.apache.solr.search;
  * <code>DocSlice</code> implements DocList as an array of docids and optional scores.
  *
  * @author yonik
- * @version $Id: DocSlice.java,v 1.9 2005/11/11 21:57:56 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 public class DocSlice extends DocSetBase implements DocList {
diff --git a/src/java/org/apache/solr/search/HashDocSet.java b/src/java/org/apache/solr/search/HashDocSet.java
index de92c18..30d09a1 100644
--- a/src/java/org/apache/solr/search/HashDocSet.java
+++ b/src/java/org/apache/solr/search/HashDocSet.java
@@ -26,7 +26,7 @@ import org.apache.solr.core.SolrConfig;
  * set intersections.
  *
  * @author yonik
- * @version $Id: HashDocSet.java,v 1.7 2005/11/22 17:16:19 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 public final class HashDocSet extends DocSetBase {
diff --git a/src/java/org/apache/solr/search/MissingStringLastComparatorSource.java b/src/java/org/apache/solr/search/MissingStringLastComparatorSource.java
index 34ae672..7a1bbcf 100644
--- a/src/java/org/apache/solr/search/MissingStringLastComparatorSource.java
+++ b/src/java/org/apache/solr/search/MissingStringLastComparatorSource.java
@@ -29,7 +29,7 @@ import java.io.IOException;
  *
  * @author Chris Hostetter
  * @author yonik
- * @version $Id: MissingStringLastComparatorSource.java,v 1.1 2005/06/02 04:43:06 yonik Exp $
+ * @version $Id$
  *
  */
 
diff --git a/src/java/org/apache/solr/search/PrefixFilter.java b/src/java/org/apache/solr/search/PrefixFilter.java
index bc94f05..1f5aba8 100644
--- a/src/java/org/apache/solr/search/PrefixFilter.java
+++ b/src/java/org/apache/solr/search/PrefixFilter.java
@@ -11,7 +11,7 @@ import java.io.IOException;
 
 /**
  * @author yonik
- * @version $Id: PrefixFilter.java,v 1.1 2005/06/10 05:47:32 yonik Exp $
+ * @version $Id$
  */
 public class PrefixFilter extends Filter {
   protected final Term prefix;
diff --git a/src/java/org/apache/solr/search/QueryParsing.java b/src/java/org/apache/solr/search/QueryParsing.java
index 330071f..b0ef4ec 100644
--- a/src/java/org/apache/solr/search/QueryParsing.java
+++ b/src/java/org/apache/solr/search/QueryParsing.java
@@ -34,7 +34,7 @@ import java.io.IOException;
 
 /**
  * @author yonik
- * @version $Id: QueryParsing.java,v 1.10 2005/12/20 21:34:44 yonik Exp $
+ * @version $Id$
  */
 public class QueryParsing {
 
diff --git a/src/java/org/apache/solr/search/SolrCache.java b/src/java/org/apache/solr/search/SolrCache.java
index d457348..9dc00d4 100644
--- a/src/java/org/apache/solr/search/SolrCache.java
+++ b/src/java/org/apache/solr/search/SolrCache.java
@@ -26,7 +26,7 @@ import java.io.IOException;
 /**
  *
  * @author yonik
- * @version $Id: SolrCache.java,v 1.6 2005/06/21 05:26:43 yonik Exp $
+ * @version $Id$
  */
 public interface SolrCache extends SolrInfoMBean {
   public final static Logger log = Logger.getLogger(SolrCache.class.getName());
diff --git a/src/java/org/apache/solr/search/SolrIndexSearcher.java b/src/java/org/apache/solr/search/SolrIndexSearcher.java
index 5e643d1..9dd400f 100644
--- a/src/java/org/apache/solr/search/SolrIndexSearcher.java
+++ b/src/java/org/apache/solr/search/SolrIndexSearcher.java
@@ -42,7 +42,7 @@ import java.util.logging.Logger;
  * over the lucene IndexSearcher.
 
  * @author yonik
- * @version $Id: SolrIndexSearcher.java,v 1.49 2005/12/20 16:05:46 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 
@@ -1062,16 +1062,12 @@ public class SolrIndexSearcher extends Searcher implements SolrInfoMBean {
     return Category.CORE;
   }
 
-  public String getCvsId() {
-    return "$Id: SolrIndexSearcher.java,v 1.49 2005/12/20 16:05:46 yonik Exp $";
+  public String getSourceId() {
+    return "$Id$";
   }
 
-  public String getCvsName() {
-    return "$Name:  $";
-  }
-
-  public String getCvsSource() {
-    return "$Source: /cvs/main/searching/solr/solarcore/src/solr/search/SolrIndexSearcher.java,v $";
+  public String getSource() {
+    return "$URL$";
   }
 
   public URL[] getDocs() {
diff --git a/src/java/org/apache/solr/search/Sorting.java b/src/java/org/apache/solr/search/Sorting.java
index e6571f4..b4252f5 100644
--- a/src/java/org/apache/solr/search/Sorting.java
+++ b/src/java/org/apache/solr/search/Sorting.java
@@ -22,7 +22,7 @@ import org.apache.lucene.search.*;
  * Extra lucene sorting utilities & convenience methods
  *
  * @author yonik
- * @version $Id: Sorting.java,v 1.1 2005/06/02 04:43:06 yonik Exp $
+ * @version $Id$
  *
  */
 
diff --git a/src/java/org/apache/solr/search/function/DocValues.java b/src/java/org/apache/solr/search/function/DocValues.java
index 739b813..c32cc8f 100644
--- a/src/java/org/apache/solr/search/function/DocValues.java
+++ b/src/java/org/apache/solr/search/function/DocValues.java
@@ -25,7 +25,7 @@ import org.apache.lucene.search.Explanation;
  * Often used by {@link FunctionFactory} implementations.
  *
  * @author yonik
- * @version $Id: DocValues.java,v 1.1 2005/11/22 05:23:20 yonik Exp $
+ * @version $Id$
  */
 
 // DocValues is distinct from ValueSource because
diff --git a/src/java/org/apache/solr/search/function/FieldCacheSource.java b/src/java/org/apache/solr/search/function/FieldCacheSource.java
index 371d6ab..4f66a36 100644
--- a/src/java/org/apache/solr/search/function/FieldCacheSource.java
+++ b/src/java/org/apache/solr/search/function/FieldCacheSource.java
@@ -23,7 +23,7 @@ import org.apache.lucene.search.FieldCache;
  * a single field from the {@link org.apache.lucene.search.FieldCache}.
  *
  * @author yonik
- * @version $Id: FieldCacheSource.java,v 1.1 2005/11/22 05:23:20 yonik Exp $
+ * @version $Id$
  */
 public abstract class FieldCacheSource extends ValueSource {
   protected String field;
diff --git a/src/java/org/apache/solr/search/function/FloatFieldSource.java b/src/java/org/apache/solr/search/function/FloatFieldSource.java
index 9043e19..93e9545 100644
--- a/src/java/org/apache/solr/search/function/FloatFieldSource.java
+++ b/src/java/org/apache/solr/search/function/FloatFieldSource.java
@@ -28,7 +28,7 @@ import java.io.IOException;
  * and makes those values available as other numeric types, casting as needed.
  *
  * @author yonik
- * @version $Id: FloatFieldSource.java,v 1.2 2005/11/22 05:23:20 yonik Exp $
+ * @version $Id$
  */
 
 public class FloatFieldSource extends FieldCacheSource {
diff --git a/src/java/org/apache/solr/search/function/FunctionQuery.java b/src/java/org/apache/solr/search/function/FunctionQuery.java
index d319986..8d76a51 100644
--- a/src/java/org/apache/solr/search/function/FunctionQuery.java
+++ b/src/java/org/apache/solr/search/function/FunctionQuery.java
@@ -26,7 +26,7 @@ import java.io.IOException;
  * often some function of the value of a field.
  *
  * @author yonik
- * @version $Id: FunctionQuery.java,v 1.4 2005/11/23 04:22:20 yonik Exp $
+ * @version $Id$
  */
 public class FunctionQuery extends Query {
   ValueSource func;
diff --git a/src/java/org/apache/solr/search/function/IntFieldSource.java b/src/java/org/apache/solr/search/function/IntFieldSource.java
index 476717e..41bb5c0 100644
--- a/src/java/org/apache/solr/search/function/IntFieldSource.java
+++ b/src/java/org/apache/solr/search/function/IntFieldSource.java
@@ -27,7 +27,7 @@ import java.io.IOException;
  * using <code>getInts()</code>
  * and makes those values available as other numeric types, casting as needed. *
  * @author yonik
- * @version $Id: IntFieldSource.java,v 1.2 2005/11/22 05:23:20 yonik Exp $
+ * @version $Id$
  */
 
 public class IntFieldSource extends FieldCacheSource {
diff --git a/src/java/org/apache/solr/search/function/LinearFloatFunction.java b/src/java/org/apache/solr/search/function/LinearFloatFunction.java
index 1b022a1..2905191 100644
--- a/src/java/org/apache/solr/search/function/LinearFloatFunction.java
+++ b/src/java/org/apache/solr/search/function/LinearFloatFunction.java
@@ -27,7 +27,7 @@ import java.io.IOException;
  * Normally Used as an argument to a {@link FunctionQuery}
  *
  * @author yonik
- * @version $Id: LinearFloatFunction.java,v 1.2 2005/11/22 05:23:21 yonik Exp $
+ * @version $Id$
  */
 public class LinearFloatFunction extends ValueSource {
   protected final ValueSource source;
diff --git a/src/java/org/apache/solr/search/function/MaxFloatFunction.java b/src/java/org/apache/solr/search/function/MaxFloatFunction.java
index d8a21c9..1425d7b 100644
--- a/src/java/org/apache/solr/search/function/MaxFloatFunction.java
+++ b/src/java/org/apache/solr/search/function/MaxFloatFunction.java
@@ -28,7 +28,7 @@ import java.io.IOException;
  * Normally Used as an argument to a {@link FunctionQuery}
  *
  * @author hossman
- * @version $Id: $
+ * @version $Id$
  */
 public class MaxFloatFunction extends ValueSource {
   protected final ValueSource source;
diff --git a/src/java/org/apache/solr/search/function/OrdFieldSource.java b/src/java/org/apache/solr/search/function/OrdFieldSource.java
index 3d88420..47e4d7b 100644
--- a/src/java/org/apache/solr/search/function/OrdFieldSource.java
+++ b/src/java/org/apache/solr/search/function/OrdFieldSource.java
@@ -36,7 +36,7 @@ import java.io.IOException;
  * WARNING: ord() depends on the position in an index and can thus change when other documents are inserted or deleted,
  *  or if a MultiSearcher is used.
  * @author yonik
- * @version $Id: OrdFieldSource.java,v 1.2 2005/11/22 05:23:21 yonik Exp $
+ * @version $Id$
  */
 
 public class OrdFieldSource extends ValueSource {
diff --git a/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java b/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java
index 68ceb7c..1f8239d 100644
--- a/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java
+++ b/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java
@@ -34,7 +34,7 @@ import java.io.IOException;
  *
  *
  * @author yonik
- * @version $Id: ReciprocalFloatFunction.java,v 1.2 2005/11/22 05:23:21 yonik Exp $
+ * @version $Id$
  */
 public class ReciprocalFloatFunction extends ValueSource {
   protected final ValueSource source;
diff --git a/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java b/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java
index aa19c3d..5ca16d2 100644
--- a/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java
+++ b/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java
@@ -37,7 +37,7 @@ import java.io.IOException;
  *  WARNING: ord() depends on the position in an index and can thus change when other documents are inserted or deleted,
  *  or if a MultiSearcher is used.
  * @author yonik
- * @version $Id: ReverseOrdFieldSource.java,v 1.2 2005/11/22 05:23:21 yonik Exp $
+ * @version $Id$
  */
 
 public class ReverseOrdFieldSource extends ValueSource {
diff --git a/src/java/org/apache/solr/search/function/ValueSource.java b/src/java/org/apache/solr/search/function/ValueSource.java
index 65fc3cb..d67fa39 100644
--- a/src/java/org/apache/solr/search/function/ValueSource.java
+++ b/src/java/org/apache/solr/search/function/ValueSource.java
@@ -28,7 +28,7 @@ import java.io.Serializable;
  * Often used when creating a {@link FunctionQuery}.
  *
  * @author yonik
- * @version $Id: ValueSource.java,v 1.2 2005/11/30 19:31:01 yonik Exp $
+ * @version $Id$
  */
 public abstract class ValueSource implements Serializable {
 
diff --git a/src/java/org/apache/solr/tst/OldRequestHandler.java b/src/java/org/apache/solr/tst/OldRequestHandler.java
index 8f20de0..eaf1612 100644
--- a/src/java/org/apache/solr/tst/OldRequestHandler.java
+++ b/src/java/org/apache/solr/tst/OldRequestHandler.java
@@ -35,7 +35,7 @@ import org.apache.solr.request.SolrQueryRequest;
 
 /**
  * @author yonik
- * @version $Id: OldRequestHandler.java,v 1.7 2005/12/02 04:31:05 yonik Exp $
+ * @version $Id$
  */
 
 
@@ -122,15 +122,15 @@ public class OldRequestHandler implements SolrRequestHandler {
     return Category.QUERYHANDLER;
   }
 
-  public String getCvsId() {
-    return "$Id: OldRequestHandler.java,v 1.7 2005/12/02 04:31:05 yonik Exp $";
+  public String getSourceId() {
+    return "$Id$";
   }
 
   public String getCvsName() {
     return "$Name:  $";
   }
 
-  public String getCvsSource() {
+  public String getSource() {
     return "$Source: /cvs/main/searching/solr/solarcore/src/solr/tst/OldRequestHandler.java,v $";
   }
 
diff --git a/src/java/org/apache/solr/tst/TestRequestHandler.java b/src/java/org/apache/solr/tst/TestRequestHandler.java
index 6fa87ec..eac8b58 100644
--- a/src/java/org/apache/solr/tst/TestRequestHandler.java
+++ b/src/java/org/apache/solr/tst/TestRequestHandler.java
@@ -38,7 +38,7 @@ import org.apache.solr.request.SolrQueryResponse;
 
 /**
  * @author yonik
- * @version $Id: TestRequestHandler.java,v 1.19 2005/12/02 04:31:05 yonik Exp $
+ * @version $Id$
  */
 
 public class TestRequestHandler implements SolrRequestHandler {
@@ -271,15 +271,15 @@ public class TestRequestHandler implements SolrRequestHandler {
     return Category.QUERYHANDLER;
   }
 
-  public String getCvsId() {
-    return "$Id: TestRequestHandler.java,v 1.19 2005/12/02 04:31:05 yonik Exp $";
+  public String getSourceId() {
+    return "$Id$";
   }
 
   public String getCvsName() {
     return "$Name:  $";
   }
 
-  public String getCvsSource() {
+  public String getSource() {
     return "$Source: /cvs/main/searching/solr/solarcore/src/solr/tst/TestRequestHandler.java,v $";
   }
 
diff --git a/src/java/org/apache/solr/update/DirectUpdateHandler.java b/src/java/org/apache/solr/update/DirectUpdateHandler.java
index 234f013..b5b04a1 100644
--- a/src/java/org/apache/solr/update/DirectUpdateHandler.java
+++ b/src/java/org/apache/solr/update/DirectUpdateHandler.java
@@ -46,7 +46,7 @@ import org.apache.solr.core.SolrException;
  * For this reason, not all combinations to/from pending and committed are supported.
  *
  * @author yonik
- * @version $Id: DirectUpdateHandler.java,v 1.13 2005/06/17 20:44:42 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 
@@ -354,15 +354,15 @@ public class DirectUpdateHandler extends UpdateHandler {
     return Category.CORE;
   }
 
-  public String getCvsId() {
-    return "$Id: DirectUpdateHandler.java,v 1.13 2005/06/17 20:44:42 yonik Exp $";
+  public String getSourceId() {
+    return "$Id$";
   }
 
   public String getCvsName() {
     return "$Name:  $";
   }
 
-  public String getCvsSource() {
+  public String getSource() {
     return "$Source: /cvs/main/searching/solr/solarcore/src/solr/DirectUpdateHandler.java,v $";
   }
 
diff --git a/src/java/org/apache/solr/update/DirectUpdateHandler2.java b/src/java/org/apache/solr/update/DirectUpdateHandler2.java
index 398b729..c39c017 100644
--- a/src/java/org/apache/solr/update/DirectUpdateHandler2.java
+++ b/src/java/org/apache/solr/update/DirectUpdateHandler2.java
@@ -110,7 +110,7 @@ import org.apache.solr.core.SolrException;
 
  *
  * @author yonik
- * @version $Id: DirectUpdateHandler2.java,v 1.12 2005/06/17 20:44:42 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 
@@ -527,16 +527,12 @@ public class DirectUpdateHandler2 extends UpdateHandler {
     return Category.UPDATEHANDLER;
   }
 
-  public String getCvsId() {
-    return "$Id: DirectUpdateHandler2.java,v 1.12 2005/06/17 20:44:42 yonik Exp $";
+  public String getSourceId() {
+    return "$Id$";
   }
 
-  public String getCvsName() {
-    return "$Name:  $";
-  }
-
-  public String getCvsSource() {
-    return "$Source: /cvs/main/searching/solr/solarcore/src/solr/DirectUpdateHandler2.java,v $";
+  public String getSource() {
+    return "$URL$";
   }
 
   public URL[] getDocs() {
diff --git a/src/java/org/apache/solr/update/DocumentBuilder.java b/src/java/org/apache/solr/update/DocumentBuilder.java
index df2e409..e1983c4 100644
--- a/src/java/org/apache/solr/update/DocumentBuilder.java
+++ b/src/java/org/apache/solr/update/DocumentBuilder.java
@@ -26,7 +26,7 @@ import java.util.HashMap;
 
 /**
  * @author yonik
- * @version $Id: DocumentBuilder.java,v 1.7 2005/12/02 04:31:06 yonik Exp $
+ * @version $Id$
  */
 
 
diff --git a/src/java/org/apache/solr/update/SolrIndexWriter.java b/src/java/org/apache/solr/update/SolrIndexWriter.java
index 9e77f1e..2b472af 100644
--- a/src/java/org/apache/solr/update/SolrIndexWriter.java
+++ b/src/java/org/apache/solr/update/SolrIndexWriter.java
@@ -26,7 +26,7 @@ import java.io.IOException;
  * An IndexWriter that is configured via Solr config mechanisms.
  *
 * @author yonik
-* @version $Id: SolrIndexWriter.java,v 1.9 2006/01/09 03:51:44 yonik Exp $
+* @version $Id$
 * @since solr 0.9
 */
 
diff --git a/src/java/org/apache/solr/update/UpdateCommand.java b/src/java/org/apache/solr/update/UpdateCommand.java
index 56b0ef1..e151d0e 100644
--- a/src/java/org/apache/solr/update/UpdateCommand.java
+++ b/src/java/org/apache/solr/update/UpdateCommand.java
@@ -22,7 +22,7 @@ import org.apache.lucene.document.Document;
 /** An index update command encapsulated in an object (Command pattern)
  *
  * @author yonik
- * @version $Id: UpdateCommand.java,v 1.4 2005/05/25 04:26:47 yonik Exp $
+ * @version $Id$
  */
   public class UpdateCommand {
     protected String commandName;
diff --git a/src/java/org/apache/solr/update/UpdateHandler.java b/src/java/org/apache/solr/update/UpdateHandler.java
index d7a64bc..8ed6cc4 100644
--- a/src/java/org/apache/solr/update/UpdateHandler.java
+++ b/src/java/org/apache/solr/update/UpdateHandler.java
@@ -41,7 +41,7 @@ import javax.xml.xpath.XPathConstants;
  * (adds, deletes, commits, optimizes, etc).
  *
  * @author yonik
- * @version $Id: UpdateHandler.java,v 1.15 2005/06/21 20:24:25 yonik Exp $
+ * @version $Id$
  * @since solr 0.9
  */
 
diff --git a/src/java/org/apache/solr/util/DOMUtil.java b/src/java/org/apache/solr/util/DOMUtil.java
index ec44b24..db3d6e3 100644
--- a/src/java/org/apache/solr/util/DOMUtil.java
+++ b/src/java/org/apache/solr/util/DOMUtil.java
@@ -27,7 +27,7 @@ import java.util.ArrayList;
 
 /**
  * @author yonik
- * @version $Id: DOMUtil.java,v 1.3 2005/12/01 16:50:11 yonik Exp $
+ * @version $Id$
  */
 public class DOMUtil {
 
diff --git a/src/java/org/apache/solr/util/RefCounted.java b/src/java/org/apache/solr/util/RefCounted.java
index 8831730..2ec47f2 100644
--- a/src/java/org/apache/solr/util/RefCounted.java
+++ b/src/java/org/apache/solr/util/RefCounted.java
@@ -20,7 +20,7 @@ import java.util.concurrent.atomic.AtomicInteger;
 
 /**
  * @author yonik
- * @version $Id: RefCounted.java,v 1.2 2005/09/07 20:37:57 yonik Exp $
+ * @version $Id$
  */
 
 public abstract class RefCounted<Type> {
diff --git a/src/test/org/apache/solr/analysis/TestSynonymFilter.java b/src/test/org/apache/solr/analysis/TestSynonymFilter.java
index 0dde20f..4bd445e 100644
--- a/src/test/org/apache/solr/analysis/TestSynonymFilter.java
+++ b/src/test/org/apache/solr/analysis/TestSynonymFilter.java
@@ -28,7 +28,7 @@ import java.util.List;
 
 /**
  * @author yonik
- * @version $Id: TestSynonymFilter.java,v 1.2 2005/12/12 18:07:23 yonik Exp $
+ * @version $Id$
  */
 public class TestSynonymFilter extends TestCase {
 
diff --git a/src/webapp/resources/admin/analysis.jsp b/src/webapp/resources/admin/analysis.jsp
index 181f095..0d19f80 100644
--- a/src/webapp/resources/admin/analysis.jsp
+++ b/src/webapp/resources/admin/analysis.jsp
@@ -13,7 +13,7 @@
 <%@ page import="java.io.StringReader"%>
 <%@ page import="java.util.*"%>
 
-<!-- $Id: analysis.jsp,v 1.2 2005/09/20 18:23:30 yonik Exp $ -->
+<!-- $Id$ -->
 <!-- $Source: /cvs/main/searching/org.apache.solrolarServer/resources/admin/analysis.jsp,v $ -->
 <!-- $Name:  $ -->
 
diff --git a/src/webapp/resources/admin/index.jsp b/src/webapp/resources/admin/index.jsp
index 1cd53e9..5c6d18f 100644
--- a/src/webapp/resources/admin/index.jsp
+++ b/src/webapp/resources/admin/index.jsp
@@ -1,5 +1,5 @@
 
-<!-- $Id: index.jsp,v 1.26 2005/09/20 18:23:30 yonik Exp $ -->
+<!-- $Id$ -->
 <!-- $Source: /cvs/main/searching/SolrServer/resources/admin/index.jsp,v $ -->
 <!-- $Name:  $ -->
 
diff --git a/src/webapp/resources/admin/registry.jsp b/src/webapp/resources/admin/registry.jsp
index f02aa99..87efbe1 100644
--- a/src/webapp/resources/admin/registry.jsp
+++ b/src/webapp/resources/admin/registry.jsp
@@ -32,9 +32,8 @@ for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) {
     String name   = (m.getName()!=null ? m.getName() : na);
     String vers   = (m.getVersion()!=null ? m.getVersion() : na);
     String desc   = (m.getDescription()!=null ? m.getDescription() : na);
-    String cvsId  = (m.getCvsId()!=null ? m.getCvsId() : na);
-    String cvsSrc = (m.getCvsSource()!=null ? m.getCvsSource() : na);
-    String cvsTag = (m.getCvsName()!=null ? m.getCvsName() : na);
+    String srcId  = (m.getSourceId()!=null ? m.getSourceId() : na);
+    String src = (m.getSource()!=null ? m.getSource() : na);
     // print
 %>
       <entry>
@@ -50,15 +49,13 @@ for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) {
         <description>
           <%= desc %>
         </description>
-        <cvsid>
-          <%= cvsId %>
-        </cvsid>
-        <cvssrc>
-          <%= cvsSrc %>
-        </cvssrc>
-        <cvstag>
-          <%= cvsTag %>
-        </cvstag>
+        <sourceid>
+          <%= srcId %>
+        </sourceid>
+        <source>
+          <%= src %>
+        </source>
+
 <%
     URL[] urls = m.getDocs();
     if ((urls != null) && (urls.length != 0)) {

