GitDiffStart: da44adc8207af412ea306d92ef739c0e0aad898c | Fri Jun 5 10:36:43 2009 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index d93aaa5..417010e 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -232,6 +232,9 @@ New Features
 
 58. SOLR-1204: Enhance SpellingQueryConverter to handle UTF-8 instead of ASCII only (Michael Ludwig via shalin)
 
+59. SOLR-1189: Support providing username and password for basic HTTP authentication in Java replication
+    (Matthew Gregg, shalin)
+
 Optimizations
 ----------------------
  1. SOLR-374: Use IndexReader.reopen to save resources by re-using parts of the
diff --git a/src/java/org/apache/solr/handler/SnapPuller.java b/src/java/org/apache/solr/handler/SnapPuller.java
index 75482eb..1f95bea 100644
--- a/src/java/org/apache/solr/handler/SnapPuller.java
+++ b/src/java/org/apache/solr/handler/SnapPuller.java
@@ -17,6 +17,7 @@
 package org.apache.solr.handler;
 
 import org.apache.commons.httpclient.*;
+import org.apache.commons.httpclient.auth.AuthScope;
 import org.apache.commons.httpclient.methods.PostMethod;
 import org.apache.commons.io.IOUtils;
 import org.apache.lucene.index.IndexCommit;
@@ -103,6 +104,8 @@ public class SnapPuller {
   private static HttpClient client;
   // HttpClient for this instance if connectionTimeout or readTimeout has been specified
   private final HttpClient myHttpClient;
+  private static final String HTTP_BASIC_AUTH_USER = "httpBasicAuthUser";
+  private static final String HTTP_BASIC_AUTH_PASSWORD = "httpBasicAuthPassword";
 
   private static synchronized HttpClient createHttpClient(String connTimeout, String readTimeout) {
     if (connTimeout == null && readTimeout == null && client != null)  return client;
@@ -132,7 +135,13 @@ public class SnapPuller {
     useExternal = EXTERNAL.equals(compress);
     String connTimeout = (String) initArgs.get(HTTP_CONN_TIMEOUT);
     String readTimeout = (String) initArgs.get(HTTP_READ_TIMEOUT);
+    String httpBasicAuthUser = (String) initArgs.get(HTTP_BASIC_AUTH_USER);
+    String httpBasicAuthPassword = (String) initArgs.get(HTTP_BASIC_AUTH_PASSWORD);
     myHttpClient = createHttpClient(connTimeout, readTimeout);
+    if (httpBasicAuthUser != null && httpBasicAuthPassword != null) {
+      myHttpClient.getState().setCredentials(AuthScope.ANY,
+              new UsernamePasswordCredentials(httpBasicAuthUser, httpBasicAuthPassword));
+    }
     if (pollInterval != null && pollInterval > 0) {
       startExecutorService();
     } else {

