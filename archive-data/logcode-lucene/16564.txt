GitDiffStart: 886004667a59c6dc186d8b096112ade6e95dc5c9 | Wed Jan 19 00:55:57 2011 +0000
diff --git a/solr/src/java/org/apache/solr/response/PHPSerializedResponseWriter.java b/solr/src/java/org/apache/solr/response/PHPSerializedResponseWriter.java
index 286a9b1..60d84f7 100755
--- a/solr/src/java/org/apache/solr/response/PHPSerializedResponseWriter.java
+++ b/solr/src/java/org/apache/solr/response/PHPSerializedResponseWriter.java
@@ -106,7 +106,8 @@ class PHPSerializedWriter extends JSONWriter {
   @Override
   public void writeDoc(String name, Collection<Fieldable> fields, Set<String> returnFields, Map pseudoFields) throws IOException {
     ArrayList<Fieldable> single = new ArrayList<Fieldable>();
-    HashMap<String, MultiValueField> multi = new HashMap<String, MultiValueField>();
+    LinkedHashMap<String, MultiValueField> multi 
+      = new LinkedHashMap<String, MultiValueField>();
 
     for (Fieldable ff : fields) {
       String fname = ff.name();
@@ -203,8 +204,8 @@ class PHPSerializedWriter extends JSONWriter {
   
   @Override
   public void writeSolrDocument(String name, SolrDocument doc, Set<String> returnFields, Map pseudoFields) throws IOException {
-    HashMap <String,Object> single = new HashMap<String, Object>();
-    HashMap <String,Object> multi = new HashMap<String, Object>();
+    LinkedHashMap <String,Object> single = new LinkedHashMap<String, Object>();
+    LinkedHashMap <String,Object> multi = new LinkedHashMap<String, Object>();
     int pseudoSize = pseudoFields != null ? pseudoFields.size() : 0;
 
     for (String fname : doc.getFieldNames()) {
diff --git a/solr/src/test/org/apache/solr/response/TestPHPSerializedResponseWriter.java b/solr/src/test/org/apache/solr/response/TestPHPSerializedResponseWriter.java
index 80cb3f6..a0755c3 100644
--- a/solr/src/test/org/apache/solr/response/TestPHPSerializedResponseWriter.java
+++ b/solr/src/test/org/apache/solr/response/TestPHPSerializedResponseWriter.java
@@ -54,7 +54,8 @@ public class TestPHPSerializedResponseWriter extends SolrTestCaseJ4 {
     rsp.add("data2", 42);
     rsp.add("data3", true);
     w.write(buf, req, rsp);
-    assertEquals(buf.toString(), "a:3:{s:5:\"data1\";s:5:\"hello\";s:5:\"data2\";i:42;s:5:\"data3\";b:1;}");
+    assertEquals("a:3:{s:5:\"data1\";s:5:\"hello\";s:5:\"data2\";i:42;s:5:\"data3\";b:1;}", 
+                 buf.toString());
     req.close();
   }
 
@@ -94,7 +95,8 @@ public class TestPHPSerializedResponseWriter extends SolrTestCaseJ4 {
     rsp.add("response", sdl); 
     
     w.write(buf, req, rsp);
-    assertEquals(buf.toString(), "a:1:{s:8:\"response\";a:3:{s:8:\"numFound\";i:0;s:5:\"start\";i:0;s:4:\"docs\";a:2:{i:0;a:6:{s:2:\"id\";s:1:\"1\";s:5:\"data1\";s:5:\"hello\";s:5:\"data4\";a:2:{s:7:\"data4.2\";s:7:\"hashmap\";s:7:\"data4.1\";s:5:\"hello\";}s:5:\"data5\";a:3:{i:0;s:7:\"data5.1\";i:1;s:7:\"data5.2\";i:2;s:7:\"data5.3\";}s:5:\"data2\";i:42;s:5:\"data3\";b:1;}i:1;a:1:{s:2:\"id\";s:1:\"2\";}}}}");
+    assertEquals("a:1:{s:8:\"response\";a:3:{s:8:\"numFound\";i:0;s:5:\"start\";i:0;s:4:\"docs\";a:2:{i:0;a:6:{s:2:\"id\";s:1:\"1\";s:5:\"data1\";s:5:\"hello\";s:5:\"data2\";i:42;s:5:\"data3\";b:1;s:5:\"data4\";a:2:{s:7:\"data4.2\";s:7:\"hashmap\";s:7:\"data4.1\";s:5:\"hello\";}s:5:\"data5\";a:3:{i:0;s:7:\"data5.1\";i:1;s:7:\"data5.2\";i:2;s:7:\"data5.3\";}}i:1;a:1:{s:2:\"id\";s:1:\"2\";}}}}", 
+                 buf.toString());
     req.close();
   }
 

