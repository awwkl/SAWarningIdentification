GitDiffStart: f8dc3bbd7dddb9e2cab0e6c70d961f4c564b76f5 | Fri Feb 20 19:37:25 2009 +0000
diff --git a/src/java/org/apache/lucene/index/MultiSegmentReader.java b/src/java/org/apache/lucene/index/MultiSegmentReader.java
index 92febb0..a957910 100644
--- a/src/java/org/apache/lucene/index/MultiSegmentReader.java
+++ b/src/java/org/apache/lucene/index/MultiSegmentReader.java
@@ -106,6 +106,10 @@ class MultiSegmentReader extends DirectoryIndexReader implements Cloneable {
       try {
         SegmentReader newReader;
         if (newReaders[i] == null || infos.info(i).getUseCompoundFile() != newReaders[i].getSegmentInfo().getUseCompoundFile()) {
+
+          // We should never see a totally new segment during cloning
+          assert !doClone;
+
           // this is a new reader; in case we hit an exception we can close it safely
           newReader = SegmentReader.get(readOnly, infos.info(i));
         } else {
diff --git a/src/java/org/apache/lucene/index/SegmentReader.java b/src/java/org/apache/lucene/index/SegmentReader.java
index d37db83..552b9a2 100644
--- a/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/src/java/org/apache/lucene/index/SegmentReader.java
@@ -671,6 +671,10 @@ class SegmentReader extends DirectoryIndexReader {
       return this;
     }    
 
+    // When cloning, the incoming SegmentInfos should not
+    // have any changes in it:
+    assert !doClone || (normsUpToDate && deletionsUpToDate);
+
     // clone reader
     SegmentReader clone;
     try {

