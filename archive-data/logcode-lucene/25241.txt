GitDiffStart: 84d2f6994cccaf6cc28dfe978880af5aca84fb1f | Wed Feb 18 18:28:31 2004 +0000
diff --git a/src/java/org/apache/lucene/search/BooleanScorer.java b/src/java/org/apache/lucene/search/BooleanScorer.java
index d822780..fb1f033 100644
--- a/src/java/org/apache/lucene/search/BooleanScorer.java
+++ b/src/java/org/apache/lucene/search/BooleanScorer.java
@@ -130,7 +130,7 @@ final class BooleanScorer extends Scorer {
   public int doc() { return current.doc; }
 
   public boolean next() throws IOException {
-    boolean more = false;
+    boolean more;
     do {
       while (bucketTable.first != null) {         // more queued
         current = bucketTable.first;
@@ -144,6 +144,7 @@ final class BooleanScorer extends Scorer {
       }
 
       // refill the queue
+      more = false;
       end += BucketTable.SIZE;
       for (SubScorer sub = scorers; sub != null; sub = sub.next) {
         Scorer scorer = sub.scorer;
@@ -152,10 +153,11 @@ final class BooleanScorer extends Scorer {
           sub.done = !scorer.next();
         }
         if (!sub.done) {
-          more  = true;
+          more = true;
         }
       }
     } while (bucketTable.first != null | more);
+
     return false;
   }
 
@@ -247,4 +249,16 @@ final class BooleanScorer extends Scorer {
     throw new UnsupportedOperationException();
   }
 
+  public String toString() {
+    StringBuffer buffer = new StringBuffer();
+    buffer.append("boolean(");
+    for (SubScorer sub = scorers; sub != null; sub = sub.next) {
+      buffer.append(sub.scorer.toString());
+      buffer.append(" ");
+    }
+    buffer.append(")");
+    return buffer.toString();
+  }
+
+
 }
diff --git a/src/java/org/apache/lucene/search/PhraseQuery.java b/src/java/org/apache/lucene/search/PhraseQuery.java
index fa0180f..963138b 100644
--- a/src/java/org/apache/lucene/search/PhraseQuery.java
+++ b/src/java/org/apache/lucene/search/PhraseQuery.java
@@ -117,6 +117,8 @@ public class PhraseQuery extends Query {
       this.searcher = searcher;
     }
 
+    public String toString() { return "weight(" + PhraseQuery.this + ")"; }
+
     public Query getQuery() { return PhraseQuery.this; }
     public float getValue() { return value; }
 
diff --git a/src/java/org/apache/lucene/search/PhraseScorer.java b/src/java/org/apache/lucene/search/PhraseScorer.java
index 82b152d..e755f1a 100644
--- a/src/java/org/apache/lucene/search/PhraseScorer.java
+++ b/src/java/org/apache/lucene/search/PhraseScorer.java
@@ -183,4 +183,6 @@ abstract class PhraseScorer extends Scorer {
     return tfExplanation;
   }
 
+  public String toString() { return "scorer(" + weight + ")"; }
+
 }
diff --git a/src/java/org/apache/lucene/search/TermQuery.java b/src/java/org/apache/lucene/search/TermQuery.java
index 9625d91..635dba2 100644
--- a/src/java/org/apache/lucene/search/TermQuery.java
+++ b/src/java/org/apache/lucene/search/TermQuery.java
@@ -76,6 +76,8 @@ public class TermQuery extends Query {
       this.searcher = searcher;
     }
 
+    public String toString() { return "weight(" + TermQuery.this + ")"; }
+
     public Query getQuery() { return TermQuery.this; }
     public float getValue() { return value; }
 
diff --git a/src/java/org/apache/lucene/search/TermScorer.java b/src/java/org/apache/lucene/search/TermScorer.java
index 8a32b4b..3260b02 100644
--- a/src/java/org/apache/lucene/search/TermScorer.java
+++ b/src/java/org/apache/lucene/search/TermScorer.java
@@ -157,4 +157,7 @@ final class TermScorer extends Scorer {
     
     return tfExplanation;
   }
+
+  public String toString() { return "scorer(" + weight + ")"; }
+
 }

