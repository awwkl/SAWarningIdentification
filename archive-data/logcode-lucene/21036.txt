GitDiffStart: ca6e3f100fab3a54d62722a24c38c9fa6fdbbe6d | Thu Oct 23 06:16:45 2008 +0000
diff --git a/contrib/dataimporthandler/CHANGES.txt b/contrib/dataimporthandler/CHANGES.txt
index 1f8c022..54949df 100644
--- a/contrib/dataimporthandler/CHANGES.txt
+++ b/contrib/dataimporthandler/CHANGES.txt
@@ -34,6 +34,9 @@ Bug Fixes
 1. SOLR-800:  Deep copy collections to avoid ConcurrentModificationException in XPathEntityprocessor while streaming
               (Kyle Morrison, Noble Paul via shalin)
 
+2. SOLR-823:  Request parameter variables ${dataimporter.request.xxx} are not resolved
+              (Mck SembWever, Noble Paul, shalin)
+
 Documentation
 ----------------------
 
diff --git a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
index 75fa4ab..8595d1a 100644
--- a/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
+++ b/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.java
@@ -85,7 +85,7 @@ public class DocBuilder {
       indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT
               .format(context.getLastIndexTime()));
     indexerNamespace.put(INDEX_START_TIME, context.getIndexStartTime());
-    indexerNamespace.put("request", requestParameters);
+    indexerNamespace.put("request", requestParameters.requestParams);
     indexerNamespace.put("defaults", defaultVariables);
     indexerNamespace.put("functions", EvaluatorBag.getFunctionsNamespace(resolver,
             dataImporter.getConfig().evaluators));
diff --git a/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2.java b/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2.java
index b84b4d7..4793024 100644
--- a/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2.java
+++ b/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2.java
@@ -20,6 +20,7 @@ import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.Assert;
+import org.apache.solr.request.LocalSolrQueryRequest;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -69,6 +70,21 @@ public class TestDocBuilder2 extends AbstractDataImportHandlerTest {
 
   @Test
   @SuppressWarnings("unchecked")
+  public void testRequestParamsAsVariable() throws Exception {
+    List rows = new ArrayList();
+    rows.add(createMap("id", "101", "desc", "ApacheSolr"));
+    MockDataSource.setIterator("select * from books where category='search'", rows.iterator());
+
+    LocalSolrQueryRequest request = lrf.makeRequest("command", "full-import",
+            "debug", "on", "clean", "true", "commit", "true",
+            "category", "search",
+            "dataConfig", requestParamAsVariable);
+    h.query("/dataimport", request);
+    assertQ(req("desc:ApacheSolr"), "//*[@numFound='1']");
+  }
+
+  @Test
+  @SuppressWarnings("unchecked")
   public void testContext() throws Exception {
     List rows = new ArrayList();
     rows.add(createMap("id", "1", "desc", "one"));
@@ -85,7 +101,17 @@ public class TestDocBuilder2 extends AbstractDataImportHandlerTest {
   }
 
   public static class MockDataSource2 extends MockDataSource  {
-    
+
   }
 
+  private final String requestParamAsVariable = "<dataConfig>\n" +
+          "    <dataSource type=\"MockDataSource\" />\n" +
+          "    <document>\n" +
+          "        <entity name=\"books\" query=\"select * from books where category='${dataimporter.request.category}'\">\n" +
+          "            <field column=\"id\" />\n" +
+          "            <field column=\"desc\" />\n" +
+          "        </entity>\n" +
+          "    </document>\n" +
+          "</dataConfig>";
+
 }

