GitDiffStart: 26b6e88533ea86dc9f21bf9ecc5721107892f80c | Thu Mar 21 18:33:20 2013 +0000
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer.java
index bcfb0fb..f555cd5 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer.java
@@ -65,12 +65,12 @@ public final class PatternTokenizer extends Tokenizer {
   private final Matcher matcher;
 
   /** creates a new PatternTokenizer returning tokens from group (-1 for split functionality) */
-  public PatternTokenizer(Reader input, Pattern pattern, int group) throws IOException {
+  public PatternTokenizer(Reader input, Pattern pattern, int group) {
     this(AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY, input, pattern, group);
   }
 
   /** creates a new PatternTokenizer returning tokens from group (-1 for split functionality) */
-  public PatternTokenizer(AttributeFactory factory, Reader input, Pattern pattern, int group) throws IOException {
+  public PatternTokenizer(AttributeFactory factory, Reader input, Pattern pattern, int group) {
     super(factory, input);
     this.pattern = pattern;
     this.group = group;
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizerFactory.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizerFactory.java
index 8a8d179..299feaa 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizerFactory.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizerFactory.java
@@ -91,10 +91,6 @@ public class PatternTokenizerFactory extends TokenizerFactory
    */
   @Override
   public PatternTokenizer create(final AttributeFactory factory, final Reader in) {
-    try {
-      return new PatternTokenizer(factory, in, pattern, group);
-    } catch( IOException ex ) {
-      throw new RuntimeException("IOException thrown creating PatternTokenizer instance", ex);
-    }
+    return new PatternTokenizer(factory, in, pattern, group);
   }
 }
diff --git a/lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternTokenizer.java b/lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternTokenizer.java
index c7028e7..8cad46a 100644
--- a/lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternTokenizer.java
+++ b/lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternTokenizer.java
@@ -129,13 +129,8 @@ public class TestPatternTokenizer extends BaseTokenStreamTestCase
     Analyzer a = new Analyzer() {
       @Override
       protected TokenStreamComponents createComponents(String fieldName, Reader reader) {
-        Tokenizer tokenizer = null;
-        try {
-          tokenizer = new PatternTokenizer(reader, Pattern.compile("a"), -1);
-        } catch (IOException e) {
-          throw new RuntimeException(e);
-        }
-        return new TokenStreamComponents(tokenizer, tokenizer);
+        Tokenizer tokenizer = new PatternTokenizer(reader, Pattern.compile("a"), -1);
+        return new TokenStreamComponents(tokenizer);
       }    
     };
     checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);
@@ -143,13 +138,8 @@ public class TestPatternTokenizer extends BaseTokenStreamTestCase
     Analyzer b = new Analyzer() {
       @Override
       protected TokenStreamComponents createComponents(String fieldName, Reader reader) {
-        Tokenizer tokenizer = null;
-        try {
-          tokenizer = new PatternTokenizer(reader, Pattern.compile("a"), 0);
-        } catch (IOException e) {
-          throw new RuntimeException(e);
-        }
-        return new TokenStreamComponents(tokenizer, tokenizer);
+        Tokenizer tokenizer = new PatternTokenizer(reader, Pattern.compile("a"), 0);
+        return new TokenStreamComponents(tokenizer);
       }    
     };
     checkRandomData(random(), b, 1000*RANDOM_MULTIPLIER);

