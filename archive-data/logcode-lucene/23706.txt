GitDiffStart: 1501cc364c503499254f2a392dacb79d4d1e3504 | Sun May 28 01:58:01 2006 +0000
diff --git a/src/java/org/apache/solr/core/SolrInfoMBean.java b/src/java/org/apache/solr/core/SolrInfoMBean.java
index 1497a6b..717ed6b 100644
--- a/src/java/org/apache/solr/core/SolrInfoMBean.java
+++ b/src/java/org/apache/solr/core/SolrInfoMBean.java
@@ -21,7 +21,7 @@ import org.apache.solr.util.*;
 
 /**
  * MBean interface for getting various ui friendly strings and URLs
- * for use by objects which are 'plugable' to make server administration
+ * for use by objects which are 'pluggable' to make server administration
  * easier.
  *
  * @author ronp
@@ -50,7 +50,7 @@ public interface SolrInfoMBean {
    * Documentation URL list.
    *
    * <p>
-   * Suggested documentaion URLs: Homepage for sponsoring project,
+   * Suggested documentation URLs: Homepage for sponsoring project,
    * FAQ on class usage, Design doc for class, Wiki, bug reporting URL, etc...
    * </p>
    */
diff --git a/src/java/org/apache/solr/request/SolrQueryRequest.java b/src/java/org/apache/solr/request/SolrQueryRequest.java
index a4d5e01..a4893a6 100644
--- a/src/java/org/apache/solr/request/SolrQueryRequest.java
+++ b/src/java/org/apache/solr/request/SolrQueryRequest.java
@@ -43,7 +43,7 @@ public interface SolrQueryRequest {
 
   /**
    * Returns the input parameter values for the specified name
-   * @return the values; may be null or empty depending on implimentation
+   * @return the values; may be null or empty depending on implementation
    */
   public String[] getParams(String name);
 
diff --git a/src/java/org/apache/solr/request/SolrQueryRequestBase.java b/src/java/org/apache/solr/request/SolrQueryRequestBase.java
index 7e45c6e..9bba105 100644
--- a/src/java/org/apache/solr/request/SolrQueryRequestBase.java
+++ b/src/java/org/apache/solr/request/SolrQueryRequestBase.java
@@ -23,9 +23,9 @@ import org.apache.solr.core.SolrCore;
 import org.apache.solr.core.SolrException;
 
 /**
- * Base implimentation of <code>SolrQueryRequest</code> that provides some
- * convinience methods for accessing parameters, and manages an IndexSearcher
- * refrence.
+ * Base implementation of <code>SolrQueryRequest</code> that provides some
+ * convenience methods for accessing parameters, and manages an IndexSearcher
+ * reference.
  *
  * <p>
  * The <code>close()</code> method must be called on any instance of this
diff --git a/src/java/org/apache/solr/search/DocIterator.java b/src/java/org/apache/solr/search/DocIterator.java
index 14747b2..054e91c 100644
--- a/src/java/org/apache/solr/search/DocIterator.java
+++ b/src/java/org/apache/solr/search/DocIterator.java
@@ -30,14 +30,15 @@ import java.util.Iterator;
  * @version $Id$
  */
 public interface DocIterator extends Iterator<Integer> {
-  // allready declared in superclass, redeclaring prevents javadoc inheritence
+  // already declared in superclass, redeclaring prevents javadoc inheritance
   //public boolean hasNext();
 
   /**
    * Returns the next document id if hasNext()==true
    *
    * <code>
-   * This method is functionally equivilent to <code>next()</code>
+   * This method is equivalent to <code>next()</code>, but avoids the creation
+   * of an Integer Object.
    * @see #next()
    */
   public int nextDoc();
diff --git a/src/java/org/apache/solr/search/DocList.java b/src/java/org/apache/solr/search/DocList.java
index cf7d35c..75169a4 100644
--- a/src/java/org/apache/solr/search/DocList.java
+++ b/src/java/org/apache/solr/search/DocList.java
@@ -67,7 +67,7 @@ public interface DocList extends DocSet {
   public DocList subset(int offset, int len);
 
   /**
-   * Returns an interator that may be used to iterate over the documents in this DocList
+   * Returns an iterator that may be used to iterate over the documents in this DocList
    *
    * <p>
    * The order of the documents returned by this iterator is based on the
diff --git a/src/java/org/apache/solr/search/DocSet.java b/src/java/org/apache/solr/search/DocSet.java
index 0ee93bd..baf645b 100644
--- a/src/java/org/apache/solr/search/DocSet.java
+++ b/src/java/org/apache/solr/search/DocSet.java
@@ -39,20 +39,21 @@ public interface DocSet /* extends Collection<Integer> */ {
    * (optional operation).
    *
    * @see #addUnique
-   * @throws SolrException if the implimentation does not allow modifications
+   * @throws SolrException if the implementation does not allow modifications
    */
   public void add(int doc);
+
   /**
    * Adds a document the caller knows is not currently in the DocSet
    * (optional operation).
    *
    * <p>
    * This method may be faster then <code>add(doc)</code> in some
-   * implimentaions provided the caller is certain of the precondition.
+   * implementaions provided the caller is certain of the precondition.
    * </p>
    *
    * @see #add
-   * @throws SolrException if the implimentation does not allow modifications
+   * @throws SolrException if the implementation does not allow modifications
    */
   public void addUnique(int doc);
 
@@ -67,7 +68,7 @@ public interface DocSet /* extends Collection<Integer> */ {
   public boolean exists(int docid);
 
   /**
-   * Returns an interator that may be used to iterate over all of the documents in the set.
+   * Returns an iterator that may be used to iterate over all of the documents in the set.
    *
    * <p>
    * The order of the documents returned by this iterator is
@@ -124,7 +125,7 @@ public interface DocSet /* extends Collection<Integer> */ {
 
 }
 
-/** A base class that may be usefull for implimenting DocSets */
+/** A base class that may be usefull for implementing DocSets */
 abstract class DocSetBase implements DocSet {
 
   // Not implemented efficiently... for testing purposes only
@@ -149,14 +150,14 @@ abstract class DocSetBase implements DocSet {
   }
 
   /**
-   * @throws SolrException Base implimentation does not allow modifications
+   * @throws SolrException Base implementation does not allow modifications
    */
   public void add(int doc) {
     throw new SolrException(500,"Unsupported Operation");
   }
 
   /**
-   * @throws SolrException Base implimentation does not allow modifications
+   * @throws SolrException Base implementation does not allow modifications
    */
   public void addUnique(int doc) {
     throw new SolrException(500,"Unsupported Operation");
diff --git a/src/java/org/apache/solr/search/DocSlice.java b/src/java/org/apache/solr/search/DocSlice.java
index 5376de0..200b8de 100644
--- a/src/java/org/apache/solr/search/DocSlice.java
+++ b/src/java/org/apache/solr/search/DocSlice.java
@@ -38,7 +38,7 @@ public class DocSlice extends DocSetBase implements DocList {
    * @param offset  starting offset for this range of docs
    * @param len     length of results
    * @param docs    array of docids starting at position 0
-   * @param scores  array of scores that corrisponds to docs, may be null
+   * @param scores  array of scores that corresponds to docs, may be null
    * @param matches total number of matches for the query
    */
   public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {
diff --git a/src/java/org/apache/solr/util/NamedList.java b/src/java/org/apache/solr/util/NamedList.java
index e166f08..a1eb375 100644
--- a/src/java/org/apache/solr/util/NamedList.java
+++ b/src/java/org/apache/solr/util/NamedList.java
@@ -55,7 +55,7 @@ public class NamedList implements Cloneable, Serializable {
    * Creates an instance backed by an explicitly specified list of
    * pairwise names/values.
    *
-   * @param nameValuePairs underlying List which should be used to impliment a NamedList; modifying this List will affect the NamedList.
+   * @param nameValuePairs underlying List which should be used to implement a NamedList; modifying this List will affect the NamedList.
    */
   public NamedList(List nameValuePairs) {
     nvPairs=nameValuePairs;
@@ -107,7 +107,7 @@ public class NamedList implements Cloneable, Serializable {
   }
 
   /**
-   * Scans the list sequentially begining at the specified index and
+   * Scans the list sequentially beginning at the specified index and
    * returns the index of the first pair with the specified name.
    *
    * @param name name to look for, may be null

