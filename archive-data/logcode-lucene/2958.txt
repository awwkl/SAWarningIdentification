GitDiffStart: 7cdc63f3d4f79e8702f96b617cf7e464fd74766a | Thu Aug 6 00:53:28 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 20bf410..d9f7773 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -282,6 +282,9 @@ Bug Fixes
 * SOLR-7818: Fixed distributed stats to be calculated for all the query terms. Earlier the stats were calculated with
   the terms that are present in the last shard of a distributed request. (Varun Thacker, Anshum Gupta)
 
+* SOLR-7866: VersionInfo caused an unhandled NPE when trying to determine the max value for the
+  version field. (Timothy Potter)
+
 Optimizations
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/update/VersionInfo.java b/solr/core/src/java/org/apache/solr/update/VersionInfo.java
index ff2345a..54ced78 100644
--- a/solr/core/src/java/org/apache/solr/update/VersionInfo.java
+++ b/solr/core/src/java/org/apache/solr/update/VersionInfo.java
@@ -231,8 +231,9 @@ public class VersionInfo {
     // if indexed, then we have terms to get the max from
     if (versionField.indexed()) {
       Terms versionTerms = searcher.getLeafReader().terms(versionFieldName);
-      if (versionTerms != null) {
-        maxVersionInIndex = NumericUtils.getMaxLong(versionTerms);
+      Long max = (versionTerms != null) ? NumericUtils.getMaxLong(versionTerms) : null;
+      if (max != null) {
+        maxVersionInIndex = max.longValue();
         log.info("Found MAX value {} from Terms for {} in index", maxVersionInIndex, versionFieldName);
       } else {
         log.info("No terms found for {}, cannot seed version bucket highest value from index", versionFieldName);
diff --git a/solr/core/src/test/org/apache/solr/cloud/DistributedVersionInfoTest.java b/solr/core/src/test/org/apache/solr/cloud/DistributedVersionInfoTest.java
index 71e336d..c08b247 100644
--- a/solr/core/src/test/org/apache/solr/cloud/DistributedVersionInfoTest.java
+++ b/solr/core/src/test/org/apache/solr/cloud/DistributedVersionInfoTest.java
@@ -88,6 +88,11 @@ public class DistributedVersionInfoTest extends AbstractFullDistribZkTestBase {
     List<Replica> notLeaders =
         ensureAllReplicasAreActive(testCollectionName, shardId, 1, rf, maxWaitSecsToSeeAllActive);
 
+    // start by reloading the empty collection so we try to calculate the max from an empty index
+    reloadCollection(leader, testCollectionName);
+    notLeaders =
+        ensureAllReplicasAreActive(testCollectionName, shardId, 1, rf, maxWaitSecsToSeeAllActive);
+
     sendDoc(1);
     cloudClient.commit();
 

