GitDiffStart: 132f389f2d9c5b0f8984fa26ea753f3e5fe96164 | Thu Feb 6 23:41:06 2014 +0000
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestNRTThreads.java b/lucene/core/src/test/org/apache/lucene/index/TestNRTThreads.java
index e33b2aa..abc6c3e 100644
--- a/lucene/core/src/test/org/apache/lucene/index/TestNRTThreads.java
+++ b/lucene/core/src/test/org/apache/lucene/index/TestNRTThreads.java
@@ -24,6 +24,7 @@ import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.MockDirectoryWrapper;
 import org.apache.lucene.util.LuceneTestCase.SuppressCodecs;
+import org.junit.Before;
 
 // TODO
 //   - mix in forceMerge, addIndexes
@@ -32,6 +33,14 @@ import org.apache.lucene.util.LuceneTestCase.SuppressCodecs;
 @SuppressCodecs({ "SimpleText", "Memory", "Direct" })
 public class TestNRTThreads extends ThreadedIndexingAndSearchingTestCase {
   
+  private boolean useNonNrtReaders = true;
+
+  @Before
+  public void setUp() throws Exception {
+    super.setUp();
+    useNonNrtReaders  = random().nextBoolean();
+  }
+  
   @Override
   protected void doSearching(ExecutorService es, long stopTime) throws Exception {
 
@@ -93,7 +102,7 @@ public class TestNRTThreads extends ThreadedIndexingAndSearchingTestCase {
   @Override
   protected Directory getDirectory(Directory in) {
     assert in instanceof MockDirectoryWrapper;
-    ((MockDirectoryWrapper) in).setAssertNoDeleteOpenFile(true);
+    if (!useNonNrtReaders) ((MockDirectoryWrapper) in).setAssertNoDeleteOpenFile(true);
     return in;
   }
 
@@ -123,11 +132,15 @@ public class TestNRTThreads extends ThreadedIndexingAndSearchingTestCase {
   @Override
   protected IndexSearcher getFinalSearcher() throws Exception {
     final IndexReader r2;
-    if (random().nextBoolean()) {
-      r2 = writer.getReader();
+    if (useNonNrtReaders) {
+      if (random().nextBoolean()) {
+        r2 = writer.getReader();
+      } else {
+        writer.commit();
+        r2 = DirectoryReader.open(dir);
+      }
     } else {
-      writer.commit();
-      r2 = DirectoryReader.open(dir);
+      r2 = writer.getReader();
     }
     return newSearcher(r2);
   }

