GitDiffStart: 9a5c901fd65f541fad73c136929c17769108abee | Sat Dec 28 22:18:24 2013 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 899ff89..ff12c09 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -138,12 +138,6 @@ Bug Fixes
 * SOLR-5438: DebugComponent throws NPE when used with grouping.
   (Tomás Fernández Löbbe via shalin)
 
-* SOLR-5442: Python client cannot parse proxied response when served by Tomcat.
-  (Patrick Hunt, Gregory Chanan, Vamsee Yarlagadda, Romain Rigaux, Mark Miller)
-
-* SOLR-5445: Proxied responses should propagate all headers rather than the 
-  first one for each key. (Patrick Hunt, Mark Miller) 
-
 * SOLR-4612: Admin UI - Analysis Screen contains empty table-columns (steffkes)
 
 * SOLR-5451: SyncStrategy closes it's http connection manager before the
@@ -305,6 +299,11 @@ Bug Fixes
 
 * SOLR-5416: CollapsingQParserPlugin breaks Tag/Exclude Faceting (David Boychuck, Joel Bernstein)
 
+* SOLR-5442: Python client cannot parse proxied response when served by Tomcat.
+  (Patrick Hunt, Gregory Chanan, Vamsee Yarlagadda, Romain Rigaux, Mark Miller)
+
+* SOLR-5445: Proxied responses should propagate all headers rather than the 
+  first one for each key. (Patrick Hunt, Mark Miller) 
 
 ==================  4.6.0 ==================
 
diff --git a/solr/core/src/test/org/apache/solr/cloud/ConnectionManagerTest.java b/solr/core/src/test/org/apache/solr/cloud/ConnectionManagerTest.java
new file mode 100644
index 0000000..41ffe71
--- /dev/null
+++ b/solr/core/src/test/org/apache/solr/cloud/ConnectionManagerTest.java
@@ -0,0 +1,70 @@
+package org.apache.solr.cloud;
+
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements. See the NOTICE file distributed with this
+ * work for additional information regarding copyright ownership. The ASF
+ * licenses this file to You under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+ * License for the specific language governing permissions and limitations under
+ * the License.
+ */
+
+import java.io.File;
+
+import org.apache.lucene.util.LuceneTestCase.Slow;
+import org.apache.solr.SolrTestCaseJ4;
+import org.apache.solr.common.cloud.ConnectionManager;
+import org.apache.solr.common.cloud.SolrZkClient;
+import org.junit.Ignore;
+
+@Slow
+public class ConnectionManagerTest extends SolrTestCaseJ4 {
+  
+  static final int TIMEOUT = 3000;
+  
+  @Ignore
+  public void testConnectionManager() throws Exception {
+    
+    createTempDir();
+    // setup a SolrZkClient to do some getBaseUrlForNodeName testing
+    String zkDir = dataDir.getAbsolutePath() + File.separator
+        + "zookeeper/server1/data";
+    
+    ZkTestServer server = new ZkTestServer(zkDir);
+    try {
+      server.run();
+      
+      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
+      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
+      
+      SolrZkClient zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);
+      ConnectionManager cm = zkClient.getConnectionManager();
+      try {
+        System.err.println("ISEXPIRED:" + cm.isLikelyExpired());
+        assertFalse(cm.isLikelyExpired());
+        
+        zkClient.getSolrZooKeeper().pauseCnxn(TIMEOUT);
+        
+        long sessionId = zkClient.getSolrZooKeeper().getSessionId();
+        server.expire(sessionId);
+        Thread.sleep(TIMEOUT);
+        
+        assertTrue(cm.isLikelyExpired());
+      } finally {
+        cm.close();
+        zkClient.close();
+      }
+    } finally {
+      server.shutdown();
+    }
+  }
+  
+}
diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager.java
index 0319a7b..2964f68 100644
--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager.java
+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager.java
@@ -175,6 +175,7 @@ public class ConnectionManager implements Watcher {
   // to avoid deadlock on shutdown
   public void close() {
     this.isClosed = true;
+    this.likelyExpired = true;
     if (this.disconnectedTimer != null) {
       this.disconnectedTimer.cancel();
       this.disconnectedTimer = null;

