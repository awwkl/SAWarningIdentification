GitDiffStart: b60829fb0cb9af12929eb64ceb00aca0e7169551 | Wed Jul 2 11:57:27 2008 +0000
diff --git a/src/java/org/apache/lucene/index/CompoundFileReader.java b/src/java/org/apache/lucene/index/CompoundFileReader.java
index b8006cc..03291b1 100644
--- a/src/java/org/apache/lucene/index/CompoundFileReader.java
+++ b/src/java/org/apache/lucene/index/CompoundFileReader.java
@@ -218,11 +218,19 @@ class CompoundFileReader extends Directory {
         CSIndexInput(final IndexInput base, final long fileOffset, final long length, int readBufferSize)
         {
             super(readBufferSize);
-            this.base = base;
+            this.base = (IndexInput)base.clone();
             this.fileOffset = fileOffset;
             this.length = length;
         }
-
+        
+        public Object clone() {
+          CSIndexInput clone = (CSIndexInput)super.clone();
+          clone.base = (IndexInput)base.clone();
+          clone.fileOffset = fileOffset;
+          clone.length = length;
+          return clone;
+        }
+        
         /** Expert: implements buffer refill.  Reads bytes from the current
          *  position in the input.
          * @param b the array to read bytes into
@@ -232,13 +240,11 @@ class CompoundFileReader extends Directory {
         protected void readInternal(byte[] b, int offset, int len)
         throws IOException
         {
-            synchronized (base) {
-              long start = getFilePointer();
-              if(start + len > length)
-                throw new IOException("read past EOF");
-              base.seek(fileOffset + start);
-              base.readBytes(b, offset, len, false);
-            }
+          long start = getFilePointer();
+          if(start + len > length)
+            throw new IOException("read past EOF");
+          base.seek(fileOffset + start);
+          base.readBytes(b, offset, len, false);
         }
 
         /** Expert: implements seek.  Sets current position in this file, where
@@ -248,7 +254,9 @@ class CompoundFileReader extends Directory {
         protected void seekInternal(long pos) {}
 
         /** Closes the stream to further operations. */
-        public void close() {}
+        public void close() throws IOException {
+          base.close();
+        }
 
         public long length() {
           return length;
diff --git a/src/java/org/apache/lucene/index/SegmentReader.java b/src/java/org/apache/lucene/index/SegmentReader.java
index cec28fe..351611f 100644
--- a/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/src/java/org/apache/lucene/index/SegmentReader.java
@@ -296,7 +296,6 @@ class SegmentReader extends DirectoryIndexReader {
       } else
         storeDir = null;
 
-      // No compound file exists - use the multi-file format
       fieldInfos = new FieldInfos(cfsDir, segment + ".fnm");
 
       final String fieldsSegment;
diff --git a/src/test/org/apache/lucene/index/TestFieldsReader.java b/src/test/org/apache/lucene/index/TestFieldsReader.java
index e5a698a..6277dc3 100644
--- a/src/test/org/apache/lucene/index/TestFieldsReader.java
+++ b/src/test/org/apache/lucene/index/TestFieldsReader.java
@@ -367,6 +367,9 @@ public class TestFieldsReader extends LuceneTestCase {
     public void close() throws IOException {
       delegate.close();
     }
+    public Object clone() {
+      return new FaultyIndexInput((IndexInput) delegate.clone());
+    }
   }
 
   // LUCENE-1262

