GitDiffStart: bd9dcf72e03b60849a4015af32b795d6b179a8b2 | Fri Aug 27 20:20:47 2004 +0000
diff --git a/src/java/org/apache/lucene/search/MultiTermQuery.java b/src/java/org/apache/lucene/search/MultiTermQuery.java
index f098005..b8315ed 100644
--- a/src/java/org/apache/lucene/search/MultiTermQuery.java
+++ b/src/java/org/apache/lucene/search/MultiTermQuery.java
@@ -58,7 +58,7 @@ public abstract class MultiTermQuery extends Query {
           if (t != null) {
             TermQuery tq = new TermQuery(t);      // found a match
             tq.setBoost(getBoost() * enumerator.difference()); // set the boost
-            query.add(tq, false, false);          // add to query
+            query.add(tq, BooleanClause.Occur.SHOULD);          // add to query
           }
         } while (enumerator.next());
       } finally {
diff --git a/src/java/org/apache/lucene/search/PhrasePrefixQuery.java b/src/java/org/apache/lucene/search/PhrasePrefixQuery.java
index 345cb38..07810bb 100644
--- a/src/java/org/apache/lucene/search/PhrasePrefixQuery.java
+++ b/src/java/org/apache/lucene/search/PhrasePrefixQuery.java
@@ -202,7 +202,7 @@ public class PhrasePrefixQuery extends Query {
       Term[] terms = (Term[])termArrays.get(0);
       BooleanQuery boq = new BooleanQuery();
       for (int i=0; i<terms.length; i++) {
-        boq.add(new TermQuery(terms[i]), false, false);
+        boq.add(new TermQuery(terms[i]), BooleanClause.Occur.SHOULD);
       }
       boq.setBoost(getBoost());
       return boq.createWeight(searcher);
diff --git a/src/java/org/apache/lucene/search/PrefixQuery.java b/src/java/org/apache/lucene/search/PrefixQuery.java
index c48d1ff..bc8b1f7 100644
--- a/src/java/org/apache/lucene/search/PrefixQuery.java
+++ b/src/java/org/apache/lucene/search/PrefixQuery.java
@@ -47,7 +47,7 @@ public class PrefixQuery extends Query {
             term.field() == prefixField) {
           TermQuery tq = new TermQuery(term);	  // found a match
           tq.setBoost(getBoost());                // set the boost
-          query.add(tq, false, false);		  // add to query
+          query.add(tq, BooleanClause.Occur.SHOULD);		  // add to query
           //System.out.println("added " + term);
         } else {
           break;
diff --git a/src/java/org/apache/lucene/search/RangeQuery.java b/src/java/org/apache/lucene/search/RangeQuery.java
index 65d99ba..6fded83 100644
--- a/src/java/org/apache/lucene/search/RangeQuery.java
+++ b/src/java/org/apache/lucene/search/RangeQuery.java
@@ -96,7 +96,7 @@ public class RangeQuery extends Query
                         }
                         TermQuery tq = new TermQuery(term); // found a match
                         tq.setBoost(getBoost()); // set the boost
-                        query.add(tq, false, false); // add to query
+                        query.add(tq, BooleanClause.Occur.SHOULD); // add to query
                     }
                 }
                 else {

