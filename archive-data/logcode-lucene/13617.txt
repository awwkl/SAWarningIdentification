GitDiffStart: a8bff90d2e60dbfeaa0c223e7eccc6a60aea5eec | Fri Feb 17 15:47:28 2012 +0000
diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
index bdcf2d7..316b874 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
@@ -53,6 +53,9 @@ import org.apache.lucene.codecs.lucene40.Lucene40Codec;
 import org.apache.lucene.codecs.simpletext.SimpleTextCodec;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.FieldType;
+import org.apache.lucene.index.AtomicReader;
+import org.apache.lucene.index.CompositeReader;
+import org.apache.lucene.index.MultiReader;
 import org.apache.lucene.index.DirectoryReader;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.ReaderClosedListener;
@@ -65,6 +68,8 @@ import org.apache.lucene.index.RandomCodec;
 import org.apache.lucene.index.RandomDocumentsWriterPerThreadPool;
 import org.apache.lucene.index.SegmentReader;
 import org.apache.lucene.index.SerialMergeScheduler;
+import org.apache.lucene.index.ParallelAtomicReader;
+import org.apache.lucene.index.ParallelCompositeReader;
 import org.apache.lucene.index.SlowCompositeReaderWrapper;
 import org.apache.lucene.index.ThreadAffinityDocumentsWriterThreadPool;
 import org.apache.lucene.index.TieredMergePolicy;
@@ -1356,6 +1361,16 @@ public abstract class LuceneTestCase extends Assert {
       if (maybeWrap && rarely()) {
         r = SlowCompositeReaderWrapper.wrap(r);
       }
+      if (maybeWrap && rarely()) {
+        // just wrap as MultiReader/ParallelXReader with one subreader
+        if (random.nextBoolean()) {
+          r = (r instanceof AtomicReader) ?
+            new ParallelAtomicReader((AtomicReader) r) :
+            new ParallelCompositeReader((CompositeReader) r);
+        } else {
+          r = new MultiReader(r);
+        }
+      }
       IndexSearcher ret = random.nextBoolean() ? new AssertingIndexSearcher(random, r) : new AssertingIndexSearcher(random, r.getTopReaderContext());
       ret.setSimilarity(similarity);
       return ret;

