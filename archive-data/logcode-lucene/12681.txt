GitDiffStart: a17404983b3bb33aba280110d8540dfc8d3746da | Mon Apr 23 01:55:02 2012 +0000
diff --git a/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java b/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
index 2a3d3bc..cc89917 100644
--- a/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
+++ b/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
@@ -75,8 +75,7 @@ public  class LeaderElector {
    * If it is, set the leaderId on the leader zk node. If it is not, start
    * watching the candidate that is in line before this one - if it goes down, check
    * if this candidate is the leader again.
-   * @param leaderSeqPath 
-   * 
+   *
    * @param seq
    * @param context 
    * @param replacement has someone else been the leader already?
diff --git a/solr/core/src/java/org/apache/solr/core/SolrXMLSerializer.java b/solr/core/src/java/org/apache/solr/core/SolrXMLSerializer.java
index e882ddf..266caaa 100644
--- a/solr/core/src/java/org/apache/solr/core/SolrXMLSerializer.java
+++ b/solr/core/src/java/org/apache/solr/core/SolrXMLSerializer.java
@@ -45,16 +45,6 @@ public class SolrXMLSerializer {
   /**
    * @param w
    *          Writer to use
-   * @param defaultCoreName
-   *          to use for cores with name ""
-   * @param coreDescriptors
-   *          to persist
-   * @param rootSolrAttribs
-   *          solrxml solr attribs
-   * @param containerProperties
-   *          to persist
-   * @param coresAttribs
-   *          solrxml cores attribs
    * @throws IOException
    */
   void persist(Writer w, SolrXMLDef solrXMLDef) throws IOException {
diff --git a/solr/core/src/java/org/apache/solr/schema/CurrencyField.java b/solr/core/src/java/org/apache/solr/schema/CurrencyField.java
index 12ed9aa..b6f40ae 100644
--- a/solr/core/src/java/org/apache/solr/schema/CurrencyField.java
+++ b/solr/core/src/java/org/apache/solr/schema/CurrencyField.java
@@ -424,7 +424,7 @@ class FileExchangeRateProvider implements ExchangeRateProvider {
    * @param sourceCurrencyCode The source currency being converted from.
    * @param targetCurrencyCode The target currency being converted to.
    * @return The exchange rate.
-   * @throws an exception if the requested currency pair cannot be found 
+   * @throws SolrException if the requested currency pair cannot be found
    */
   public double getExchangeRate(String sourceCurrencyCode, String targetCurrencyCode) {
     if (sourceCurrencyCode == null || targetCurrencyCode == null) {
diff --git a/solr/core/src/java/org/apache/solr/schema/ExchangeRateProvider.java b/solr/core/src/java/org/apache/solr/schema/ExchangeRateProvider.java
index d4e2040..9314e08 100644
--- a/solr/core/src/java/org/apache/solr/schema/ExchangeRateProvider.java
+++ b/solr/core/src/java/org/apache/solr/schema/ExchangeRateProvider.java
@@ -31,7 +31,7 @@ public interface ExchangeRateProvider {
    * @param sourceCurrencyCode
    * @param targetCurrencyCode
    * @return the exhange rate as a double
-   * @throws exception if the rate is not defined in the provider
+   * @throws SolrException if the rate is not defined in the provider
    */
   public double getExchangeRate(String sourceCurrencyCode, String targetCurrencyCode) throws SolrException;
   
diff --git a/solr/core/src/java/org/apache/solr/schema/OpenExchangeRatesOrgProvider.java b/solr/core/src/java/org/apache/solr/schema/OpenExchangeRatesOrgProvider.java
index 7f645e1..c8bf342 100644
--- a/solr/core/src/java/org/apache/solr/schema/OpenExchangeRatesOrgProvider.java
+++ b/solr/core/src/java/org/apache/solr/schema/OpenExchangeRatesOrgProvider.java
@@ -61,7 +61,7 @@ public class OpenExchangeRatesOrgProvider implements ExchangeRateProvider {
    * @param sourceCurrencyCode The source currency being converted from.
    * @param targetCurrencyCode The target currency being converted to.
    * @return The exchange rate.
-   * @throws an exception if the requested currency pair cannot be found 
+   * @throws SolrException if the requested currency pair cannot be found
    */
   public double getExchangeRate(String sourceCurrencyCode, String targetCurrencyCode) {
     if (rates == null) {
diff --git a/solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParserPlugin.java
index 4360ec0..4c69852 100755
--- a/solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParserPlugin.java
+++ b/solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParserPlugin.java
@@ -785,7 +785,6 @@ class ExtendedDismaxQParser extends QParser {
   /** 
    * returns a field name or legal field alias from the current 
    * position of the string 
-   * @param solrParams 
    */
   public String getFieldName(String s, int pos, int end) {
     if (pos >= end) return null;
diff --git a/solr/core/src/java/org/apache/solr/search/LuceneQueryOptimizer.java b/solr/core/src/java/org/apache/solr/search/LuceneQueryOptimizer.java
index 9473099..be43794 100644
--- a/solr/core/src/java/org/apache/solr/search/LuceneQueryOptimizer.java
+++ b/solr/core/src/java/org/apache/solr/search/LuceneQueryOptimizer.java
@@ -27,7 +27,7 @@ import java.util.LinkedHashMap;
 import java.util.Map;
 import java.io.IOException;
 
-/** Utility which converts certain query clauses into {@link QueryFilter}s and
+/** Utility which converts certain query clauses into {@link QueryWrapperFilter}s and
  * caches these.  Only required {@link TermQuery}s whose boost is zero and
  * whose term occurs in at least a certain fraction of documents are converted
  * to cached filters.  This accelerates query constraints like language,
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils.java b/solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils.java
index 456fce5..88c9c12 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/util/ClientUtils.java
@@ -150,7 +150,6 @@ public class ClientUtils
    * Returns a formatter that can be use by the current thread if needed to
    * convert Date objects to the Internal representation.
    * @throws ParseException
-   * @throws DateParseException
    *
    * @deprecated Use {@link org.apache.solr.common.util.DateUtil#parseDate(String)}
    */
diff --git a/solr/solrj/src/java/org/apache/solr/common/util/DateUtil.java b/solr/solrj/src/java/org/apache/solr/common/util/DateUtil.java
index 00d8bbe..80d651e 100644
--- a/solr/solrj/src/java/org/apache/solr/common/util/DateUtil.java
+++ b/solr/solrj/src/java/org/apache/solr/common/util/DateUtil.java
@@ -90,8 +90,6 @@ public class DateUtil {
    * @param d The input date to parse
    * @return The parsed {@link java.util.Date}
    * @throws java.text.ParseException If the input can't be parsed
-   * @throws org.apache.commons.httpclient.util.DateParseException
-   *                                  If the input can't be parsed
    */
   public static Date parseDate(String d) throws ParseException {
     return parseDate(d, DEFAULT_DATE_FORMATS);
diff --git a/solr/solrj/src/java/org/apache/solr/common/util/NamedList.java b/solr/solrj/src/java/org/apache/solr/common/util/NamedList.java
index f4433b5..84af744 100644
--- a/solr/solrj/src/java/org/apache/solr/common/util/NamedList.java
+++ b/solr/solrj/src/java/org/apache/solr/common/util/NamedList.java
@@ -101,7 +101,7 @@ public class NamedList<T> implements Cloneable, Serializable, Iterable<Map.Entry
    * @return Modified List as per the above description
    * @deprecated This a temporary placeholder method until the guts of the class
    * are actually replaced by List&lt;String, ?&gt;.
-   * @see https://issues.apache.org/jira/browse/SOLR-912
+   * @see <a href="https://issues.apache.org/jira/browse/SOLR-912">SOLR-912</a>
    */
   @Deprecated
   private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {

