GitDiffStart: a34385d9c070076bd3e0df50daa44f9f9c28f86f | Tue Oct 6 14:26:09 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 0cb559d..306a670 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -233,6 +233,9 @@ Bug Fixes
 * SOLR-8075: Leader Initiated Recovery should not stop a leader that participated in an election with all
   of it's replicas from becoming a valid leader. (Mark Miller)
 
+* SOLR-8072: Rebalance leaders feature does not set CloudDescriptor#isLeader to false when bumping leaders.
+  (Mark Miller)
+
 Optimizations
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java b/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java
index 08887c5..70a29cc 100644
--- a/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java
+++ b/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java
@@ -256,6 +256,18 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {
   }
   
   @Override
+  public void cancelElection() throws InterruptedException, KeeperException {
+    String coreName = leaderProps.getStr(ZkStateReader.CORE_NAME_PROP);
+    try (SolrCore core = cc.getCore(coreName)) {
+      if (core != null) {
+        core.getCoreDescriptor().getCloudDescriptor().setLeader(false);
+      }
+    }
+    
+    super.cancelElection();
+  }
+  
+  @Override
   public ElectionContext copy() {
     return new ShardLeaderElectionContext(leaderElector, shardId, collection, id, leaderProps, zkController, cc);
   }

