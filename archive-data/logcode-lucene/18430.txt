GitDiffStart: 351e18206e61d020cdc00c1b827245db87cdca1c | Fri Feb 5 12:42:38 2010 +0000
diff --git a/CHANGES.txt b/CHANGES.txt
index f7c7e23..b75afe9 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -227,7 +227,9 @@ Other Changes
   
 * SOLR-1696 : Deprecate old <highlighting> syntax and move configuration to HighlightComponent (noble)
 
-* Upgraded to Lucene 2.9-dev r900226 (koji)
+* Upgraded to Lucene 2.9-dev r900226 (koji)\
+
+* SOLR-1727: SolrEventListener should extend NamedListInitializedPlugin (noble)
   
 Build
 ----------------------
diff --git a/src/java/org/apache/solr/core/SolrCore.java b/src/java/org/apache/solr/core/SolrCore.java
index 8c445cd..dee33d8 100644
--- a/src/java/org/apache/solr/core/SolrCore.java
+++ b/src/java/org/apache/solr/core/SolrCore.java
@@ -273,12 +273,8 @@ public final class SolrCore implements SolrInfoMBean {
    }
 
   private void initListeners() {
-    List<PluginInfo> l = solrConfig.getPluginInfos(SolrEventListener.class.getName());
-    firstSearcherListeners = new ArrayList<SolrEventListener>();
-    newSearcherListeners = new ArrayList<SolrEventListener>();
-    for (PluginInfo info : l) {
-      SolrEventListener listener = createEventListener(info.className);
-      listener.init(info.initArgs);
+    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {
+      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,"Event Listener",null);      
       String event = info.attributes.get("event");
       if("firstSearcher".equals(event) ){
         firstSearcherListeners.add(listener);
@@ -289,8 +285,8 @@ public final class SolrCore implements SolrInfoMBean {
     }
   }
 
-  List<SolrEventListener> firstSearcherListeners;
-  List<SolrEventListener> newSearcherListeners;
+  final List<SolrEventListener> firstSearcherListeners = new ArrayList<SolrEventListener>();
+  final List<SolrEventListener> newSearcherListeners = new ArrayList<SolrEventListener>();
 
   /**
    * NOTE: this function is not thread safe.  However, it is safe to call within the
diff --git a/src/java/org/apache/solr/core/SolrEventListener.java b/src/java/org/apache/solr/core/SolrEventListener.java
index 2f0d21e..1165833 100644
--- a/src/java/org/apache/solr/core/SolrEventListener.java
+++ b/src/java/org/apache/solr/core/SolrEventListener.java
@@ -19,6 +19,7 @@ package org.apache.solr.core;
 
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.search.SolrIndexSearcher;
+import org.apache.solr.util.plugin.NamedListInitializedPlugin;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -26,10 +27,9 @@ import org.slf4j.LoggerFactory;
 /**
  * @version $Id$
  */
-public interface SolrEventListener {
+public interface SolrEventListener extends NamedListInitializedPlugin{
   static final Logger log = LoggerFactory.getLogger(SolrCore.class);
 
-  public void init(NamedList args);
 
   public void postCommit();
 
@@ -61,4 +61,4 @@ public interface SolrEventListener {
    */
   public void newSearcher(SolrIndexSearcher newSearcher, SolrIndexSearcher currentSearcher);
 
-}
\ No newline at end of file
+}
diff --git a/src/java/org/apache/solr/update/UpdateHandler.java b/src/java/org/apache/solr/update/UpdateHandler.java
index e7ac101..ba4af87 100644
--- a/src/java/org/apache/solr/update/UpdateHandler.java
+++ b/src/java/org/apache/solr/update/UpdateHandler.java
@@ -61,10 +61,9 @@ public abstract class UpdateHandler implements SolrInfoMBean {
   private void parseEventListeners() {
     for (PluginInfo pluginInfo : core.getSolrConfig().getPluginInfos(SolrEventListener.class.getName())) {
       String event = pluginInfo.attributes.get("event");
-      SolrEventListener listener = core.createEventListener(pluginInfo.className);
-      listener.init(pluginInfo.initArgs);
+      SolrEventListener listener = core.createInitInstance(pluginInfo,SolrEventListener.class,"Event Listener",null);
       if ("postCommit".equals(event)) {
-        commitCallbacks.add(listener);
+        commitCallbacks.add(core.createInitInstance(pluginInfo,SolrEventListener.class,"Event Listener",null));
         log.info("added SolrEventListener for postCommit: " + listener);
       } else if ("postOptimize".equals(event)) {
         optimizeCallbacks.add(listener);

