GitDiffStart: d8b66aa10cf3b994bab8cf8615211e3afe42f02a | Thu May 7 14:41:35 2015 +0000
diff --git a/solr/core/src/java/org/apache/solr/cloud/rule/ImplicitSnitch.java b/solr/core/src/java/org/apache/solr/cloud/rule/ImplicitSnitch.java
index 2d6c07c..88972f4 100644
--- a/solr/core/src/java/org/apache/solr/cloud/rule/ImplicitSnitch.java
+++ b/solr/core/src/java/org/apache/solr/cloud/rule/ImplicitSnitch.java
@@ -41,8 +41,8 @@ public class ImplicitSnitch extends Snitch implements CoreAdminHandler.Invocable
   public static final String PORT = "port";
   public static final String HOST = "host";
   public static final String CORES = "cores";
-  public static final String DISK = "disk";
-  public static final String SYSPROP = "D.";
+  public static final String DISK = "freedisk";
+  public static final String SYSPROP = "sysprop.";
 
   public static final Set<String> tags = ImmutableSet.of(NODE, PORT, HOST, CORES, DISK);
 
@@ -77,7 +77,7 @@ public class ImplicitSnitch extends Snitch implements CoreAdminHandler.Invocable
     }
     String[] sysProps = req.getParams().getParams(SYSPROP);
     if (sysProps != null && sysProps.length > 0) {
-      for (String prop : sysProps) result.put(prop, System.getProperty(prop));
+      for (String prop : sysProps) result.put(SYSPROP+prop, System.getProperty(prop));
     }
     return result;
   }
diff --git a/solr/core/src/test/org/apache/solr/cloud/rule/RuleEngineTest.java b/solr/core/src/test/org/apache/solr/cloud/rule/RuleEngineTest.java
index 64a9f75..c469ee4 100644
--- a/solr/core/src/test/org/apache/solr/cloud/rule/RuleEngineTest.java
+++ b/solr/core/src/test/org/apache/solr/cloud/rule/RuleEngineTest.java
@@ -43,30 +43,30 @@ public class RuleEngineTest extends SolrTestCaseJ4{
     String s = "{" +
         "  '127.0.0.1:49961_':{" +
         "    'node':'127.0.0.1:49961_'," +
-        "    'disk':992," +
+        "    'freedisk':992," +
         "    'cores':1}," +
         "  '127.0.0.1:49955_':{" +
         "    'node':'127.0.0.1:49955_'," +
-        "    'disk':992," +
+        "    'freedisk':992," +
         "    'cores':1}," +
         "  '127.0.0.1:49952_':{" +
         "    'node':'127.0.0.1:49952_'," +
-        "    'disk':992," +
+        "    'freedisk':992," +
         "    'cores':1}," +
         "  '127.0.0.1:49947_':{" +
         "    'node':'127.0.0.1:49947_'," +
-        "    'disk':992," +
+        "    'freedisk':992," +
         "    'cores':1}," +
         "  '127.0.0.1:49958_':{" +
         "    'node':'127.0.0.1:49958_'," +
-        "    'disk':992," +
+        "    'freedisk':992," +
         "    'cores':1}}";
     MockSnitch.nodeVsTags = (Map) ZkStateReader.fromJSON(s.getBytes(StandardCharsets.UTF_8));
     Map shardVsReplicaCount = makeMap("shard1", 2, "shard2", 2);
 
     List<Rule> rules = parseRules("[{'cores':'<4'}, {" +
             "'replica':'1',shard:'*','node':'*'}," +
-            " {'disk':'>1'}]");
+            " {'freedisk':'>1'}]");
 
     Map<Position, String> mapping = new ReplicaAssigner(
         rules,
@@ -88,23 +88,23 @@ public class RuleEngineTest extends SolrTestCaseJ4{
     String s = "{" +
         "  '127.0.0.1:49961_':{" +
         "    'node':'127.0.0.1:49961_'," +
-        "    'disk':992," +
+        "    'freedisk':992," +
         "    'cores':1}," +
         "  '127.0.0.2:49955_':{" +
         "    'node':'127.0.0.1:49955_'," +
-        "    'disk':995," +
+        "    'freedisk':995," +
         "    'cores':1}," +
         "  '127.0.0.3:49952_':{" +
         "    'node':'127.0.0.1:49952_'," +
-        "    'disk':990," +
+        "    'freedisk':990," +
         "    'cores':1}," +
         "  '127.0.0.1:49947_':{" +
         "    'node':'127.0.0.1:49947_'," +
-        "    'disk':980," +
+        "    'freedisk':980," +
         "    'cores':1}," +
         "  '127.0.0.2:49958_':{" +
         "    'node':'127.0.0.1:49958_'," +
-        "    'disk':970," +
+        "    'freedisk':970," +
         "    'cores':1}}";
     MockSnitch.nodeVsTags = (Map) ZkStateReader.fromJSON(s.getBytes(StandardCharsets.UTF_8));
     //test not
@@ -112,7 +112,7 @@ public class RuleEngineTest extends SolrTestCaseJ4{
          "[{cores:'<4'}, " +
             "{replica:'1',shard:'*',node:'*'}," +
             "{node:'!127.0.0.1:49947_'}," +
-            "{disk:'>1'}]");
+            "{freedisk:'>1'}]");
     Map shardVsReplicaCount = makeMap("shard1", 2, "shard2", 2);
     Map<Position, String> mapping = new ReplicaAssigner(
         rules,
@@ -124,7 +124,7 @@ public class RuleEngineTest extends SolrTestCaseJ4{
     rules = parseRules(
          "[{cores:'<4'}, " +
             "{replica:'1',node:'*'}," +
-            "{disk:'>980'}]");
+            "{freedisk:'>980'}]");
     shardVsReplicaCount = makeMap("shard1", 2, "shard2", 2);
     mapping = new ReplicaAssigner(
         rules,
@@ -136,7 +136,7 @@ public class RuleEngineTest extends SolrTestCaseJ4{
     rules = parseRules(
         "[{cores:'<4'}, " +
             "{replica:'1',node:'*'}," +
-            "{disk:'>980~'}]");
+            "{freedisk:'>980~'}]");
     shardVsReplicaCount = makeMap("shard1", 2, "shard2", 2);
     mapping = new ReplicaAssigner(
         rules,
diff --git a/solr/core/src/test/org/apache/solr/cloud/rule/RulesTest.java b/solr/core/src/test/org/apache/solr/cloud/rule/RulesTest.java
index 2097297..f41bf21 100644
--- a/solr/core/src/test/org/apache/solr/cloud/rule/RulesTest.java
+++ b/solr/core/src/test/org/apache/solr/cloud/rule/RulesTest.java
@@ -42,7 +42,7 @@ public class RulesTest extends AbstractFullDistribZkTestBase {
       create.setCollectionName(rulesColl);
       create.setNumShards(1);
       create.setReplicationFactor(2);
-      create.setRule("cores:<4", "node:*,replica:1", "disk:>1");
+      create.setRule("cores:<4", "node:*,replica:1", "freedisk:>1");
       create.setSnitch("class:ImplicitSnitch");
       rsp = create.process(client);
       assertEquals(0, rsp.getStatus());
@@ -55,7 +55,7 @@ public class RulesTest extends AbstractFullDistribZkTestBase {
     assertEquals(3, list.size());
     assertEquals ( "<4", ((Map)list.get(0)).get("cores"));
     assertEquals("1", ((Map) list.get(1)).get("replica"));
-    assertEquals(">1", ((Map) list.get(2)).get("disk"));
+    assertEquals(">1", ((Map) list.get(2)).get("freedisk"));
     list = (List) rulesCollection.get("snitch");
     assertEquals(1, list.size());
     assertEquals ( "ImplicitSnitch", ((Map)list.get(0)).get("class"));

