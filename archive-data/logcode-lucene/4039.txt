GitDiffStart: 9cf30e5ed204be43a936a9494d7178d7c8f989ba | Wed Mar 11 17:46:59 2015 +0000
diff --git a/lucene/spatial/src/java/org/apache/lucene/spatial/prefix/BytesRefIteratorTokenStream.java b/lucene/spatial/src/java/org/apache/lucene/spatial/prefix/BytesRefIteratorTokenStream.java
index a8857d2..8ca8e1e 100644
--- a/lucene/spatial/src/java/org/apache/lucene/spatial/prefix/BytesRefIteratorTokenStream.java
+++ b/lucene/spatial/src/java/org/apache/lucene/spatial/prefix/BytesRefIteratorTokenStream.java
@@ -87,7 +87,9 @@ class BytesRefIteratorTokenStream extends TokenStream {
 
     @Override
     public BRTermToBytesRefAttributeImpl clone() {
-      final BRTermToBytesRefAttributeImpl clone = (BRTermToBytesRefAttributeImpl) super.clone();
+      // super.clone won't work since we need a new BytesRef reference and it's nice to have it final. The superclass
+      // has no state to copy anyway.
+      final BRTermToBytesRefAttributeImpl clone = new BRTermToBytesRefAttributeImpl();
       clone.setBytesRef(BytesRef.deepCopyOf(bytes));
       return clone;
     }
diff --git a/solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java b/solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java
index aecf223..e8c8140 100644
--- a/solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java
+++ b/solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java
@@ -31,6 +31,8 @@ import org.junit.Before;
 import org.junit.BeforeClass;
 import org.junit.Test;
 
+import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 
 /**
@@ -423,6 +425,12 @@ public class FieldAnalysisRequestHandlerTest extends AnalysisRequestHandlerTestB
         ((NamedList)result.get("field_types").get("location_rpt")).get("index");
     List<NamedList> tokenList = tokens.get("org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream");
 
-    assertTrue( tokenList.get(0).get("text").toString().startsWith("s") );
+
+    List<String> vals = new ArrayList<>(tokenList.size());
+    for(NamedList v : tokenList) {
+      vals.add( (String)v.get("text") );
+    }
+    Collections.sort(vals);
+    assertEquals( "[s, s7, s7w, s7w1+, s9, s9v, s9v2+, sp, spp, spp5+, sv, svk, svk6+]", vals.toString() );
   }
 }

