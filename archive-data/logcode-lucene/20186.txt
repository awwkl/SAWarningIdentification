GitDiffStart: e01ac9ce2efca6727ac0d25329a43e8cd9b1b869 | Wed May 27 14:02:56 2009 +0000
diff --git a/docs/fileformats.html b/docs/fileformats.html
index d688991..16f7370 100644
--- a/docs/fileformats.html
+++ b/docs/fileformats.html
@@ -293,7 +293,7 @@ document.write("Last Published: " + document.lastModified);
 <a href="#Compound Types">Compound Types</a>
 <ul class="minitoc">
 <li>
-<a href="#String">Map&lt;String,String&gt;</a>
+<a href="#MapStringString">Map&lt;String,String&gt;</a>
 </li>
 </ul>
 </li>
@@ -1274,7 +1274,7 @@ document.write("Last Published: " + document.lastModified);
 <a name="N1043C"></a><a name="Compound Types"></a>
 <h2 class="boxed">Compound Types</h2>
 <div class="section">
-<a name="N10441"></a><a name="String"></a>
+<a name="N10441"></a><a name="MapStringString"></a>
 <h3 class="boxed">Map&lt;String,String&gt;</h3>
 <p>
 		    In a couple places Lucene stores a Map
diff --git a/docs/fileformats.pdf b/docs/fileformats.pdf
index 566da20..eb2a10f 100644
--- a/docs/fileformats.pdf
+++ b/docs/fileformats.pdf
@@ -19,24 +19,26 @@ Table of contents
     5.4 VInt................................................................................................................................6
     5.5 Chars..............................................................................................................................7
     5.6 String............................................................................................................................. 7
-   6 Per-Index Files................................................................................................................... 8
-    6.1 Segments File................................................................................................................ 8
-    6.2 Lock File......................................................................................................................10
-    6.3 Deletable File...............................................................................................................10
-    6.4 Compound Files...........................................................................................................11
-   7 Per-Segment Files............................................................................................................ 11
-    7.1 Fields........................................................................................................................... 11
+   6 Compound Types............................................................................................................... 8
+    6.1 Map<String,String>.......................................................................................................8
+   7 Per-Index Files................................................................................................................... 8
+    7.1 Segments File................................................................................................................ 8
+    7.2 Lock File......................................................................................................................10
+    7.3 Deletable File...............................................................................................................11
+    7.4 Compound Files...........................................................................................................11
 
                    Copyright © 2006 The Apache Software Foundation. All rights reserved.
                                                                                                             Apache Lucene - Index File Formats
 
- 7.2 Term Dictionary.......................................................................................................... 13
- 7.3 Frequencies..................................................................................................................15
- 7.4 Positions...................................................................................................................... 16
- 7.5 Normalization Factors................................................................................................. 17
- 7.6 Term Vectors............................................................................................................... 18
- 7.7 Deleted Documents..................................................................................................... 20
-8 Limitations....................................................................................................................... 21
+8 Per-Segment Files............................................................................................................ 11
+ 8.1 Fields........................................................................................................................... 11
+ 8.2 Term Dictionary.......................................................................................................... 13
+ 8.3 Frequencies..................................................................................................................15
+ 8.4 Positions...................................................................................................................... 16
+ 8.5 Normalization Factors................................................................................................. 17
+ 8.6 Term Vectors............................................................................................................... 18
+ 8.7 Deleted Documents..................................................................................................... 20
+9 Limitations....................................................................................................................... 21
 
                                                                        Page 2
 
@@ -276,11 +278,19 @@ followed by the bytes.
 
 String --> VInt, Chars
 
-6. Per-Index Files
+6. Compound Types
+
+6.1. Map<String,String>
+
+In a couple places Lucene stores a Map String->String.
+
+Map<String,String> --> Count<String,String>Count
+
+7. Per-Index Files
 
 The files in this section exist one-per-index.
 
-6.1. Segments File
+7.1. Segments File
 
 The active segments in the index are stored in the segment info file, segments_N. There may
 be one or more segments_N files in the index; however, the one with the largest generation is
@@ -305,6 +315,12 @@ IsCompoundFile>SegCount
 
 2.3: Segments --> Format, Version, NameCounter, SegCount, <SegName, SegSize, DelGen,
 DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile], HasSingleNormFile,
+
+                                                                       Page 8
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 NumField, NormGenNumField, IsCompoundFile>SegCount
 
 2.4 and above: Segments --> Format, Version, NameCounter, SegCount, <SegName,
@@ -314,25 +330,21 @@ HasProx>SegCount, Checksum
 
 2.9 and above: Segments --> Format, Version, NameCounter, SegCount, <SegName,
 SegSize, DelGen, DocStoreOffset, [DocStoreSegment, DocStoreIsCompoundFile],
-
-                                                                       Page 8
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 HasSingleNormFile, NumField, NormGenNumField, IsCompoundFile, DeletionCount,
-HasProx>SegCount, HasUserData, CommitUserData?, DiagnosticsCount, <DiagnosticKey,
-DiagnosticValue>DiagnosticsCountChecksum
+HasProx, Diagnostics>SegCount, CommitUserData, Checksum
 
-Format, NameCounter, SegCount, SegSize, NumField, DocStoreOffset, DeletionCount,
-DiagnosticsCount --> Int32
+Format, NameCounter, SegCount, SegSize, NumField, DocStoreOffset, DeletionCount -->
+Int32
 
 Version, DelGen, NormGen, Checksum --> Int64
 
-SegName, DocStoreSegment, CommitUserData, DiagnosticKey, DiagnosticValue --> String
+SegName, DocStoreSegment --> String
+
+Diagnostics --> Map<String,String>
+
+IsCompoundFile, HasSingleNormFile, DocStoreIsCompoundFile, HasProx --> Int8
 
-IsCompoundFile, HasSingleNormFile, DocStoreIsCompoundFile, HasProx, HasUserData -->
-Int8
+CommitUserData --> Map<String,String>
 
 Format is -1 as of Lucene 1.4, -3 (SegmentInfos.FORMAT_SINGLE_NORM_FILE) as of
 Lucene 2.1 and 2.2, -4 (SegmentInfos.FORMAT_SHARED_DOC_STORE) as of Lucene
@@ -355,6 +367,12 @@ _X.del. Anything above zero means there are separate deletes (_X_N.del).
 NumField is the size of the array for NormGen, or -1 if there are no NormGens stored.
 
 NormGen records the generation of the separate norms files. If NumField is -1, there are no
+
+Page 9
+
+        Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 normGens stored and they are all assumed to be 0 when the segment file was written pre-2.1
 and all assumed to be -1 when the segments file is 2.1 or above. The generation then has the
 same meaning as delGen (above).
@@ -367,11 +385,6 @@ If HasSingleNormFile is 1, then the field norms are written as a single joined f
 extension .nrm); if it is 0 then each field's norms are stored as separate .fN files. See
 "Normalization Factors" below for details.
 
-Page 9
-
-        Copyright © 2006 The Apache Software Foundation. All rights reserved.
-                                                                                                                Apache Lucene - Index File Formats
-
 DocStoreOffset, DocStoreSegment, DocStoreIsCompoundFile: If DocStoreOffset is -1, this
 segment has its own doc store (stored fields values and term vectors) files and
 DocStoreSegment and DocStoreIsCompoundFile are not stored. In this case all files for
@@ -389,37 +402,35 @@ DeletionCount records the number of deleted documents in this segment.
 
 HasProx is 1 if any fields in this segment have omitTf set to false; else, it's 0.
 
-If HasUserData is 1, then the string CommitUserData is non-null and is stored. This is a
-string previously passed to IndexWriter's commit or prepareCommit method.
+CommitUserData stores an optional user-supplied opaque Map<String,String> that was
+passed to IndexWriter's commit or prepareCommit, or IndexReader's flush methods.
 
-If DiagnosticsCount is non-zero, then that number of String -> String (key/value map)
-diagnostics is stored. Currently these diagnostics are privately written by IndexWriter, as a
-debugging aid, for each segment it creates. It includes things like the current Lucene version,
-OS, Java version, why the segment was created (merge, flush, addIndexes), etc.
+The Diagnostics Map is privately written by IndexWriter, as a debugging aid, for each
+segment it creates. It includes metadata like the current Lucene version, OS, Java version,
+why the segment was created (merge, flush, addIndexes), etc.
 
-6.2. Lock File
+7.2. Lock File
 
 The write lock, which is stored in the index directory by default, is named "write.lock". If the
 lock directory is different from the index directory then the write lock will be named
 "XXXX-write.lock" where XXXX is a unique prefix derived from the full path to the index
 directory. When this file is present, a writer is currently modifying the index (adding or
 removing documents). This lock file ensures that only one writer is modifying the index at a
-time.
 
-Note that prior to version 2.1, Lucene also used a commit lock. This was removed in 2.1.
+                                                                       Page 10
 
-6.3. Deletable File
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
 
+time.
+Note that prior to version 2.1, Lucene also used a commit lock. This was removed in 2.1.
+
+7.3. Deletable File
 Prior to Lucene 2.1 there was a file "deletable" that contained details about files that need to
 be deleted. As of 2.1, a writer dynamically computes the files that are deletable, instead, so
 no file is written.
 
-                                                                       Page 10
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
-6.4. Compound Files
+7.4. Compound Files
 Starting with Lucene 1.4 the compound file format became default. This is simply a container
 for all files described in the next section (except for the .del file).
 Compound (.cfs) --> FileCount, <DataOffset, FileName> FileCount , FileData FileCount
@@ -433,15 +444,21 @@ in a single set of files for more than one segment. When compound file is enable
 shared files will be added into a single compound file (same format as above) but with the
 extension .cfx.
 
-7. Per-Segment Files
+8. Per-Segment Files
 
 The remaining files are all per-segment, and are thus defined by suffix.
 
-7.1. Fields
+8.1. Fields
 Field Info
 Field names are stored in the field info file, with suffix .fnm.
 FieldInfos (.fnm) --> FNMVersion,FieldsCount, <FieldName, FieldBits> FieldsCount
 FNMVersion, FieldsCount --> VInt
+
+Page 11
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 FieldName --> String
 FieldBits --> Byte
 
@@ -449,48 +466,34 @@ FNMVersion (added in 2.9) is always -2.
 Fields are numbered by their order in this file. Thus field zero is the first field in the file, field
 one the next, and so on. Note that, like document numbers, field numbers are segment
 relative.
-
-Page 11
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 Stored Fields
-
 Stored fields are represented by two files:
 1. The field index, or .fdx file.
 
     This contains, for each document, a pointer to its field data, as follows:
-
     FieldIndex (.fdx) --> <FieldValuesPosition> SegSize
-
     FieldValuesPosition --> Uint64
-
     This is used to find the location within the field data file of the fields of a particular
     document. Because it contains fixed-length data, this file may be easily randomly
     accessed. The position of document n 's field data is the Uint64 at n*8 in this file.
 2. The field data, or .fdt file.
     This contains the stored fields of each document, as follows:
-
     FieldData (.fdt) --> <DocFieldData> SegSize
-
     DocFieldData --> FieldCount, <FieldNum, Bits, Value> FieldCount
-
     FieldCount --> VInt
-
     FieldNum --> VInt
-
     Lucene <= 1.4:
-
     Bits --> Byte
-
     Value --> String
-
     Only the low-order bit of Bits is used. It is one for tokenized fields, and zero for
     non-tokenized fields.
-
     Lucene >= 1.9:
 
+                                                                       Page 12
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
     Bits --> Byte
 
     ?? low order bit is one for tokenized fields
@@ -501,16 +504,11 @@ Stored fields are represented by two files:
 
     Value --> String | BinaryValue (depending on Bits)
 
-                                                                       Page 12
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
     BinaryValue --> ValueSize, <Byte>^ValueSize
 
     ValueSize --> VInt
 
-7.2. Term Dictionary
+8.2. Term Dictionary
 
 The term dictionary is represented as two files:
 1. The term infos, or tis file.
@@ -543,6 +541,11 @@ The term dictionary is represented as two files:
     character code) by the term's field name, and within that lexicographically (by UTF16
     character code) by the term's text.
 
+Page 13
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
     TIVersion names the version of the format of this file and is -2 in Lucene 1.4.
 
     Term text prefixes are shared. The PrefixLength is the number of initial characters from
@@ -554,11 +557,6 @@ The term dictionary is represented as two files:
 
     DocFreq is the count of documents which contain the term.
 
-Page 13
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
     FreqDelta determines the position of this term's TermFreqs within the .frq file. In
     particular, it is the difference between the position of this term's data in that file and the
     position of the previous term's data (or zero, for the first term in the file).
@@ -594,6 +592,11 @@ Page 13
 
     TermIndices --> <TermInfo, IndexDelta> IndexTermCount
 
+                                                                       Page 14
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
     IndexDelta --> VLong
 
     IndexDelta determines the position of this term's TermInfo within the .tis file. In
@@ -605,17 +608,12 @@ Page 13
     fewer accelerable cases, while smaller values result in bigger indexes, less acceleration
     (in case of a small value for MaxSkipLevels) and more accelerable cases.
 
-                                                                       Page 14
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
     MaxSkipLevels is the max. number of skip levels stored for each term in the .frq file. A
     low value results in smaller indexes but less acceleration, a larger value results in slighly
     larger indexes but greater acceleration. See format of .frq file for more information about
     skip levels.
 
-7.3. Frequencies
+8.3. Frequencies
 
 The .frq file contains the lists of documents which contain each term, along with the
 frequency of the term in that document (if omitTf is false).
@@ -645,6 +643,12 @@ particular, DocDelta/2 is the difference between this document number and the pr
 document number (or zero when this is the first document in a TermFreqs). When DocDelta
 is odd, the frequency is one. When DocDelta is even, the frequency is read as another VInt. If
 omitTf is true, DocDelta contains the gap (not multiplied by 2) between document numbers
+
+Page 15
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 and no frequency information is stored.
 
 For example, the TermFreqs for a term which occurs once in document seven and three times
@@ -656,11 +660,6 @@ If omitTf were true it would be this sequence of VInts instead:
 
 7,4
 
-Page 15
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 DocSkip records the document number before every SkipInterval th document in TermFreqs.
 If payloads are disabled for the term's field, then DocSkip represents the difference from the
 previous value in the sequence. If payloads are enabled for the term's field, then DocSkip/2
@@ -690,9 +689,15 @@ The SkipData entries on all upper levels > 0 contain a SkipChildLevelPointer ref
 corresponding SkipData entry in level-1. In the example has entry 15 on level 1 a pointer to
 entry 15 on level 0 and entry 31 on level 1 a pointer to entry 31 on level 0.
 
-7.4. Positions
+8.4. Positions
 
 The .prx file contains the lists of positions that each term occurs at within documents. Note
+
+                                                                       Page 16
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 that fields with omitTf true do not store anything into this file, and if all fields in the index
 have omitTf true then the .prx file will not exist.
 
@@ -704,11 +709,6 @@ Positions --> <PositionDelta,Payload?> Freq
 
 Payload --> <PayloadLength?,PayloadData>
 
-                                                                       Page 16
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 PositionDelta --> VInt
 
 PayloadLength --> VInt
@@ -737,7 +737,7 @@ PayloadData is metadata associated with the current term position. If PayloadLen
 at the current position, then it indicates the length of this Payload. If PayloadLength is not
 stored, then this Payload has the same length as the Payload at the previous position.
 
-7.5. Normalization Factors
+8.5. Normalization Factors
 
 Pre-2.1: There's a norm file for each indexed field with a byte for each document. The
 .f[0-9]* file contains, for each document, a byte that encodes a value that is multiplied into
@@ -745,6 +745,11 @@ the score for hits on that field:
 
 Norms (.f[0-9]*) --> <Byte> SegSize
 
+Page 17
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
 2.1 and above: There's a single .nrm file containing all norms:
 
 AllNorms (.nrm) --> NormsHeader,<Norms> NumFieldsWithNorms
@@ -755,11 +760,6 @@ NormsHeader --> 'N','R','M',Version
 
 Version --> Byte
 
-Page 17
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
 NormsHeader has 4 bytes, last of which is the format version for this file, currently -1.
 
 Each byte encodes a floating point value. Bits 0-2 contain the 3-bit mantissa, and bits 3-8
@@ -781,7 +781,7 @@ Pre-2.1: Separate norm files are created only for compound segments.
 2.1 and above: Separate norm files are created (when adequate) for both compound and non
 compound segments.
 
-7.6. Term Vectors
+8.6. Term Vectors
 
 Term Vector support is an optional on a field by field basis. It consists of 3 files.
 1. The Document Index or .tvx file.
@@ -795,59 +795,45 @@ Term Vector support is an optional on a field by field basis. It consists of 3 f
 
     DocumentPosition --> UInt64 (offset in the .tvd file)
 
+                                                                       Page 18
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
     FieldPosition --> UInt64 (offset in the .tvf file)
 2. The Document or .tvd file.
 
     This contains, for each document, the number of fields, a list of the fields with term
     vector info and finally a list of pointers to the field information in the .tvf (Term Vector
     Fields) file.
-
     Document (.tvd) --> TVDVersion<NumFields, FieldNums, FieldPositions> NumDocs
-
-                                                                       Page 18
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
     TVDVersion --> Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)
-
     NumFields --> VInt
-
     FieldNums --> <FieldNumDelta> NumFields
-
     FieldNumDelta --> VInt
-
     FieldPositions --> <FieldPositionDelta> NumFields-1
-
     FieldPositionDelta --> VLong
-
     The .tvd file is used to map out the fields that have term vectors stored and where the
     field information is in the .tvf file.
 3. The Field or .tvf file.
-
     This file contains, for each field that has a term vector stored, a list of the terms, their
     frequencies and, optionally, position and offest information.
-
     Field (.tvf) --> TVFVersion<NumTerms, Position/Offset, TermFreqs> NumFields
-
     TVFVersion --> Int (3 (TermVectorsReader.FORMAT_VERSION2) for Lucene 2.4)
-
     NumTerms --> VInt
-
     Position/Offset --> Byte
-
     TermFreqs --> <TermText, TermFreq, Positions?, Offsets?> NumTerms
-
     TermText --> <PrefixLength, Suffix>
-
     PrefixLength --> VInt
-
     Suffix --> String
-
     TermFreq --> VInt
-
     Positions --> <VInt>TermFreq
 
+Page 19
+
+         Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
     Offsets --> <VInt, VInt>TermFreq
 
     Notes:
@@ -858,21 +844,13 @@ Copyright © 2006 The Apache Software Foundation. All rights reserved.
 
          from the previous term which must be pre-pended to a term's suffix in order to form
          the term's text. Thus, if the previous term's text was "bone" and the term is "boy", the
-
-Page 19
-
-         Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
          PrefixLength is two and the suffix is "y".
     ?? Positions are stored as delta encoded VInts. This means we only store the difference
-
          of the current position from the last position
     ?? Offsets are stored as delta encoded VInts. The first VInt is the startOffset, the second
-
          is the endOffset.
 
-7.7. Deleted Documents
+8.7. Deleted Documents
 
 The .del file is optional, and only exists when a segment contains deletions.
 
@@ -903,22 +881,20 @@ BitCount indicates the number of bits that are currently set in Bits.
 Bits contains one bit for each document indexed. When the bit corresponding to a document
 number is set, that document is marked as deleted. Bit ordering is from least to most
 significant. Thus, if Bits contains two bytes, 0x00 and 0x02, then document 9 is marked as
-deleted.
 
+                                                                       Page 20
+
+Copyright © 2006 The Apache Software Foundation. All rights reserved.
+Apache Lucene - Index File Formats
+
+deleted.
 DGaps represents sparse bit-vectors more efficiently than Bits. It is made of DGaps on
 indexes of nonzero bytes in Bits, and the nonzero bytes themselves. The number of nonzero
 bytes in Bits (NonzeroBytesCount) is not stored.
-
 For example, if there are 8000 bits and only bits 10,12,32 are set, DGaps would be used:
-
 (VInt) 1 , (byte) 20 , (VInt) 3 , (Byte) 1
 
-                                                                       Page 20
-
-Copyright © 2006 The Apache Software Foundation. All rights reserved.
-Apache Lucene - Index File Formats
-
-8. Limitations
+9. Limitations
 
 When referring to term numbers, Lucene's current implementation uses a Java int, which
 means the maximum number of unique terms in any single index segment is 2,147,483,648.
diff --git a/src/site/src/documentation/content/xdocs/fileformats.xml b/src/site/src/documentation/content/xdocs/fileformats.xml
index 50853e1..43f8337 100644
--- a/src/site/src/documentation/content/xdocs/fileformats.xml
+++ b/src/site/src/documentation/content/xdocs/fileformats.xml
@@ -760,7 +760,7 @@
         </section>
 
         <section id="Compound Types"><title>Compound Types</title>
-            <section id="String"><title>Map&lt;String,String&gt;</title>
+            <section id="MapStringString"><title>Map&lt;String,String&gt;</title>
 
                 <p>
 		    In a couple places Lucene stores a Map

