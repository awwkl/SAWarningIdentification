GitDiffStart: bea5529ed45f51ae936a9824a6624f2292e5405c | Fri Jul 30 18:23:13 2010 +0000
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index b7cae74..26e5e80 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -457,6 +457,9 @@ Bug fixes
 * LUCENE-2537: FSDirectory.copy() implementation was unsafe and could result in 
   OOM if a large file was copied. (Shai Erera)
 
+* LUCENE-2580: MultiPhraseQuery throws AIOOBE if number of positions
+  exceeds number of terms at one position (Jayendra Patil via Mike McCandless)
+
 New features
 
 * LUCENE-2128: Parallelized fetching document frequencies during weight
diff --git a/lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java b/lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java
index aaf9ec6..5d5adf9 100644
--- a/lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java
+++ b/lucene/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java
@@ -132,7 +132,25 @@ public class TestMultiPhraseQuery extends LuceneTestCase {
     searcher.close();
     reader.close();
     indexStore.close();
-    
+  }
+
+  // LUCENE-2580
+  public void testTall() throws IOException {
+    MockRAMDirectory indexStore = new MockRAMDirectory();
+    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), indexStore);
+    add("blueberry chocolate pie", writer);
+    add("blueberry chocolate tart", writer);
+    IndexReader r = writer.getReader();
+    writer.close();
+
+    IndexSearcher searcher = new IndexSearcher(r);
+    MultiPhraseQuery q = new MultiPhraseQuery();
+    q.add(new Term("body", "blueberry"));
+    q.add(new Term("body", "chocolate"));
+    q.add(new Term[] {new Term("body", "pie"), new Term("body", "tart")});
+    assertEquals(2, searcher.search(q, 1).totalHits);
+    r.close();
+    indexStore.close();
   }
   
   private void add(String s, RandomIndexWriter writer) throws IOException {

