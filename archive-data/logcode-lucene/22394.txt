GitDiffStart: 7a7d05c27b58785ce7e24652e6e99d8d1d32a3b3 | Thu Jul 12 12:35:01 2007 +0000
diff --git a/src/scripts/abc b/src/scripts/abc
index 5d48415..94a34cf 100755
--- a/src/scripts/abc
+++ b/src/scripts/abc
@@ -131,13 +131,18 @@ then
   logExit failed 1
 fi
 
-# check status of commit request
+# check status of commit request - original format
 echo $rs | grep '<result.*status="0"' > /dev/null 2>&1
 if [[ $? != 0 ]]
 then
-  logMessage commit request to Solr at ${curl_url} failed:
-  logMessage $rs
-  logExit failed 2
+# check status of commit request - new format
+  echo $rs | grep '<lst name="responseHeader"><int name="status">0</int>' > /dev/null 2>&1
+  if [[ $? != 0 ]]
+  then
+    logMessage commit request to Solr at ${curl_url} failed:
+    logMessage $rs
+    logExit failed 2
+  fi
 fi
 
 # successful commit creates a snapshot file synchronously
@@ -170,7 +175,16 @@ trap 'echo cleaning up, please wait ...;/bin/rm -rf ${data_dir}/${name} ${data_d
 
 # make a backup using hard links into temporary location
 # then move it into place atomically
-cp -lr ${lastsnap} ${data_dir}/${temp}
+if [[ "${OS}" == "SunOS" || "${OS}" == "Darwin" ]]
+then
+  orig_dir=$(pwd)
+  mkdir ${data_dir}/${temp}
+  cd ${lastsnap}
+  find . -print|cpio -pdlmu ${data_dir}/${temp} 1>/dev/null 2>&1
+  cd ${orig_dir}
+else
+  cp -lr ${lastsnap} ${data_dir}/${temp}
+fi
 mv ${data_dir}/${temp} ${data_dir}/${name}
 
 logExit ended 0
diff --git a/src/scripts/abo b/src/scripts/abo
index dc0c167..993eb42 100755
--- a/src/scripts/abo
+++ b/src/scripts/abo
@@ -131,13 +131,18 @@ then
   logExit failed 1
 fi
 
-# check status of optimize request
+# check status of optimize request - original format
 echo $rs | grep '<result.*status="0"' > /dev/null 2>&1
 if [[ $? != 0 ]]
 then
-  logMessage optimize request to Solr at ${curl_url} failed:
-  logMessage $rs
-  logExit failed 2
+# check status of optimize request - new format
+  echo $rs | grep '<lst name="responseHeader"><int name="status">0</int>' > /dev/null 2>&1
+  if [[ $? != 0 ]]
+  then
+    logMessage optimize request to Solr at ${curl_url} failed:
+    logMessage $rs
+    logExit failed 2
+  fi
 fi
 
 # successful optimize creates a snapshot file synchronously
@@ -170,7 +175,16 @@ trap 'echo cleaning up, please wait ...;/bin/rm -rf ${data_dir}/${name} ${data_d
 
 # make a backup using hard links into temporary location
 # then move it into place atomically
-cp -lr ${lastsnap} ${data_dir}/${temp}
+if [[ "${OS}" == "SunOS" || "${OS}" == "Darwin" ]]
+then
+  orig_dir=$(pwd)
+  mkdir ${data_dir}/${temp}
+  cd ${lastsnap}
+  find . -print|cpio -pdlmu ${data_dir}/${temp} 1>/dev/null 2>&1
+  cd ${orig_dir}
+else
+  cp -lr ${lastsnap} ${data_dir}/${temp}
+fi
 mv ${data_dir}/${temp} ${data_dir}/${name}
 
 logExit ended 0
diff --git a/src/scripts/backup b/src/scripts/backup
index 1fc3b18..4fc8e77 100755
--- a/src/scripts/backup
+++ b/src/scripts/backup
@@ -101,7 +101,16 @@ logMessage making backup ${data_dir}/${name}
 
 # make a backup using hard links into temporary location
 # then move it into place atomically
-cp -lr ${data_dir}/index ${data_dir}/${temp}
+if [[ "${OS}" == "SunOS" || "${OS}" == "Darwin" ]]
+then
+  orig_dir=$(pwd)
+  mkdir ${data_dir}/${temp}
+  cd ${data_dir}/index
+  find . -print|cpio -pdlmu ${data_dir}/${temp} 1>/dev/null 2>&1
+  cd ${orig_dir}
+else
+  cp -lr ${data_dir}/index ${data_dir}/${temp}
+fi
 mv ${data_dir}/${temp} ${data_dir}/${name}
 
 logExit ended 0
diff --git a/src/scripts/commit b/src/scripts/commit
index 872e1cd..bd9ea67 100755
--- a/src/scripts/commit
+++ b/src/scripts/commit
@@ -116,13 +116,18 @@ then
   logExit failed 1
 fi
 
-# check status of commit request
+# check status of commit request - original format
 echo $rs | grep '<result.*status="0"' > /dev/null 2>&1
 if [[ $? != 0 ]]
 then
-  logMessage commit request to Solr at ${curl_url} failed:
-  logMessage $rs
-  logExit failed 2
+# check status of commit request - new format
+  echo $rs | grep '<lst name="responseHeader"><int name="status">0</int>' > /dev/null 2>&1
+  if [[ $? != 0 ]]
+  then
+    logMessage commit request to Solr at ${curl_url} failed:
+    logMessage $rs
+    logExit failed 2
+  fi
 fi
 
 logExit ended 0
diff --git a/src/scripts/optimize b/src/scripts/optimize
index 446996e..b52c9cc 100755
--- a/src/scripts/optimize
+++ b/src/scripts/optimize
@@ -117,13 +117,18 @@ then
   logExit failed 1
 fi
 
-# check status of optimize request
+# check status of optimize request - original format
 rc=`echo $rs|cut -f2 -d'"'`
 if [[ $? != 0 ]]
 then
-  logMessage optimize request to Solr at ${curl_url} failed:
-  logMessage $rs
-  logExit failed 2
+# check status of optimize request - new format
+  echo $rs | grep '<lst name="responseHeader"><int name="status">0</int>' > /dev/null 2>&1
+  if [[ $? != 0 ]]
+  then
+    logMessage optimize request to Solr at ${curl_url} failed:
+    logMessage $rs
+    logExit failed 2
+  fi
 fi
 
 logExit ended 0
diff --git a/src/scripts/scripts-util b/src/scripts/scripts-util
index 953bcc8..ca2034b 100755
--- a/src/scripts/scripts-util
+++ b/src/scripts/scripts-util
@@ -21,6 +21,7 @@ export PATH=/sbin:/usr/sbin:/bin:/usr/bin:$PATH
 
 # set up variables
 prog=${0##*/}
+OS=`uname`
 
 # source the config file if present
 confFile=${solr_root}/conf/scripts.conf
diff --git a/src/scripts/snapinstaller b/src/scripts/snapinstaller
index 9ed8a58..2342d6e 100755
--- a/src/scripts/snapinstaller
+++ b/src/scripts/snapinstaller
@@ -141,9 +141,20 @@ fi
 # install using hard links into temporary directory
 # remove original index and then atomically copy new one into place
 logMessage installing snapshot ${name}
-cp -lr ${name}/ ${data_dir}/index.tmp$$ && \
-/bin/rm -rf ${data_dir}/index && \
-mv -f ${data_dir}/index.tmp$$ ${data_dir}/index
+if [[ "${OS}" == "SunOS" || "${OS}" == "Darwin" ]]
+then
+  orig_dir=$(pwd)
+  mkdir ${data_dir}/index.tmp$$ && \
+  cd ${name} && \
+  find . -print|cpio -pdlmu ${data_dir}/index.tmp$$ 1>/dev/null 2>&1 && \
+  /bin/rm -rf ${data_dir}/index && \
+  mv -f ${data_dir}/index.tmp$$ ${data_dir}/index
+  cd ${orig_dir}
+else
+  cp -lr ${name}/ ${data_dir}/index.tmp$$ && \
+  /bin/rm -rf ${data_dir}/index && \
+  mv -f ${data_dir}/index.tmp$$ ${data_dir}/index
+fi
 
 # update distribution stats
 echo ${name} > ${solr_root}/logs/snapshot.current
diff --git a/src/scripts/snappuller b/src/scripts/snappuller
index 7bab54d..1a9b779 100755
--- a/src/scripts/snappuller
+++ b/src/scripts/snappuller
@@ -200,7 +200,16 @@ fi
 # take a snapshot of current index so that only modified files will be rsync-ed
 # put the snapshot in the 'work-in-progress" directory to prevent it from
 # being installed while the copying is still in progress
-cp -lr ${data_dir}/index ${data_dir}/${name}-wip
+if [[ "${OS}" == "SunOS" || "${OS}" == "Darwin" ]]
+then
+  orig_dir=$(pwd)
+  mkdir ${data_dir}/${name}-wip
+  cd ${data_dir}/index
+  find . -print|cpio -pdlmu ${data_dir}/${name}-wip 1>/dev/null 2>&1
+  cd ${orig_dir}
+else
+  cp -lr ${data_dir}/index ${data_dir}/${name}-wip
+fi
 # force rsync of segments and .del files since we are doing size-only
 if [[ -n ${sizeonly} ]]
 then
diff --git a/src/scripts/snapshooter b/src/scripts/snapshooter
index f172f7c..3a279e9 100755
--- a/src/scripts/snapshooter
+++ b/src/scripts/snapshooter
@@ -102,7 +102,16 @@ logMessage taking snapshot ${name}
 
 # take a snapshot using hard links into temporary location
 # then move it into place atomically
-cp -lr ${data_dir}/index ${temp}
+if [[ "${OS}" == "SunOS" || "${OS}" == "Darwin" ]]
+then
+  orig_dir=$(pwd)
+  mkdir ${temp}
+  cd ${data_dir}/index
+  find . -print|cpio -pdlmu ${temp} 1>/dev/null 2>&1
+  cd ${orig_dir}
+else
+  cp -lr ${data_dir}/index ${temp}
+fi
 mv ${temp} ${name}
 
 logExit ended 0

