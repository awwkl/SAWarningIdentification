GitDiffStart: 4b6426ac566196f8fa764c61af60f7f07dba9988 | Thu Mar 2 20:16:49 2006 +0000
diff --git a/src/java/org/apache/lucene/store/BufferedIndexOutput.java b/src/java/org/apache/lucene/store/BufferedIndexOutput.java
index d4afe1d..46bdda0 100644
--- a/src/java/org/apache/lucene/store/BufferedIndexOutput.java
+++ b/src/java/org/apache/lucene/store/BufferedIndexOutput.java
@@ -58,6 +58,7 @@ public abstract class BufferedIndexOutput extends IndexOutput {
           flush();
         // and write data at once
         flushBuffer(b, length);
+        bufferStart += length;
       } else {
         // we fill/flush the buffer (until the input is written)
         int pos = 0; // position in the input data
diff --git a/src/test/org/apache/lucene/index/TestCompoundFile.java b/src/test/org/apache/lucene/index/TestCompoundFile.java
index 17e6f3d..ae4e7a3 100644
--- a/src/test/org/apache/lucene/index/TestCompoundFile.java
+++ b/src/test/org/apache/lucene/index/TestCompoundFile.java
@@ -622,4 +622,26 @@ public class TestCompoundFile extends TestCase
         is.close();
         cr.close();
     }
+
+    /** This test that writes larger than the size of the buffer output
+     * will correctly increment the file pointer.
+     */
+    public void testLargeWrites() throws IOException {
+        IndexOutput os = dir.createOutput("testBufferStart.txt");
+
+        byte[] largeBuf = new byte[2048];
+        for (int i=0; i<largeBuf.length; i++) {
+            largeBuf[i] = (byte) (Math.random() * 256);
+        }
+
+        long currentPos = os.getFilePointer();
+        os.writeBytes(largeBuf, largeBuf.length);
+
+        try {
+            assertEquals(currentPos + largeBuf.length, os.getFilePointer());
+        } finally {
+            os.close();
+        }
+
+    }
 }

