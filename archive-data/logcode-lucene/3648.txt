GitDiffStart: 551562bed6bb084672f51e06f4a98ee0a0b3f73e | Thu Apr 23 12:34:35 2015 +0000
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index 0efe45e..ed9c995 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -168,6 +168,9 @@ Bug Fixes
 * SOLR-7450: Fix edge case which could cause `bin/solr stop` to hang forever
   (Ramkumar Aiyengar)
 
+* SOLR-7157: initParams must support tags other than appends, defaults and, invariants (Noble Paul)
+
+
 Optimizations
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/core/InitParams.java b/solr/core/src/java/org/apache/solr/core/InitParams.java
index 35a5ee5..af0a9ef 100644
--- a/solr/core/src/java/org/apache/solr/core/InitParams.java
+++ b/solr/core/src/java/org/apache/solr/core/InitParams.java
@@ -23,6 +23,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
+import com.google.common.collect.ImmutableSet;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.util.StrUtils;
 
@@ -40,8 +41,11 @@ public class InitParams {
   public final String name;
   public final Set<String> paths;
   public final NamedList defaults, invariants, appends;
+  private PluginInfo pluginInfo;
+  private final Set<String> KNOWN_KEYS = ImmutableSet.of(DEFAULTS, INVARIANTS, APPENDS);
 
   public InitParams(PluginInfo p) {
+    this.pluginInfo = p;
     this.name = p.attributes.get(NAME);
     Set<String> paths = null;
     String pathStr = p.attributes.get(PATH);
@@ -96,6 +100,16 @@ public class InitParams {
     }
     merge((NamedList) info.initArgs.get(INVARIANTS), invariants, info.initArgs, INVARIANTS, false);
     merge((NamedList) info.initArgs.get(APPENDS), appends, info.initArgs, APPENDS, true);
+
+    if (pluginInfo.initArgs != null) {
+      for (int i = 0; i < pluginInfo.initArgs.size(); i++) {
+        String name = pluginInfo.initArgs.getName(i);
+        if (KNOWN_KEYS.contains(name)) continue;//aready taken care of
+        Object val = info.initArgs.get(name);
+        if (val != null) continue; //this is explicitly specified in the reqhandler , ignore
+        info.initArgs.add(name, pluginInfo.initArgs.getVal(i));
+      }
+    }
   }
 
   private static void merge(NamedList first, NamedList second, NamedList sink, String name, boolean appends) {
diff --git a/solr/core/src/test-files/solr/collection1/conf/solrconfig-paramset.xml b/solr/core/src/test-files/solr/collection1/conf/solrconfig-paramset.xml
index 96a6cb2..dfbb90a 100644
--- a/solr/core/src/test-files/solr/collection1/conf/solrconfig-paramset.xml
+++ b/solr/core/src/test-files/solr/collection1/conf/solrconfig-paramset.xml
@@ -81,9 +81,9 @@
       <str>elevator</str>
     </arr>
   </requestHandler>
+  <requestHandler name="/dump7" class="DumpRequestHandler"/>
 
-
-
-
-
+  <initParams path="/dump7">
+    <str name="healthcheckFile">server-enabled.txt</str>
+  </initParams>
 </config>
diff --git a/solr/core/src/test/org/apache/solr/core/TestInitParams.java b/solr/core/src/test/org/apache/solr/core/TestInitParams.java
index 6ffd38f..5d0af66f 100644
--- a/solr/core/src/test/org/apache/solr/core/TestInitParams.java
+++ b/solr/core/src/test/org/apache/solr/core/TestInitParams.java
@@ -108,6 +108,14 @@ public class TestInitParams extends SolrTestCaseJ4 {
 
   }
 
+  public void testArbitraryAttributes() {
+    SolrRequestHandler handler = h.getCore().getRequestHandler("/dump7");
+    SolrQueryResponse rsp = new SolrQueryResponse();
+    handler.handleRequest(req("initArgs", "true"), rsp);
+    NamedList nl = (NamedList) rsp.getValues().get("initArgs");
+    assertEquals("server-enabled.txt", nl.get("healthcheckFile"));
+  }
+
   public void testMatchPath(){
     InitParams initParams = new InitParams(new PluginInfo(InitParams.TYPE, ZkNodeProps.makeMap("path","/update/json/docs")));
     assertFalse(initParams.matchPath("/update"));

